{"version":3,"sources":["webpack:///static/js/app.c516fe7a3c3eb1f8db2b.js","webpack:///./src/data/index.js","webpack:///./src/helpers/index.js","webpack:///./src/router/index.js","webpack:///./src/App.vue?fc6a","webpack:///./semantic/dist/semantic.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///Channel.vue","webpack:///Dropdown.vue","webpack:///Message.vue","webpack:///./src/components/Channel.vue?3b34","webpack:///./src/components/Dropdown.vue","webpack:///./src/components/Message.vue","webpack:///./src/components/Dropdown.vue?8f1e","webpack:///./src/components/Channel.vue?710c","webpack:///./src/App.vue?91a3","webpack:///./src/components/Message.vue?9e1a"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","reactive","messages","hasMessages","localStorage","getItem","saveState","this","setMessages","loadMessages","parsedMessages","JSON","parse","newMessages","setItem","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from___default","adjectives","nouns","avatars","getNewMessage","user","content","author","username","avatar","likers","replies","time","Date","toLocaleString","getRandomUserName","Math","floor","random","length","getRandomAvatarUrl","guid","s4","toString","substring","getRandonUserList","_this","v","i","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__components_Channel__","__WEBPACK_IMPORTED_MODULE_2__components_Channel___default","use","routes","path","name","component","a","exports","Component","jQuery","$","window","document","undefined","site","fn","parameters","returnedValue","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","settings","isPlainObject","extend","namespace","error","moduleNamespace","$document","$module","element","instance","data","initialize","instantiate","verbose","normalize","fix","console","requestAnimationFrame","debug","log","disable","group","groupEnd","groupCollapsed","markTimeline","consoleClear","clear","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","moduleExists","enabled","modules","enabledModules","each","index","push","disabled","disabledModules","change","setting","value","modifyExisting","$existingModules","newSettings","enable","cache","info","warn","destroy","removeData","internal","Function","prototype","bind","apply","message","currentTime","executionTime","previousTime","Element","Name","Arguments","Execution Time","clearTimeout","timer","display","title","totalTime","table","invoke","passedArguments","context","maxDepth","found","response","object","split","depth","camelCaseValue","charAt","toUpperCase","method","isFunction","isArray","siteNamespace","namespaceStub","config","sections","section","utilities","expr","createPseudo","dataName","elem","match","self","form","$allModules","moduleSelector","selector","legacyParameters","$field","$group","$message","$prompt","$submit","$clear","$reset","validation","metadata","className","regExp","eventNamespace","formErrors","keyHeldDown","get","bindEvents","set","defaults","removeEvents","refresh","find","field","prompt","submit","reset","attachEvents","action","on","event","preventDefault","validate","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","hasClass","removeClass","remove","dropdown","val","isErrored","determine","isValid","allValid","fieldName","bracketedRule","rule","bracket","shorthandFields","fields","fieldKeys","Object","keys","firstRule","shorthandRules","rules","empty","blank","trim","valid","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","validationRules","revalidate","delay","ancillaryValue","ruleName","replace","createElement","oninput","onpropertychange","fieldsFromShorthand","fullFields","$label","ancillary","text","unspecifiedRule","requiresValue","search","requiresName","identifier","eq","unspecifiedField","isLegacySettings","oldSyntax","string","filter","$fields","add","fieldValidation","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","String","newValidation","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","duration","fadeIn","splice","fadeOut","success","isEmptyObject","$multipleField","fieldExists","ignoreCallbacks","onSuccess","stopImmediatePropagation","onFailure","showErrors","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","ruleFunction","noRule","silent","htmlID","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","test","RegExp","regExpParts","range","min","max","parts","intRegExp","toLowerCase","notValue","contains","containsExactly","requiredLength","matchingValue","cardNumber","cardTypes","unionPay","cards","visa","pattern","amex","mastercard","discover","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","accordion","observer","$title","$content","events","observeChanges","MutationObserver","mutations","observe","childList","subtree","trigger","click","toggle","$activeTitle","$activeContent","next","isAnimating","animating","isActive","active","isOpen","isOpening","collapsible","close","open","onOpening","exclusive","closeOthers","stop","animateChildren","animation","queue","useFailSafe","animate","opacity","resetOpacity","slideDown","easing","onOpen","onChange","isClosing","onClosing","slideUp","onClose","$openTitles","$nestedTitles","$openContents","$parentTitles","parents","prev","$activeAccordion","activeSelector","activeContent","closeNested","css","attr","removeAttr","easeOutQuad","x","t","b","c","d","initialLoad","shortcutPressed","create","tabbable","hide","setup","unbind","show","reference","indeterminate","check","uncheck","hidden","notFound","$target","target","link","focus","space","should","allowCheck","onChecked","allowUncheck","unchecked","onUnchecked","allowIndeterminate","onIndeterminate","determinate","allowDeterminate","onDeterminate","onEnable","onEnabled","onDisable","onDisabled","radios","otherRadios","forceCallbacks","beforeChecked","beforeUnchecked","beforeIndeterminate","beforeDeterminate","fireOnInit","can","readOnly","uncheckable","uncheckOthers","createEvent","inputElement","initEvent","dispatchEvent","prevAll","detach","insertAfter","$radios","dimmer","$dimmer","$dimmable","clickEvent","documentElement","preinitialize","dimmerName","variation","dimmable","page","pageDimmer","closable","addContent","template","dimmed","onShow","onHide","useCSS","onStart","onComplete","width","height","fadeTo","color","colorArray","isRGB","isRGBA","join","hasTouch","elementIndex","pageLostFocus","willRefocus","elementNamespace","id","selectObserver","menuObserver","$context","$text","$search","$sizer","sizer","$icon","icon","$combo","$menu","menu","$item","item","activated","itemActivated","internalChange","alreadySetup","layout","refreshData","save","restore","selected","disconnect","select","mutation","substr","userChoice","$userChoices","$userChoice","userValues","addition","variables","addResult","hideAdditions","userLabels","minCharacters","firstUnfiltered","selectedItem","unselectable","nextAvailable","$selected","$nextAvailable","nextAll","$prevAvailable","api","apiSettings","urlData","returnedObject","insertBefore","searchSelection","allowTab","selectValues","selection","missingMultiple","prependTo","$firstModules","$lastModules","refreshSelectors","refreshItems","clearData","defaultText","placeholderText","remote","queryRemote","maxSelections","allResultsFiltered","allFiltered","intent","menuSearch","focusSearch","visible","hideOthers","hideMenu","hideSubMenus","$subMenus","touchEvents","keyboardEvents","inputEvents","mouseEvents","single","mouseenter","mousedown","mouseup","mouseleave","touch","searchTerm","afterFiltered","filterActive","activeItem","onNoResults","allowAdditions","noResults","userSuggestion","focusedOnSearch","useLabels","useAPI","filterRemoteData","filterItems","noAPI","errorDuration","throttle","onError","serverError","remoteValues","escapedTerm","beginsWithRegExp","$choice","choiceText","fullTextSearch","exactSearch","fuzzySearch","choiceValue","filteredItem","filtered","term","termLength","queryLength","characterIndex","nextCharacterIndex","queryCharacter","charCodeAt","skipHandler","forceSelection","$currentlySelected","$activeItem","$selectedItem","showOnFocus","activeElement","activeLabel","$labels","$activeLabels","$nextActive","$prevActive","$range","nextUntil","prevUntil","shiftKey","toggleClass","onLabelSelect","activeLabels","toggleBehavior","bubbledLabelClick","bubbledIconClick","eventOnElement","stopPropagation","eventInModule","$addedNode","addedNodes","$removedNode","removedNodes","$changedNodes","isUserAddition","isMessage","$subMenu","$otherMenus","siblings","hasSubMenu","itemTimer","skipRefocus","isBubbledEvent","allowCategorySelection","userAddition","scrollPosition","selectAction","pressedKey","inObject","$activeLabel","labelIndex","labelCount","hasActiveLabel","hasMultipleActive","isFirstLabel","isLastLabel","isSearch","isFocusedOnSearch","isFocused","focused","caretAtStart","caretPosition","leftArrow","siblingLabel","end","last","rightArrow","first","deleteKey","backspace","$nextItem","$visibleItems","addBack","$parentMenu","inVisibleMenu","hasSelectedItem","selectedIsSelectable","delimiterPressed","delimiter","isAdditionWithoutMenu","upArrow","selectOnKeydown","downArrow","pageUp","scrollPage","pageDown","selectedLetter","fromCharCode","inDocument","inModule","inVisibleDOM","body","notOnLabel","notInMenu","nothing","activate","hideAndClear","combo","searchWidth","ceil","selectionCount","upward","grep","uniqueArray","array","rangeLength","selectionStart","createRange","moveStart","isEmptyMultiselect","selectInput","read","remoteData","preserveHTML","clone","menuIcon","$option","placeholder","sortSelect","sort","itemWithAdditions","$items","$userItems","strict","shouldSearch","optionText","optionValue","labels","saveRemoteData","Storage","noStorage","sessionStorage","clearValue","direction","isWithinRange","$nextSelectedItem","$currentItem","menuHeight","outerHeight","currentScroll","scrollTop","itemHeight","itemsPerPage","newScroll","$selectableItem","isSearchMultiple","searchValue","hasSearchValue","valueIsSet","glyphWidth","loading","partialSearch","forceScroll","hasActive","offset","itemOffset","menuOffset","menuScroll","abovePage","belowPage","position","top","searchText","letter","alreadySelectedLetter","firstLetter","$nextValue","openDownward","leftward","openRightward","$currentMenu","escapedValue","hasInput","currentValue","stringValue","allowReselection","extendSelect","exactly","selectedText","selectedValue","isFiltered","isUserValue","shouldAnimate","count","$next","onLabelCreate","$addition","$existingItem","alreadyHasValue","hasUserSuggestion","hasCount","hasMaxCount","hasTerm","addedValue","addedText","newValue","onAdd","removedValue","removedText","$removedItem","arrayValue","onRemove","$removedLabel","userValue","onLabelRemove","items","$normalResults","needle","property","selectMutation","selectChanged","verticallyScrollableContext","overflowY","horizontallyScrollableContext","overflowX","calculations","canOpenDownward","onScreen","above","below","canOpenRightward","isOffscreenRight","scrollLeft","outerWidth","left","start","noTransition","multipleValues","isUnparsable","hasQuotes","quote","keepOnScreen","$selectedLabels","option","maybeText","maybeDisabled","choice","embed","sources","$placeholder","$embed","autoplay","createAndShow","createPlaceholder","generate","createEmbed","onCreate","changeEmbed","source","showPlaceholder","onReset","onDisplay","onPlaceholderDisplay","matchedSource","domain","encode","urlString","encodeURIComponent","iframe","noURL","extraParameters","onEmbed","video","hd","brandedUI","youtube","autohide","hq","jsapi","modestbranding","vimeo","byline","portrait","src","image","onPause","onPlay","onStop","modal","$window","$body","$allModals","$otherModals","$focusedElement","elementEventNamespace","$close","ignoreRepeatedEvents","refreshModals","defaultSettings","dimmerSettings","detachable","undetached","scrolling","cacheSizes","screenHeight","$toggle","approve","deny","resize","onApprove","onDeny","isInModal","isInDOM","clickaway","allowMultiple","hideAll","debounce","keyboard","showModal","hideModal","showDimmer","others","onVisible","autofocus","keepDimmed","hideDimmer","onHidden","$visibleModals","bodyStyle","modalHeight","pageHeight","contextHeight","fit","padding","modernBrowser","ActiveXObject","$inputs","$autofocus","inverted","blurring","marginTop","nag","dismiss","displayTime","storageMethod","storage","persist","storageOptions","options","expires","cookie","noCookieStorage","storedValue","removeItem","removeCookie","bottom","fixed","speed","popup","$popup","$offsetParent","documentObserver","$scrollContext","scrollContext","$boundary","boundary","searchDepth","triedPositions","openedWithTouch","createID","exists","preserve","documentChanged","offsetParent","movePopup","reposition","removePopup","hideTimer","showTimer","touchstart","forEach","node","hideGracefully","inPopup","activator","hoverable","conditions","popupVisible","supports","svg","SVGGraphicsElement","popupOffset","screen","targetElement","isWindow","targetPosition","screenPosition","scroll","margin","setFluidWidth","fluid","container","getComputedStyle","getPropertyValue","rtl","right","startEvent","scrollEvent","endEvent","distanceFromBoundary","parentNode","$node","is2D","isStatic","isHTML","positions","top left","top center","top right","bottom left","bottom center","bottom right","left center","right center","nextPosition","verticalPosition","horizontalPosition","opposite","adjacent","center","backup","adjacentsAvailable","oppositeTried","adjacentTried","prefer","distanceAway","positioning","maxSearchDepth","lastResort","invalidPosition","offstage","cannotPlace","attempts","onUnplaceable","fluidWidth","hideOnScroll","closeOnScroll","touchClose","distance","jitter","addTouchEvents","badChars","shouldEscape","&","<",">","\"","'","`","escapedChar","chr","progress","transitionEnd","$bar","bar","$progress","transitionEvent","clearInterval","interval","state","nextValue","update","complete","percent","progressPoll","total","failSafeTimer","triggerHandler","failSafeDelay","increment","incrementValue","startValue","randomValue","normalizedValue","decrement","decrementValue","templateText","displayPercent","updateInterval","numericValue","transitions","OTransition","MozTransition","WebkitTransition","style","barWidth","totalWidth","minDisplay","precision","round","toNextValue","warning","tooHigh","tooLow","transition-duration","limitValues","labelInterval","animationCallback","setInterval","framerate","barLabel","autoSuccess","ratio","showActivity","onLabelUpdate","onActive","onWarning","totalValue","percentComplete","nonNumeric","variable","rating","interactive","initialRating","maxRating","$activeIcon","currentRating","clearable","clearRating","ratingIndex","onRate","slent","noMaximum","$searchButton","searchButton","$results","$result","result","$category","category","disabledBubbled","resultsDismissed","searchFields","refreshResults","automatic","handleKeyboard","searchDelay","searchOnFocus","minimumCharacters","showResults","cancel","hideResults","hideDelay","resultsClicked","inMessage","$link","href","onSelect","location","newIndex","$activeResult","currentIndex","resultSize","hasActiveResult","buttonPressed","buttonFocus","displayMessage","onAbort","lookupFields","firstResult","addResults","inject","local","onSearchQuery","searchHTML","generateResults","write","fuzzyResults","searchExp","matchRegExp","beginsWith","notResult","notFuzzyResult","searchFullText","merge","resultIndex","categoryIndex","letterID","resultID","$selectedResult","onResultsAdd","selectFirstResult","onResultsOpen","onResultsClose","isProperObject","isProperArray","maxResults","noTemplate","showNoResults","onResults","displayField","logging","noEndpoint","categories","categoryName","categoryResults","description","price","actionText","actionURL","standard","shape","$activeSide","$nextSide","$sides","sides","$side","side","nextIndex","defaultSide","repaint","offsetWidth","propertyObject","beforeChange","-webkit-transition-duration","-moz-transition-duration","-ms-transition-duration","-o-transition-duration","currentStageSize","stageSize","$clone","newWidth","newHeight","nextSide","flip","up","allowRepeats","transform","stage","down","over","behind","back","translate","y","z","box","origin","sidebar","$html","$head","$style","$sidebars","$fixed","$pusher","pusher","delaySetup","ios","clickedInPusher","clickedContext","containScroll","offsetHeight","scrollHeight","scrollLock","inlineCSS","isRTL","ie","refreshSidebars","omitted","wrapAll","movedSidebar","pushable","overlay","othersActive","pushPage","pullPage","othersAnimating","othersVisible","$otherSidebars","sidebarCount","callbackCount","dim","$transition","scrollToTop","dimPage","returnScroll","mobile","scrollBack","scrollTo","pushed","mobileTransition","defaultTransition","computer","isIE11","isIE","userAgent","navigator","isIOS","isMobileChrome","mobileChrome","closed","vertical","sticky","$container","$scroll","determineContainer","determineContext","checkErrors","load","scrollchange","changed","invalidContext","elementSize","stick","onScroll","hardRefresh","onReposition","supported","lastScroll","elementScroll","standardScroll","fits","sameHeight","containerSize","scrollChange","currentElementScroll","abs","delta","maxScroll","possibleScroll","minimumSize","tagName","size","setProperty","initialPosition","bound","cachedPosition","pushing","bottomOffset","doesntFit","bindBottom","fixTop","setInitialPosition","fixBottom","bindTop","marginBottom","onTop","onUnstick","onBottom","unfix","setSize","onStick","resetCSS","tab","initializedHistory","$tabs","activeTabPath","parameterArray","historyEvent","firstLoad","recursionDepth","callbacks","determineTabs","auto","history","initializeHistory","$reference","ui","childrenOnly","tabs","onTabLoad","onTabInit","onLoad","legacyLoad","onFirstLoad","legacyInit","address","historyType","tabPath","changeTab","pathNames","initialPath","pageTitle","determineTitle","cacheKey","$tab","tabElement","onRequest","pushStateAvailable","pushState","shouldIgnoreLoad","ignoreFirstLoad","remoteContent","pathArray","pathToArray","defaultPathArray","arrayToPath","$anchor","nextPathArray","nextPath","isLastTab","currentPathArray","currentPath","isTab","isLastIndex","filterArray","all","navigation","fetch","missingTab","scrollOffset","evaluateScripts","cacheType","append","innerHTML","fullTabPath","requestSettings","cachedContent","dataType","encodeParameters","alwaysRefresh","headers","X-Remote","loadOnce","request","existingRequest","$deactiveTabs","deactivate","$navigation","navElement","$deactiveNavigation","tabName","defaultPath","$defaultNav","defaultTab","recursion","$fullPathTab","$simplePathTab","tabPathArray","lastTab","keepArray","removeArray","keepValue","pathName","tabArray","noContent","loaded","promise","moduleArguments","animationEnd","animationEndEvent","displayType","forceRepaint","$parentElement","$nextElement","shouldReverse","animationDirection","reverse","outward","overrideSettings","support","occurring","queuing","noAnimation","animationCallbacks","completeCallback","failSafe","looping","inward","force","userStyle","overrideStyle","currentDisplay","emptyStyle","hasDirection","word","inlineDisplay","animationClass","animationName","animation-duration","transitionExists","currentAnimation","queueCallback","directionClass","currentDirection","parseFloat","shouldDetermine","animationStartEvent","animations","OAnimation","MozAnimation","WebkitAnimation","forced","elementClass","inAnimation","directionExists","stopAll","repeated","ajaxSettings","requestStartTime","$form","stateContext","triggerEvent","decode","json","e","cachedResponse","stringify","interruptRequests","abort","defaultData","serializeForm","formData","cancelled","beforeSend","templatedURL","mocked","missingURL","base","beforeXHR","failure","resolveWith","throttleFirstRequest","send","removeError","hideError","expectingJSON","mockResponse","mockResponseAsync","responseAsync","abortedRequest","xhr","readyState","validResponse","successTest","was","succesful","requiredVariables","optionalVariables","required","templatedString","requiredParameter","urlEncodedValue","hasOtherData","canSerialize","serializeObject","serialize","missingSerialize","mockedXHR","always","done","textStatus","elapsedTime","timeLeft","loadingDuration","translatedResponse","onResponse","rejectWith","fail","status","httpMessage","firstParameter","secondParameter","responseFromXHR","errorMessage","errorFromRequest","statusMessage","Deferred","asyncCallback","responder","asyncResponder","responseText","ajax","runSettings","noReturnedValue","decodedValue","decodeURIComponent","encodedValue","missingAction","exitConditions","JSONParse","parseError","timeout","states","userStates","typeStates","inactive","textEnabled","button","allow","disallow","allows","setState","removeState","apiRequest","activateTest","deactivateTest","listenTo","when","then","sync","hover","onActivate","onDeactivate","textFor","flash","previousText","flashDuration","activeText","storedText","inactiveText","currentText","visibility","moduleCount","loadedCount","contextObserver","trackChanges","initialCheck","checkVisibility","resetFixed","contextChanged","refreshOnLoad","refreshOnResize","precache","images","Array","imagesLength","loadedCounter","cacheImage","handleLoad","onload","onerror","enableCallbacks","disableCallbacks","occurred","once","onOnScreen","onAllLoaded","onTopPassed","onTopPassedReverse","zIndex","onFixed","elementCalculations","offScreen","checkOnRefresh","onRefresh","passed","passingReverse","topVisibleReverse","bottomVisibleReverse","topPassedReverse","bottomPassedReverse","passing","topVisible","bottomVisible","topPassed","bottomPassed","onUpdate","amount","newCallback","onPassed","pixelsPassed","execute","onOffScreen","onPassing","onTopVisible","onBottomVisible","onBottomPassed","onPassingReverse","onTopVisibleReverse","onBottomVisibleReverse","onBottomPassedReverse","callbackName","screenCalculations","continuous","onUnfixed","elementPosition","screenSize","includeMargin","percentagePassed","defineProperty","__WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__","__WEBPACK_IMPORTED_MODULE_1_semantic_ui__","__WEBPACK_IMPORTED_MODULE_2_vue__","__WEBPACK_IMPORTED_MODULE_3__App__","__WEBPACK_IMPORTED_MODULE_3__App___default","__WEBPACK_IMPORTED_MODULE_4__router__","productionTip","el","router","components","App","__WEBPACK_IMPORTED_MODULE_0__helpers__","__WEBPACK_IMPORTED_MODULE_1__Dropdown__","__WEBPACK_IMPORTED_MODULE_1__Dropdown___default","__WEBPACK_IMPORTED_MODULE_2__Message__","__WEBPACK_IMPORTED_MODULE_2__Message___default","__WEBPACK_IMPORTED_MODULE_3__data__","__WEBPACK_IMPORTED_MODULE_4_jquery__","__WEBPACK_IMPORTED_MODULE_4_jquery___default","users","showMessageForm","newMessageContent","userList","selectedUser","beforeCreate","methods","addMessage","messageForm","unshift","toggleMessageForm","removeChild","__WEBPACK_IMPORTED_MODULE_0_jquery__","__WEBPACK_IMPORTED_MODULE_0_jquery___default","props","mounted","that","$el","$emit","beforeDestroy","__WEBPACK_IMPORTED_MODULE_1__data__","__WEBPACK_IMPORTED_MODULE_2_jquery__","__WEBPACK_IMPORTED_MODULE_2_jquery___default","replyAs","model","showReplyForm","replyContent","computed","replyFormIdentifier","liked","includes","currentUserOwnsComment","hasReplies","hasOwnProperty","addLike","removeLike","toggleReplyForm","addReply","replyForm","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_l","data-value","_s","staticRenderFns","update:selected","$event","directives","rawName","expression","domProps","composing","_e","reply-as"],"mappings":"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","file":"static/js/app.c516fe7a3c3eb1f8db2b.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    reactive: {\n        messages: []\n    },\n    hasMessages: function hasMessages() {\n        if (localStorage.getItem('messages') === null) {\n            return false;\n        }\n        return true;\n    },\n    saveState: function saveState() {\n        this.setMessages(this.reactive.messages);\n    },\n    loadMessages: function loadMessages() {\n        var parsedMessages = JSON.parse(localStorage.getItem('messages'));\n        this.reactive.messages = parsedMessages;\n    },\n    setMessages: function setMessages(newMessages) {\n        localStorage.setItem('messages', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(newMessages));\n    }\n});\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from__);\n\nvar adjectives = ['Noisy', 'Agreeable', 'Calm', 'Eager', 'Happy', 'Jolly', 'Kind', 'Nice', 'Relieved', 'Crazy', 'Victorious', 'Witty', 'Zealous'];\nvar nouns = ['Cat', 'Dog', 'Mouse', 'Horse', 'Giraffe', 'Robin', 'Sparrow', 'Goat', 'Duck', 'Gull', 'Owl', 'Trout'];\nvar avatars = ['https://semantic-ui.com/images/avatar/small/elliot.jpg', 'https://semantic-ui.com/images/avatar/small/jenny.jpg', 'https://semantic-ui.com/images/avatar/small/joe.jpg', 'https://semantic-ui.com/images/avatar/small/matt.jpg', 'https://semantic-ui.com/images/avatar/small/helen.jpg', 'https://semantic-ui.com/images/avatar/small/justen.jpg', 'https://semantic-ui.com/images/avatar/small/laura.jpg'];\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  getNewMessage: function getNewMessage(user, content) {\n    return {\n      author: user.username,\n      avatar: user.avatar,\n      content: content,\n      likers: [],\n      replies: [],\n      time: new Date().toLocaleString()\n    };\n  },\n  getRandomUserName: function getRandomUserName() {\n    return adjectives[Math.floor(Math.random() * adjectives.length)] + ' ' + nouns[Math.floor(Math.random() * nouns.length)];\n  },\n  getRandomAvatarUrl: function getRandomAvatarUrl() {\n    return avatars[Math.floor(Math.random() * avatars.length)];\n  },\n  guid: function guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  },\n  getRandonUserList: function getRandonUserList() {\n    var _this = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_array_from___default()({ length: 5 }, function (v, i) {\n      return {\n        username: _this.getRandomUserName(),\n        avatar: _this.getRandomAvatarUrl()\n      };\n    });\n  }\n});\n\n/***/ }),\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(80);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Channel__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Channel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_Channel__);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]({\n  routes: [{ path: '/', name: 'Channel', component: __WEBPACK_IMPORTED_MODULE_2__components_Channel___default.a }]\n}));\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(71)\n\nvar Component = __webpack_require__(9)(\n  /* script */\n  __webpack_require__(36),\n  /* template */\n  __webpack_require__(78),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) { /*\n * # Semantic UI - 2.2.11\n * https://github.com/Semantic-Org/Semantic-UI\n * http://www.semantic-ui.com/\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\n * # Semantic UI 2.2.11 - Site\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.site = $.fn.site = function(parameters) {\n  var\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    settings        = ( $.isPlainObject(parameters) )\n      ? $.extend(true, {}, $.site.settings, parameters)\n      : $.extend({}, $.site.settings),\n\n    namespace       = settings.namespace,\n    error           = settings.error,\n\n    eventNamespace  = '.' + namespace,\n    moduleNamespace = 'module-' + namespace,\n\n    $document       = $(document),\n    $module         = $document,\n    element         = this,\n    instance        = $module.data(moduleNamespace),\n\n    module,\n    returnedValue\n  ;\n  module = {\n\n    initialize: function() {\n      module.instantiate();\n    },\n\n    instantiate: function() {\n      module.verbose('Storing instance of site', module);\n      instance = module;\n      $module\n        .data(moduleNamespace, module)\n      ;\n    },\n\n    normalize: function() {\n      module.fix.console();\n      module.fix.requestAnimationFrame();\n    },\n\n    fix: {\n      console: function() {\n        module.debug('Normalizing window.console');\n        if (console === undefined || console.log === undefined) {\n          module.verbose('Console not available, normalizing events');\n          module.disable.console();\n        }\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\n          module.verbose('Console group not available, normalizing events');\n          window.console.group = function() {};\n          window.console.groupEnd = function() {};\n          window.console.groupCollapsed = function() {};\n        }\n        if (typeof console.markTimeline == 'undefined') {\n          module.verbose('Mark timeline not available, normalizing events');\n          window.console.markTimeline = function() {};\n        }\n      },\n      consoleClear: function() {\n        module.debug('Disabling programmatic console clearing');\n        window.console.clear = function() {};\n      },\n      requestAnimationFrame: function() {\n        module.debug('Normalizing requestAnimationFrame');\n        if(window.requestAnimationFrame === undefined) {\n          module.debug('RequestAnimationFrame not available, normalizing event');\n          window.requestAnimationFrame = window.requestAnimationFrame\n            || window.mozRequestAnimationFrame\n            || window.webkitRequestAnimationFrame\n            || window.msRequestAnimationFrame\n            || function(callback) { setTimeout(callback, 0); }\n          ;\n        }\n      }\n    },\n\n    moduleExists: function(name) {\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\n    },\n\n    enabled: {\n      modules: function(modules) {\n        var\n          enabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(module.moduleExists(name)) {\n            enabledModules.push(name);\n          }\n        });\n        return enabledModules;\n      }\n    },\n\n    disabled: {\n      modules: function(modules) {\n        var\n          disabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(!module.moduleExists(name)) {\n            disabledModules.push(name);\n          }\n        });\n        return disabledModules;\n      }\n    },\n\n    change: {\n      setting: function(setting, value, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? (modules === 'all')\n            ? settings.modules\n            : [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            namespace = (module.moduleExists(name))\n              ? $.fn[name].settings.namespace || false\n              : true,\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', setting, value, name);\n            $.fn[name].settings[setting] = value;\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', setting, value);\n              }\n            }\n          }\n        });\n      },\n      settings: function(newSettings, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', newSettings, name);\n            $.extend(true, $.fn[name].settings, newSettings);\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', newSettings);\n              }\n            }\n          }\n        });\n      }\n    },\n\n    enable: {\n      console: function() {\n        module.console(true);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling debug for modules', modules);\n        module.change.setting('debug', true, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling verbose debug for modules', modules);\n        module.change.setting('verbose', true, modules, modifyExisting);\n      }\n    },\n    disable: {\n      console: function() {\n        module.console(false);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling debug for modules', modules);\n        module.change.setting('debug', false, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling verbose debug for modules', modules);\n        module.change.setting('verbose', false, modules, modifyExisting);\n      }\n    },\n\n    console: function(enable) {\n      if(enable) {\n        if(instance.cache.console === undefined) {\n          module.error(error.console);\n          return;\n        }\n        module.debug('Restoring console function');\n        window.console = instance.cache.console;\n      }\n      else {\n        module.debug('Disabling console function');\n        instance.cache.console = window.console;\n        window.console = {\n          clear          : function(){},\n          error          : function(){},\n          group          : function(){},\n          groupCollapsed : function(){},\n          groupEnd       : function(){},\n          info           : function(){},\n          log            : function(){},\n          markTimeline   : function(){},\n          warn           : function(){}\n        };\n      }\n    },\n\n    destroy: function() {\n      module.verbose('Destroying previous site for', $module);\n      $module\n        .removeData(moduleNamespace)\n      ;\n    },\n\n    cache: {},\n\n    setting: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, settings, name);\n      }\n      else if(value !== undefined) {\n        settings[name] = value;\n      }\n      else {\n        return settings[name];\n      }\n    },\n    internal: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, module, name);\n      }\n      else if(value !== undefined) {\n        module[name] = value;\n      }\n      else {\n        return module[name];\n      }\n    },\n    debug: function() {\n      if(settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.debug.apply(console, arguments);\n        }\n      }\n    },\n    verbose: function() {\n      if(settings.verbose && settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.verbose.apply(console, arguments);\n        }\n      }\n    },\n    error: function() {\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n      module.error.apply(console, arguments);\n    },\n    performance: {\n      log: function(message) {\n        var\n          currentTime,\n          executionTime,\n          previousTime\n        ;\n        if(settings.performance) {\n          currentTime   = new Date().getTime();\n          previousTime  = time || currentTime;\n          executionTime = currentTime - previousTime;\n          time          = currentTime;\n          performance.push({\n            'Element'        : element,\n            'Name'           : message[0],\n            'Arguments'      : [].slice.call(message, 1) || '',\n            'Execution Time' : executionTime\n          });\n        }\n        clearTimeout(module.performance.timer);\n        module.performance.timer = setTimeout(module.performance.display, 500);\n      },\n      display: function() {\n        var\n          title = settings.name + ':',\n          totalTime = 0\n        ;\n        time = false;\n        clearTimeout(module.performance.timer);\n        $.each(performance, function(index, data) {\n          totalTime += data['Execution Time'];\n        });\n        title += ' ' + totalTime + 'ms';\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n          console.groupCollapsed(title);\n          if(console.table) {\n            console.table(performance);\n          }\n          else {\n            $.each(performance, function(index, data) {\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n            });\n          }\n          console.groupEnd();\n        }\n        performance = [];\n      }\n    },\n    invoke: function(query, passedArguments, context) {\n      var\n        object = instance,\n        maxDepth,\n        found,\n        response\n      ;\n      passedArguments = passedArguments || queryArguments;\n      context         = element         || context;\n      if(typeof query == 'string' && object !== undefined) {\n        query    = query.split(/[\\. ]/);\n        maxDepth = query.length - 1;\n        $.each(query, function(depth, value) {\n          var camelCaseValue = (depth != maxDepth)\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n            : query\n          ;\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n            object = object[camelCaseValue];\n          }\n          else if( object[camelCaseValue] !== undefined ) {\n            found = object[camelCaseValue];\n            return false;\n          }\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n            object = object[value];\n          }\n          else if( object[value] !== undefined ) {\n            found = object[value];\n            return false;\n          }\n          else {\n            module.error(error.method, query);\n            return false;\n          }\n        });\n      }\n      if ( $.isFunction( found ) ) {\n        response = found.apply(context, passedArguments);\n      }\n      else if(found !== undefined) {\n        response = found;\n      }\n      if($.isArray(returnedValue)) {\n        returnedValue.push(response);\n      }\n      else if(returnedValue !== undefined) {\n        returnedValue = [returnedValue, response];\n      }\n      else if(response !== undefined) {\n        returnedValue = response;\n      }\n      return found;\n    }\n  };\n\n  if(methodInvoked) {\n    if(instance === undefined) {\n      module.initialize();\n    }\n    module.invoke(query);\n  }\n  else {\n    if(instance !== undefined) {\n      module.destroy();\n    }\n    module.initialize();\n  }\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.site.settings = {\n\n  name        : 'Site',\n  namespace   : 'site',\n\n  error : {\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\n    method : 'The method you called is not defined.'\n  },\n\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  modules: [\n    'accordion',\n    'api',\n    'checkbox',\n    'dimmer',\n    'dropdown',\n    'embed',\n    'form',\n    'modal',\n    'nag',\n    'popup',\n    'rating',\n    'shape',\n    'sidebar',\n    'state',\n    'sticky',\n    'tab',\n    'transition',\n    'visit',\n    'visibility'\n  ],\n\n  siteNamespace   : 'site',\n  namespaceStub   : {\n    cache     : {},\n    config    : {},\n    sections  : {},\n    section   : {},\n    utilities : {}\n  }\n\n};\n\n// allows for selection of elements with data attributes\n$.extend($.expr[ \":\" ], {\n  data: ($.expr.createPseudo)\n    ? $.expr.createPseudo(function(dataName) {\n        return function(elem) {\n          return !!$.data(elem, dataName);\n        };\n      })\n    : function(elem, i, match) {\n      // support: jQuery < 1.8\n      return !!$.data(elem, match[ 3 ]);\n    }\n});\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.form = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        regExp,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        determine: {\n          isValid: function() {\n            var\n              allValid = true\n            ;\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName, true) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          shorthandFields: function(fields) {\n            var\n              fieldKeys = Object.keys(fields),\n              firstRule = fields[fieldKeys[0]]\n            ;\n            return module.is.shorthandRules(firstRule);\n          },\n          // duck type rule test\n          shorthandRules: function(rules) {\n            return (typeof rules == 'string' || $.isArray(rules));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function(field) {\n            var\n              allValid = true\n            ;\n            if(field) {\n              module.verbose('Checking if field is valid', field);\n              return module.validate.field(validation[field], field, false);\n            }\n            else {\n              module.verbose('Checking if form is valid');\n              $.each(validation, function(fieldName, field) {\n                if( !module.is.valid(fieldName) ) {\n                  allValid = false;\n                }\n              });\n              return allValid;\n            }\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n              return false;\n            }\n            return (rule.value !== undefined)\n              ? rule.value\n              : rule.type.match(settings.regExp.bracket)[1] + ''\n            ;\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          fieldsFromShorthand: function(fields) {\n            var\n              fullFields = {}\n            ;\n            $.each(fields, function(name, rules) {\n              if(typeof rules == 'string') {\n                rules = [rules];\n              }\n              fullFields[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                fullFields[name].rules.push({ type: rule });\n              });\n            });\n            return fullFields;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              $field,\n              name\n            ;\n            if(requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields && module.is.shorthandFields(parameters.fields)) {\n                  parameters.fields = module.get.fieldsFromShorthand(parameters.fields);\n                }\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            regExp          = settings.regExp;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if($field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(values[name] === undefined) {\n                      values[name] = (isChecked)\n                        ? true\n                        : false\n                      ;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if($field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        escape: {\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        add: {\n          // alias\n          rule: function(name, rules) {\n            module.add.field(name, rules);\n          },\n          field: function(name, rules) {\n            var\n              newValidation = {}\n            ;\n            if(module.is.shorthandRules(rules)) {\n              rules = $.isArray(rules)\n                ? rules\n                : [rules]\n              ;\n              newValidation[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                newValidation[name].rules.push({ type: rule });\n              });\n            }\n            else {\n              newValidation[name] = rules;\n            }\n            validation = $.extend({}, validation, newValidation);\n            module.debug('Adding rules', newValidation, validation);\n          },\n          fields: function(fields) {\n            var\n              newValidation\n            ;\n            if(fields && module.is.shorthandFields(fields)) {\n              newValidation = module.get.fieldsFromShorthand(fields);\n            }\n            else {\n              newValidation = fields;\n            }\n            validation = $.extend({}, validation, newValidation);\n          },\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          rule: function(field, rule) {\n            var\n              rules = $.isArray(rule)\n                ? rule\n                : [rule]\n            ;\n            if(rule == undefined) {\n              module.debug('Removed all rules');\n              validation[field].rules = [];\n              return;\n            }\n            if(validation[field] == undefined || !$.isArray(validation[field].rules)) {\n              return;\n            }\n            $.each(validation[field].rules, function(index, rule) {\n              if(rules.indexOf(rule.type) !== -1) {\n                module.debug('Removed rule', rule.type);\n                validation[field].rules.splice(index, 1);\n              }\n            });\n          },\n          field: function(field) {\n            var\n              fields = $.isArray(field)\n                ? field\n                : [field]\n            ;\n            $.each(fields, function(index, field) {\n              module.remove.rule(field);\n            });\n          },\n          // alias\n          rules: function(field, rules) {\n            if($.isArray(field)) {\n              $.each(fields, function(index, field) {\n                module.remove.rule(field, rules);\n              });\n            }\n            else {\n              module.remove.rule(field, rules);\n            }\n          },\n          fields: function(fields) {\n            module.remove.field(fields);\n          },\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.determine.isValid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName, showErrors) {\n            showErrors = (showErrors !== undefined)\n              ? showErrors\n              : true\n            ;\n            if(typeof field == 'string') {\n              module.verbose('Validating field', field);\n              fieldName = field;\n              field     = validation[field];\n            }\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              if(showErrors) {\n                module.remove.prompt(identifier, fieldErrors);\n                settings.onValid.call($field);\n              }\n            }\n            else {\n              if(showErrors) {\n                formErrors = formErrors.concat(fieldErrors);\n                module.add.prompt(identifier, fieldErrors);\n                settings.onInvalid.call($field, fieldErrors);\n              }\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d+\\.?\\d*$/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} cannot contain \"{ruleValue}\"',\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return $.fn.form.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return $.fn.form.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      if(regExp instanceof RegExp) {\n        return value.match(regExp);\n      }\n      var\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = $.fn.form.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return $.fn.form.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return $.fn.form.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // allow dashes in card\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Accordion\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.accordion = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\n          : $.extend({}, $.fn.accordion.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        $module  = $(this),\n        $title   = $module.find(selector.title),\n        $content = $module.find(selector.content),\n\n        element  = this,\n        instance = $module.data(moduleNamespace),\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous instance', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $title   = $module.find(selector.title);\n          $content = $module.find(selector.content);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding delegated events');\n            $module\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\n            ;\n          }\n        },\n\n        event: {\n          click: function() {\n            module.toggle.call(this);\n          }\n        },\n\n        toggle: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive && !isAnimating),\n            isOpening   = (!isActive && isAnimating)\n          ;\n          module.debug('Toggling visibility of content', $activeTitle);\n          if(isOpen || isOpening) {\n            if(settings.collapsible) {\n              module.close.call($activeTitle);\n            }\n            else {\n              module.debug('Cannot close accordion content collapsing is disabled');\n            }\n          }\n          else {\n            module.open.call($activeTitle);\n          }\n        },\n\n        open: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive || isAnimating)\n          ;\n          if(isOpen) {\n            module.debug('Accordion already open, skipping', $activeContent);\n            return;\n          }\n          module.debug('Opening accordion content', $activeTitle);\n          settings.onOpening.call($activeContent);\n          if(settings.exclusive) {\n            module.closeOthers.call($activeTitle);\n          }\n          $activeTitle\n            .addClass(className.active)\n          ;\n          $activeContent\n            .stop(true, true)\n            .addClass(className.animating)\n          ;\n          if(settings.animateChildren) {\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\n              $activeContent\n                .children()\n                  .transition({\n                    animation   : 'fade in',\n                    queue       : false,\n                    useFailSafe : true,\n                    debug       : settings.debug,\n                    verbose     : settings.verbose,\n                    duration    : settings.duration\n                  })\n              ;\n            }\n            else {\n              $activeContent\n                .children()\n                  .stop(true, true)\n                  .animate({\n                    opacity: 1\n                  }, settings.duration, module.resetOpacity)\n              ;\n            }\n          }\n          $activeContent\n            .slideDown(settings.duration, settings.easing, function() {\n              $activeContent\n                .removeClass(className.animating)\n                .addClass(className.active)\n              ;\n              module.reset.display.call(this);\n              settings.onOpen.call(this);\n              settings.onChange.call(this);\n            })\n          ;\n        },\n\n        close: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating    = $activeContent.hasClass(className.animating),\n            isActive       = $activeContent.hasClass(className.active),\n            isOpening      = (!isActive && isAnimating),\n            isClosing      = (isActive && isAnimating)\n          ;\n          if((isActive || isOpening) && !isClosing) {\n            module.debug('Closing accordion content', $activeContent);\n            settings.onClosing.call($activeContent);\n            $activeTitle\n              .removeClass(className.active)\n            ;\n            $activeContent\n              .stop(true, true)\n              .addClass(className.animating)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $activeContent\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      queue       : false,\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $activeContent\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $activeContent\n              .slideUp(settings.duration, settings.easing, function() {\n                $activeContent\n                  .removeClass(className.animating)\n                  .removeClass(className.active)\n                ;\n                module.reset.display.call(this);\n                settings.onClose.call(this);\n                settings.onChange.call(this);\n              })\n            ;\n          }\n        },\n\n        closeOthers: function(index) {\n          var\n            $activeTitle = (index !== undefined)\n              ? $title.eq(index)\n              : $(this).closest(selector.title),\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\n            $activeAccordion = $activeTitle.closest(selector.accordion),\n            activeSelector   = selector.title + '.' + className.active + ':visible',\n            activeContent    = selector.content + '.' + className.active + ':visible',\n            $openTitles,\n            $nestedTitles,\n            $openContents\n          ;\n          if(settings.closeNested) {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $openContents = $openTitles.next($content);\n          }\n          else {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\n            $openTitles   = $openTitles.not($nestedTitles);\n            $openContents = $openTitles.next($content);\n          }\n          if( ($openTitles.length > 0) ) {\n            module.debug('Exclusive enabled, closing other content', $openTitles);\n            $openTitles\n              .removeClass(className.active)\n            ;\n            $openContents\n              .removeClass(className.animating)\n              .stop(true, true)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $openContents\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $openContents\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $openContents\n              .slideUp(settings.duration , settings.easing, function() {\n                $(this).removeClass(className.active);\n                module.reset.display.call(this);\n              })\n            ;\n          }\n        },\n\n        reset: {\n\n          display: function() {\n            module.verbose('Removing inline display from element', this);\n            $(this).css('display', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n          opacity: function() {\n            module.verbose('Removing inline opacity from element', this);\n            $(this).css('opacity', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.accordion.settings = {\n\n  name            : 'Accordion',\n  namespace       : 'accordion',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  on              : 'click', // event on title that opens accordion\n\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\n\n  exclusive       : true,  // whether a single accordion content panel should be open at once\n  collapsible     : true,  // whether accordion content can be closed\n  closeNested     : false, // whether nested content should be closed when a panel is closed\n  animateChildren : true,  // whether children opacity should be animated\n\n  duration        : 350, // duration of animation\n  easing          : 'easeOutQuad', // easing equation for animation\n\n\n  onOpening       : function(){}, // callback before open animation\n  onOpen          : function(){}, // callback after open animation\n  onClosing       : function(){}, // callback before closing animation\n  onClose         : function(){}, // callback after closing animation\n  onChange        : function(){}, // callback after closing or opening animation\n\n  error: {\n    method : 'The method you called is not defined'\n  },\n\n  className   : {\n    active    : 'active',\n    animating : 'animating'\n  },\n\n  selector    : {\n    accordion : '.accordion',\n    title     : '.title',\n    trigger   : '.title',\n    content   : '.content'\n  }\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n\n/*!\n * # Semantic UI 2.2.11 - Checkbox\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.checkbox = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $label          = $(this).children(selector.label),\n        $input          = $(this).children(selector.input),\n        input           = $input[0],\n\n        initialLoad     = false,\n        shortcutPressed = false,\n        instance        = $module.data(moduleNamespace),\n\n        observer,\n        element         = this,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.verbose('Initializing checkbox', settings);\n\n          module.create.label();\n          module.bind.events();\n\n          module.set.tabbable();\n          module.hide.input();\n\n          module.observeChanges();\n          module.instantiate();\n          module.setup();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying module');\n          module.unbind.events();\n          module.show.input();\n          $module.removeData(moduleNamespace);\n        },\n\n        fix: {\n          reference: function() {\n            if( $module.is(selector.input) ) {\n              module.debug('Behavior called on <input> adjusting invoked element');\n              $module = $module.closest(selector.checkbox);\n              module.refresh();\n            }\n          }\n        },\n\n        setup: function() {\n          module.set.initialLoad();\n          if( module.is.indeterminate() ) {\n            module.debug('Initial value is indeterminate');\n            module.indeterminate();\n          }\n          else if( module.is.checked() ) {\n            module.debug('Initial value is checked');\n            module.check();\n          }\n          else {\n            module.debug('Initial value is unchecked');\n            module.uncheck();\n          }\n          module.remove.initialLoad();\n        },\n\n        refresh: function() {\n          $label = $module.children(selector.label);\n          $input = $module.children(selector.input);\n          input  = $input[0];\n        },\n\n        hide: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be unselectable');\n            $input.addClass(className.hidden);\n          }\n        },\n        show: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be selectable');\n            $input.removeClass(className.hidden);\n          }\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $element = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($element.length > 0) {\n            module.debug('Attaching checkbox events to element', selector, event);\n            $element\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound);\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            if( $target.is(selector.input) ) {\n              module.verbose('Using default check action on initialized checkbox');\n              return;\n            }\n            if( $target.is(selector.link) ) {\n              module.debug('Clicking link inside checkbox, skipping toggle');\n              return;\n            }\n            module.toggle();\n            $input.focus();\n            event.preventDefault();\n          },\n          keydown: function(event) {\n            var\n              key     = event.which,\n              keyCode = {\n                enter  : 13,\n                space  : 32,\n                escape : 27\n              }\n            ;\n            if(key == keyCode.escape) {\n              module.verbose('Escape key pressed blurring field');\n              $input.blur();\n              shortcutPressed = true;\n            }\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\n              module.verbose('Enter/space key pressed, toggling checkbox');\n              module.toggle();\n              shortcutPressed = true;\n            }\n            else {\n              shortcutPressed = false;\n            }\n          },\n          keyup: function(event) {\n            if(shortcutPressed) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        check: function() {\n          if( !module.should.allowCheck() ) {\n            return;\n          }\n          module.debug('Checking checkbox', $input);\n          module.set.checked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onChecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        uncheck: function() {\n          if( !module.should.allowUncheck() ) {\n            return;\n          }\n          module.debug('Unchecking checkbox');\n          module.set.unchecked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onUnchecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        indeterminate: function() {\n          if( module.should.allowIndeterminate() ) {\n            module.debug('Checkbox is already indeterminate');\n            return;\n          }\n          module.debug('Making checkbox indeterminate');\n          module.set.indeterminate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onIndeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        determinate: function() {\n          if( module.should.allowDeterminate() ) {\n            module.debug('Checkbox is already determinate');\n            return;\n          }\n          module.debug('Making checkbox determinate');\n          module.set.determinate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onDeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        enable: function() {\n          if( module.is.enabled() ) {\n            module.debug('Checkbox is already enabled');\n            return;\n          }\n          module.debug('Enabling checkbox');\n          module.set.enabled();\n          settings.onEnable.call(input);\n          // preserve legacy callbacks\n          settings.onEnabled.call(input);\n        },\n\n        disable: function() {\n          if( module.is.disabled() ) {\n            module.debug('Checkbox is already disabled');\n            return;\n          }\n          module.debug('Disabling checkbox');\n          module.set.disabled();\n          settings.onDisable.call(input);\n          // preserve legacy callbacks\n          settings.onDisabled.call(input);\n        },\n\n        get: {\n          radios: function() {\n            var\n              name = module.get.name()\n            ;\n            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\n          },\n          otherRadios: function() {\n            return module.get.radios().not($module);\n          },\n          name: function() {\n            return $input.attr('name');\n          }\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          },\n          radio: function() {\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\n          },\n          indeterminate: function() {\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\n          },\n          checked: function() {\n            return $input.prop('checked') !== undefined && $input.prop('checked');\n          },\n          disabled: function() {\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          determinate: function() {\n            return !module.is.indeterminate();\n          },\n          unchecked: function() {\n            return !module.is.checked();\n          }\n        },\n\n        should: {\n          allowCheck: function() {\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow check, checkbox is already checked');\n              return false;\n            }\n            if(settings.beforeChecked.apply(input) === false) {\n              module.debug('Should not allow check, beforeChecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowUncheck: function() {\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\n              return false;\n            }\n            if(settings.beforeUnchecked.apply(input) === false) {\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowIndeterminate: function() {\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\n              return false;\n            }\n            if(settings.beforeIndeterminate.apply(input) === false) {\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowDeterminate: function() {\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow determinate, checkbox is already determinate');\n              return false;\n            }\n            if(settings.beforeDeterminate.apply(input) === false) {\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          forceCallbacks: function() {\n            return (module.is.initialLoad() && settings.fireOnInit);\n          },\n          ignoreCallbacks: function() {\n            return (initialLoad && !settings.fireOnInit);\n          }\n        },\n\n        can: {\n          change: function() {\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\n          },\n          uncheck: function() {\n            return (typeof settings.uncheckable === 'boolean')\n              ? settings.uncheckable\n              : !module.is.radio()\n            ;\n          }\n        },\n\n        set: {\n          initialLoad: function() {\n            initialLoad = true;\n          },\n          checked: function() {\n            module.verbose('Setting class to checked');\n            $module\n              .removeClass(className.indeterminate)\n              .addClass(className.checked)\n            ;\n            if( module.is.radio() ) {\n              module.uncheckOthers();\n            }\n            if(!module.is.indeterminate() && module.is.checked()) {\n              module.debug('Input is already checked, skipping input property change');\n              return;\n            }\n            module.verbose('Setting state to checked', input);\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', true)\n            ;\n            module.trigger.change();\n          },\n          unchecked: function() {\n            module.verbose('Removing checked class');\n            $module\n              .removeClass(className.indeterminate)\n              .removeClass(className.checked)\n            ;\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\n              module.debug('Input is already unchecked');\n              return;\n            }\n            module.debug('Setting state to unchecked');\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', false)\n            ;\n            module.trigger.change();\n          },\n          indeterminate: function() {\n            module.verbose('Setting class to indeterminate');\n            $module\n              .addClass(className.indeterminate)\n            ;\n            if( module.is.indeterminate() ) {\n              module.debug('Input is already indeterminate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to indeterminate');\n            $input\n              .prop('indeterminate', true)\n            ;\n            module.trigger.change();\n          },\n          determinate: function() {\n            module.verbose('Removing indeterminate class');\n            $module\n              .removeClass(className.indeterminate)\n            ;\n            if( module.is.determinate() ) {\n              module.debug('Input is already determinate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to determinate');\n            $input\n              .prop('indeterminate', false)\n            ;\n          },\n          disabled: function() {\n            module.verbose('Setting class to disabled');\n            $module\n              .addClass(className.disabled)\n            ;\n            if( module.is.disabled() ) {\n              module.debug('Input is already disabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to disabled');\n            $input\n              .prop('disabled', 'disabled')\n            ;\n            module.trigger.change();\n          },\n          enabled: function() {\n            module.verbose('Removing disabled class');\n            $module.removeClass(className.disabled);\n            if( module.is.enabled() ) {\n              module.debug('Input is already enabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to enabled');\n            $input\n              .prop('disabled', false)\n            ;\n            module.trigger.change();\n          },\n          tabbable: function() {\n            module.verbose('Adding tabindex to checkbox');\n            if( $input.attr('tabindex') === undefined) {\n              $input.attr('tabindex', 0);\n            }\n          }\n        },\n\n        remove: {\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n\n        create: {\n          label: function() {\n            if($input.prevAll(selector.label).length > 0) {\n              $input.prev(selector.label).detach().insertAfter($input);\n              module.debug('Moving existing label', $label);\n            }\n            else if( !module.has.label() ) {\n              $label = $('<label>').insertAfter($input);\n              module.debug('Creating label', $label);\n            }\n          }\n        },\n\n        has: {\n          label: function() {\n            return ($label.length > 0);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching checkbox events');\n            $module\n              .on('click'   + eventNamespace, module.event.click)\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\n            ;\n          }\n        },\n\n        unbind: {\n          events: function() {\n            module.debug('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        uncheckOthers: function() {\n          var\n            $radios = module.get.otherRadios()\n          ;\n          module.debug('Unchecking other radios', $radios);\n          $radios.removeClass(className.checked);\n        },\n\n        toggle: function() {\n          if( !module.can.change() ) {\n            if(!module.is.radio()) {\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\n            }\n            return;\n          }\n          if( module.is.indeterminate() || module.is.unchecked() ) {\n            module.debug('Currently unchecked');\n            module.check();\n          }\n          else if( module.is.checked() && module.can.uncheck() ) {\n            module.debug('Currently checked');\n            module.uncheck();\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.checkbox.settings = {\n\n  name                : 'Checkbox',\n  namespace           : 'checkbox',\n\n  silent              : false,\n  debug               : false,\n  verbose             : true,\n  performance         : true,\n\n  // delegated event context\n  uncheckable         : 'auto',\n  fireOnInit          : false,\n\n  onChange            : function(){},\n\n  beforeChecked       : function(){},\n  beforeUnchecked     : function(){},\n  beforeDeterminate   : function(){},\n  beforeIndeterminate : function(){},\n\n  onChecked           : function(){},\n  onUnchecked         : function(){},\n\n  onDeterminate       : function() {},\n  onIndeterminate     : function() {},\n\n  onEnable            : function(){},\n  onDisable           : function(){},\n\n  // preserve misspelled callbacks (will be removed in 3.0)\n  onEnabled           : function(){},\n  onDisabled          : function(){},\n\n  className       : {\n    checked       : 'checked',\n    indeterminate : 'indeterminate',\n    disabled      : 'disabled',\n    hidden        : 'hidden',\n    radio         : 'radio',\n    readOnly      : 'read-only'\n  },\n\n  error     : {\n    method       : 'The method you called is not defined'\n  },\n\n  selector : {\n    checkbox : '.ui.checkbox',\n    label    : 'label, .box',\n    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    link     : 'a[href]'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Dimmer\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dimmer = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\n          : $.extend({}, $.fn.dimmer.settings),\n\n        selector        = settings.selector,\n        namespace       = settings.namespace,\n        className       = settings.className,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        clickEvent      = ('ontouchstart' in document.documentElement)\n          ? 'touchstart'\n          : 'click',\n\n        $module = $(this),\n        $dimmer,\n        $dimmable,\n\n        element   = this,\n        instance  = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        preinitialize: function() {\n          if( module.is.dimmer() ) {\n\n            $dimmable = $module.parent();\n            $dimmer   = $module;\n          }\n          else {\n            $dimmable = $module;\n            if( module.has.dimmer() ) {\n              if(settings.dimmerName) {\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\n              }\n              else {\n                $dimmer = $dimmable.find(selector.dimmer);\n              }\n            }\n            else {\n              $dimmer = module.create();\n            }\n            module.set.variation();\n          }\n        },\n\n        initialize: function() {\n          module.debug('Initializing dimmer', settings);\n\n          module.bind.events();\n          module.set.dimmable();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', $dimmer);\n          module.unbind.events();\n          module.remove.variation();\n          $dimmable\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            if(settings.on == 'hover') {\n              $dimmable\n                .on('mouseenter' + eventNamespace, module.show)\n                .on('mouseleave' + eventNamespace, module.hide)\n              ;\n            }\n            else if(settings.on == 'click') {\n              $dimmable\n                .on(clickEvent + eventNamespace, module.toggle)\n              ;\n            }\n            if( module.is.page() ) {\n              module.debug('Setting as a page dimmer', $dimmable);\n              module.set.pageDimmer();\n            }\n\n            if( module.is.closable() ) {\n              module.verbose('Adding dimmer close event', $dimmer);\n              $dimmable\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\n              ;\n            }\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $module\n              .removeData(moduleNamespace)\n            ;\n            $dimmable\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            module.verbose('Determining if event occured on dimmer', event);\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\n              module.hide();\n              event.stopImmediatePropagation();\n            }\n          }\n        },\n\n        addContent: function(element) {\n          var\n            $content = $(element)\n          ;\n          module.debug('Add content to dimmer', $content);\n          if($content.parent()[0] !== $dimmer[0]) {\n            $content.detach().appendTo($dimmer);\n          }\n        },\n\n        create: function() {\n          var\n            $element = $( settings.template.dimmer() )\n          ;\n          if(settings.dimmerName) {\n            module.debug('Creating named dimmer', settings.dimmerName);\n            $element.addClass(settings.dimmerName);\n          }\n          $element\n            .appendTo($dimmable)\n          ;\n          return $element;\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Showing dimmer', $dimmer, settings);\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\n            module.animate.show(callback);\n            settings.onShow.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is already shown or disabled');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.dimmed() || module.is.animating() ) {\n            module.debug('Hiding dimmer', $dimmer);\n            module.animate.hide(callback);\n            settings.onHide.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is not visible');\n          }\n        },\n\n        toggle: function() {\n          module.verbose('Toggling dimmer visibility', $dimmer);\n          if( !module.is.dimmed() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              if(settings.opacity !== 'auto') {\n                module.set.opacity();\n              }\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' in',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.set.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.set.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Showing dimmer animation with javascript');\n              module.set.dimmed();\n              if(settings.opacity == 'auto') {\n                settings.opacity = 0.8;\n              }\n              $dimmer\n                .stop()\n                .css({\n                  opacity : 0,\n                  width   : '100%',\n                  height  : '100%'\n                })\n                .fadeTo(module.get.duration(), settings.opacity, function() {\n                  $dimmer.removeAttr('style');\n                  module.set.active();\n                  callback();\n                })\n              ;\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              module.verbose('Hiding dimmer with css');\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' out',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.remove.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.remove.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Hiding dimmer with javascript');\n              module.remove.dimmed();\n              $dimmer\n                .stop()\n                .fadeOut(module.get.duration(), function() {\n                  module.remove.active();\n                  $dimmer.removeAttr('style');\n                  callback();\n                })\n              ;\n            }\n          }\n        },\n\n        get: {\n          dimmer: function() {\n            return $dimmer;\n          },\n          duration: function() {\n            if(typeof settings.duration == 'object') {\n              if( module.is.active() ) {\n                return settings.duration.hide;\n              }\n              else {\n                return settings.duration.show;\n              }\n            }\n            return settings.duration;\n          }\n        },\n\n        has: {\n          dimmer: function() {\n            if(settings.dimmerName) {\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\n            }\n            else {\n              return ( $module.find(selector.dimmer).length > 0 );\n            }\n          }\n        },\n\n        is: {\n          active: function() {\n            return $dimmer.hasClass(className.active);\n          },\n          animating: function() {\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\n          },\n          closable: function() {\n            if(settings.closable == 'auto') {\n              if(settings.on == 'hover') {\n                return false;\n              }\n              return true;\n            }\n            return settings.closable;\n          },\n          dimmer: function() {\n            return $module.hasClass(className.dimmer);\n          },\n          dimmable: function() {\n            return $module.hasClass(className.dimmable);\n          },\n          dimmed: function() {\n            return $dimmable.hasClass(className.dimmed);\n          },\n          disabled: function() {\n            return $dimmable.hasClass(className.disabled);\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          page: function () {\n            return $dimmable.is('body');\n          },\n          pageDimmer: function() {\n            return $dimmer.hasClass(className.pageDimmer);\n          }\n        },\n\n        can: {\n          show: function() {\n            return !$dimmer.hasClass(className.disabled);\n          }\n        },\n\n        set: {\n          opacity: function(opacity) {\n            var\n              color      = $dimmer.css('background-color'),\n              colorArray = color.split(','),\n              isRGB      = (colorArray && colorArray.length == 3),\n              isRGBA     = (colorArray && colorArray.length == 4)\n            ;\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\n            if(isRGB || isRGBA) {\n              colorArray[3] = opacity + ')';\n              color         = colorArray.join(',');\n            }\n            else {\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\n            }\n            module.debug('Setting opacity to', opacity);\n            $dimmer.css('background-color', color);\n          },\n          active: function() {\n            $dimmer.addClass(className.active);\n          },\n          dimmable: function() {\n            $dimmable.addClass(className.dimmable);\n          },\n          dimmed: function() {\n            $dimmable.addClass(className.dimmed);\n          },\n          pageDimmer: function() {\n            $dimmer.addClass(className.pageDimmer);\n          },\n          disabled: function() {\n            $dimmer.addClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.addClass(variation);\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $dimmer\n              .removeClass(className.active)\n            ;\n          },\n          dimmed: function() {\n            $dimmable.removeClass(className.dimmed);\n          },\n          disabled: function() {\n            $dimmer.removeClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.removeClass(variation);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      module.preinitialize();\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.dimmer.settings = {\n\n  name        : 'Dimmer',\n  namespace   : 'dimmer',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  // name to distinguish between multiple dimmers in context\n  dimmerName  : false,\n\n  // whether to add a variation type\n  variation   : false,\n\n  // whether to bind close events\n  closable    : 'auto',\n\n  // whether to use css animations\n  useCSS      : true,\n\n  // css animation to use\n  transition  : 'fade',\n\n  // event to bind to\n  on          : false,\n\n  // overriding opacity value\n  opacity     : 'auto',\n\n  // transition durations\n  duration    : {\n    show : 500,\n    hide : 500\n  },\n\n  onChange    : function(){},\n  onShow      : function(){},\n  onHide      : function(){},\n\n  error   : {\n    method   : 'The method you called is not defined.'\n  },\n\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    dimmable   : 'dimmable',\n    dimmed     : 'dimmed',\n    dimmer     : 'dimmer',\n    disabled   : 'disabled',\n    hide       : 'hide',\n    pageDimmer : 'page',\n    show       : 'show'\n  },\n\n  selector: {\n    dimmer   : '> .ui.dimmer',\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\n  },\n\n  template: {\n    dimmer: function() {\n     return $('<div />').attr('class', 'ui dimmer');\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Dropdown\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dropdown = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = ('ontouchstart' in document.documentElement),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function(elementIndex) {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\n          : $.extend({}, $.fn.dropdown.settings),\n\n        className       = settings.className,\n        message         = settings.message,\n        fields          = settings.fields,\n        keys            = settings.keys,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        selector        = settings.selector,\n        error           = settings.error,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $text           = $module.find(selector.text),\n        $search         = $module.find(selector.search),\n        $sizer          = $module.find(selector.sizer),\n        $input          = $module.find(selector.input),\n        $icon           = $module.find(selector.icon),\n\n        $combo = ($module.prev().find(selector.text).length > 0)\n          ? $module.prev().find(selector.text)\n          : $module.prev(),\n\n        $menu           = $module.children(selector.menu),\n        $item           = $menu.find(selector.item),\n\n        activated       = false,\n        itemActivated   = false,\n        internalChange  = false,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        initialLoad,\n        pageLostFocus,\n        willRefocus,\n        elementNamespace,\n        id,\n        selectObserver,\n        menuObserver,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing dropdown', settings);\n\n          if( module.is.alreadySetup() ) {\n            module.setup.reference();\n          }\n          else {\n            module.setup.layout();\n            module.refreshData();\n\n            module.save.defaults();\n            module.restore.selected();\n\n            module.create.id();\n            module.bind.events();\n\n            module.observeChanges();\n            module.instantiate();\n          }\n\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of dropdown', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous dropdown', $module);\n          module.remove.tabbable();\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          $menu\n            .off(eventNamespace)\n          ;\n          $document\n            .off(elementNamespace)\n          ;\n          module.disconnect.menuObserver();\n          module.disconnect.selectObserver();\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            selectObserver = new MutationObserver(module.event.select.mutation);\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\n            module.observe.select();\n            module.observe.menu();\n          }\n        },\n\n        disconnect: {\n          menuObserver: function() {\n            if(menuObserver) {\n              menuObserver.disconnect();\n            }\n          },\n          selectObserver: function() {\n            if(selectObserver) {\n              selectObserver.disconnect();\n            }\n          }\n        },\n        observe: {\n          select: function() {\n            if(module.has.input()) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          menu: function() {\n            if(module.has.menu()) {\n              menuObserver.observe($menu[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          }\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          },\n          userChoice: function(values) {\n            var\n              $userChoices,\n              $userChoice,\n              isUserValue,\n              html\n            ;\n            values = values || module.get.userValues();\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            $.each(values, function(index, value) {\n              if(module.get.item(value) === false) {\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $userChoice  = $('<div />')\n                  .html(html)\n                  .attr('data-' + metadata.value, value)\n                  .attr('data-' + metadata.text, value)\n                  .addClass(className.addition)\n                  .addClass(className.item)\n                ;\n                if(settings.hideAdditions) {\n                  $userChoice.addClass(className.hidden);\n                }\n                $userChoices = ($userChoices === undefined)\n                  ? $userChoice\n                  : $userChoices.add($userChoice)\n                ;\n                module.verbose('Creating user choices for value', value, $userChoice);\n              }\n            });\n            return $userChoices;\n          },\n          userLabels: function(value) {\n            var\n              userValues = module.get.userValues()\n            ;\n            if(userValues) {\n              module.debug('Adding user labels', userValues);\n              $.each(userValues, function(index, value) {\n                module.verbose('Adding custom user value');\n                module.add.label(value, value);\n              });\n            }\n          },\n          menu: function() {\n            $menu = $('<div />')\n              .addClass(className.menu)\n              .appendTo($module)\n            ;\n          },\n          sizer: function() {\n            $sizer = $('<span />')\n              .addClass(className.sizer)\n              .insertAfter($search)\n            ;\n          }\n        },\n\n        search: function(query) {\n          query = (query !== undefined)\n            ? query\n            : module.get.query()\n          ;\n          module.verbose('Searching for query', query);\n          if(module.has.minCharacters(query)) {\n            module.filter(query);\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        select: {\n          firstUnfiltered: function() {\n            module.verbose('Selecting first non-filtered element');\n            module.remove.selectedItem();\n            $item\n              .not(selector.unselectable)\n              .not(selector.addition + selector.hidden)\n                .eq(0)\n                .addClass(className.selected)\n            ;\n          },\n          nextAvailable: function($selected) {\n            $selected = $selected.eq(0);\n            var\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\n              hasNext        = ($nextAvailable.length > 0)\n            ;\n            if(hasNext) {\n              module.verbose('Moving selection to', $nextAvailable);\n              $nextAvailable.addClass(className.selected);\n            }\n            else {\n              module.verbose('Moving selection to', $prevAvailable);\n              $prevAvailable.addClass(className.selected);\n            }\n          }\n        },\n\n        setup: {\n          api: function() {\n            var\n              apiSettings = {\n                debug   : settings.debug,\n                urlData : {\n                  value : module.get.value(),\n                  query : module.get.query()\n                },\n                on    : false\n              }\n            ;\n            module.verbose('First request, initializing API');\n            $module\n              .api(apiSettings)\n            ;\n          },\n          layout: function() {\n            if( $module.is('select') ) {\n              module.setup.select();\n              module.setup.returnedObject();\n            }\n            if( !module.has.menu() ) {\n              module.create.menu();\n            }\n            if( module.is.search() && !module.has.search() ) {\n              module.verbose('Adding search input');\n              $search = $('<input />')\n                .addClass(className.search)\n                .prop('autocomplete', 'off')\n                .insertBefore($text)\n              ;\n            }\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\n              module.create.sizer();\n            }\n            if(settings.allowTab) {\n              module.set.tabbable();\n            }\n          },\n          select: function() {\n            var\n              selectValues  = module.get.selectValues()\n            ;\n            module.debug('Dropdown initialized on a select', selectValues);\n            if( $module.is('select') ) {\n              $input = $module;\n            }\n            // see if select is placed correctly already\n            if($input.parent(selector.dropdown).length > 0) {\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\n              $module = $input.closest(selector.dropdown);\n              if( !module.has.menu() ) {\n                module.create.menu();\n              }\n              $menu = $module.children(selector.menu);\n              module.setup.menu(selectValues);\n            }\n            else {\n              module.debug('Creating entire dropdown from select');\n              $module = $('<div />')\n                .attr('class', $input.attr('class') )\n                .addClass(className.selection)\n                .addClass(className.dropdown)\n                .html( templates.dropdown(selectValues) )\n                .insertBefore($input)\n              ;\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\n                module.error(error.missingMultiple);\n                $input.prop('multiple', true);\n              }\n              if($input.is('[multiple]')) {\n                module.set.multiple();\n              }\n              if ($input.prop('disabled')) {\n                module.debug('Disabling dropdown');\n                $module.addClass(className.disabled);\n              }\n              $input\n                .removeAttr('class')\n                .detach()\n                .prependTo($module)\n              ;\n            }\n            module.refresh();\n          },\n          menu: function(values) {\n            $menu.html( templates.menu(values, fields));\n            $item = $menu.find(selector.item);\n          },\n          reference: function() {\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\n            // replace module reference\n            $module = $module.parent(selector.dropdown);\n            module.refresh();\n            module.setup.returnedObject();\n            // invoke method in context of current instance\n            if(methodInvoked) {\n              instance = module;\n              module.invoke(query);\n            }\n          },\n          returnedObject: function() {\n            var\n              $firstModules = $allModules.slice(0, elementIndex),\n              $lastModules = $allModules.slice(elementIndex + 1)\n            ;\n            // adjust all modules to use correct reference\n            $allModules = $firstModules.add($module).add($lastModules);\n          }\n        },\n\n        refresh: function() {\n          module.refreshSelectors();\n          module.refreshData();\n        },\n\n        refreshItems: function() {\n          $item = $menu.find(selector.item);\n        },\n\n        refreshSelectors: function() {\n          module.verbose('Refreshing selector cache');\n          $text   = $module.find(selector.text);\n          $search = $module.find(selector.search);\n          $input  = $module.find(selector.input);\n          $icon   = $module.find(selector.icon);\n          $combo  = ($module.prev().find(selector.text).length > 0)\n            ? $module.prev().find(selector.text)\n            : $module.prev()\n          ;\n          $menu    = $module.children(selector.menu);\n          $item    = $menu.find(selector.item);\n        },\n\n        refreshData: function() {\n          module.verbose('Refreshing cached metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n        },\n\n        clearData: function() {\n          module.verbose('Clearing metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n          $module\n            .removeData(metadata.defaultText)\n            .removeData(metadata.defaultValue)\n            .removeData(metadata.placeholderText)\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Toggling menu visibility');\n          if( !module.is.active() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(!module.can.show() && module.is.remote()) {\n            module.debug('No API results retrieved, searching before show');\n            module.queryRemote(module.get.query(), module.show);\n          }\n          if( module.can.show() && !module.is.active() ) {\n            module.debug('Showing dropdown');\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\n              module.remove.message();\n            }\n            if(module.is.allFiltered()) {\n              return true;\n            }\n            if(settings.onShow.call(element) !== false) {\n              module.animate.show(function() {\n                if( module.can.click() ) {\n                  module.bind.intent();\n                }\n                if(module.has.menuSearch()) {\n                  module.focusSearch();\n                }\n                module.set.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.active() ) {\n            module.debug('Hiding dropdown');\n            if(settings.onHide.call(element) !== false) {\n              module.animate.hide(function() {\n                module.remove.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hideOthers: function() {\n          module.verbose('Finding other dropdowns to hide');\n          $allModules\n            .not($module)\n              .has(selector.menu + '.' + className.visible)\n                .dropdown('hide')\n          ;\n        },\n\n        hideMenu: function() {\n          module.verbose('Hiding menu  instantaneously');\n          module.remove.active();\n          module.remove.visible();\n          $menu.transition('hide');\n        },\n\n        hideSubMenus: function() {\n          var\n            $subMenus = $menu.children(selector.item).find(selector.menu)\n          ;\n          module.verbose('Hiding sub menus', $subMenus);\n          $subMenus.transition('hide');\n        },\n\n        bind: {\n          events: function() {\n            if(hasTouch) {\n              module.bind.touchEvents();\n            }\n            module.bind.keyboardEvents();\n            module.bind.inputEvents();\n            module.bind.mouseEvents();\n          },\n          touchEvents: function() {\n            module.debug('Touch device detected binding additional touch events');\n            if( module.is.searchSelection() ) {\n              // do nothing special yet\n            }\n            else if( module.is.single() ) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\n              ;\n            }\n            $menu\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\n            ;\n          },\n          keyboardEvents: function() {\n            module.verbose('Binding keyboard events');\n            $module\n              .on('keydown' + eventNamespace, module.event.keydown)\n            ;\n            if( module.has.search() ) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\n              ;\n            }\n            if( module.is.multiple() ) {\n              $document\n                .on('keydown' + elementNamespace, module.event.document.keydown)\n              ;\n            }\n          },\n          inputEvents: function() {\n            module.verbose('Binding input change events');\n            $module\n              .on('change' + eventNamespace, selector.input, module.event.change)\n            ;\n          },\n          mouseEvents: function() {\n            module.verbose('Binding mouse events');\n            if(module.is.multiple()) {\n              $module\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\n              ;\n            }\n            if( module.is.searchSelection() ) {\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\n              ;\n              if(module.is.multiple()) {\n                $module\n                  .on('click' + eventNamespace, module.event.click)\n                ;\n              }\n            }\n            else {\n              if(settings.on == 'click') {\n                $module\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\n                  .on('click' + eventNamespace, module.event.test.toggle)\n                ;\n              }\n              else if(settings.on == 'hover') {\n                $module\n                  .on('mouseenter' + eventNamespace, module.delay.show)\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\n                ;\n              }\n              else {\n                $module\n                  .on(settings.on + eventNamespace, module.toggle)\n                ;\n              }\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('focus'     + eventNamespace, module.event.focus)\n              ;\n              if(module.has.menuSearch() ) {\n                $module\n                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\n                ;\n              }\n              else {\n                $module\n                  .on('blur' + eventNamespace, module.event.blur)\n                ;\n              }\n            }\n            $menu\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\n            ;\n          },\n          intent: function() {\n            module.verbose('Binding hide intent event to document');\n            if(hasTouch) {\n              $document\n                .on('touchstart' + elementNamespace, module.event.test.touch)\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\n              ;\n            }\n            $document\n              .on('click' + elementNamespace, module.event.test.hide)\n            ;\n          }\n        },\n\n        unbind: {\n          intent: function() {\n            module.verbose('Removing hide intent event from document');\n            if(hasTouch) {\n              $document\n                .off('touchstart' + elementNamespace)\n                .off('touchmove' + elementNamespace)\n              ;\n            }\n            $document\n              .off('click' + elementNamespace)\n            ;\n          }\n        },\n\n        filter: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            afterFiltered = function() {\n              if(module.is.multiple()) {\n                module.filterActive();\n              }\n              if(query || (!query && module.get.activeItem().length == 0)) {\n                module.select.firstUnfiltered();\n              }\n              if( module.has.allResultsFiltered() ) {\n                if( settings.onNoResults.call(element, searchTerm) ) {\n                  if(settings.allowAdditions) {\n                    if(settings.hideAdditions) {\n                      module.verbose('User addition with no menu, setting empty style');\n                      module.set.empty();\n                      module.hideMenu();\n                    }\n                  }\n                  else {\n                    module.verbose('All items filtered, showing message', searchTerm);\n                    module.add.message(message.noResults);\n                  }\n                }\n                else {\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\n                  module.hideMenu();\n                }\n              }\n              else {\n                module.remove.empty();\n                module.remove.message();\n              }\n              if(settings.allowAdditions) {\n                module.add.userSuggestion(query);\n              }\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\n                module.show();\n              }\n            }\n          ;\n          if(settings.useLabels && module.has.maxSelections()) {\n            return;\n          }\n          if(settings.apiSettings) {\n            if( module.can.useAPI() ) {\n              module.queryRemote(searchTerm, function() {\n                if(settings.filterRemoteData) {\n                  module.filterItems(searchTerm);\n                }\n                afterFiltered();\n              });\n            }\n            else {\n              module.error(error.noAPI);\n            }\n          }\n          else {\n            module.filterItems(searchTerm);\n            afterFiltered();\n          }\n        },\n\n        queryRemote: function(query, callback) {\n          var\n            apiSettings = {\n              errorDuration : false,\n              cache         : 'local',\n              throttle      : settings.throttle,\n              urlData       : {\n                query: query\n              },\n              onError: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onFailure: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onSuccess : function(response) {\n                module.remove.message();\n                module.setup.menu({\n                  values: response[fields.remoteValues]\n                });\n                callback();\n              }\n            }\n          ;\n          if( !$module.api('get request') ) {\n            module.setup.api();\n          }\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\n          $module\n            .api('setting', apiSettings)\n            .api('query')\n          ;\n        },\n\n        filterItems: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            results          =  null,\n            escapedTerm      = module.escape.string(searchTerm),\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\n          ;\n          // avoid loop if we're matching nothing\n          if( module.has.query() ) {\n            results = [];\n\n            module.verbose('Searching for matching values', searchTerm);\n            $item\n              .each(function(){\n                var\n                  $choice = $(this),\n                  text,\n                  value\n                ;\n                if(settings.match == 'both' || settings.match == 'text') {\n                  text = String(module.get.choiceText($choice, false));\n                  if(text.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n                if(settings.match == 'both' || settings.match == 'value') {\n                  value = String(module.get.choiceValue($choice, text));\n                  if(value.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n              })\n            ;\n          }\n          module.debug('Showing only matched items', searchTerm);\n          module.remove.filteredItem();\n          if(results) {\n            $item\n              .not(results)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n        exactSearch: function (query, term) {\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(term.indexOf(query) > -1) {\n             return true;\n          }\n          return false;\n        },\n        filterActive: function() {\n          if(settings.useLabels) {\n            $item.filter('.' + className.active)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        focusSearch: function(skipHandler) {\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\n            if(skipHandler) {\n              $module.off('focus' + eventNamespace, selector.search);\n              $search.focus();\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\n            }\n            else {\n              $search.focus();\n            }\n          }\n        },\n\n        forceSelection: function() {\n          var\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\n            $selectedItem      = ($currentlySelected.length > 0)\n              ? $currentlySelected\n              : $activeItem,\n            hasSelected = ($selectedItem.length > 0)\n          ;\n          if(hasSelected && !module.is.multiple()) {\n            module.debug('Forcing partial selection to selected item', $selectedItem);\n            module.event.item.click.call($selectedItem, {}, true);\n            return;\n          }\n          else {\n            if(settings.allowAdditions) {\n              module.set.selected(module.get.query());\n              module.remove.searchTerm();\n            }\n            else {\n              module.remove.searchTerm();\n            }\n          }\n        },\n\n        event: {\n          change: function() {\n            if(!internalChange) {\n              module.debug('Input changed, updating selection');\n              module.set.selected();\n            }\n          },\n          focus: function() {\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\n              module.show();\n            }\n          },\n          blur: function(event) {\n            pageLostFocus = (document.activeElement === this);\n            if(!activated && !pageLostFocus) {\n              module.remove.activeLabel();\n              module.hide();\n            }\n          },\n          mousedown: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = true;\n            }\n            else {\n              // prevents focus callback from occurring on mousedown\n              activated = true;\n            }\n          },\n          mouseup: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = false;\n            }\n            else {\n              activated = false;\n            }\n          },\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            // focus search\n            if($target.is($module)) {\n              if(!module.is.focusedOnSearch()) {\n                module.focusSearch();\n              }\n              else {\n                module.show();\n              }\n            }\n          },\n          search: {\n            focus: function() {\n              activated = true;\n              if(module.is.multiple()) {\n                module.remove.activeLabel();\n              }\n              if(settings.showOnFocus) {\n                module.search();\n              }\n            },\n            blur: function(event) {\n              pageLostFocus = (document.activeElement === this);\n              if(module.is.searchSelection() && !willRefocus) {\n                if(!itemActivated && !pageLostFocus) {\n                  if(settings.forceSelection) {\n                    module.forceSelection();\n                  }\n                  module.hide();\n                }\n              }\n              willRefocus = false;\n            }\n          },\n          icon: {\n            click: function(event) {\n              module.toggle();\n            }\n          },\n          text: {\n            focus: function(event) {\n              activated = true;\n              module.focusSearch();\n            }\n          },\n          input: function(event) {\n            if(module.is.multiple() || module.is.searchSelection()) {\n              module.set.filtered();\n            }\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.search, settings.delay.search);\n          },\n          label: {\n            click: function(event) {\n              var\n                $label        = $(this),\n                $labels       = $module.find(selector.label),\n                $activeLabels = $labels.filter('.' + className.active),\n                $nextActive   = $label.nextAll('.' + className.active),\n                $prevActive   = $label.prevAll('.' + className.active),\n                $range = ($nextActive.length > 0)\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\n              ;\n              if(event.shiftKey) {\n                $activeLabels.removeClass(className.active);\n                $range.addClass(className.active);\n              }\n              else if(event.ctrlKey) {\n                $label.toggleClass(className.active);\n              }\n              else {\n                $activeLabels.removeClass(className.active);\n                $label.addClass(className.active);\n              }\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\n            }\n          },\n          remove: {\n            click: function() {\n              var\n                $label = $(this).parent()\n              ;\n              if( $label.hasClass(className.active) ) {\n                // remove all selected labels\n                module.remove.activeLabels();\n              }\n              else {\n                // remove this label only\n                module.remove.activeLabels( $label );\n              }\n            }\n          },\n          test: {\n            toggle: function(event) {\n              var\n                toggleBehavior = (module.is.multiple())\n                  ? module.show\n                  : module.toggle\n              ;\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\n                return;\n              }\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\n                event.preventDefault();\n              }\n            },\n            touch: function(event) {\n              module.determine.eventOnElement(event, function() {\n                if(event.type == 'touchstart') {\n                  module.timer = setTimeout(function() {\n                    module.hide();\n                  }, settings.delay.touch);\n                }\n                else if(event.type == 'touchmove') {\n                  clearTimeout(module.timer);\n                }\n              });\n              event.stopPropagation();\n            },\n            hide: function(event) {\n              module.determine.eventInModule(event, module.hide);\n            }\n          },\n          select: {\n            mutation: function(mutations) {\n              module.debug('<select> modified, recreating menu');\n              module.setup.select();\n            }\n          },\n          menu: {\n            mutation: function(mutations) {\n              var\n                mutation   = mutations[0],\n                $addedNode = mutation.addedNodes\n                  ? $(mutation.addedNodes[0])\n                  : $(false),\n                $removedNode = mutation.removedNodes\n                  ? $(mutation.removedNodes[0])\n                  : $(false),\n                $changedNodes  = $addedNode.add($removedNode),\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\n              ;\n              if(isUserAddition || isMessage) {\n                module.debug('Updating item selector cache');\n                module.refreshItems();\n              }\n              else {\n                module.debug('Menu modified, updating selector cache');\n                module.refresh();\n              }\n            },\n            mousedown: function() {\n              itemActivated = true;\n            },\n            mouseup: function() {\n              itemActivated = false;\n            }\n          },\n          item: {\n            mouseenter: function(event) {\n              var\n                $target        = $(event.target),\n                $item          = $(this),\n                $subMenu       = $item.children(selector.menu),\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              if( !isBubbledEvent && hasSubMenu ) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Showing sub-menu', $subMenu);\n                  $.each($otherMenus, function() {\n                    module.animate.hide(false, $(this));\n                  });\n                  module.animate.show(false, $subMenu);\n                }, settings.delay.show);\n                event.preventDefault();\n              }\n            },\n            mouseleave: function(event) {\n              var\n                $subMenu = $(this).children(selector.menu)\n              ;\n              if($subMenu.length > 0) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Hiding sub-menu', $subMenu);\n                  module.animate.hide(false, $subMenu);\n                }, settings.delay.hide);\n              }\n            },\n            click: function (event, skipRefocus) {\n              var\n                $choice        = $(this),\n                $target        = (event)\n                  ? $(event.target)\n                  : $(''),\n                $subMenu       = $choice.find(selector.menu),\n                text           = module.get.choiceText($choice),\n                value          = module.get.choiceValue($choice, text),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\n              if(module.has.menuSearch()) {\n                $(document.activeElement).blur();\n              }\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\n                if(module.is.searchSelection()) {\n                  if(settings.allowAdditions) {\n                    module.remove.userAddition();\n                  }\n                  module.remove.searchTerm();\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\n                    module.focusSearch(true);\n                  }\n                }\n                if(!settings.useLabels) {\n                  module.remove.filteredItem();\n                  module.set.scrollPosition($choice);\n                }\n                module.determine.selectAction.call(this, text, value);\n              }\n            }\n          },\n\n          document: {\n            // label selection should occur even when element has no focus\n            keydown: function(event) {\n              var\n                pressedKey    = event.which,\n                isShortcutKey = module.is.inObject(pressedKey, keys)\n              ;\n              if(isShortcutKey) {\n                var\n                  $label            = $module.find(selector.label),\n                  $activeLabel      = $label.filter('.' + className.active),\n                  activeValue       = $activeLabel.data(metadata.value),\n                  labelIndex        = $label.index($activeLabel),\n                  labelCount        = $label.length,\n                  hasActiveLabel    = ($activeLabel.length > 0),\n                  hasMultipleActive = ($activeLabel.length > 1),\n                  isFirstLabel      = (labelIndex === 0),\n                  isLastLabel       = (labelIndex + 1 == labelCount),\n                  isSearch          = module.is.searchSelection(),\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\n                  isFocused         = module.is.focused(),\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\n                  $nextLabel\n                ;\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\n                  return;\n                }\n\n                if(pressedKey == keys.leftArrow) {\n                  // activate previous label\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\n                    module.verbose('Selecting previous label');\n                    $label.last().addClass(className.active);\n                  }\n                  else if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting previous label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding previous label to selection');\n                    }\n                    if(isFirstLabel && !hasMultipleActive) {\n                      $activeLabel.addClass(className.active);\n                    }\n                    else {\n                      $activeLabel.prev(selector.siblingLabel)\n                        .addClass(className.active)\n                        .end()\n                      ;\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.rightArrow) {\n                  // activate first label\n                  if(isFocused && !hasActiveLabel) {\n                    $label.first().addClass(className.active);\n                  }\n                  // activate next label\n                  if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting next label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding next label to selection');\n                    }\n                    if(isLastLabel) {\n                      if(isSearch) {\n                        if(!isFocusedOnSearch) {\n                          module.focusSearch();\n                        }\n                        else {\n                          $label.removeClass(className.active);\n                        }\n                      }\n                      else if(hasMultipleActive) {\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                      }\n                      else {\n                        $activeLabel.addClass(className.active);\n                      }\n                    }\n                    else {\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\n                  if(hasActiveLabel) {\n                    module.verbose('Removing active labels');\n                    if(isLastLabel) {\n                      if(isSearch && !isFocusedOnSearch) {\n                        module.focusSearch();\n                      }\n                    }\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                    event.preventDefault();\n                  }\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\n                    module.verbose('Removing last label on input backspace');\n                    $activeLabel = $label.last().addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                  }\n                }\n                else {\n                  $activeLabel.removeClass(className.active);\n                }\n              }\n            }\n          },\n\n          keydown: function(event) {\n            var\n              pressedKey    = event.which,\n              isShortcutKey = module.is.inObject(pressedKey, keys)\n            ;\n            if(isShortcutKey) {\n              var\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\n                $activeItem        = $menu.children('.' + className.active).eq(0),\n                $selectedItem      = ($currentlySelected.length > 0)\n                  ? $currentlySelected\n                  : $activeItem,\n                $visibleItems = ($selectedItem.length > 0)\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\n                  : $menu.children(':not(.' + className.filtered +')'),\n                $subMenu              = $selectedItem.children(selector.menu),\n                $parentMenu           = $selectedItem.closest(selector.menu),\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\n                hasSubMenu            = ($subMenu.length> 0),\n                hasSelectedItem       = ($selectedItem.length > 0),\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\n                $nextItem,\n                isSubMenuItem,\n                newIndex\n              ;\n              // allow selection with menu closed\n              if(isAdditionWithoutMenu) {\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                module.event.item.click.call($selectedItem, event);\n                if(module.is.searchSelection()) {\n                  module.remove.searchTerm();\n                }\n              }\n\n              // visible menu keyboard shortcuts\n              if( module.is.visible() ) {\n\n                // enter (select or open sub-menu)\n                if(pressedKey == keys.enter || delimiterPressed) {\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\n                    pressedKey = keys.rightArrow;\n                  }\n                  else if(selectedIsSelectable) {\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                    module.event.item.click.call($selectedItem, event);\n                    if(module.is.searchSelection()) {\n                      module.remove.searchTerm();\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // sub-menu actions\n                if(hasSelectedItem) {\n\n                  if(pressedKey == keys.leftArrow) {\n\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\n\n                    if(isSubMenuItem) {\n                      module.verbose('Left key pressed, closing sub-menu');\n                      module.animate.hide(false, $parentMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $parentMenu\n                        .closest(selector.item)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n\n                  // right arrow (show sub-menu)\n                  if(pressedKey == keys.rightArrow) {\n                    if(hasSubMenu) {\n                      module.verbose('Right key pressed, opening sub-menu');\n                      module.animate.show(false, $subMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $subMenu\n                        .find(selector.item).eq(0)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n                }\n\n                // up arrow (traverse menu up)\n                if(pressedKey == keys.upArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($visibleItems.index( $nextItem ) < 0) {\n                    module.verbose('Up key pressed but reached top of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Up key pressed, changing active item');\n                    $selectedItem\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // down arrow (traverse menu down)\n                if(pressedKey == keys.downArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($nextItem.length === 0) {\n                    module.verbose('Down key pressed but reached bottom of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Down key pressed, changing active item');\n                    $item\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // page down (show next page)\n                if(pressedKey == keys.pageUp) {\n                  module.scrollPage('up');\n                  event.preventDefault();\n                }\n                if(pressedKey == keys.pageDown) {\n                  module.scrollPage('down');\n                  event.preventDefault();\n                }\n\n                // escape (close menu)\n                if(pressedKey == keys.escape) {\n                  module.verbose('Escape key pressed, closing dropdown');\n                  module.hide();\n                }\n\n              }\n              else {\n                // delimiter key\n                if(delimiterPressed) {\n                  event.preventDefault();\n                }\n                // down arrow (open menu)\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\n                  module.verbose('Down key pressed, showing dropdown');\n                  module.show();\n                  event.preventDefault();\n                }\n              }\n            }\n            else {\n              if( !module.has.search() ) {\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\n              }\n            }\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n        determine: {\n          selectAction: function(text, value) {\n            module.verbose('Determining action', settings.action);\n            if( $.isFunction( module.action[settings.action] ) ) {\n              module.verbose('Triggering preset action', settings.action, text, value);\n              module.action[ settings.action ].call(element, text, value, this);\n            }\n            else if( $.isFunction(settings.action) ) {\n              module.verbose('Triggering user action', settings.action, text, value);\n              settings.action.call(element, text, value, this);\n            }\n            else {\n              module.error(error.action, settings.action);\n            }\n          },\n          eventInModule: function(event, callback) {\n            var\n              $target    = $(event.target),\n              inDocument = ($target.closest(document.documentElement).length > 0),\n              inModule   = ($target.closest($module).length > 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inDocument && !inModule) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown, canceling callback');\n              return false;\n            }\n          },\n          eventOnElement: function(event, callback) {\n            var\n              $target      = $(event.target),\n              $label       = $target.closest(selector.siblingLabel),\n              inVisibleDOM = document.body.contains(event.target),\n              notOnLabel   = ($module.find($label).length === 0),\n              notInMenu    = ($target.closest($menu).length === 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inVisibleDOM && notOnLabel && notInMenu) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown menu, canceling callback');\n              return false;\n            }\n          }\n        },\n\n        action: {\n\n          nothing: function() {},\n\n          activate: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.selected(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          select: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.value(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          combo: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value, $(element));\n            module.hideAndClear();\n          },\n\n          hide: function(text, value, element) {\n            module.set.value(value, text);\n            module.hideAndClear();\n          }\n\n        },\n\n        get: {\n          id: function() {\n            return id;\n          },\n          defaultText: function() {\n            return $module.data(metadata.defaultText);\n          },\n          defaultValue: function() {\n            return $module.data(metadata.defaultValue);\n          },\n          placeholderText: function() {\n            return $module.data(metadata.placeholderText) || '';\n          },\n          text: function() {\n            return $text.text();\n          },\n          query: function() {\n            return $.trim($search.val());\n          },\n          searchWidth: function(value) {\n            value = (value !== undefined)\n              ? value\n              : $search.val()\n            ;\n            $sizer.text(value);\n            // prevent rounding issues\n            return Math.ceil( $sizer.width() + 1);\n          },\n          selectionCount: function() {\n            var\n              values = module.get.values(),\n              count\n            ;\n            count = ( module.is.multiple() )\n              ? $.isArray(values)\n                ? values.length\n                : 0\n              : (module.get.value() !== '')\n                ? 1\n                : 0\n            ;\n            return count;\n          },\n          transition: function($subMenu) {\n            return (settings.transition == 'auto')\n              ? module.is.upward($subMenu)\n                ? 'slide up'\n                : 'slide down'\n              : settings.transition\n            ;\n          },\n          userValues: function() {\n            var\n              values = module.get.values()\n            ;\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            return $.grep(values, function(value) {\n              return (module.get.item(value) === false);\n            });\n          },\n          uniqueArray: function(array) {\n            return $.grep(array, function (value, index) {\n                return $.inArray(value, array) === index;\n            });\n          },\n          caretPosition: function() {\n            var\n              input = $search.get(0),\n              range,\n              rangeLength\n            ;\n            if('selectionStart' in input) {\n              return input.selectionStart;\n            }\n            else if (document.selection) {\n              input.focus();\n              range       = document.selection.createRange();\n              rangeLength = range.text.length;\n              range.moveStart('character', -input.value.length);\n              return range.text.length - rangeLength;\n            }\n          },\n          value: function() {\n            var\n              value = ($input.length > 0)\n                ? $input.val()\n                : $module.data(metadata.value),\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\n            ;\n            // prevents placeholder element from being selected when multiple\n            return (value === undefined || isEmptyMultiselect)\n              ? ''\n              : value\n            ;\n          },\n          values: function() {\n            var\n              value = module.get.value()\n            ;\n            if(value === '') {\n              return '';\n            }\n            return ( !module.has.selectInput() && module.is.multiple() )\n              ? (typeof value == 'string') // delimited string\n                ? value.split(settings.delimiter)\n                : ''\n              : value\n            ;\n          },\n          remoteValues: function() {\n            var\n              values = module.get.values(),\n              remoteValues = false\n            ;\n            if(values) {\n              if(typeof values == 'string') {\n                values = [values];\n              }\n              $.each(values, function(index, value) {\n                var\n                  name = module.read.remoteData(value)\n                ;\n                module.verbose('Restoring value from session data', name, value);\n                if(name) {\n                  if(!remoteValues) {\n                    remoteValues = {};\n                  }\n                  remoteValues[value] = name;\n                }\n              });\n            }\n            return remoteValues;\n          },\n          choiceText: function($choice, preserveHTML) {\n            preserveHTML = (preserveHTML !== undefined)\n              ? preserveHTML\n              : settings.preserveHTML\n            ;\n            if($choice) {\n              if($choice.find(selector.menu).length > 0) {\n                module.verbose('Retrieving text of element with sub-menu');\n                $choice = $choice.clone();\n                $choice.find(selector.menu).remove();\n                $choice.find(selector.menuIcon).remove();\n              }\n              return ($choice.data(metadata.text) !== undefined)\n                ? $choice.data(metadata.text)\n                : (preserveHTML)\n                  ? $.trim($choice.html())\n                  : $.trim($choice.text())\n              ;\n            }\n          },\n          choiceValue: function($choice, choiceText) {\n            choiceText = choiceText || module.get.choiceText($choice);\n            if(!$choice) {\n              return false;\n            }\n            return ($choice.data(metadata.value) !== undefined)\n              ? String( $choice.data(metadata.value) )\n              : (typeof choiceText === 'string')\n                ? $.trim(choiceText.toLowerCase())\n                : String(choiceText)\n            ;\n          },\n          inputEvent: function() {\n            var\n              input = $search[0]\n            ;\n            if(input) {\n              return (input.oninput !== undefined)\n                ? 'input'\n                : (input.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n              ;\n            }\n            return false;\n          },\n          selectValues: function() {\n            var\n              select = {}\n            ;\n            select.values = [];\n            $module\n              .find('option')\n                .each(function() {\n                  var\n                    $option  = $(this),\n                    name     = $option.html(),\n                    disabled = $option.attr('disabled'),\n                    value    = ( $option.attr('value') !== undefined )\n                      ? $option.attr('value')\n                      : name\n                  ;\n                  if(settings.placeholder === 'auto' && value === '') {\n                    select.placeholder = name;\n                  }\n                  else {\n                    select.values.push({\n                      name     : name,\n                      value    : value,\n                      disabled : disabled\n                    });\n                  }\n                })\n            ;\n            if(settings.placeholder && settings.placeholder !== 'auto') {\n              module.debug('Setting placeholder value to', settings.placeholder);\n              select.placeholder = settings.placeholder;\n            }\n            if(settings.sortSelect) {\n              select.values.sort(function(a, b) {\n                return (a.name > b.name)\n                  ? 1\n                  : -1\n                ;\n              });\n              module.debug('Retrieved and sorted values from select', select);\n            }\n            else {\n              module.debug('Retrieved values from select', select);\n            }\n            return select;\n          },\n          activeItem: function() {\n            return $item.filter('.'  + className.active);\n          },\n          selectedItem: function() {\n            var\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\n            ;\n            return ($selectedItem.length > 0)\n              ? $selectedItem\n              : $item.eq(0)\n            ;\n          },\n          itemWithAdditions: function(value) {\n            var\n              $items       = module.get.item(value),\n              $userItems   = module.create.userChoice(value),\n              hasUserItems = ($userItems && $userItems.length > 0)\n            ;\n            if(hasUserItems) {\n              $items = ($items.length > 0)\n                ? $items.add($userItems)\n                : $userItems\n              ;\n            }\n            return $items;\n          },\n          item: function(value, strict) {\n            var\n              $selectedItem = false,\n              shouldSearch,\n              isMultiple\n            ;\n            value = (value !== undefined)\n              ? value\n              : ( module.get.values() !== undefined)\n                ? module.get.values()\n                : module.get.text()\n            ;\n            shouldSearch = (isMultiple)\n              ? (value.length > 0)\n              : (value !== undefined && value !== null)\n            ;\n            isMultiple = (module.is.multiple() && $.isArray(value));\n            strict     = (value === '' || value === 0)\n              ? true\n              : strict || false\n            ;\n            if(shouldSearch) {\n              $item\n                .each(function() {\n                  var\n                    $choice       = $(this),\n                    optionText    = module.get.choiceText($choice),\n                    optionValue   = module.get.choiceValue($choice, optionText)\n                  ;\n                  // safe early exit\n                  if(optionValue === null || optionValue === undefined) {\n                    return;\n                  }\n                  if(isMultiple) {\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\n                      $selectedItem = ($selectedItem)\n                        ? $selectedItem.add($choice)\n                        : $choice\n                      ;\n                    }\n                  }\n                  else if(strict) {\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\n                    if( optionValue === value || optionText === value) {\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                  else {\n                    if( String(optionValue) == String(value) || optionText == value) {\n                      module.verbose('Found select item by value', optionValue, value);\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                })\n              ;\n            }\n            return $selectedItem;\n          }\n        },\n\n        check: {\n          maxSelections: function(selectionCount) {\n            if(settings.maxSelections) {\n              selectionCount = (selectionCount !== undefined)\n                ? selectionCount\n                : module.get.selectionCount()\n              ;\n              if(selectionCount >= settings.maxSelections) {\n                module.debug('Maximum selection count reached');\n                if(settings.useLabels) {\n                  $item.addClass(className.filtered);\n                  module.add.message(message.maxSelections);\n                }\n                return true;\n              }\n              else {\n                module.verbose('No longer at maximum selection count');\n                module.remove.message();\n                module.remove.filteredItem();\n                if(module.is.searchSelection()) {\n                  module.filterItems();\n                }\n                return false;\n              }\n            }\n            return true;\n          }\n        },\n\n        restore: {\n          defaults: function() {\n            module.clear();\n            module.restore.defaultText();\n            module.restore.defaultValue();\n          },\n          defaultText: function() {\n            var\n              defaultText     = module.get.defaultText(),\n              placeholderText = module.get.placeholderText\n            ;\n            if(defaultText === placeholderText) {\n              module.debug('Restoring default placeholder text', defaultText);\n              module.set.placeholderText(defaultText);\n            }\n            else {\n              module.debug('Restoring default text', defaultText);\n              module.set.text(defaultText);\n            }\n          },\n          placeholderText: function() {\n            module.set.placeholderText();\n          },\n          defaultValue: function() {\n            var\n              defaultValue = module.get.defaultValue()\n            ;\n            if(defaultValue !== undefined) {\n              module.debug('Restoring default value', defaultValue);\n              if(defaultValue !== '') {\n                module.set.value(defaultValue);\n                module.set.selected();\n              }\n              else {\n                module.remove.activeItem();\n                module.remove.selectedItem();\n              }\n            }\n          },\n          labels: function() {\n            if(settings.allowAdditions) {\n              if(!settings.useLabels) {\n                module.error(error.labels);\n                settings.useLabels = true;\n              }\n              module.debug('Restoring selected values');\n              module.create.userLabels();\n            }\n            module.check.maxSelections();\n          },\n          selected: function() {\n            module.restore.values();\n            if(module.is.multiple()) {\n              module.debug('Restoring previously selected values and labels');\n              module.restore.labels();\n            }\n            else {\n              module.debug('Restoring previously selected values');\n            }\n          },\n          values: function() {\n            // prevents callbacks from occurring on initial load\n            module.set.initialLoad();\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\n              module.restore.remoteValues();\n            }\n            else {\n              module.set.selected();\n            }\n            module.remove.initialLoad();\n          },\n          remoteValues: function() {\n            var\n              values = module.get.remoteValues()\n            ;\n            module.debug('Recreating selected from session data', values);\n            if(values) {\n              if( module.is.single() ) {\n                $.each(values, function(value, name) {\n                  module.set.text(name);\n                });\n              }\n              else {\n                $.each(values, function(value, name) {\n                  module.add.label(value, name);\n                });\n              }\n            }\n          }\n        },\n\n        read: {\n          remoteData: function(value) {\n            var\n              name\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            name = sessionStorage.getItem(value);\n            return (name !== undefined)\n              ? name\n              : false\n            ;\n          }\n        },\n\n        save: {\n          defaults: function() {\n            module.save.defaultText();\n            module.save.placeholderText();\n            module.save.defaultValue();\n          },\n          defaultValue: function() {\n            var\n              value = module.get.value()\n            ;\n            module.verbose('Saving default value as', value);\n            $module.data(metadata.defaultValue, value);\n          },\n          defaultText: function() {\n            var\n              text = module.get.text()\n            ;\n            module.verbose('Saving default text as', text);\n            $module.data(metadata.defaultText, text);\n          },\n          placeholderText: function() {\n            var\n              text\n            ;\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\n              text = module.get.text();\n              module.verbose('Saving placeholder text as', text);\n              $module.data(metadata.placeholderText, text);\n            }\n          },\n          remoteData: function(name, value) {\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            module.verbose('Saving remote data to session storage', value, name);\n            sessionStorage.setItem(value, name);\n          }\n        },\n\n        clear: function() {\n          if(module.is.multiple() && settings.useLabels) {\n            module.remove.labels();\n          }\n          else {\n            module.remove.activeItem();\n            module.remove.selectedItem();\n          }\n          module.set.placeholderText();\n          module.clearValue();\n        },\n\n        clearValue: function() {\n          module.set.value('');\n        },\n\n        scrollPage: function(direction, $selectedItem) {\n          var\n            $currentItem  = $selectedItem || module.get.selectedItem(),\n            $menu         = $currentItem.closest(selector.menu),\n            menuHeight    = $menu.outerHeight(),\n            currentScroll = $menu.scrollTop(),\n            itemHeight    = $item.eq(0).outerHeight(),\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\n            maxScroll     = $menu.prop('scrollHeight'),\n            newScroll     = (direction == 'up')\n              ? currentScroll - (itemHeight * itemsPerPage)\n              : currentScroll + (itemHeight * itemsPerPage),\n            $selectableItem = $item.not(selector.unselectable),\n            isWithinRange,\n            $nextSelectedItem,\n            elementIndex\n          ;\n          elementIndex      = (direction == 'up')\n            ? $selectableItem.index($currentItem) - itemsPerPage\n            : $selectableItem.index($currentItem) + itemsPerPage\n          ;\n          isWithinRange = (direction == 'up')\n            ? (elementIndex >= 0)\n            : (elementIndex < $selectableItem.length)\n          ;\n          $nextSelectedItem = (isWithinRange)\n            ? $selectableItem.eq(elementIndex)\n            : (direction == 'up')\n              ? $selectableItem.first()\n              : $selectableItem.last()\n          ;\n          if($nextSelectedItem.length > 0) {\n            module.debug('Scrolling page', direction, $nextSelectedItem);\n            $currentItem\n              .removeClass(className.selected)\n            ;\n            $nextSelectedItem\n              .addClass(className.selected)\n            ;\n            if(settings.selectOnKeydown && module.is.single()) {\n              module.set.selectedItem($nextSelectedItem);\n            }\n            $menu\n              .scrollTop(newScroll)\n            ;\n          }\n        },\n\n        set: {\n          filtered: function() {\n            var\n              isMultiple       = module.is.multiple(),\n              isSearch         = module.is.searchSelection(),\n              isSearchMultiple = (isMultiple && isSearch),\n              searchValue      = (isSearch)\n                ? module.get.query()\n                : '',\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\n              searchWidth      = module.get.searchWidth(),\n              valueIsSet       = searchValue !== ''\n            ;\n            if(isMultiple && hasSearchValue) {\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\n              $search.css('width', searchWidth);\n            }\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\n              module.verbose('Hiding placeholder text');\n              $text.addClass(className.filtered);\n            }\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\n              module.verbose('Showing placeholder text');\n              $text.removeClass(className.filtered);\n            }\n          },\n          empty: function() {\n            $module.addClass(className.empty);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          placeholderText: function(text) {\n            text = text || module.get.placeholderText();\n            module.debug('Setting placeholder text', text);\n            module.set.text(text);\n            $text.addClass(className.placeholder);\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Added tabindex to searchable dropdown');\n              $search\n                .val('')\n                .attr('tabindex', 0)\n              ;\n              $menu\n                .attr('tabindex', -1)\n              ;\n            }\n            else {\n              module.debug('Added tabindex to dropdown');\n              if( $module.attr('tabindex') === undefined) {\n                $module\n                  .attr('tabindex', 0)\n                ;\n                $menu\n                  .attr('tabindex', -1)\n                ;\n              }\n            }\n          },\n          initialLoad: function() {\n            module.verbose('Setting initial load');\n            initialLoad = true;\n          },\n          activeItem: function($item) {\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\n              $item.addClass(className.filtered);\n            }\n            else {\n              $item.addClass(className.active);\n            }\n          },\n          partialSearch: function(text) {\n            var\n              length = module.get.query().length\n            ;\n            $search.val( text.substr(0 , length));\n          },\n          scrollPosition: function($item, forceScroll) {\n            var\n              edgeTolerance = 5,\n              $menu,\n              hasActive,\n              offset,\n              itemHeight,\n              itemOffset,\n              menuOffset,\n              menuScroll,\n              menuHeight,\n              abovePage,\n              belowPage\n            ;\n\n            $item       = $item || module.get.selectedItem();\n            $menu       = $item.closest(selector.menu);\n            hasActive   = ($item && $item.length > 0);\n            forceScroll = (forceScroll !== undefined)\n              ? forceScroll\n              : false\n            ;\n            if($item && $menu.length > 0 && hasActive) {\n              itemOffset = $item.position().top;\n\n              $menu.addClass(className.loading);\n              menuScroll = $menu.scrollTop();\n              menuOffset = $menu.offset().top;\n              itemOffset = $item.offset().top;\n              offset     = menuScroll - menuOffset + itemOffset;\n              if(!forceScroll) {\n                menuHeight = $menu.height();\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\n              }\n              module.debug('Scrolling to active item', offset);\n              if(forceScroll || abovePage || belowPage) {\n                $menu.scrollTop(offset);\n              }\n              $menu.removeClass(className.loading);\n            }\n          },\n          text: function(text) {\n            if(settings.action !== 'select') {\n              if(settings.action == 'combo') {\n                module.debug('Changing combo button text', text, $combo);\n                if(settings.preserveHTML) {\n                  $combo.html(text);\n                }\n                else {\n                  $combo.text(text);\n                }\n              }\n              else {\n                if(text !== module.get.placeholderText()) {\n                  $text.removeClass(className.placeholder);\n                }\n                module.debug('Changing text', text, $text);\n                $text\n                  .removeClass(className.filtered)\n                ;\n                if(settings.preserveHTML) {\n                  $text.html(text);\n                }\n                else {\n                  $text.text(text);\n                }\n              }\n            }\n          },\n          selectedItem: function($item) {\n            var\n              value      = module.get.choiceValue($item),\n              searchText = module.get.choiceText($item, false),\n              text       = module.get.choiceText($item, true)\n            ;\n            module.debug('Setting user selection to item', $item);\n            module.remove.activeItem();\n            module.set.partialSearch(searchText);\n            module.set.activeItem($item);\n            module.set.selected(value, $item);\n            module.set.text(text);\n          },\n          selectedLetter: function(letter) {\n            var\n              $selectedItem         = $item.filter('.' + className.selected),\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\n              $nextValue            = false,\n              $nextItem\n            ;\n            // check next of same letter\n            if(alreadySelectedLetter) {\n              $nextItem = $selectedItem.nextAll($item).eq(0);\n              if( module.has.firstLetter($nextItem, letter) ) {\n                $nextValue  = $nextItem;\n              }\n            }\n            // check all values\n            if(!$nextValue) {\n              $item\n                .each(function(){\n                  if(module.has.firstLetter($(this), letter)) {\n                    $nextValue = $(this);\n                    return false;\n                  }\n                })\n              ;\n            }\n            // set next value\n            if($nextValue) {\n              module.verbose('Scrolling to next value with letter', letter);\n              module.set.scrollPosition($nextValue);\n              $selectedItem.removeClass(className.selected);\n              $nextValue.addClass(className.selected);\n              if(settings.selectOnKeydown && module.is.single()) {\n                module.set.selectedItem($nextValue);\n              }\n            }\n          },\n          direction: function($menu) {\n            if(settings.direction == 'auto') {\n              // reset position\n              module.remove.upward();\n\n              if(module.can.openDownward($menu)) {\n                module.remove.upward($menu);\n              }\n              else {\n                module.set.upward($menu);\n              }\n              if(!module.is.leftward($menu) && !module.can.openRightward($menu)) {\n                module.set.leftward($menu);\n              }\n            }\n            else if(settings.direction == 'upward') {\n              module.set.upward($menu);\n            }\n          },\n          upward: function($currentMenu) {\n            var $element = $currentMenu || $module;\n            $element.addClass(className.upward);\n          },\n          leftward: function($currentMenu) {\n            var $element = $currentMenu || $menu;\n            $element.addClass(className.leftward);\n          },\n          value: function(value, text, $selected) {\n            var\n              escapedValue = module.escape.value(value),\n              hasInput     = ($input.length > 0),\n              isAddition   = !module.has.value(value),\n              currentValue = module.get.values(),\n              stringValue  = (value !== undefined)\n                ? String(value)\n                : value,\n              newValue\n            ;\n            if(hasInput) {\n              if(!settings.allowReselection && stringValue == currentValue) {\n                module.verbose('Skipping value update already same value', value, currentValue);\n                if(!module.is.initialLoad()) {\n                  return;\n                }\n              }\n\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\n                module.debug('Adding user option', value);\n                module.add.optionValue(value);\n              }\n              module.debug('Updating input value', escapedValue, currentValue);\n              internalChange = true;\n              $input\n                .val(escapedValue)\n              ;\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\n                module.debug('Input native change event ignored on initial load');\n              }\n              else {\n                module.trigger.change();\n              }\n              internalChange = false;\n            }\n            else {\n              module.verbose('Storing value in metadata', escapedValue, $input);\n              if(escapedValue !== currentValue) {\n                $module.data(metadata.value, stringValue);\n              }\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onChange);\n            }\n            else {\n              settings.onChange.call(element, value, text, $selected);\n            }\n          },\n          active: function() {\n            $module\n              .addClass(className.active)\n            ;\n          },\n          multiple: function() {\n            $module.addClass(className.multiple);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          exactly: function(value, $selectedItem) {\n            module.debug('Setting selected to exact values');\n            module.clear();\n            module.set.selected(value, $selectedItem);\n          },\n          selected: function(value, $selectedItem) {\n            var\n              isMultiple = module.is.multiple(),\n              $userSelectedItem\n            ;\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n            if(!$selectedItem) {\n              return;\n            }\n            module.debug('Setting selected menu item to', $selectedItem);\n            if(module.is.multiple()) {\n              module.remove.searchWidth();\n            }\n            if(module.is.single()) {\n              module.remove.activeItem();\n              module.remove.selectedItem();\n            }\n            else if(settings.useLabels) {\n              module.remove.selectedItem();\n            }\n            // select each item\n            $selectedItem\n              .each(function() {\n                var\n                  $selected      = $(this),\n                  selectedText   = module.get.choiceText($selected),\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\n\n                  isFiltered     = $selected.hasClass(className.filtered),\n                  isActive       = $selected.hasClass(className.active),\n                  isUserValue    = $selected.hasClass(className.addition),\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\n                ;\n                if(isMultiple) {\n                  if(!isActive || isUserValue) {\n                    if(settings.apiSettings && settings.saveRemoteData) {\n                      module.save.remoteData(selectedText, selectedValue);\n                    }\n                    if(settings.useLabels) {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\n                      module.set.activeItem($selected);\n                      module.filterActive();\n                      module.select.nextAvailable($selectedItem);\n                    }\n                    else {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.set.text(module.add.variables(message.count));\n                      module.set.activeItem($selected);\n                    }\n                  }\n                  else if(!isFiltered) {\n                    module.debug('Selected active value, removing label');\n                    module.remove.selected(selectedValue);\n                  }\n                }\n                else {\n                  if(settings.apiSettings && settings.saveRemoteData) {\n                    module.save.remoteData(selectedText, selectedValue);\n                  }\n                  module.set.text(selectedText);\n                  module.set.value(selectedValue, selectedText, $selected);\n                  $selected\n                    .addClass(className.active)\n                    .addClass(className.selected)\n                  ;\n                }\n              })\n            ;\n          }\n        },\n\n        add: {\n          label: function(value, text, shouldAnimate) {\n            var\n              $next  = module.is.searchSelection()\n                ? $search\n                : $text,\n              escapedValue = module.escape.value(value),\n              $label\n            ;\n            $label =  $('<a />')\n              .addClass(className.label)\n              .attr('data-' + metadata.value, escapedValue)\n              .html(templates.label(escapedValue, text))\n            ;\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\n\n            if(module.has.label(value)) {\n              module.debug('Label already exists, skipping', escapedValue);\n              return;\n            }\n            if(settings.label.variation) {\n              $label.addClass(settings.label.variation);\n            }\n            if(shouldAnimate === true) {\n              module.debug('Animating in label', $label);\n              $label\n                .addClass(className.hidden)\n                .insertBefore($next)\n                .transition(settings.label.transition, settings.label.duration)\n              ;\n            }\n            else {\n              module.debug('Adding selection label', $label);\n              $label\n                .insertBefore($next)\n              ;\n            }\n          },\n          message: function(message) {\n            var\n              $message = $menu.children(selector.message),\n              html     = settings.templates.message(module.add.variables(message))\n            ;\n            if($message.length > 0) {\n              $message\n                .html(html)\n              ;\n            }\n            else {\n              $message = $('<div/>')\n                .html(html)\n                .addClass(className.message)\n                .appendTo($menu)\n              ;\n            }\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(hasOption) {\n              return;\n            }\n            // temporarily disconnect observer\n            module.disconnect.selectObserver();\n            if( module.is.single() ) {\n              module.verbose('Removing previous user addition');\n              $input.find('option.' + className.addition).remove();\n            }\n            $('<option/>')\n              .prop('value', escapedValue)\n              .addClass(className.addition)\n              .html(value)\n              .appendTo($input)\n            ;\n            module.verbose('Adding user addition as an <option>', value);\n            module.observe.select();\n          },\n          userSuggestion: function(value) {\n            var\n              $addition         = $menu.children(selector.addition),\n              $existingItem     = module.get.item(value),\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\n              hasUserSuggestion = $addition.length > 0,\n              html\n            ;\n            if(settings.useLabels && module.has.maxSelections()) {\n              return;\n            }\n            if(value === '' || alreadyHasValue) {\n              $addition.remove();\n              return;\n            }\n            if(hasUserSuggestion) {\n              $addition\n                .data(metadata.value, value)\n                .data(metadata.text, value)\n                .attr('data-' + metadata.value, value)\n                .attr('data-' + metadata.text, value)\n                .removeClass(className.filtered)\n              ;\n              if(!settings.hideAdditions) {\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $addition\n                  .html(html)\n                ;\n              }\n              module.verbose('Replacing user suggestion with new value', $addition);\n            }\n            else {\n              $addition = module.create.userChoice(value);\n              $addition\n                .prependTo($menu)\n              ;\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\n            }\n            if(!settings.hideAdditions || module.is.allFiltered()) {\n              $addition\n                .addClass(className.selected)\n                .siblings()\n                .removeClass(className.selected)\n              ;\n            }\n            module.refreshItems();\n          },\n          variables: function(message, term) {\n            var\n              hasCount    = (message.search('{count}') !== -1),\n              hasMaxCount = (message.search('{maxCount}') !== -1),\n              hasTerm     = (message.search('{term}') !== -1),\n              values,\n              count,\n              query\n            ;\n            module.verbose('Adding templated variables to message', message);\n            if(hasCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{count}', count);\n            }\n            if(hasMaxCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{maxCount}', settings.maxSelections);\n            }\n            if(hasTerm) {\n              query   = term || module.get.query();\n              message = message.replace('{term}', query);\n            }\n            return message;\n          },\n          value: function(addedValue, addedText, $selectedItem) {\n            var\n              currentValue = module.get.values(),\n              newValue\n            ;\n            if(addedValue === '') {\n              module.debug('Cannot select blank values from multiselect');\n              return;\n            }\n            // extend current array\n            if($.isArray(currentValue)) {\n              newValue = currentValue.concat([addedValue]);\n              newValue = module.get.uniqueArray(newValue);\n            }\n            else {\n              newValue = [addedValue];\n            }\n            // add values\n            if( module.has.selectInput() ) {\n              if(module.can.extendSelect()) {\n                module.debug('Adding value to select', addedValue, newValue, $input);\n                module.add.optionValue(addedValue);\n              }\n            }\n            else {\n              newValue = newValue.join(settings.delimiter);\n              module.debug('Setting hidden input to delimited value', newValue, $input);\n            }\n\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\n            }\n            else {\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\n            }\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\n            module.check.maxSelections();\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          activeLabel: function() {\n            $module.find(selector.label).removeClass(className.active);\n          },\n          empty: function() {\n            $module.removeClass(className.empty);\n          },\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          },\n          upward: function($currentMenu) {\n            var $element = $currentMenu || $module;\n            $element.removeClass(className.upward);\n          },\n          leftward: function($currentMenu) {\n            var $element = $currentMenu || $menu;\n            $element.removeClass(className.leftward);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          activeItem: function() {\n            $item.removeClass(className.active);\n          },\n          filteredItem: function() {\n            if(settings.useLabels && module.has.maxSelections() ) {\n              return;\n            }\n            if(settings.useLabels && module.is.multiple()) {\n              $item.not('.' + className.active).removeClass(className.filtered);\n            }\n            else {\n              $item.removeClass(className.filtered);\n            }\n            module.remove.empty();\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(!hasOption || !$option.hasClass(className.addition)) {\n              return;\n            }\n            // temporarily disconnect observer\n            if(selectObserver) {\n              selectObserver.disconnect();\n              module.verbose('Temporarily disconnecting mutation observer');\n            }\n            $option.remove();\n            module.verbose('Removing user addition as an <option>', escapedValue);\n            if(selectObserver) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          message: function() {\n            $menu.children(selector.message).remove();\n          },\n          searchWidth: function() {\n            $search.css('width', '');\n          },\n          searchTerm: function() {\n            module.verbose('Cleared search term');\n            $search.val('');\n            module.set.filtered();\n          },\n          userAddition: function() {\n            $item.filter(selector.addition).remove();\n          },\n          selected: function(value, $selectedItem) {\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n\n            if(!$selectedItem) {\n              return false;\n            }\n\n            $selectedItem\n              .each(function() {\n                var\n                  $selected     = $(this),\n                  selectedText  = module.get.choiceText($selected),\n                  selectedValue = module.get.choiceValue($selected, selectedText)\n                ;\n                if(module.is.multiple()) {\n                  if(settings.useLabels) {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    module.remove.label(selectedValue);\n                  }\n                  else {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    if(module.get.selectionCount() === 0) {\n                      module.set.placeholderText();\n                    }\n                    else {\n                      module.set.text(module.add.variables(message.count));\n                    }\n                  }\n                }\n                else {\n                  module.remove.value(selectedValue, selectedText, $selected);\n                }\n                $selected\n                  .removeClass(className.filtered)\n                  .removeClass(className.active)\n                ;\n                if(settings.useLabels) {\n                  $selected.removeClass(className.selected);\n                }\n              })\n            ;\n          },\n          selectedItem: function() {\n            $item.removeClass(className.selected);\n          },\n          value: function(removedValue, removedText, $removedItem) {\n            var\n              values = module.get.values(),\n              newValue\n            ;\n            if( module.has.selectInput() ) {\n              module.verbose('Input is <select> removing selected option', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              module.remove.optionValue(removedValue);\n            }\n            else {\n              module.verbose('Removing from delimited values', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              newValue = newValue.join(settings.delimiter);\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onRemove);\n            }\n            else {\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\n            }\n            module.set.value(newValue, removedText, $removedItem);\n            module.check.maxSelections();\n          },\n          arrayValue: function(removedValue, values) {\n            if( !$.isArray(values) ) {\n              values = [values];\n            }\n            values = $.grep(values, function(value){\n              return (removedValue != value);\n            });\n            module.verbose('Removed value from delimited string', removedValue, values);\n            return values;\n          },\n          label: function(value, shouldAnimate) {\n            var\n              $labels       = $module.find(selector.label),\n              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\n            ;\n            module.verbose('Removing label', $removedLabel);\n            $removedLabel.remove();\n          },\n          activeLabels: function($activeLabels) {\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\n            module.verbose('Removing active label selections', $activeLabels);\n            module.remove.labels($activeLabels);\n          },\n          labels: function($labels) {\n            $labels = $labels || $module.find(selector.label);\n            module.verbose('Removing labels', $labels);\n            $labels\n              .each(function(){\n                var\n                  $label      = $(this),\n                  value       = $label.data(metadata.value),\n                  stringValue = (value !== undefined)\n                    ? String(value)\n                    : value,\n                  isUserValue = module.is.userValue(stringValue)\n                ;\n                if(settings.onLabelRemove.call($label, value) === false) {\n                  module.debug('Label remove callback cancelled removal');\n                  return;\n                }\n                module.remove.message();\n                if(isUserValue) {\n                  module.remove.value(stringValue);\n                  module.remove.label(stringValue);\n                }\n                else {\n                  // selected will also remove label\n                  module.remove.selected(stringValue);\n                }\n              })\n            ;\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Searchable dropdown initialized');\n              $search\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n            else {\n              module.debug('Simple selection dropdown initialized');\n              $module\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n          }\n        },\n\n        has: {\n          menuSearch: function() {\n            return (module.has.search() && $search.closest($menu).length > 0);\n          },\n          search: function() {\n            return ($search.length > 0);\n          },\n          sizer: function() {\n            return ($sizer.length > 0);\n          },\n          selectInput: function() {\n            return ( $input.is('select') );\n          },\n          minCharacters: function(searchTerm) {\n            if(settings.minCharacters) {\n              searchTerm = (searchTerm !== undefined)\n                ? String(searchTerm)\n                : String(module.get.query())\n              ;\n              return (searchTerm.length >= settings.minCharacters);\n            }\n            return true;\n          },\n          firstLetter: function($item, letter) {\n            var\n              text,\n              firstLetter\n            ;\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\n              return false;\n            }\n            text        = module.get.choiceText($item, false);\n            letter      = letter.toLowerCase();\n            firstLetter = String(text).charAt(0).toLowerCase();\n            return (letter == firstLetter);\n          },\n          input: function() {\n            return ($input.length > 0);\n          },\n          items: function() {\n            return ($item.length > 0);\n          },\n          menu: function() {\n            return ($menu.length > 0);\n          },\n          message: function() {\n            return ($menu.children(selector.message).length !== 0);\n          },\n          label: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $labels      = $module.find(selector.label)\n            ;\n            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\n          },\n          maxSelections: function() {\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\n          },\n          allResultsFiltered: function() {\n            var\n              $normalResults = $item.not(selector.addition)\n            ;\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\n          },\n          userSuggestion: function() {\n            return ($menu.children(selector.addition).length > 0);\n          },\n          query: function() {\n            return (module.get.query() !== '');\n          },\n          value: function(value) {\n            var\n              values   = module.get.values(),\n              hasValue = $.isArray(values)\n               ? values && ($.inArray(value, values) !== -1)\n               : (values == value)\n            ;\n            return (hasValue)\n              ? true\n              : false\n            ;\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          bubbledLabelClick: function(event) {\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\n          },\n          bubbledIconClick: function(event) {\n            return $(event.target).closest($icon).length > 0;\n          },\n          alreadySetup: function() {\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\n          },\n          animating: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.transition && $subMenu.transition('is animating')\n              : $menu.transition    && $menu.transition('is animating')\n            ;\n          },\n          leftward: function($subMenu) {\n            var $selectedMenu = $subMenu || $menu;\n            return $selectedMenu.hasClass(className.leftward);\n          },\n          disabled: function() {\n            return $module.hasClass(className.disabled);\n          },\n          focused: function() {\n            return (document.activeElement === $module[0]);\n          },\n          focusedOnSearch: function() {\n            return (document.activeElement === $search[0]);\n          },\n          allFiltered: function() {\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\n          },\n          hidden: function($subMenu) {\n            return !module.is.visible($subMenu);\n          },\n          initialLoad: function() {\n            return initialLoad;\n          },\n          inObject: function(needle, object) {\n            var\n              found = false\n            ;\n            $.each(object, function(index, property) {\n              if(property == needle) {\n                found = true;\n                return true;\n              }\n            });\n            return found;\n          },\n          multiple: function() {\n            return $module.hasClass(className.multiple);\n          },\n          remote: function() {\n            return settings.apiSettings && module.can.useAPI();\n          },\n          single: function() {\n            return !module.is.multiple();\n          },\n          selectMutation: function(mutations) {\n            var\n              selectChanged = false\n            ;\n            $.each(mutations, function(index, mutation) {\n              if(mutation.target && $(mutation.target).is('select')) {\n                selectChanged = true;\n                return true;\n              }\n            });\n            return selectChanged;\n          },\n          search: function() {\n            return $module.hasClass(className.search);\n          },\n          searchSelection: function() {\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\n          },\n          selection: function() {\n            return $module.hasClass(className.selection);\n          },\n          userValue: function(value) {\n            return ($.inArray(value, module.get.userValues()) !== -1);\n          },\n          upward: function($menu) {\n            var $element = $menu || $module;\n            return $element.hasClass(className.upward);\n          },\n          visible: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.hasClass(className.visible)\n              : $menu.hasClass(className.visible)\n            ;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          },\n          horizontallyScrollableContext: function() {\n            var\n              overflowX = ($context.get(0) !== window)\n                ? $context.css('overflow-X')\n                : false\n            ;\n            return (overflowX == 'auto' || overflowX == 'scroll');\n          }\n        },\n\n        can: {\n          activate: function($item) {\n            if(settings.useLabels) {\n              return true;\n            }\n            if(!module.has.maxSelections()) {\n              return true;\n            }\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\n              return true;\n            }\n            return false;\n          },\n          openDownward: function($subMenu) {\n            var\n              $currentMenu    = $subMenu || $menu,\n              canOpenDownward = true,\n              onScreen        = {},\n              calculations\n            ;\n            $currentMenu\n              .addClass(className.loading)\n            ;\n            calculations = {\n              context: {\n                scrollTop : $context.scrollTop(),\n                height    : $context.outerHeight()\n              },\n              menu : {\n                offset: $currentMenu.offset(),\n                height: $currentMenu.outerHeight()\n              }\n            };\n            if(module.is.verticallyScrollableContext()) {\n              calculations.menu.offset.top += calculations.context.scrollTop;\n            }\n            onScreen = {\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\n            };\n            if(onScreen.below) {\n              module.verbose('Dropdown can fit in context downward', onScreen);\n              canOpenDownward = true;\n            }\n            else if(!onScreen.below && !onScreen.above) {\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\n              canOpenDownward = true;\n            }\n            else {\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\n              canOpenDownward = false;\n            }\n            $currentMenu.removeClass(className.loading);\n            return canOpenDownward;\n          },\n          openRightward: function($subMenu) {\n            var\n              $currentMenu     = $subMenu || $menu,\n              canOpenRightward = true,\n              isOffscreenRight = false,\n              calculations\n            ;\n            $currentMenu\n              .addClass(className.loading)\n            ;\n            calculations = {\n              context: {\n                scrollLeft : $context.scrollLeft(),\n                width      : $context.outerWidth()\n              },\n              menu: {\n                offset : $currentMenu.offset(),\n                width  : $currentMenu.outerWidth()\n              }\n            };\n            if(module.is.horizontallyScrollableContext()) {\n              calculations.menu.offset.left += calculations.context.scrollLeft;\n            }\n            isOffscreenRight = (calculations.menu.offset.left + calculations.menu.width >= calculations.context.scrollLeft + calculations.context.width);\n            if(isOffscreenRight) {\n              module.verbose('Dropdown cannot fit in context rightward', isOffscreenRight);\n              canOpenRightward = false;\n            }\n            $currentMenu.removeClass(className.loading);\n            return canOpenRightward;\n          },\n          click: function() {\n            return (hasTouch || settings.on == 'click');\n          },\n          extendSelect: function() {\n            return settings.allowAdditions || settings.apiSettings;\n          },\n          show: function() {\n            return !module.is.disabled() && (module.has.items() || module.has.message());\n          },\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          }\n        },\n\n        animate: {\n          show: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  module.hideSubMenus();\n                  module.hideOthers();\n                  module.set.active();\n                },\n              transition\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            module.verbose('Doing menu show animation', $currentMenu);\n            module.set.direction($subMenu);\n            transition = module.get.transition($subMenu);\n            if( module.is.selection() ) {\n              module.set.scrollPosition(module.get.selectedItem(), true);\n            }\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('show');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' in',\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    duration   : settings.duration,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition, transition);\n              }\n            }\n          },\n          hide: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              duration = ($subMenu)\n                ? (settings.duration * 0.9)\n                : settings.duration,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  if( module.can.click() ) {\n                    module.unbind.intent();\n                  }\n                  module.remove.active();\n                },\n              transition = module.get.transition($subMenu)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\n              module.verbose('Doing menu hide animation', $currentMenu);\n\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('hide');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' out',\n                    duration   : settings.duration,\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.transition);\n              }\n            }\n          }\n        },\n\n        hideAndClear: function() {\n          module.remove.searchTerm();\n          if( module.has.maxSelections() ) {\n            return;\n          }\n          if(module.has.search()) {\n            module.hide(function() {\n              module.remove.filteredItem();\n            });\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        delay: {\n          show: function() {\n            module.verbose('Delaying show event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.show, settings.delay.show);\n          },\n          hide: function() {\n            module.verbose('Delaying hide event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.hide, settings.delay.hide);\n          }\n        },\n\n        escape: {\n          value: function(value) {\n            var\n              multipleValues = $.isArray(value),\n              stringValue    = (typeof value === 'string'),\n              isUnparsable   = (!stringValue && !multipleValues),\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\n              values         = []\n            ;\n            if(isUnparsable || !hasQuotes) {\n              return value;\n            }\n            module.debug('Encoding quote values for use in select', value);\n            if(multipleValues) {\n              $.each(value, function(index, value){\n                values.push(value.replace(regExp.quote, '&quot;'));\n              });\n              return values;\n            }\n            return value.replace(regExp.quote, '&quot;');\n          },\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : $allModules\n  ;\n};\n\n$.fn.dropdown.settings = {\n\n  silent                 : false,\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  on                     : 'click',    // what event should show menu action on item selection\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\n\n\n  apiSettings            : false,\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\n  minCharacters          : 0,          // Minimum characters required to trigger API call\n\n  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\n\n  throttle               : 200,        // How long to wait after last user input to search remotely\n\n  context                : window,     // Context to use when determining if on screen\n  direction              : 'auto',     // Whether dropdown should always open in one direction\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\n\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\n\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\n  preserveHTML           : true,       // preserve html when selecting value\n  sortSelect             : false,      // sort selection on init\n\n  forceSelection         : true,       // force a choice on blur with search selection\n\n  allowAdditions         : false,      // whether multiple select should allow user added values\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\n\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\n\n  showOnFocus            : true,       // show menu on focus\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\n  allowTab               : true,       // add tabindex to element\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\n\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\n\n  transition             : 'auto',     // auto transition will slide down or up based on direction\n  duration               : 200,        // duration of transition\n\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\n\n  // label settings on multi-select\n  label: {\n    transition : 'scale',\n    duration   : 200,\n    variation  : false\n  },\n\n  // delay before event\n  delay : {\n    hide   : 300,\n    show   : 200,\n    search : 20,\n    touch  : 50\n  },\n\n  /* Callbacks */\n  onChange      : function(value, text, $selected){},\n  onAdd         : function(value, text, $selected){},\n  onRemove      : function(value, text, $selected){},\n\n  onLabelSelect : function($selectedLabels){},\n  onLabelCreate : function(value, text) { return $(this); },\n  onLabelRemove : function(value) { return true; },\n  onNoResults   : function(searchTerm) { return true; },\n  onShow        : function(){},\n  onHide        : function(){},\n\n  /* Component */\n  name           : 'Dropdown',\n  namespace      : 'dropdown',\n\n  message: {\n    addResult     : 'Add <b>{term}</b>',\n    count         : '{count} selected',\n    maxSelections : 'Max {maxCount} selections',\n    noResults     : 'No results found.',\n    serverError   : 'There was an error contacting the server'\n  },\n\n  error : {\n    action          : 'You called a dropdown action that was not defined',\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\n    labels          : 'Allowing user additions currently requires the use of labels.',\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\n    method          : 'The method you called is not defined.',\n    noAPI           : 'The API module is required to load resources remotely',\n    noStorage       : 'Saving remote data requires session storage',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\n  },\n\n  regExp : {\n    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n    quote    : /\"/g\n  },\n\n  metadata : {\n    defaultText     : 'defaultText',\n    defaultValue    : 'defaultValue',\n    placeholderText : 'placeholder',\n    text            : 'text',\n    value           : 'value'\n  },\n\n  // property names for remote query\n  fields: {\n    remoteValues : 'results',  // grouping for api results\n    values       : 'values',   // grouping for all dropdown values\n    disabled     : 'disabled', // whether value should be disabled\n    name         : 'name',     // displayed dropdown text\n    value        : 'value',    // actual dropdown value\n    text         : 'text'      // displayed text when selected\n  },\n\n  keys : {\n    backspace  : 8,\n    delimiter  : 188, // comma\n    deleteKey  : 46,\n    enter      : 13,\n    escape     : 27,\n    pageUp     : 33,\n    pageDown   : 34,\n    leftArrow  : 37,\n    upArrow    : 38,\n    rightArrow : 39,\n    downArrow  : 40\n  },\n\n  selector : {\n    addition     : '.addition',\n    dropdown     : '.ui.dropdown',\n    hidden       : '.hidden',\n    icon         : '> .dropdown.icon',\n    input        : '> input[type=\"hidden\"], > select',\n    item         : '.item',\n    label        : '> .label',\n    remove       : '> .label > .delete.icon',\n    siblingLabel : '.label',\n    menu         : '.menu',\n    message      : '.message',\n    menuIcon     : '.dropdown.icon',\n    search       : 'input.search, .menu > .search > input, .menu input.search',\n    sizer        : '> input.sizer',\n    text         : '> .text:not(.icon)',\n    unselectable : '.disabled, .filtered'\n  },\n\n  className : {\n    active      : 'active',\n    addition    : 'addition',\n    animating   : 'animating',\n    disabled    : 'disabled',\n    empty       : 'empty',\n    dropdown    : 'ui dropdown',\n    filtered    : 'filtered',\n    hidden      : 'hidden transition',\n    item        : 'item',\n    label       : 'ui label',\n    loading     : 'loading',\n    menu        : 'menu',\n    message     : 'message',\n    multiple    : 'multiple',\n    placeholder : 'default',\n    sizer       : 'sizer',\n    search      : 'search',\n    selected    : 'selected',\n    selection   : 'selection',\n    upward      : 'upward',\n    leftward    : 'left',\n    visible     : 'visible'\n  }\n\n};\n\n/* Templates */\n$.fn.dropdown.settings.templates = {\n\n  // generates dropdown from select values\n  dropdown: function(select) {\n    var\n      placeholder = select.placeholder || false,\n      values      = select.values || {},\n      html        = ''\n    ;\n    html +=  '<i class=\"dropdown icon\"></i>';\n    if(select.placeholder) {\n      html += '<div class=\"default text\">' + placeholder + '</div>';\n    }\n    else {\n      html += '<div class=\"text\"></div>';\n    }\n    html += '<div class=\"menu\">';\n    $.each(select.values, function(index, option) {\n      html += (option.disabled)\n        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n      ;\n    });\n    html += '</div>';\n    return html;\n  },\n\n  // generates just menu from select\n  menu: function(response, fields) {\n    var\n      values = response[fields.values] || {},\n      html   = ''\n    ;\n    $.each(values, function(index, option) {\n      var\n        maybeText = (option[fields.text])\n          ? 'data-text=\"' + option[fields.text] + '\"'\n          : '',\n        maybeDisabled = (option[fields.disabled])\n          ? 'disabled '\n          : ''\n      ;\n      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\n      html +=   option[fields.name];\n      html += '</div>';\n    });\n    return html;\n  },\n\n  // generates label for multiselect\n  label: function(value, text) {\n    return text + '<i class=\"delete icon\"></i>';\n  },\n\n\n  // generates messages like \"No results\"\n  message: function(message) {\n    return message;\n  },\n\n  // generates user addition to selection menu\n  addition: function(choice) {\n    return choice;\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Embed\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.embed = function(parameters) {\n\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\n          : $.extend({}, $.fn.embed.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        sources         = settings.sources,\n        error           = settings.error,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n        $module         = $(this),\n        $placeholder    = $module.find(selector.placeholder),\n        $icon           = $module.find(selector.icon),\n        $embed          = $module.find(selector.embed),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing embed');\n          module.determine.autoplay();\n          module.create();\n          module.bind.events();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance of embed');\n          module.reset();\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $placeholder = $module.find(selector.placeholder);\n          $icon        = $module.find(selector.icon);\n          $embed       = $module.find(selector.embed);\n        },\n\n        bind: {\n          events: function() {\n            if( module.has.placeholder() ) {\n              module.debug('Adding placeholder events');\n              $module\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\n              ;\n            }\n          }\n        },\n\n        create: function() {\n          var\n            placeholder = module.get.placeholder()\n          ;\n          if(placeholder) {\n            module.createPlaceholder();\n          }\n          else {\n            module.createAndShow();\n          }\n        },\n\n        createPlaceholder: function(placeholder) {\n          var\n            icon  = module.get.icon(),\n            url   = module.get.url(),\n            embed = module.generate.embed(url)\n          ;\n          placeholder = placeholder || module.get.placeholder();\n          $module.html( templates.placeholder(placeholder, icon) );\n          module.debug('Creating placeholder for embed', placeholder, icon);\n        },\n\n        createEmbed: function(url) {\n          module.refresh();\n          url = url || module.get.url();\n          $embed = $('<div/>')\n            .addClass(className.embed)\n            .html( module.generate.embed(url) )\n            .appendTo($module)\n          ;\n          settings.onCreate.call(element, url);\n          module.debug('Creating embed object', $embed);\n        },\n\n        changeEmbed: function(url) {\n          $embed\n            .html( module.generate.embed(url) )\n          ;\n        },\n\n        createAndShow: function() {\n          module.createEmbed();\n          module.show();\n        },\n\n        // sets new embed\n        change: function(source, id, url) {\n          module.debug('Changing video to ', source, id, url);\n          $module\n            .data(metadata.source, source)\n            .data(metadata.id, id)\n          ;\n          if(url) {\n            $module.data(metadata.url, url);\n          }\n          else {\n            $module.removeData(metadata.url);\n          }\n          if(module.has.embed()) {\n            module.changeEmbed();\n          }\n          else {\n            module.create();\n          }\n        },\n\n        // clears embed\n        reset: function() {\n          module.debug('Clearing embed and showing placeholder');\n          module.remove.active();\n          module.remove.embed();\n          module.showPlaceholder();\n          settings.onReset.call(element);\n        },\n\n        // shows current embed\n        show: function() {\n          module.debug('Showing embed');\n          module.set.active();\n          settings.onDisplay.call(element);\n        },\n\n        hide: function() {\n          module.debug('Hiding embed');\n          module.showPlaceholder();\n        },\n\n        showPlaceholder: function() {\n          module.debug('Showing placeholder image');\n          module.remove.active();\n          settings.onPlaceholderDisplay.call(element);\n        },\n\n        get: {\n          id: function() {\n            return settings.id || $module.data(metadata.id);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          },\n          icon: function() {\n            return (settings.icon)\n              ? settings.icon\n              : ($module.data(metadata.icon) !== undefined)\n                ? $module.data(metadata.icon)\n                : module.determine.icon()\n            ;\n          },\n          source: function(url) {\n            return (settings.source)\n              ? settings.source\n              : ($module.data(metadata.source) !== undefined)\n                ? $module.data(metadata.source)\n                : module.determine.source()\n            ;\n          },\n          type: function() {\n            var source = module.get.source();\n            return (sources[source] !== undefined)\n              ? sources[source].type\n              : false\n            ;\n          },\n          url: function() {\n            return (settings.url)\n              ? settings.url\n              : ($module.data(metadata.url) !== undefined)\n                ? $module.data(metadata.url)\n                : module.determine.url()\n            ;\n          }\n        },\n\n        determine: {\n          autoplay: function() {\n            if(module.should.autoplay()) {\n              settings.autoplay = true;\n            }\n          },\n          source: function(url) {\n            var\n              matchedSource = false\n            ;\n            url = url || module.get.url();\n            if(url) {\n              $.each(sources, function(name, source) {\n                if(url.search(source.domain) !== -1) {\n                  matchedSource = name;\n                  return false;\n                }\n              });\n            }\n            return matchedSource;\n          },\n          icon: function() {\n            var\n              source = module.get.source()\n            ;\n            return (sources[source] !== undefined)\n              ? sources[source].icon\n              : false\n            ;\n          },\n          url: function() {\n            var\n              id     = settings.id     || $module.data(metadata.id),\n              source = settings.source || $module.data(metadata.source),\n              url\n            ;\n            url = (sources[source] !== undefined)\n              ? sources[source].url.replace('{id}', id)\n              : false\n            ;\n            if(url) {\n              $module.data(metadata.url, url);\n            }\n            return url;\n          }\n        },\n\n\n        set: {\n          active: function() {\n            $module.addClass(className.active);\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          embed: function() {\n            $embed.empty();\n          }\n        },\n\n        encode: {\n          parameters: function(parameters) {\n            var\n              urlString = [],\n              index\n            ;\n            for (index in parameters) {\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\n            }\n            return urlString.join('&amp;');\n          }\n        },\n\n        generate: {\n          embed: function(url) {\n            module.debug('Generating embed html');\n            var\n              source = module.get.source(),\n              html,\n              parameters\n            ;\n            url = module.get.url(url);\n            if(url) {\n              parameters = module.generate.parameters(source);\n              html       = templates.iframe(url, parameters);\n            }\n            else {\n              module.error(error.noURL, $module);\n            }\n            return html;\n          },\n          parameters: function(source, extraParameters) {\n            var\n              parameters = (sources[source] && sources[source].parameters !== undefined)\n                ? sources[source].parameters(settings)\n                : {}\n            ;\n            extraParameters = extraParameters || settings.parameters;\n            if(extraParameters) {\n              parameters = $.extend({}, parameters, extraParameters);\n            }\n            parameters = settings.onEmbed(parameters);\n            return module.encode.parameters(parameters);\n          }\n        },\n\n        has: {\n          embed: function() {\n            return ($embed.length > 0);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          }\n        },\n\n        should: {\n          autoplay: function() {\n            return (settings.autoplay === 'auto')\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\n              : settings.autoplay\n            ;\n          }\n        },\n\n        is: {\n          video: function() {\n            return module.get.type() == 'video';\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.embed.settings = {\n\n  name        : 'Embed',\n  namespace   : 'embed',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  icon     : false,\n  source   : false,\n  url      : false,\n  id       : false,\n\n  // standard video settings\n  autoplay  : 'auto',\n  color     : '#444444',\n  hd        : true,\n  brandedUI : false,\n\n  // additional parameters to include with the embed\n  parameters: false,\n\n  onDisplay            : function() {},\n  onPlaceholderDisplay : function() {},\n  onReset              : function() {},\n  onCreate             : function(url) {},\n  onEmbed              : function(parameters) {\n    return parameters;\n  },\n\n  metadata    : {\n    id          : 'id',\n    icon        : 'icon',\n    placeholder : 'placeholder',\n    source      : 'source',\n    url         : 'url'\n  },\n\n  error : {\n    noURL  : 'No URL specified',\n    method : 'The method you called is not defined'\n  },\n\n  className : {\n    active : 'active',\n    embed  : 'embed'\n  },\n\n  selector : {\n    embed       : '.embed',\n    placeholder : '.placeholder',\n    icon        : '.icon'\n  },\n\n  sources: {\n    youtube: {\n      name   : 'youtube',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'youtube.com',\n      url    : '//www.youtube.com/embed/{id}',\n      parameters: function(settings) {\n        return {\n          autohide       : !settings.brandedUI,\n          autoplay       : settings.autoplay,\n          color          : settings.color || undefined,\n          hq             : settings.hd,\n          jsapi          : settings.api,\n          modestbranding : !settings.brandedUI\n        };\n      }\n    },\n    vimeo: {\n      name   : 'vimeo',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'vimeo.com',\n      url    : '//player.vimeo.com/video/{id}',\n      parameters: function(settings) {\n        return {\n          api      : settings.api,\n          autoplay : settings.autoplay,\n          byline   : settings.brandedUI,\n          color    : settings.color || undefined,\n          portrait : settings.brandedUI,\n          title    : settings.brandedUI\n        };\n      }\n    }\n  },\n\n  templates: {\n    iframe : function(url, parameters) {\n      var src = url;\n      if (parameters) {\n          src += '?' + parameters;\n      }\n      return ''\n        + '<iframe src=\"' + src + '\"'\n        + ' width=\"100%\" height=\"100%\"'\n        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n      ;\n    },\n    placeholder : function(image, icon) {\n      var\n        html = ''\n      ;\n      if(icon) {\n        html += '<i class=\"' + icon + ' icon\"></i>';\n      }\n      if(image) {\n        html += '<img class=\"placeholder\" src=\"' + image + '\">';\n      }\n      return html;\n    }\n  },\n\n  // NOT YET IMPLEMENTED\n  api     : false,\n  onPause : function() {},\n  onPlay  : function() {},\n  onStop  : function() {}\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Modal\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.modal = function(parameters) {\n  var\n    $allModules    = $(this),\n    $window        = $(window),\n    $document      = $(document),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings    = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\n          : $.extend({}, $.fn.modal.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $close          = $module.find(selector.close),\n\n        $allModals,\n        $otherModals,\n        $focusedElement,\n        $dimmable,\n        $dimmer,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        ignoreRepeatedEvents = false,\n\n        elementEventNamespace,\n        id,\n        observer,\n        module\n      ;\n      module  = {\n\n        initialize: function() {\n          module.verbose('Initializing dimmer', $context);\n\n          module.create.id();\n          module.create.dimmer();\n          module.refreshModals();\n\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of modal');\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        create: {\n          dimmer: function() {\n            var\n              defaultSettings = {\n                debug      : settings.debug,\n                dimmerName : 'modals'\n              },\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n            ;\n            if($.fn.dimmer === undefined) {\n              module.error(error.dimmer);\n              return;\n            }\n            module.debug('Creating dimmer');\n            $dimmable = $context.dimmer(dimmerSettings);\n            if(settings.detachable) {\n              module.verbose('Modal is detachable, moving content into dimmer');\n              $dimmable.dimmer('add content', $module);\n            }\n            else {\n              module.set.undetached();\n            }\n            $dimmer = $dimmable.dimmer('get dimmer');\n          },\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementEventNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous modal');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          $window.off(elementEventNamespace);\n          $dimmer.off(elementEventNamespace);\n          $close.off(eventNamespace);\n          $context.dimmer('destroy');\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, refreshing');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        refresh: function() {\n          module.remove.scrolling();\n          module.cacheSizes();\n          module.set.screenHeight();\n          module.set.type();\n          module.set.position();\n        },\n\n        refreshModals: function() {\n          $otherModals = $module.siblings(selector.modal);\n          $allModals   = $otherModals.add($module);\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching modal events to element', selector, event);\n            $toggle\n              .off(eventNamespace)\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching events');\n            $module\n              .on('click' + eventNamespace, selector.close, module.event.close)\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\n            ;\n            $window\n              .on('resize' + elementEventNamespace, module.event.resize)\n            ;\n          }\n        },\n\n        get: {\n          id: function() {\n            return (Math.random().toString(16) + '000000000').substr(2,8);\n          }\n        },\n\n        event: {\n          approve: function() {\n            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\n              module.verbose('Approve callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          deny: function() {\n            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\n              module.verbose('Deny callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          close: function() {\n            module.hide();\n          },\n          click: function(event) {\n            var\n              $target   = $(event.target),\n              isInModal = ($target.closest(selector.modal).length > 0),\n              isInDOM   = $.contains(document.documentElement, event.target)\n            ;\n            if(!isInModal && isInDOM) {\n              module.debug('Dimmer clicked, hiding all modals');\n              if( module.is.active() ) {\n                module.remove.clickaway();\n                if(settings.allowMultiple) {\n                  module.hide();\n                }\n                else {\n                  module.hideAll();\n                }\n              }\n            }\n          },\n          debounce: function(method, delay) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(method, delay);\n          },\n          keyboard: function(event) {\n            var\n              keyCode   = event.which,\n              escapeKey = 27\n            ;\n            if(keyCode == escapeKey) {\n              if(settings.closable) {\n                module.debug('Escape key pressed hiding modal');\n                module.hide();\n              }\n              else {\n                module.debug('Escape key pressed, but closable is set to false');\n              }\n              event.preventDefault();\n            }\n          },\n          resize: function() {\n            if( $dimmable.dimmer('is active') && ( module.is.animating() || module.is.active() ) ) {\n              requestAnimationFrame(module.refresh);\n            }\n          }\n        },\n\n        toggle: function() {\n          if( module.is.active() || module.is.animating() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.set.dimmerSettings();\n          module.showModal(callback);\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.hideModal(callback);\n        },\n\n        showModal: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.animating() || !module.is.active() ) {\n\n            module.showDimmer();\n            module.cacheSizes();\n            module.set.position();\n            module.set.screenHeight();\n            module.set.type();\n            module.set.clickaway();\n\n            if( !settings.allowMultiple && module.others.active() ) {\n              module.hideOthers(module.showModal);\n            }\n            else {\n              settings.onShow.call(element);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                module.debug('Showing modal with css animations');\n                $module\n                  .transition({\n                    debug       : settings.debug,\n                    animation   : settings.transition + ' in',\n                    queue       : settings.queue,\n                    duration    : settings.duration,\n                    useFailSafe : true,\n                    onComplete : function() {\n                      settings.onVisible.apply(element);\n                      if(settings.keyboardShortcuts) {\n                        module.add.keyboardShortcuts();\n                      }\n                      module.save.focus();\n                      module.set.active();\n                      if(settings.autofocus) {\n                        module.set.autofocus();\n                      }\n                      callback();\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition);\n              }\n            }\n          }\n          else {\n            module.debug('Modal is already visible');\n          }\n        },\n\n        hideModal: function(callback, keepDimmed) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Hiding modal');\n          if(settings.onHide.call(element, $(this)) === false) {\n            module.verbose('Hide callback returned false cancelling hide');\n            return;\n          }\n\n          if( module.is.animating() || module.is.active() ) {\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.remove.active();\n              $module\n                .transition({\n                  debug       : settings.debug,\n                  animation   : settings.transition + ' out',\n                  queue       : settings.queue,\n                  duration    : settings.duration,\n                  useFailSafe : true,\n                  onStart     : function() {\n                    if(!module.others.active() && !keepDimmed) {\n                      module.hideDimmer();\n                    }\n                    if(settings.keyboardShortcuts) {\n                      module.remove.keyboardShortcuts();\n                    }\n                  },\n                  onComplete : function() {\n                    settings.onHidden.call(element);\n                    module.restore.focus();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        showDimmer: function() {\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\n            module.debug('Showing dimmer');\n            $dimmable.dimmer('show');\n          }\n          else {\n            module.debug('Dimmer already visible');\n          }\n        },\n\n        hideDimmer: function() {\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\n            $dimmable.dimmer('hide', function() {\n              module.remove.clickaway();\n              module.remove.screenHeight();\n            });\n          }\n          else {\n            module.debug('Dimmer is not visible cannot hide');\n            return;\n          }\n        },\n\n        hideAll: function(callback) {\n          var\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding all visible modals');\n            module.hideDimmer();\n            $visibleModals\n              .modal('hide modal', callback)\n            ;\n          }\n        },\n\n        hideOthers: function(callback) {\n          var\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding other modals', $otherModals);\n            $visibleModals\n              .modal('hide modal', callback, true)\n            ;\n          }\n        },\n\n        others: {\n          active: function() {\n            return ($otherModals.filter('.' + className.active).length > 0);\n          },\n          animating: function() {\n            return ($otherModals.filter('.' + className.animating).length > 0);\n          }\n        },\n\n\n        add: {\n          keyboardShortcuts: function() {\n            module.verbose('Adding keyboard shortcuts');\n            $document\n              .on('keyup' + eventNamespace, module.event.keyboard)\n            ;\n          }\n        },\n\n        save: {\n          focus: function() {\n            $focusedElement = $(document.activeElement).blur();\n          }\n        },\n\n        restore: {\n          focus: function() {\n            if($focusedElement && $focusedElement.length > 0) {\n              $focusedElement.focus();\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .off('click' + elementEventNamespace)\n              ;\n            }\n          },\n          bodyStyle: function() {\n            if($body.attr('style') === '') {\n              module.verbose('Removing style attribute');\n              $body.removeAttr('style');\n            }\n          },\n          screenHeight: function() {\n            module.debug('Removing page height');\n            $body\n              .css('height', '')\n            ;\n          },\n          keyboardShortcuts: function() {\n            module.verbose('Removing keyboard shortcuts');\n            $document\n              .off('keyup' + eventNamespace)\n            ;\n          },\n          scrolling: function() {\n            $dimmable.removeClass(className.scrolling);\n            $module.removeClass(className.scrolling);\n          }\n        },\n\n        cacheSizes: function() {\n          var\n            modalHeight = $module.outerHeight()\n          ;\n          if(module.cache === undefined || modalHeight !== 0) {\n            module.cache = {\n              pageHeight    : $(document).outerHeight(),\n              height        : modalHeight + settings.offset,\n              contextHeight : (settings.context == 'body')\n                ? $(window).height()\n                : $dimmable.height()\n            };\n          }\n          module.debug('Caching modal and container sizes', module.cache);\n        },\n\n        can: {\n          fit: function() {\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return $module.transition('is supported')\n              ? $module.transition('is animating')\n              : $module.is(':visible')\n            ;\n          },\n          scrolling: function() {\n            return $dimmable.hasClass(className.scrolling);\n          },\n          modernBrowser: function() {\n            // appName for IE11 reports 'Netscape' can no longer use\n            return !(window.ActiveXObject || \"ActiveXObject\" in window);\n          }\n        },\n\n        set: {\n          autofocus: function() {\n            var\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\n              $autofocus = $inputs.filter('[autofocus]'),\n              $input     = ($autofocus.length > 0)\n                ? $autofocus.first()\n                : $inputs.first()\n            ;\n            if($input.length > 0) {\n              $input.focus();\n            }\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .on('click' + elementEventNamespace, module.event.click)\n              ;\n            }\n          },\n          dimmerSettings: function() {\n            if($.fn.dimmer === undefined) {\n              module.error(error.dimmer);\n              return;\n            }\n            var\n              defaultSettings = {\n                debug      : settings.debug,\n                dimmerName : 'modals',\n                variation  : false,\n                closable   : 'auto',\n                duration   : {\n                  show     : settings.duration,\n                  hide     : settings.duration\n                }\n              },\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n            ;\n            if(settings.inverted) {\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\n                ? dimmerSettings.variation + ' inverted'\n                : 'inverted'\n              ;\n              $dimmer.addClass(className.inverted);\n            }\n            else {\n              $dimmer.removeClass(className.inverted);\n            }\n            if(settings.blurring) {\n              $dimmable.addClass(className.blurring);\n            }\n            else {\n              $dimmable.removeClass(className.blurring);\n            }\n            $context.dimmer('setting', dimmerSettings);\n          },\n          screenHeight: function() {\n            if( module.can.fit() ) {\n              $body.css('height', '');\n            }\n            else {\n              module.debug('Modal is taller than page content, resizing page height');\n              $body\n                .css('height', module.cache.height + (settings.padding * 2) )\n              ;\n            }\n          },\n          active: function() {\n            $module.addClass(className.active);\n          },\n          scrolling: function() {\n            $dimmable.addClass(className.scrolling);\n            $module.addClass(className.scrolling);\n          },\n          type: function() {\n            if(module.can.fit()) {\n              module.verbose('Modal fits on screen');\n              if(!module.others.active() && !module.others.animating()) {\n                module.remove.scrolling();\n              }\n            }\n            else {\n              module.verbose('Modal cannot fit on screen setting to scrolling');\n              module.set.scrolling();\n            }\n          },\n          position: function() {\n            module.verbose('Centering modal on page', module.cache);\n            if(module.can.fit()) {\n              $module\n                .css({\n                  top: '',\n                  marginTop: -(module.cache.height / 2)\n                })\n              ;\n            }\n            else {\n              $module\n                .css({\n                  marginTop : '',\n                  top       : $document.scrollTop()\n                })\n              ;\n            }\n          },\n          undetached: function() {\n            $dimmable.addClass(className.undetached);\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.modal.settings = {\n\n  name           : 'Modal',\n  namespace      : 'modal',\n\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n\n  observeChanges : false,\n\n  allowMultiple  : false,\n  detachable     : true,\n  closable       : true,\n  autofocus      : true,\n\n  inverted       : false,\n  blurring       : false,\n\n  dimmerSettings : {\n    closable : false,\n    useCSS   : true\n  },\n\n  // whether to use keyboard shortcuts\n  keyboardShortcuts: true,\n\n  context    : 'body',\n\n  queue      : false,\n  duration   : 500,\n  offset     : 0,\n  transition : 'scale',\n\n  // padding with edge of page\n  padding    : 50,\n\n  // called before show animation\n  onShow     : function(){},\n\n  // called after show animation\n  onVisible  : function(){},\n\n  // called before hide animation\n  onHide     : function(){ return true; },\n\n  // called after hide animation\n  onHidden   : function(){},\n\n  // called after approve selector match\n  onApprove  : function(){ return true; },\n\n  // called after deny selector match\n  onDeny     : function(){ return true; },\n\n  selector    : {\n    close    : '> .close',\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\n    modal    : '.ui.modal'\n  },\n  error : {\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\n    method    : 'The method you called is not defined.',\n    notFound  : 'The element you specified could not be found'\n  },\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    blurring   : 'blurring',\n    inverted   : 'inverted',\n    scrolling  : 'scrolling',\n    undetached : 'undetached'\n  }\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Nag\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.nag = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\n          : $.extend({}, $.fn.nag.settings),\n\n        className       = settings.className,\n        selector        = settings.selector,\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        $close          = $module.find(selector.close),\n        $context        = (settings.context)\n          ? $(settings.context)\n          : $('body'),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        moduleOffset,\n        moduleHeight,\n\n        contextWidth,\n        contextHeight,\n        contextOffset,\n\n        yOffset,\n        yPosition,\n\n        timer,\n        module,\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); }\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing element');\n\n          $module\n            .on('click' + eventNamespace, selector.close, module.dismiss)\n            .data(moduleNamespace, module)\n          ;\n\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\n            $module\n              .detach()\n              .prependTo($context)\n            ;\n          }\n\n          if(settings.displayTime > 0) {\n            setTimeout(module.hide, settings.displayTime);\n          }\n          module.show();\n        },\n\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        show: function() {\n          if( module.should.show() && !$module.is(':visible') ) {\n            module.debug('Showing nag', settings.animation.show);\n            if(settings.animation.show == 'fade') {\n              $module\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            else {\n              $module\n                .slideDown(settings.duration, settings.easing)\n              ;\n            }\n          }\n        },\n\n        hide: function() {\n          module.debug('Showing nag', settings.animation.hide);\n          if(settings.animation.show == 'fade') {\n            $module\n              .fadeIn(settings.duration, settings.easing)\n            ;\n          }\n          else {\n            $module\n              .slideUp(settings.duration, settings.easing)\n            ;\n          }\n        },\n\n        onHide: function() {\n          module.debug('Removing nag', settings.animation.hide);\n          $module.remove();\n          if (settings.onHide) {\n            settings.onHide();\n          }\n        },\n\n        dismiss: function(event) {\n          if(settings.storageMethod) {\n            module.storage.set(settings.key, settings.value);\n          }\n          module.hide();\n          event.stopImmediatePropagation();\n          event.preventDefault();\n        },\n\n        should: {\n          show: function() {\n            if(settings.persist) {\n              module.debug('Persistent nag is set, can show nag');\n              return true;\n            }\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\n              return true;\n            }\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\n            return false;\n          }\n        },\n\n        get: {\n          storageOptions: function() {\n            var\n              options = {}\n            ;\n            if(settings.expires) {\n              options.expires = settings.expires;\n            }\n            if(settings.domain) {\n              options.domain = settings.domain;\n            }\n            if(settings.path) {\n              options.path = settings.path;\n            }\n            return options;\n          }\n        },\n\n        clear: function() {\n          module.storage.remove(settings.key);\n        },\n\n        storage: {\n          set: function(key, value) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.setItem(key, value);\n              module.debug('Value stored using local storage', key, value);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.setItem(key, value);\n              module.debug('Value stored using session storage', key, value);\n            }\n            else if($.cookie !== undefined) {\n              $.cookie(key, value, options);\n              module.debug('Value stored using cookie', key, value, options);\n            }\n            else {\n              module.error(error.noCookieStorage);\n              return;\n            }\n          },\n          get: function(key, value) {\n            var\n              storedValue\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              storedValue = window.localStorage.getItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              storedValue = window.sessionStorage.getItem(key);\n            }\n            // get by cookie\n            else if($.cookie !== undefined) {\n              storedValue = $.cookie(key);\n            }\n            else {\n              module.error(error.noCookieStorage);\n            }\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n              storedValue = undefined;\n            }\n            return storedValue;\n          },\n          remove: function(key) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.removeItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.removeItem(key);\n            }\n            // store by cookie\n            else if($.cookie !== undefined) {\n              $.removeCookie(key, options);\n            }\n            else {\n              module.error(error.noStorage);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.nag.settings = {\n\n  name        : 'Nag',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  namespace   : 'Nag',\n\n  // allows cookie to be overridden\n  persist     : false,\n\n  // set to zero to require manually dismissal, otherwise hides on its own\n  displayTime : 0,\n\n  animation   : {\n    show : 'slide',\n    hide : 'slide'\n  },\n\n  context       : false,\n  detachable    : false,\n\n  expires       : 30,\n  domain        : false,\n  path          : '/',\n\n  // type of storage to use\n  storageMethod : 'cookie',\n\n  // value to store in dismissed localstorage/cookie\n  key           : 'nag',\n  value         : 'dismiss',\n\n  error: {\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\n    method          : 'The method you called is not defined.'\n  },\n\n  className     : {\n    bottom : 'bottom',\n    fixed  : 'fixed'\n  },\n\n  selector      : {\n    close : '.close.icon'\n  },\n\n  speed         : 500,\n  easing        : 'easeOutQuad',\n\n  onHide: function() {}\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Popup\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.popup = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n    $window        = $(window),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = (true),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\n          : $.extend({}, $.fn.popup.settings),\n\n        selector           = settings.selector,\n        className          = settings.className,\n        error              = settings.error,\n        metadata           = settings.metadata,\n        namespace          = settings.namespace,\n\n        eventNamespace     = '.' + settings.namespace,\n        moduleNamespace    = 'module-' + namespace,\n\n        $module            = $(this),\n        $context           = $(settings.context),\n        $scrollContext     = $(settings.scrollContext),\n        $boundary          = $(settings.boundary),\n        $target            = (settings.target)\n          ? $(settings.target)\n          : $module,\n\n        $popup,\n        $offsetParent,\n\n        searchDepth        = 0,\n        triedPositions     = false,\n        openedWithTouch    = false,\n\n        element            = this,\n        instance           = $module.data(moduleNamespace),\n\n        documentObserver,\n        elementNamespace,\n        id,\n        module\n      ;\n\n      module = {\n\n        // binds events\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.createID();\n          module.bind.events();\n          if(!module.exists() && settings.preserve) {\n            module.create();\n          }\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', documentObserver);\n          }\n        },\n\n        refresh: function() {\n          if(settings.popup) {\n            $popup = $(settings.popup).eq(0);\n          }\n          else {\n            if(settings.inline) {\n              $popup = $target.nextAll(selector.popup).eq(0);\n              settings.popup = $popup;\n            }\n          }\n          if(settings.popup) {\n            $popup.addClass(className.loading);\n            $offsetParent = module.get.offsetParent($target);\n            $popup.removeClass(className.loading);\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\n              module.debug('Moving popup to the same offset parent as target');\n              $popup\n                .detach()\n                .appendTo($offsetParent)\n              ;\n            }\n          }\n          else {\n            $offsetParent = (settings.inline)\n              ? module.get.offsetParent($target)\n              : module.has.popup()\n                ? module.get.offsetParent($target)\n                : $body\n            ;\n          }\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\n            module.debug('Setting page as offset parent');\n            $offsetParent = $body;\n          }\n          if( module.get.variation() ) {\n            module.set.variation();\n          }\n        },\n\n        reposition: function() {\n          module.refresh();\n          module.set.position();\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous module');\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          // remove element only if was created dynamically\n          if($popup && !settings.preserve) {\n            module.removePopup();\n          }\n          // clear all timeouts\n          clearTimeout(module.hideTimer);\n          clearTimeout(module.showTimer);\n          // remove events\n          module.unbind.close();\n          module.unbind.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        event: {\n          start:  function(event) {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.show\n                : settings.delay\n            ;\n            clearTimeout(module.hideTimer);\n            if(!openedWithTouch) {\n              module.showTimer = setTimeout(module.show, delay);\n            }\n          },\n          end:  function() {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.hide\n                : settings.delay\n            ;\n            clearTimeout(module.showTimer);\n            module.hideTimer = setTimeout(module.hide, delay);\n          },\n          touchstart: function(event) {\n            openedWithTouch = true;\n            module.show();\n          },\n          resize: function() {\n            if( module.is.visible() ) {\n              module.set.position();\n            }\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          hideGracefully: function(event) {\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target),\n              inPopup = ($target.closest(selector.popup).length > 0)\n            ;\n            // don't close on clicks inside popup\n            if(event && !inPopup && isInDOM) {\n              module.debug('Click occurred outside popup hiding popup');\n              module.hide();\n            }\n            else {\n              module.debug('Click was inside popup, keeping popup open');\n            }\n          }\n        },\n\n        // generates popup html from metadata\n        create: function() {\n          var\n            html      = module.get.html(),\n            title     = module.get.title(),\n            content   = module.get.content()\n          ;\n\n          if(html || content || title) {\n            module.debug('Creating pop-up html');\n            if(!html) {\n              html = settings.templates.popup({\n                title   : title,\n                content : content\n              });\n            }\n            $popup = $('<div/>')\n              .addClass(className.popup)\n              .data(metadata.activator, $module)\n              .html(html)\n            ;\n            if(settings.inline) {\n              module.verbose('Inserting popup element inline', $popup);\n              $popup\n                .insertAfter($module)\n              ;\n            }\n            else {\n              module.verbose('Appending popup element to body', $popup);\n              $popup\n                .appendTo( $context )\n              ;\n            }\n            module.refresh();\n            module.set.variation();\n\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n            settings.onCreate.call($popup, element);\n          }\n          else if($target.next(selector.popup).length !== 0) {\n            module.verbose('Pre-existing popup found');\n            settings.inline = true;\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else if(settings.popup) {\n            $(settings.popup).data(metadata.activator, $module);\n            module.verbose('Used popup specified in settings');\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else {\n            module.debug('No content specified skipping display', element);\n          }\n        },\n\n        createID: function() {\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\n          elementNamespace = '.' + id;\n          module.verbose('Creating unique id for element', id);\n        },\n\n        // determines popup state\n        toggle: function() {\n          module.debug('Toggling pop-up');\n          if( module.is.hidden() ) {\n            module.debug('Popup is hidden, showing pop-up');\n            module.unbind.close();\n            module.show();\n          }\n          else {\n            module.debug('Popup is visible, hiding pop-up');\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = callback || function(){};\n          module.debug('Showing pop-up', settings.transition);\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\n            if( !module.exists() ) {\n              module.create();\n            }\n            if(settings.onShow.call($popup, element) === false) {\n              module.debug('onShow callback returned false, cancelling popup animation');\n              return;\n            }\n            else if(!settings.preserve && !settings.popup) {\n              module.refresh();\n            }\n            if( $popup && module.set.position() ) {\n              module.save.conditions();\n              if(settings.exclusive) {\n                module.hideAll();\n              }\n              module.animate.show(callback);\n            }\n          }\n        },\n\n\n        hide: function(callback) {\n          callback = callback || function(){};\n          if( module.is.visible() || module.is.animating() ) {\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            module.remove.visible();\n            module.unbind.close();\n            module.restore.conditions();\n            module.animate.hide(callback);\n          }\n        },\n\n        hideAll: function() {\n          $(selector.popup)\n            .filter('.' + className.popupVisible)\n            .each(function() {\n              $(this)\n                .data(metadata.activator)\n                  .popup('hide')\n              ;\n            })\n          ;\n        },\n        exists: function() {\n          if(!$popup) {\n            return false;\n          }\n          if(settings.inline || settings.popup) {\n            return ( module.has.popup() );\n          }\n          else {\n            return ( $popup.closest($context).length >= 1 )\n              ? true\n              : false\n            ;\n          }\n        },\n\n        removePopup: function() {\n          if( module.has.popup() && !settings.popup) {\n            module.debug('Removing popup', $popup);\n            $popup.remove();\n            $popup = undefined;\n            settings.onRemove.call($popup, element);\n          }\n        },\n\n        save: {\n          conditions: function() {\n            module.cache = {\n              title: $module.attr('title')\n            };\n            if (module.cache.title) {\n              $module.removeAttr('title');\n            }\n            module.verbose('Saving original attributes', module.cache.title);\n          }\n        },\n        restore: {\n          conditions: function() {\n            if(module.cache && module.cache.title) {\n              $module.attr('title', module.cache.title);\n              module.verbose('Restoring original attributes', module.cache.title);\n            }\n            return true;\n          }\n        },\n        supports: {\n          svg: function() {\n            return (typeof SVGGraphicsElement === 'undefined');\n          }\n        },\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.set.visible();\n              $popup\n                .transition({\n                  animation  : settings.transition + ' in',\n                  queue      : false,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    module.bind.close();\n                    callback.call($popup, element);\n                    settings.onVisible.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            module.debug('Hiding pop-up');\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $popup\n                .transition({\n                  animation  : settings.transition + ' out',\n                  queue      : false,\n                  duration   : settings.duration,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  onComplete : function() {\n                    module.reset();\n                    callback.call($popup, element);\n                    settings.onHidden.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        change: {\n          content: function(html) {\n            $popup.html(html);\n          }\n        },\n\n        get: {\n          html: function() {\n            $module.removeData(metadata.html);\n            return $module.data(metadata.html) || settings.html;\n          },\n          title: function() {\n            $module.removeData(metadata.title);\n            return $module.data(metadata.title) || settings.title;\n          },\n          content: function() {\n            $module.removeData(metadata.content);\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\n          },\n          variation: function() {\n            $module.removeData(metadata.variation);\n            return $module.data(metadata.variation) || settings.variation;\n          },\n          popup: function() {\n            return $popup;\n          },\n          popupOffset: function() {\n            return $popup.offset();\n          },\n          calculations: function() {\n            var\n              targetElement    = $target[0],\n              isWindow         = ($boundary[0] == window),\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\n                ? $target.position()\n                : $target.offset(),\n              screenPosition = (isWindow)\n                ? { top: 0, left: 0 }\n                : $boundary.offset(),\n              calculations   = {},\n              scroll = (isWindow)\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\n                : { top: 0, left: 0},\n              screen\n            ;\n            calculations = {\n              // element which is launching popup\n              target : {\n                element : $target[0],\n                width   : $target.outerWidth(),\n                height  : $target.outerHeight(),\n                top     : targetPosition.top,\n                left    : targetPosition.left,\n                margin  : {}\n              },\n              // popup itself\n              popup : {\n                width  : $popup.outerWidth(),\n                height : $popup.outerHeight()\n              },\n              // offset container (or 3d context)\n              parent : {\n                width  : $offsetParent.outerWidth(),\n                height : $offsetParent.outerHeight()\n              },\n              // screen boundaries\n              screen : {\n                top  : screenPosition.top,\n                left : screenPosition.left,\n                scroll: {\n                  top  : scroll.top,\n                  left : scroll.left\n                },\n                width  : $boundary.width(),\n                height : $boundary.height()\n              }\n            };\n\n            // add in container calcs if fluid\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              calculations.container = {\n                width: $popup.parent().outerWidth()\n              };\n              calculations.popup.width = calculations.container.width;\n            }\n\n            // add in margins if inline\n            calculations.target.margin.top = (settings.inline)\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\n              : 0\n            ;\n            calculations.target.margin.left = (settings.inline)\n              ? module.is.rtl()\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\n              : 0\n            ;\n            // calculate screen boundaries\n            screen = calculations.screen;\n            calculations.boundary = {\n              top    : screen.top + screen.scroll.top,\n              bottom : screen.top + screen.scroll.top + screen.height,\n              left   : screen.left + screen.scroll.left,\n              right  : screen.left + screen.scroll.left + screen.width\n            };\n            return calculations;\n          },\n          id: function() {\n            return id;\n          },\n          startEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseenter';\n            }\n            else if(settings.on == 'focus') {\n              return 'focus';\n            }\n            return false;\n          },\n          scrollEvent: function() {\n            return 'scroll';\n          },\n          endEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseleave';\n            }\n            else if(settings.on == 'focus') {\n              return 'blur';\n            }\n            return false;\n          },\n          distanceFromBoundary: function(offset, calculations) {\n            var\n              distanceFromBoundary = {},\n              popup,\n              boundary\n            ;\n            calculations = calculations || module.get.calculations();\n\n            // shorthand\n            popup        = calculations.popup;\n            boundary     = calculations.boundary;\n\n            if(offset) {\n              distanceFromBoundary = {\n                top    : (offset.top - boundary.top),\n                left   : (offset.left - boundary.left),\n                right  : (boundary.right - (offset.left + popup.width) ),\n                bottom : (boundary.bottom - (offset.top + popup.height) )\n              };\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\n            }\n            return distanceFromBoundary;\n          },\n          offsetParent: function($target) {\n            var\n              element = ($target !== undefined)\n                ? $target[0]\n                : $module[0],\n              parentNode = element.parentNode,\n              $node    = $(parentNode)\n            ;\n            if(parentNode) {\n              var\n                is2D     = ($node.css('transform') === 'none'),\n                isStatic = ($node.css('position') === 'static'),\n                isHTML   = $node.is('html')\n              ;\n              while(parentNode && !isHTML && isStatic && is2D) {\n                parentNode = parentNode.parentNode;\n                $node    = $(parentNode);\n                is2D     = ($node.css('transform') === 'none');\n                isStatic = ($node.css('position') === 'static');\n                isHTML   = $node.is('html');\n              }\n            }\n            return ($node && $node.length > 0)\n              ? $node\n              : $()\n            ;\n          },\n          positions: function() {\n            return {\n              'top left'      : false,\n              'top center'    : false,\n              'top right'     : false,\n              'bottom left'   : false,\n              'bottom center' : false,\n              'bottom right'  : false,\n              'left center'   : false,\n              'right center'  : false\n            };\n          },\n          nextPosition: function(position) {\n            var\n              positions          = position.split(' '),\n              verticalPosition   = positions[0],\n              horizontalPosition = positions[1],\n              opposite = {\n                top    : 'bottom',\n                bottom : 'top',\n                left   : 'right',\n                right  : 'left'\n              },\n              adjacent = {\n                left   : 'center',\n                center : 'right',\n                right  : 'left'\n              },\n              backup = {\n                'top left'      : 'top center',\n                'top center'    : 'top right',\n                'top right'     : 'right center',\n                'right center'  : 'bottom right',\n                'bottom right'  : 'bottom center',\n                'bottom center' : 'bottom left',\n                'bottom left'   : 'left center',\n                'left center'   : 'top left'\n              },\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\n              oppositeTried = false,\n              adjacentTried = false,\n              nextPosition  = false\n            ;\n            if(!triedPositions) {\n              module.verbose('All available positions available');\n              triedPositions = module.get.positions();\n            }\n\n            module.debug('Recording last position tried', position);\n            triedPositions[position] = true;\n\n            if(settings.prefer === 'opposite') {\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\n              nextPosition  = nextPosition.join(' ');\n              oppositeTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying opposite strategy', nextPosition);\n            }\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\n              nextPosition  = nextPosition.join(' ');\n              adjacentTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying adjacent strategy', nextPosition);\n            }\n            if(adjacentTried || oppositeTried) {\n              module.debug('Using backup position', nextPosition);\n              nextPosition = backup[position];\n            }\n            return nextPosition;\n          }\n        },\n\n        set: {\n          position: function(position, calculations) {\n\n            // exit conditions\n            if($target.length === 0 || $popup.length === 0) {\n              module.error(error.notFound);\n              return;\n            }\n            var\n              offset,\n              distanceAway,\n              target,\n              popup,\n              parent,\n              positioning,\n              popupOffset,\n              distanceFromBoundary\n            ;\n\n            calculations = calculations || module.get.calculations();\n            position     = position     || $module.data(metadata.position) || settings.position;\n\n            offset       = $module.data(metadata.offset) || settings.offset;\n            distanceAway = settings.distanceAway;\n\n            // shorthand\n            target = calculations.target;\n            popup  = calculations.popup;\n            parent = calculations.parent;\n\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\n              module.debug('Popup target is hidden, no action taken');\n              return false;\n            }\n\n            if(settings.inline) {\n              module.debug('Adding margin to calculation', target.margin);\n              if(position == 'left center' || position == 'right center') {\n                offset       +=  target.margin.top;\n                distanceAway += -target.margin.left;\n              }\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\n                offset       += target.margin.left;\n                distanceAway -= target.margin.top;\n              }\n              else {\n                offset       += target.margin.left;\n                distanceAway += target.margin.top;\n              }\n            }\n\n            module.debug('Determining popup position from calculations', position, calculations);\n\n            if (module.is.rtl()) {\n              position = position.replace(/left|right/g, function (match) {\n                return (match == 'left')\n                  ? 'right'\n                  : 'left'\n                ;\n              });\n              module.debug('RTL: Popup position updated', position);\n            }\n\n            // if last attempt use specified last resort position\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\n              position = settings.lastResort;\n            }\n\n            switch (position) {\n              case 'top left':\n                positioning = {\n                  top    : 'auto',\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + offset,\n                  right  : 'auto'\n                };\n              break;\n              case 'top center':\n                positioning = {\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  top    : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'top right':\n                positioning = {\n                  bottom :  parent.height - target.top + distanceAway,\n                  right  :  parent.width - target.left - target.width - offset,\n                  top    : 'auto',\n                  left   : 'auto'\n                };\n              break;\n              case 'left center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  right  : parent.width - target.left + distanceAway,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n              case 'right center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  left   : target.left + target.width + distanceAway,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom left':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom center':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom right':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  right  : parent.width - target.left  - target.width - offset,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n            }\n            if(positioning === undefined) {\n              module.error(error.invalidPosition, position);\n            }\n\n            module.debug('Calculated popup positioning values', positioning);\n\n            // tentatively place on stage\n            $popup\n              .css(positioning)\n              .removeClass(className.position)\n              .addClass(position)\n              .addClass(className.loading)\n            ;\n\n            popupOffset = module.get.popupOffset();\n\n            // see if any boundaries are surpassed with this tentative position\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\n\n            if( module.is.offstage(distanceFromBoundary, position) ) {\n              module.debug('Position is outside viewport', position);\n              if(searchDepth < settings.maxSearchDepth) {\n                searchDepth++;\n                position = module.get.nextPosition(position);\n                module.debug('Trying new position', position);\n                return ($popup)\n                  ? module.set.position(position, calculations)\n                  : false\n                ;\n              }\n              else {\n                if(settings.lastResort) {\n                  module.debug('No position found, showing with last position');\n                }\n                else {\n                  module.debug('Popup could not find a position to display', $popup);\n                  module.error(error.cannotPlace, element);\n                  module.remove.attempts();\n                  module.remove.loading();\n                  module.reset();\n                  settings.onUnplaceable.call($popup, element);\n                  return false;\n                }\n              }\n            }\n            module.debug('Position is on stage', position);\n            module.remove.attempts();\n            module.remove.loading();\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              module.set.fluidWidth(calculations);\n            }\n            return true;\n          },\n\n          fluidWidth: function(calculations) {\n            calculations = calculations || module.get.calculations();\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\n            $popup.css('width', calculations.container.width);\n          },\n\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation && module.has.popup() ) {\n              module.verbose('Adding variation to popup', variation);\n              $popup.addClass(variation);\n            }\n          },\n\n          visible: function() {\n            $module.addClass(className.visible);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $popup.removeClass(className.loading);\n          },\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation) {\n              module.verbose('Removing variation', variation);\n              $popup.removeClass(variation);\n            }\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          attempts: function() {\n            module.verbose('Resetting all searched positions');\n            searchDepth    = 0;\n            triedPositions = false;\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding popup events to module');\n            if(settings.on == 'click') {\n              $module\n                .on('click' + eventNamespace, module.toggle)\n              ;\n            }\n            if(settings.on == 'hover' && hasTouch) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.touchstart)\n              ;\n            }\n            if( module.get.startEvent() ) {\n              $module\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\n              ;\n            }\n            if(settings.target) {\n              module.debug('Target set to element', $target);\n            }\n            $window.on('resize' + elementNamespace, module.event.resize);\n          },\n          popup: function() {\n            module.verbose('Allowing hover events on popup to prevent closing');\n            if( $popup && module.has.popup() ) {\n              $popup\n                .on('mouseenter' + eventNamespace, module.event.start)\n                .on('mouseleave' + eventNamespace, module.event.end)\n              ;\n            }\n          },\n          close: function() {\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\n              module.bind.closeOnScroll();\n            }\n            if(settings.on == 'hover' && openedWithTouch) {\n              module.bind.touchClose();\n            }\n            if(settings.on == 'click' && settings.closable) {\n              module.bind.clickaway();\n            }\n          },\n          closeOnScroll: function() {\n            module.verbose('Binding scroll close event to document');\n            $scrollContext\n              .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\n            ;\n          },\n          touchClose: function() {\n            module.verbose('Binding popup touchclose event to document');\n            $document\n              .on('touchstart' + elementNamespace, function(event) {\n                module.verbose('Touched away from popup');\n                module.event.hideGracefully.call(element, event);\n              })\n            ;\n          },\n          clickaway: function() {\n            module.verbose('Binding popup close event to document');\n            $document\n              .on('click' + elementNamespace, function(event) {\n                module.verbose('Clicked away from popup');\n                module.event.hideGracefully.call(element, event);\n              })\n            ;\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $window\n              .off(elementNamespace)\n            ;\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          close: function() {\n            $document\n              .off(elementNamespace)\n            ;\n            $scrollContext\n              .off(elementNamespace)\n            ;\n          },\n        },\n\n        has: {\n          popup: function() {\n            return ($popup && $popup.length > 0);\n          }\n        },\n\n        is: {\n          offstage: function(distanceFromBoundary, position) {\n            var\n              offstage = []\n            ;\n            // return boundaries that have been surpassed\n            $.each(distanceFromBoundary, function(direction, distance) {\n              if(distance < -settings.jitter) {\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\n                offstage.push(direction);\n              }\n            });\n            if(offstage.length > 0) {\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          svg: function(element) {\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\n          },\n          fluid: function() {\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\n          },\n          visible: function() {\n            return ($popup !== undefined && $popup.hasClass(className.popupVisible));\n          },\n          dropdown: function() {\n            return $module.hasClass(className.dropdown);\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          rtl: function () {\n            return $module.css('direction') == 'rtl';\n          }\n        },\n\n        reset: function() {\n          module.remove.visible();\n          if(settings.preserve) {\n            if($.fn.transition !== undefined) {\n              $popup\n                .transition('remove transition')\n              ;\n            }\n          }\n          else {\n            module.removePopup();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.popup.settings = {\n\n  name           : 'Popup',\n\n  // module settings\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n  namespace      : 'popup',\n\n  // whether it should use dom mutation observers\n  observeChanges : true,\n\n  // callback only when element added to dom\n  onCreate       : function(){},\n\n  // callback before element removed from dom\n  onRemove       : function(){},\n\n  // callback before show animation\n  onShow         : function(){},\n\n  // callback after show animation\n  onVisible      : function(){},\n\n  // callback before hide animation\n  onHide         : function(){},\n\n  // callback when popup cannot be positioned in visible screen\n  onUnplaceable  : function(){},\n\n  // callback after hide animation\n  onHidden       : function(){},\n\n  // when to show popup\n  on             : 'hover',\n\n  // element to use to determine if popup is out of boundary\n  boundary       : window,\n\n  // whether to add touchstart events when using hover\n  addTouchEvents : true,\n\n  // default position relative to element\n  position       : 'top left',\n\n  // name of variation to use\n  variation      : '',\n\n  // whether popup should be moved to context\n  movePopup      : true,\n\n  // element which popup should be relative to\n  target         : false,\n\n  // jq selector or element that should be used as popup\n  popup          : false,\n\n  // popup should remain inline next to activator\n  inline         : false,\n\n  // popup should be removed from page on hide\n  preserve       : false,\n\n  // popup should not close when being hovered on\n  hoverable      : false,\n\n  // explicitly set content\n  content        : false,\n\n  // explicitly set html\n  html           : false,\n\n  // explicitly set title\n  title          : false,\n\n  // whether automatically close on clickaway when on click\n  closable       : true,\n\n  // automatically hide on scroll\n  hideOnScroll   : 'auto',\n\n  // hide other popups on show\n  exclusive      : false,\n\n  // context to attach popups\n  context        : 'body',\n\n  // context for binding scroll events\n  scrollContext  : window,\n\n  // position to prefer when calculating new position\n  prefer         : 'opposite',\n\n  // specify position to appear even if it doesn't fit\n  lastResort     : false,\n\n  // delay used to prevent accidental refiring of animations due to user error\n  delay        : {\n    show : 50,\n    hide : 70\n  },\n\n  // whether fluid variation should assign width explicitly\n  setFluidWidth  : true,\n\n  // transition settings\n  duration       : 200,\n  transition     : 'scale',\n\n  // distance away from activating element in px\n  distanceAway   : 0,\n\n  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\n  jitter         : 2,\n\n  // offset on aligning axis from calculated position\n  offset         : 0,\n\n  // maximum times to look for a position before failing (9 positions total)\n  maxSearchDepth : 15,\n\n  error: {\n    invalidPosition : 'The position you specified is not a valid position',\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\n    method          : 'The method you called is not defined.',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\n    notFound        : 'The target or popup you specified does not exist on the page'\n  },\n\n  metadata: {\n    activator : 'activator',\n    content   : 'content',\n    html      : 'html',\n    offset    : 'offset',\n    position  : 'position',\n    title     : 'title',\n    variation : 'variation'\n  },\n\n  className   : {\n    active       : 'active',\n    animating    : 'animating',\n    dropdown     : 'dropdown',\n    fluid        : 'fluid',\n    loading      : 'loading',\n    popup        : 'ui popup',\n    position     : 'top left center bottom right',\n    visible      : 'visible',\n    popupVisible : 'visible'\n  },\n\n  selector    : {\n    popup    : '.ui.popup'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    popup: function(text) {\n      var\n        html   = '',\n        escape = $.fn.popup.settings.templates.escape\n      ;\n      if(typeof text !== undefined) {\n        if(typeof text.title !== undefined && text.title) {\n          text.title = escape(text.title);\n          html += '<div class=\"header\">' + text.title + '</div>';\n        }\n        if(typeof text.content !== undefined && text.content) {\n          text.content = escape(text.content);\n          html += '<div class=\"content\">' + text.content + '</div>';\n        }\n      }\n      return html;\n    }\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\nvar\n  global = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.fn.progress = function(parameters) {\n  var\n    $allModules    = $(this),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n          : $.extend({}, $.fn.progress.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $bar            = $(this).find(selector.bar),\n        $progress       = $(this).find(selector.progress),\n        $label          = $(this).find(selector.label),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        animating = false,\n        transitionEnd,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing progress bar', settings);\n\n          module.set.duration();\n          module.set.transitionEvent();\n\n          module.read.metadata();\n          module.read.settings();\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n\n        reset: function() {\n          module.remove.nextValue();\n          module.update.progress(0);\n        },\n\n        complete: function() {\n          if(module.percent === undefined || module.percent < 100) {\n            module.remove.progressPoll();\n            module.set.percent(100);\n          }\n        },\n\n        read: {\n          metadata: function() {\n            var\n              data = {\n                percent : $module.data(metadata.percent),\n                total   : $module.data(metadata.total),\n                value   : $module.data(metadata.value)\n              }\n            ;\n            if(data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n            if(data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n            if(data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function() {\n            if(settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n            if(settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n            if(settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n\n        bind: {\n          transitionEnd: function(callback) {\n            var\n              transitionEnd = module.get.transitionEnd()\n            ;\n            $bar\n              .one(transitionEnd + eventNamespace, function(event) {\n                clearTimeout(module.failSafeTimer);\n                callback.call(this, event);\n              })\n            ;\n            module.failSafeTimer = setTimeout(function() {\n              $bar.triggerHandler(transitionEnd);\n            }, settings.duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        increment: function(incrementValue) {\n          var\n            maxValue,\n            startValue,\n            newValue\n          ;\n          if( module.has.total() ) {\n            startValue     = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue       = startValue + incrementValue;\n          }\n          else {\n            startValue     = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n\n            newValue       = startValue + incrementValue;\n            maxValue       = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        decrement: function(decrementValue) {\n          var\n            total     = module.get.total(),\n            startValue,\n            newValue\n          ;\n          if(total) {\n            startValue     =  module.get.value();\n            decrementValue =  decrementValue || 1;\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          }\n          else {\n            startValue     =  module.get.percent();\n            decrementValue =  decrementValue || module.get.randomValue();\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n\n        has: {\n          progressPoll: function() {\n            return module.progressPoll;\n          },\n          total: function() {\n            return (module.get.total() !== false);\n          }\n        },\n\n        get: {\n          text: function(templateText) {\n            var\n              value   = module.value                || 0,\n              total   = module.total                || 0,\n              percent = (animating)\n                ? module.get.displayPercent()\n                : module.percent || 0,\n              left = (module.total > 0)\n                ? (total - value)\n                : (100 - percent)\n            ;\n            templateText = templateText || '';\n            templateText = templateText\n              .replace('{value}', value)\n              .replace('{total}', total)\n              .replace('{left}', left)\n              .replace('{percent}', percent)\n            ;\n            module.verbose('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n\n          normalizedValue: function(value) {\n            if(value < 0) {\n              module.debug('Value cannot decrement below 0');\n              return 0;\n            }\n            if(module.has.total()) {\n              if(value > module.total) {\n                module.debug('Value cannot increment above total', module.total);\n                return module.total;\n              }\n            }\n            else if(value > 100 ) {\n              module.debug('Value cannot increment above 100 percent');\n              return 100;\n            }\n            return value;\n          },\n\n          updateInterval: function() {\n            if(settings.updateInterval == 'auto') {\n              return settings.duration;\n            }\n            return settings.updateInterval;\n          },\n\n          randomValue: function() {\n            module.debug('Generating random increment percentage');\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n          },\n\n          numericValue: function(value) {\n            return (typeof value === 'string')\n              ? (value.replace(/[^\\d.]/g, '') !== '')\n                ? +(value.replace(/[^\\d.]/g, ''))\n                : false\n              : value\n            ;\n          },\n\n          transitionEnd: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function() {\n            var\n              barWidth       = $bar.width(),\n              totalWidth     = $module.width(),\n              minDisplay     = parseInt($bar.css('min-width'), 10),\n              displayPercent = (barWidth > minDisplay)\n                ? (barWidth / totalWidth * 100)\n                : module.percent\n            ;\n            return (settings.precision > 0)\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(displayPercent)\n            ;\n          },\n\n          percent: function() {\n            return module.percent || 0;\n          },\n          value: function() {\n            return module.nextValue || module.value || 0;\n          },\n          total: function() {\n            return module.total || false;\n          }\n        },\n\n        create: {\n          progressPoll: function() {\n            module.progressPoll = setTimeout(function() {\n              module.update.toNextValue();\n              module.remove.progressPoll();\n            }, module.get.updateInterval());\n          },\n        },\n\n        is: {\n          complete: function() {\n            return module.is.success() || module.is.warning() || module.is.error();\n          },\n          success: function() {\n            return $module.hasClass(className.success);\n          },\n          warning: function() {\n            return $module.hasClass(className.warning);\n          },\n          error: function() {\n            return $module.hasClass(className.error);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          visible: function() {\n            return $module.is(':visible');\n          }\n        },\n\n        remove: {\n          progressPoll: function() {\n            module.verbose('Removing progress poll timer');\n            if(module.progressPoll) {\n              clearTimeout(module.progressPoll);\n              delete module.progressPoll;\n            }\n          },\n          nextValue: function() {\n            module.verbose('Removing progress value stored for next update');\n            delete module.nextValue;\n          },\n          state: function() {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function() {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function() {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function() {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function() {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n\n        set: {\n          barWidth: function(value) {\n            if(value > 100) {\n              module.error(error.tooHigh, value);\n            }\n            else if (value < 0) {\n              module.error(error.tooLow, value);\n            }\n            else {\n              $bar\n                .css('width', value + '%')\n              ;\n              $module\n                .attr('data-percent', parseInt(value, 10))\n              ;\n            }\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar\n              .css({\n                'transition-duration':  duration\n              })\n            ;\n          },\n          percent: function(percent) {\n            percent = (typeof percent == 'string')\n              ? +(percent.replace('%', ''))\n              : percent\n            ;\n            // round display percentage\n            percent = (settings.precision > 0)\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(percent)\n            ;\n            module.percent = percent;\n            if( !module.has.total() ) {\n              module.value = (settings.precision > 0)\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n                : Math.round( (percent / 100) * module.total * 10) / 10\n              ;\n              if(settings.limitValues) {\n                module.value = (module.value > 100)\n                  ? 100\n                  : (module.value < 0)\n                    ? 0\n                    : module.value\n                ;\n              }\n            }\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function() {\n            var\n              animationCallback = function() {\n                module.verbose('Bar finished animating, removing continuous label updates');\n                clearInterval(module.interval);\n                animating = false;\n                module.set.labels();\n              }\n            ;\n            clearInterval(module.interval);\n            module.bind.transitionEnd(animationCallback);\n            animating = true;\n            module.interval = setInterval(function() {\n              var\n                isInDOM = $.contains(document.documentElement, element)\n              ;\n              if(!isInDOM) {\n                clearInterval(module.interval);\n                animating = false;\n              }\n              module.set.labels();\n            }, settings.framerate);\n          },\n          labels: function() {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function(text) {\n            text = text || '';\n            if(text) {\n              text = module.get.text(text);\n              module.verbose('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function(percent) {\n            percent = (percent !== undefined)\n              ? percent\n              : module.percent\n            ;\n            if(percent === 100) {\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              }\n              else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n                module.remove.progressPoll();\n              }\n            }\n            else if(percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            }\n            else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function(text) {\n            if(text !== undefined) {\n              $progress.text( module.get.text(text) );\n            }\n            else if(settings.label == 'ratio' && module.total) {\n              module.verbose('Adding ratio to bar label');\n              $progress.text( module.get.text(settings.text.ratio) );\n            }\n            else if(settings.label == 'percent') {\n              module.verbose('Adding percentage to bar label');\n              $progress.text( module.get.text(settings.text.percent) );\n            }\n          },\n          active: function(text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n            if(settings.showActivity && !module.is.active() ) {\n              $module.addClass(className.active);\n            }\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onActive.call(element, module.value, module.total);\n            });\n          },\n          success : function(text) {\n            text = text || settings.text.success || settings.text.active;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n            if(settings.text.success) {\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\n              module.set.label(text);\n            }\n            else {\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onSuccess.call(element, module.total);\n            });\n          },\n          warning : function(text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onWarning.call(element, module.value, module.total);\n            });\n          },\n          error : function(text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onError.call(element, module.value, module.total);\n            });\n          },\n          transitionEvent: function() {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function(totalValue) {\n            module.total = totalValue;\n          },\n          value: function(value) {\n            module.value = value;\n          },\n          progress: function(value) {\n            if(!module.has.progressPoll()) {\n              module.debug('First update in progress update interval, immediately updating', value);\n              module.update.progress(value);\n              module.create.progressPoll();\n            }\n            else {\n              module.debug('Updated within interval, setting next update to use new value', value);\n              module.set.nextValue(value);\n            }\n          },\n          nextValue: function(value) {\n            module.nextValue = value;\n          }\n        },\n\n        update: {\n          toNextValue: function() {\n            var\n              nextValue = module.nextValue\n            ;\n            if(nextValue) {\n              module.debug('Update interval complete using last updated value', nextValue);\n              module.update.progress(nextValue);\n              module.remove.nextValue();\n            }\n          },\n          progress: function(value) {\n            var\n              percentComplete\n            ;\n            value = module.get.numericValue(value);\n            if(value === false) {\n              module.error(error.nonNumeric, value);\n            }\n            value = module.get.normalizedValue(value);\n            if( module.has.total() ) {\n              module.set.value(value);\n              percentComplete = (value / module.total) * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent( percentComplete );\n            }\n            else {\n              percentComplete = value;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent( percentComplete );\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.progress.settings = {\n\n  name         : 'Progress',\n  namespace    : 'progress',\n\n  silent       : false,\n  debug        : false,\n  verbose      : false,\n  performance  : true,\n\n  random       : {\n    min : 2,\n    max : 5\n  },\n\n  duration       : 300,\n\n  updateInterval : 'auto',\n\n  autoSuccess    : true,\n  showActivity   : true,\n  limitValues    : true,\n\n  label          : 'percent',\n  precision      : 0,\n  framerate      : (1000 / 30), /// 30 fps\n\n  percent        : false,\n  total          : false,\n  value          : false,\n\n  // delay in ms for fail safe animation callback\n  failSafeDelay : 100,\n\n  onLabelUpdate : function(state, text, value, total){\n    return text;\n  },\n  onChange      : function(percent, value, total){},\n  onSuccess     : function(total){},\n  onActive      : function(value, total){},\n  onError       : function(value, total){},\n  onWarning     : function(value, total){},\n\n  error    : {\n    method     : 'The method you called is not defined.',\n    nonNumeric : 'Progress value is non numeric',\n    tooHigh    : 'Value specified is above 100%',\n    tooLow     : 'Value specified is below 0%'\n  },\n\n  regExp: {\n    variable: /\\{\\$*[A-z0-9]+\\}/g\n  },\n\n  metadata: {\n    percent : 'percent',\n    total   : 'total',\n    value   : 'value'\n  },\n\n  selector : {\n    bar      : '> .bar',\n    label    : '> .label',\n    progress : '.bar > .progress'\n  },\n\n  text : {\n    active  : false,\n    error   : false,\n    success : false,\n    warning : false,\n    percent : '{percent}%',\n    ratio   : '{value} of {total}'\n  },\n\n  className : {\n    active  : 'active',\n    error   : 'error',\n    success : 'success',\n    warning : 'warning'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        initialLoad,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.initialLoad();\n          module.set.rating( module.get.initialRating() );\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          }\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .addBack()\n                  .addClass(className.active)\n              ;\n            }\n            if(!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function() {\n            initialLoad = true;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  slent         : false,\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  fireOnInit    : false,\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Search\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.search = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\n          : $.extend({}, $.fn.search.settings),\n\n        className        = settings.className,\n        metadata         = settings.metadata,\n        regExp           = settings.regExp,\n        fields           = settings.fields,\n        selector         = settings.selector,\n        error            = settings.error,\n        namespace        = settings.namespace,\n\n        eventNamespace   = '.' + namespace,\n        moduleNamespace  = namespace + '-module',\n\n        $module          = $(this),\n        $prompt          = $module.find(selector.prompt),\n        $searchButton    = $module.find(selector.searchButton),\n        $results         = $module.find(selector.results),\n        $result          = $module.find(selector.result),\n        $category        = $module.find(selector.category),\n\n        element          = this,\n        instance         = $module.data(moduleNamespace),\n\n        disabledBubbled  = false,\n        resultsDismissed = false,\n\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n          module.determine.searchFields();\n          module.bind.events();\n          module.set.type();\n          module.create.results();\n          module.instantiate();\n        },\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.debug('Refreshing selector cache');\n          $prompt         = $module.find(selector.prompt);\n          $searchButton   = $module.find(selector.searchButton);\n          $category       = $module.find(selector.category);\n          $results        = $module.find(selector.results);\n          $result         = $module.find(selector.result);\n        },\n\n        refreshResults: function() {\n          $results = $module.find(selector.results);\n          $result  = $module.find(selector.result);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events to search');\n            if(settings.automatic) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\n              ;\n              $prompt\n                .attr('autocomplete', 'off')\n              ;\n            }\n            $module\n              // prompt\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\n              // search button\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\n              // results\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\n            ;\n          }\n        },\n\n        determine: {\n          searchFields: function() {\n            // this makes sure $.extend does not add specified search fields to default fields\n            // this is the only setting which should not extend defaults\n            if(parameters && parameters.searchFields !== undefined) {\n              settings.searchFields = parameters.searchFields;\n            }\n          }\n        },\n\n        event: {\n          input: function() {\n            if(settings.searchDelay) {\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                if(module.is.focused()) {\n                  module.query();\n                }\n              }, settings.searchDelay);\n            }\n            else {\n              module.query();\n            }\n          },\n          focus: function() {\n            module.set.focus();\n            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\n              module.query(function() {\n                if(module.can.show() ) {\n                  module.showResults();\n                }\n              });\n            }\n          },\n          blur: function(event) {\n            var\n              pageLostFocus = (document.activeElement === this),\n              callback      = function() {\n                module.cancel.query();\n                module.remove.focus();\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\n              }\n            ;\n            if(pageLostFocus) {\n              return;\n            }\n            resultsDismissed = false;\n            if(module.resultsClicked) {\n              module.debug('Determining if user action caused search to close');\n              $module\n                .one('click.close' + eventNamespace, selector.results, function(event) {\n                  if(module.is.inMessage(event) || disabledBubbled) {\n                    $prompt.focus();\n                    return;\n                  }\n                  disabledBubbled = false;\n                  if( !module.is.animating() && !module.is.hidden()) {\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.debug('Input blurred without user action, closing results');\n              callback();\n            }\n          },\n          result: {\n            mousedown: function() {\n              module.resultsClicked = true;\n            },\n            mouseup: function() {\n              module.resultsClicked = false;\n            },\n            click: function(event) {\n              module.debug('Search result selected');\n              var\n                $result = $(this),\n                $title  = $result.find(selector.title).eq(0),\n                $link   = $result.is('a[href]')\n                  ? $result\n                  : $result.find('a[href]').eq(0),\n                href    = $link.attr('href')   || false,\n                target  = $link.attr('target') || false,\n                title   = $title.html(),\n                // title is used for result lookup\n                value   = ($title.length > 0)\n                  ? $title.text()\n                  : false,\n                results = module.get.results(),\n                result  = $result.data(metadata.result) || module.get.result(value, results),\n                returnedValue\n              ;\n              if( $.isFunction(settings.onSelect) ) {\n                if(settings.onSelect.call(element, result, results) === false) {\n                  module.debug('Custom onSelect callback cancelled default select action');\n                  disabledBubbled = true;\n                  return;\n                }\n              }\n              module.hideResults();\n              if(value) {\n                module.set.value(value);\n              }\n              if(href) {\n                module.verbose('Opening search link found in result', $link);\n                if(target == '_blank' || event.ctrlKey) {\n                  window.open(href);\n                }\n                else {\n                  window.location.href = (href);\n                }\n              }\n            }\n          }\n        },\n        handleKeyboard: function(event) {\n          var\n            // force selector refresh\n            $result         = $module.find(selector.result),\n            $category       = $module.find(selector.category),\n            $activeResult   = $result.filter('.' + className.active),\n            currentIndex    = $result.index( $activeResult ),\n            resultSize      = $result.length,\n            hasActiveResult = $activeResult.length > 0,\n\n            keyCode         = event.which,\n            keys            = {\n              backspace : 8,\n              enter     : 13,\n              escape    : 27,\n              upArrow   : 38,\n              downArrow : 40\n            },\n            newIndex\n          ;\n          // search shortcuts\n          if(keyCode == keys.escape) {\n            module.verbose('Escape key pressed, blurring search field');\n            module.hideResults();\n            resultsDismissed = true;\n          }\n          if( module.is.visible() ) {\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, selecting active result');\n              if( $result.filter('.' + className.active).length > 0 ) {\n                module.event.result.click.call($result.filter('.' + className.active), event);\n                event.preventDefault();\n                return false;\n              }\n            }\n            else if(keyCode == keys.upArrow && hasActiveResult) {\n              module.verbose('Up key pressed, changing active result');\n              newIndex = (currentIndex - 1 < 0)\n                ? currentIndex\n                : currentIndex - 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n            else if(keyCode == keys.downArrow) {\n              module.verbose('Down key pressed, changing active result');\n              newIndex = (currentIndex + 1 >= resultSize)\n                ? currentIndex\n                : currentIndex + 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n          }\n          else {\n            // query shortcuts\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, executing query');\n              module.query();\n              module.set.buttonPressed();\n              $prompt.one('keyup', module.remove.buttonFocus);\n            }\n          }\n        },\n\n        setup: {\n          api: function(searchTerm, callback) {\n            var\n              apiSettings = {\n                debug             : settings.debug,\n                on                : false,\n                cache             : true,\n                action            : 'search',\n                urlData           : {\n                  query : searchTerm\n                },\n                onSuccess         : function(response) {\n                  module.parse.response.call(element, response, searchTerm);\n                  callback();\n                },\n                onFailure         : function() {\n                  module.displayMessage(error.serverError);\n                  callback();\n                },\n                onAbort : function(response) {\n                },\n                onError           : module.error\n              },\n              searchHTML\n            ;\n            $.extend(true, apiSettings, settings.apiSettings);\n            module.verbose('Setting up API request', apiSettings);\n            $module.api(apiSettings);\n          }\n        },\n\n        can: {\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          },\n          show: function() {\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\n          },\n          transition: function() {\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $results.hasClass(className.animating);\n          },\n          hidden: function() {\n            return $results.hasClass(className.hidden);\n          },\n          inMessage: function(event) {\n            if(!event.target) {\n              return;\n            }\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target)\n            ;\n            return (isInDOM && $target.closest(selector.message).length > 0);\n          },\n          empty: function() {\n            return ($results.html() === '');\n          },\n          visible: function() {\n            return ($results.filter(':visible').length > 0);\n          },\n          focused: function() {\n            return ($prompt.filter(':focus').length > 0);\n          }\n        },\n\n        get: {\n          inputEvent: function() {\n            var\n              prompt = $prompt[0],\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\n                ? 'input'\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n            ;\n            return inputEvent;\n          },\n          value: function() {\n            return $prompt.val();\n          },\n          results: function() {\n            var\n              results = $module.data(metadata.results)\n            ;\n            return results;\n          },\n          result: function(value, results) {\n            var\n              lookupFields = ['title', 'id'],\n              result       = false\n            ;\n            value = (value !== undefined)\n              ? value\n              : module.get.value()\n            ;\n            results = (results !== undefined)\n              ? results\n              : module.get.results()\n            ;\n            if(settings.type === 'category') {\n              module.debug('Finding result that matches', value);\n              $.each(results, function(index, category) {\n                if($.isArray(category.results)) {\n                  result = module.search.object(value, category.results, lookupFields)[0];\n                  // don't continue searching if a result is found\n                  if(result) {\n                    return false;\n                  }\n                }\n              });\n            }\n            else {\n              module.debug('Finding result in results object', value);\n              result = module.search.object(value, results, lookupFields)[0];\n            }\n            return result || false;\n          },\n        },\n\n        select: {\n          firstResult: function() {\n            module.verbose('Selecting first result');\n            $result.first().addClass(className.active);\n          }\n        },\n\n        set: {\n          focus: function() {\n            $module.addClass(className.focus);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          value: function(value) {\n            module.verbose('Setting search input value', value);\n            $prompt\n              .val(value)\n            ;\n          },\n          type: function(type) {\n            type = type || settings.type;\n            if(settings.type == 'category') {\n              $module.addClass(settings.type);\n            }\n          },\n          buttonPressed: function() {\n            $searchButton.addClass(className.pressed);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          focus: function() {\n            $module.removeClass(className.focus);\n          },\n          buttonPressed: function() {\n            $searchButton.removeClass(className.pressed);\n          }\n        },\n\n        query: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          var\n            searchTerm = module.get.value(),\n            cache = module.read.cache(searchTerm)\n          ;\n          callback = callback || function() {};\n          if( module.has.minimumCharacters() )  {\n            if(cache) {\n              module.debug('Reading result from cache', searchTerm);\n              module.save.results(cache.results);\n              module.addResults(cache.html);\n              module.inject.id(cache.results);\n              callback();\n            }\n            else {\n              module.debug('Querying for', searchTerm);\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\n                module.search.local(searchTerm);\n                callback();\n              }\n              else if( module.can.useAPI() ) {\n                module.search.remote(searchTerm, callback);\n              }\n              else {\n                module.error(error.source);\n                callback();\n              }\n            }\n            settings.onSearchQuery.call(element, searchTerm);\n          }\n          else {\n            module.hideResults();\n          }\n        },\n\n        search: {\n          local: function(searchTerm) {\n            var\n              results = module.search.object(searchTerm, settings.content),\n              searchHTML\n            ;\n            module.set.loading();\n            module.save.results(results);\n            module.debug('Returned local search results', results);\n\n            searchHTML = module.generateResults({\n              results: results\n            });\n            module.remove.loading();\n            module.addResults(searchHTML);\n            module.inject.id(results);\n            module.write.cache(searchTerm, {\n              html    : searchHTML,\n              results : results\n            });\n          },\n          remote: function(searchTerm, callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if($module.api('is loading')) {\n              $module.api('abort');\n            }\n            module.setup.api(searchTerm, callback);\n            $module\n              .api('query')\n            ;\n          },\n          object: function(searchTerm, source, searchFields) {\n            var\n              results      = [],\n              fuzzyResults = [],\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\n\n              // avoid duplicates when pushing results\n              addResult = function(array, result) {\n                var\n                  notResult      = ($.inArray(result, results) == -1),\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\n                ;\n                if(notResult && notFuzzyResult) {\n                  array.push(result);\n                }\n              }\n            ;\n            source = source || settings.source;\n            searchFields = (searchFields !== undefined)\n              ? searchFields\n              : settings.searchFields\n            ;\n\n            // search fields should be array to loop correctly\n            if(!$.isArray(searchFields)) {\n              searchFields = [searchFields];\n            }\n\n            // exit conditions if no source\n            if(source === undefined || source === false) {\n              module.error(error.source);\n              return [];\n            }\n\n            // iterate through search fields looking for matches\n            $.each(searchFields, function(index, field) {\n              $.each(source, function(label, content) {\n                var\n                  fieldExists = (typeof content[field] == 'string')\n                ;\n                if(fieldExists) {\n                  if( content[field].search(matchRegExp) !== -1) {\n                    // content starts with value (first in results)\n                    addResult(results, content);\n                  }\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\n                    // content fuzzy matches (last in results)\n                    addResult(fuzzyResults, content);\n                  }\n                }\n              });\n            });\n            return $.merge(results, fuzzyResults);\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          if(typeof query !== 'string') {\n            return false;\n          }\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n\n        parse: {\n          response: function(response, searchTerm) {\n            var\n              searchHTML = module.generateResults(response)\n            ;\n            module.verbose('Parsing server response', response);\n            if(response !== undefined) {\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\n                module.addResults(searchHTML);\n                module.inject.id(response[fields.results]);\n                module.write.cache(searchTerm, {\n                  html    : searchHTML,\n                  results : response[fields.results]\n                });\n                module.save.results(response[fields.results]);\n              }\n            }\n          }\n        },\n\n        cancel: {\n          query: function() {\n            if( module.can.useAPI() ) {\n              $module.api('abort');\n            }\n          }\n        },\n\n        has: {\n          minimumCharacters: function() {\n            var\n              searchTerm    = module.get.value(),\n              numCharacters = searchTerm.length\n            ;\n            return (numCharacters >= settings.minCharacters);\n          },\n          results: function() {\n            if($results.length === 0) {\n              return false;\n            }\n            var\n              html = $results.html()\n            ;\n            return html != '';\n          }\n        },\n\n        clear: {\n          cache: function(value) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(!value) {\n              module.debug('Clearing cache', value);\n              $module.removeData(metadata.cache);\n            }\n            else if(value && cache && cache[value]) {\n              module.debug('Removing value from cache', value);\n              delete cache[value];\n              $module.data(metadata.cache, cache);\n            }\n          }\n        },\n\n        read: {\n          cache: function(name) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(settings.cache) {\n              module.verbose('Checking cache for generated html for query', name);\n              return (typeof cache == 'object') && (cache[name] !== undefined)\n                ? cache[name]\n                : false\n              ;\n            }\n            return false;\n          }\n        },\n\n        create: {\n          id: function(resultIndex, categoryIndex) {\n            var\n              resultID      = (resultIndex + 1), // not zero indexed\n              categoryID    = (categoryIndex + 1),\n              firstCharCode,\n              letterID,\n              id\n            ;\n            if(categoryIndex !== undefined) {\n              // start char code for \"A\"\n              letterID = String.fromCharCode(97 + categoryIndex);\n              id          = letterID + resultID;\n              module.verbose('Creating category result id', id);\n            }\n            else {\n              id = resultID;\n              module.verbose('Creating result id', id);\n            }\n            return id;\n          },\n          results: function() {\n            if($results.length === 0) {\n              $results = $('<div />')\n                .addClass(className.results)\n                .appendTo($module)\n              ;\n            }\n          }\n        },\n\n        inject: {\n          result: function(result, resultIndex, categoryIndex) {\n            module.verbose('Injecting result into results');\n            var\n              $selectedResult = (categoryIndex !== undefined)\n                ? $results\n                    .children().eq(categoryIndex)\n                      .children(selector.result).eq(resultIndex)\n                : $results\n                    .children(selector.result).eq(resultIndex)\n            ;\n            module.verbose('Injecting results metadata', $selectedResult);\n            $selectedResult\n              .data(metadata.result, result)\n            ;\n          },\n          id: function(results) {\n            module.debug('Injecting unique ids into results');\n            var\n              // since results may be object, we must use counters\n              categoryIndex = 0,\n              resultIndex   = 0\n            ;\n            if(settings.type === 'category') {\n              // iterate through each category result\n              $.each(results, function(index, category) {\n                resultIndex = 0;\n                $.each(category.results, function(index, value) {\n                  var\n                    result = category.results[index]\n                  ;\n                  if(result.id === undefined) {\n                    result.id = module.create.id(resultIndex, categoryIndex);\n                  }\n                  module.inject.result(result, resultIndex, categoryIndex);\n                  resultIndex++;\n                });\n                categoryIndex++;\n              });\n            }\n            else {\n              // top level\n              $.each(results, function(index, value) {\n                var\n                  result = results[index]\n                ;\n                if(result.id === undefined) {\n                  result.id = module.create.id(resultIndex);\n                }\n                module.inject.result(result, resultIndex);\n                resultIndex++;\n              });\n            }\n            return results;\n          }\n        },\n\n        save: {\n          results: function(results) {\n            module.verbose('Saving current search results to metadata', results);\n            $module.data(metadata.results, results);\n          }\n        },\n\n        write: {\n          cache: function(name, value) {\n            var\n              cache = ($module.data(metadata.cache) !== undefined)\n                ? $module.data(metadata.cache)\n                : {}\n            ;\n            if(settings.cache) {\n              module.verbose('Writing generated html to cache', name, value);\n              cache[name] = value;\n              $module\n                .data(metadata.cache, cache)\n              ;\n            }\n          }\n        },\n\n        addResults: function(html) {\n          if( $.isFunction(settings.onResultsAdd) ) {\n            if( settings.onResultsAdd.call($results, html) === false ) {\n              module.debug('onResultsAdd callback cancelled default action');\n              return false;\n            }\n          }\n          if(html) {\n            $results\n              .html(html)\n            ;\n            module.refreshResults();\n            if(settings.selectFirstResult) {\n              module.select.firstResult();\n            }\n            module.showResults();\n          }\n          else {\n            module.hideResults(function() {\n              $results.empty();\n            });\n          }\n        },\n\n        showResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(resultsDismissed) {\n            return;\n          }\n          if(!module.is.visible() && module.has.results()) {\n            if( module.can.transition() ) {\n              module.debug('Showing results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' in',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Showing results with javascript');\n              $results\n                .stop()\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsOpen.call($results);\n          }\n        },\n        hideResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.visible() ) {\n            if( module.can.transition() ) {\n              module.debug('Hiding results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' out',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Hiding results with javascript');\n              $results\n                .stop()\n                .fadeOut(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsClose.call($results);\n          }\n        },\n\n        generateResults: function(response) {\n          module.debug('Generating html from response', response);\n          var\n            template       = settings.templates[settings.type],\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\n            html           = ''\n          ;\n          if(isProperObject || isProperArray ) {\n            if(settings.maxResults > 0) {\n              if(isProperObject) {\n                if(settings.type == 'standard') {\n                  module.error(error.maxResults);\n                }\n              }\n              else {\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\n              }\n            }\n            if($.isFunction(template)) {\n              html = template(response, fields);\n            }\n            else {\n              module.error(error.noTemplate, false);\n            }\n          }\n          else if(settings.showNoResults) {\n            html = module.displayMessage(error.noResults, 'empty');\n          }\n          settings.onResults.call(element, response);\n          return html;\n        },\n\n        displayMessage: function(text, type) {\n          type = type || 'standard';\n          module.debug('Displaying message', text, type);\n          module.addResults( settings.templates.message(text, type) );\n          return settings.templates.message(text, type);\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.search.settings = {\n\n  name              : 'Search',\n  namespace         : 'search',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // template to use (specified in settings.templates)\n  type              : 'standard',\n\n  // minimum characters required to search\n  minCharacters     : 1,\n\n  // whether to select first result after searching automatically\n  selectFirstResult : false,\n\n  // API config\n  apiSettings       : false,\n\n  // object to search\n  source            : false,\n\n  // Whether search should query current term on focus\n  searchOnFocus     : true,\n\n  // fields to search\n  searchFields   : [\n    'title',\n    'description'\n  ],\n\n  // field to display in standard results template\n  displayField   : '',\n\n  // whether to include fuzzy results in local search\n  searchFullText : true,\n\n  // whether to add events to prompt automatically\n  automatic      : true,\n\n  // delay before hiding menu after blur\n  hideDelay      : 0,\n\n  // delay before searching\n  searchDelay    : 200,\n\n  // maximum results returned from local\n  maxResults     : 7,\n\n  // whether to store lookups in local cache\n  cache          : true,\n\n  // whether no results errors should be shown\n  showNoResults  : true,\n\n  // transition settings\n  transition     : 'scale',\n  duration       : 200,\n  easing         : 'easeOutExpo',\n\n  // callbacks\n  onSelect       : false,\n  onResultsAdd   : false,\n\n  onSearchQuery  : function(query){},\n  onResults      : function(response){},\n\n  onResultsOpen  : function(){},\n  onResultsClose : function(){},\n\n  className: {\n    animating : 'animating',\n    active    : 'active',\n    empty     : 'empty',\n    focus     : 'focus',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    results   : 'results',\n    pressed   : 'down'\n  },\n\n  error : {\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\n    noResults   : 'Your search returned no results',\n    logging     : 'Error in debug logging, exiting.',\n    noEndpoint  : 'No search endpoint was specified',\n    noTemplate  : 'A valid template name was not specified.',\n    serverError : 'There was an issue querying the server.',\n    maxResults  : 'Results must be an array to use maxResults setting',\n    method      : 'The method you called is not defined.'\n  },\n\n  metadata: {\n    cache   : 'cache',\n    results : 'results',\n    result  : 'result'\n  },\n\n  regExp: {\n    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    beginsWith : '(?:\\s|^)'\n  },\n\n  // maps api response attributes to internal representation\n  fields: {\n    categories      : 'results',     // array of categories (category view)\n    categoryName    : 'name',        // name of category (category view)\n    categoryResults : 'results',     // array of results (category view)\n    description     : 'description', // result description\n    image           : 'image',       // result image\n    price           : 'price',       // result price\n    results         : 'results',     // array of results (standard)\n    title           : 'title',       // result title\n    url             : 'url',         // result url\n    action          : 'action',      // \"view more\" object name\n    actionText      : 'text',        // \"view more\" text\n    actionURL       : 'url'          // \"view more\" url\n  },\n\n  selector : {\n    prompt       : '.prompt',\n    searchButton : '.search.button',\n    results      : '.results',\n    message      : '.results > .message',\n    category     : '.category',\n    result       : '.result',\n    title        : '.title, .name'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    message: function(message, type) {\n      var\n        html = ''\n      ;\n      if(message !== undefined && type !== undefined) {\n        html +=  ''\n          + '<div class=\"message ' + type + '\">'\n        ;\n        // message type\n        if(type == 'empty') {\n          html += ''\n            + '<div class=\"header\">No Results</div class=\"header\">'\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\n          ;\n        }\n        else {\n          html += ' <div class=\"description\">' + message + '</div>';\n        }\n        html += '</div>';\n      }\n      return html;\n    },\n    category: function(response, fields) {\n      var\n        html = '',\n        escape = $.fn.search.settings.templates.escape\n      ;\n      if(response[fields.categoryResults] !== undefined) {\n\n        // each category\n        $.each(response[fields.categoryResults], function(index, category) {\n          if(category[fields.results] !== undefined && category.results.length > 0) {\n\n            html  += '<div class=\"category\">';\n\n            if(category[fields.categoryName] !== undefined) {\n              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\n            }\n\n            // each item inside category\n            $.each(category.results, function(index, result) {\n              if(result[fields.url]) {\n                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n              }\n              else {\n                html  += '<a class=\"result\">';\n              }\n              if(result[fields.image] !== undefined) {\n                html += ''\n                  + '<div class=\"image\">'\n                  + ' <img src=\"' + result[fields.image] + '\">'\n                  + '</div>'\n                ;\n              }\n              html += '<div class=\"content\">';\n              if(result[fields.price] !== undefined) {\n                html += '<div class=\"price\">' + result[fields.price] + '</div>';\n              }\n              if(result[fields.title] !== undefined) {\n                html += '<div class=\"title\">' + result[fields.title] + '</div>';\n              }\n              if(result[fields.description] !== undefined) {\n                html += '<div class=\"description\">' + result[fields.description] + '</div>';\n              }\n              html  += ''\n                + '</div>'\n              ;\n              html += '</a>';\n            });\n            html  += ''\n              + '</div>'\n            ;\n          }\n        });\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    },\n    standard: function(response, fields) {\n      var\n        html = ''\n      ;\n      if(response[fields.results] !== undefined) {\n\n        // each result\n        $.each(response[fields.results], function(index, result) {\n          if(result[fields.url]) {\n            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n          }\n          else {\n            html  += '<a class=\"result\">';\n          }\n          if(result[fields.image] !== undefined) {\n            html += ''\n              + '<div class=\"image\">'\n              + ' <img src=\"' + result[fields.image] + '\">'\n              + '</div>'\n            ;\n          }\n          html += '<div class=\"content\">';\n          if(result[fields.price] !== undefined) {\n            html += '<div class=\"price\">' + result[fields.price] + '</div>';\n          }\n          if(result[fields.title] !== undefined) {\n            html += '<div class=\"title\">' + result[fields.title] + '</div>';\n          }\n          if(result[fields.description] !== undefined) {\n            html += '<div class=\"description\">' + result[fields.description] + '</div>';\n          }\n          html  += ''\n            + '</div>'\n          ;\n          html += '</a>';\n        });\n\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    }\n  }\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Shape\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.shape = function(parameters) {\n  var\n    $allModules     = $(this),\n    $body           = $('body'),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        moduleSelector = $allModules.selector || '',\n        settings       = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\n          : $.extend({}, $.fn.shape.settings),\n\n        // internal aliases\n        namespace     = settings.namespace,\n        selector      = settings.selector,\n        error         = settings.error,\n        className     = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // selector cache\n        $module       = $(this),\n        $sides        = $module.find(selector.sides),\n        $side         = $module.find(selector.side),\n\n        // private variables\n        nextIndex = false,\n        $activeSide,\n        $nextSide,\n\n        // standard module\n        element       = this,\n        instance      = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module for', element);\n          module.set.defaultSide();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache for', element);\n          $module = $(element);\n          $sides  = $(this).find(selector.shape);\n          $side   = $(this).find(selector.side);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          var\n            shape          = $sides[0] || document.createElement('div'),\n            fakeAssignment = shape.offsetWidth\n          ;\n        },\n\n        animate: function(propertyObject, callback) {\n          module.verbose('Animating box with properties', propertyObject);\n          callback = callback || function(event) {\n            module.verbose('Executing animation callback');\n            if(event !== undefined) {\n              event.stopPropagation();\n            }\n            module.reset();\n            module.set.active();\n          };\n          settings.beforeChange.call($nextSide[0]);\n          if(module.get.transitionEvent()) {\n            module.verbose('Starting CSS animation');\n            $module\n              .addClass(className.animating)\n            ;\n            $sides\n              .css(propertyObject)\n              .one(module.get.transitionEvent(), callback)\n            ;\n            module.set.duration(settings.duration);\n            requestAnimationFrame(function() {\n              $module\n                .addClass(className.animating)\n              ;\n              $activeSide\n                .addClass(className.hidden)\n              ;\n            });\n          }\n          else {\n            callback();\n          }\n        },\n\n        queue: function(method) {\n          module.debug('Queueing animation of', method);\n          $sides\n            .one(module.get.transitionEvent(), function() {\n              module.debug('Executing queued animation');\n              setTimeout(function(){\n                $module.shape(method);\n              }, 0);\n            })\n          ;\n        },\n\n        reset: function() {\n          module.verbose('Animating states reset');\n          $module\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          // removeAttr style does not consistently work in safari\n          $sides\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          $side\n            .attr('style', '')\n            .removeAttr('style')\n            .removeClass(className.hidden)\n          ;\n          $nextSide\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n        },\n\n        is: {\n          complete: function() {\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\n          },\n          animating: function() {\n            return $module.hasClass(className.animating);\n          }\n        },\n\n        set: {\n\n          defaultSide: function() {\n            $activeSide = $module.find('.' + settings.className.active);\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n            nextIndex = false;\n            module.verbose('Active side set to', $activeSide);\n            module.verbose('Next side set to', $nextSide);\n          },\n\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting animation duration', duration);\n            if(settings.duration || settings.duration === 0) {\n              $sides.add($side)\n                .css({\n                  '-webkit-transition-duration': duration,\n                  '-moz-transition-duration': duration,\n                  '-ms-transition-duration': duration,\n                  '-o-transition-duration': duration,\n                  'transition-duration': duration\n                })\n              ;\n            }\n          },\n\n          currentStageSize: function() {\n            var\n              $activeSide = $module.find('.' + settings.className.active),\n              width       = $activeSide.outerWidth(true),\n              height      = $activeSide.outerHeight(true)\n            ;\n            $module\n              .css({\n                width: width,\n                height: height\n              })\n            ;\n          },\n\n          stageSize: function() {\n            var\n              $clone      = $module.clone().addClass(className.loading),\n              $activeSide = $clone.find('.' + settings.className.active),\n              $nextSide   = (nextIndex)\n                ? $clone.find(selector.side).eq(nextIndex)\n                : ( $activeSide.next(selector.side).length > 0 )\n                  ? $activeSide.next(selector.side)\n                  : $clone.find(selector.side).first(),\n              newWidth    = (settings.width == 'next')\n                ? $nextSide.outerWidth(true)\n                : (settings.width == 'initial')\n                  ? $module.width()\n                  : settings.width,\n              newHeight    = (settings.height == 'next')\n                ? $nextSide.outerHeight(true)\n                : (settings.height == 'initial')\n                  ? $module.height()\n                  : settings.height\n            ;\n            $activeSide.removeClass(className.active);\n            $nextSide.addClass(className.active);\n            $clone.insertAfter($module);\n            $clone.remove();\n            if(settings.width != 'auto') {\n              $module.css('width', newWidth + settings.jitter);\n              module.verbose('Specifying width during animation', newWidth);\n            }\n            if(settings.height != 'auto') {\n              $module.css('height', newHeight + settings.jitter);\n              module.verbose('Specifying height during animation', newHeight);\n            }\n          },\n\n          nextSide: function(selector) {\n            nextIndex = selector;\n            $nextSide = $side.filter(selector);\n            nextIndex = $side.index($nextSide);\n            if($nextSide.length === 0) {\n              module.set.defaultSide();\n              module.error(error.side);\n            }\n            module.verbose('Next side manually set to', $nextSide);\n          },\n\n          active: function() {\n            module.verbose('Setting new side to active', $nextSide);\n            $side\n              .removeClass(className.active)\n            ;\n            $nextSide\n              .addClass(className.active)\n            ;\n            settings.onChange.call($nextSide[0]);\n            module.set.defaultSide();\n          }\n        },\n\n        flip: {\n\n          up: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping up', $nextSide);\n              var\n                transform = module.get.transform.up()\n              ;\n              module.set.stageSize();\n              module.stage.above();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip up');\n            }\n          },\n\n          down: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping down', $nextSide);\n              var\n                transform = module.get.transform.down()\n              ;\n              module.set.stageSize();\n              module.stage.below();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip down');\n            }\n          },\n\n          left: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping left', $nextSide);\n              var\n                transform = module.get.transform.left()\n              ;\n              module.set.stageSize();\n              module.stage.left();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip left');\n            }\n          },\n\n          right: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping right', $nextSide);\n              var\n                transform = module.get.transform.right()\n              ;\n              module.set.stageSize();\n              module.stage.right();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip right');\n            }\n          },\n\n          over: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping over', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.over() );\n            }\n            else {\n              module.queue('flip over');\n            }\n          },\n\n          back: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping back', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.back() );\n            }\n            else {\n              module.queue('flip back');\n            }\n          }\n\n        },\n\n        get: {\n\n          transform: {\n            up: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\n              };\n            },\n\n            down: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\n              };\n            },\n\n            left: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\n              };\n            },\n\n            right: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\n              };\n            },\n\n            over: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\n              };\n            },\n\n            back: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\n              };\n            }\n          },\n\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          nextSide: function() {\n            return ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n          }\n\n        },\n\n        stage: {\n\n          above: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          below: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          left: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          right: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          behind: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-180deg)'\n              })\n            ;\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.shape.settings = {\n\n  // module info\n  name : 'Shape',\n\n  // hide all debug content\n  silent     : false,\n\n  // debug content outputted to console\n  debug      : false,\n\n  // verbose debug output\n  verbose    : false,\n\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\n  jitter     : 0,\n\n  // performance data output\n  performance: true,\n\n  // event namespace\n  namespace  : 'shape',\n\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\n  width: 'initial',\n\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\n  height: 'initial',\n\n  // callback occurs on side change\n  beforeChange : function() {},\n  onChange     : function() {},\n\n  // allow animation to same side\n  allowRepeats: false,\n\n  // animation duration\n  duration   : false,\n\n  // possible errors\n  error: {\n    side   : 'You tried to switch to a side that does not exist.',\n    method : 'The method you called is not defined'\n  },\n\n  // classnames used\n  className   : {\n    animating : 'animating',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    active    : 'active'\n  },\n\n  // selectors used\n  selector    : {\n    sides : '.sides',\n    side  : '.side'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Sidebar\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sidebar = function(parameters) {\n  var\n    $allModules     = $(this),\n    $window         = $(window),\n    $document       = $(document),\n    $html           = $('html'),\n    $head           = $('head'),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\n          : $.extend({}, $.fn.sidebar.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $sidebars       = $module.children(selector.sidebar),\n        $fixed          = $context.children(selector.fixed),\n        $pusher         = $context.children(selector.pusher),\n        $style,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        elementNamespace,\n        id,\n        currentScroll,\n        transitionEvent,\n\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.debug('Initializing sidebar', parameters);\n\n          module.create.id();\n\n          transitionEvent = module.get.transitionEvent();\n\n          // avoids locking rendering if initialized in onReady\n          if(settings.delaySetup) {\n            requestAnimationFrame(module.setup.layout);\n          }\n          else {\n            module.setup.layout();\n          }\n\n          requestAnimationFrame(function() {\n            module.setup.cache();\n          });\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          if(module.is.ios()) {\n            module.remove.ios();\n          }\n          // bound by uuid\n          $context.off(elementNamespace);\n          $window.off(elementNamespace);\n          $document.off(elementNamespace);\n        },\n\n        event: {\n          clickaway: function(event) {\n            var\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\n              clickedContext  = ($context.is(event.target))\n            ;\n            if(clickedInPusher) {\n              module.verbose('User clicked on dimmed page');\n              module.hide();\n            }\n            if(clickedContext) {\n              module.verbose('User clicked on dimmable context (scaled out page)');\n              module.hide();\n            }\n          },\n          touch: function(event) {\n            //event.stopPropagation();\n          },\n          containScroll: function(event) {\n            if(element.scrollTop <= 0)  {\n              element.scrollTop = 1;\n            }\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\n            }\n          },\n          scroll: function(event) {\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        bind: {\n          clickaway: function() {\n            module.verbose('Adding clickaway events to context', $context);\n            if(settings.closable) {\n              $context\n                .on('click'    + elementNamespace, module.event.clickaway)\n                .on('touchend' + elementNamespace, module.event.clickaway)\n              ;\n            }\n          },\n          scrollLock: function() {\n            if(settings.scrollLock) {\n              module.debug('Disabling page scroll');\n              $window\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\n              ;\n            }\n            module.verbose('Adding events to contain sidebar scroll');\n            $document\n              .on('touchmove' + elementNamespace, module.event.touch)\n            ;\n            $module\n              .on('scroll' + eventNamespace, module.event.containScroll)\n            ;\n          }\n        },\n        unbind: {\n          clickaway: function() {\n            module.verbose('Removing clickaway events from context', $context);\n            $context.off(elementNamespace);\n          },\n          scrollLock: function() {\n            module.verbose('Removing scroll lock from page');\n            $document.off(elementNamespace);\n            $window.off(elementNamespace);\n            $module.off('scroll' + eventNamespace);\n          }\n        },\n\n        add: {\n          inlineCSS: function() {\n            var\n              width     = module.cache.width  || $module.outerWidth(),\n              height    = module.cache.height || $module.outerHeight(),\n              isRTL     = module.is.rtl(),\n              direction = module.get.direction(),\n              distance  = {\n                left   : width,\n                right  : -width,\n                top    : height,\n                bottom : -height\n              },\n              style\n            ;\n\n            if(isRTL){\n              module.verbose('RTL detected, flipping widths');\n              distance.left = -width;\n              distance.right = width;\n            }\n\n            style  = '<style>';\n\n            if(direction === 'left' || direction === 'right') {\n              module.debug('Adding CSS rules for animation distance', width);\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + ' }'\n              ;\n            }\n            else if(direction === 'top' || direction == 'bottom') {\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + ' }'\n              ;\n            }\n\n            /* IE is only browser not to create context with transforms */\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\n            if( module.is.ie() ) {\n              if(direction === 'left' || direction === 'right') {\n                module.debug('Adding CSS rules for animation distance', width);\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + ' }'\n                ;\n              }\n              else if(direction === 'top' || direction == 'bottom') {\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + ' }'\n                ;\n              }\n              /* opposite sides visible forces content overlay */\n              style += ''\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\n                + '           transform: translate3d(0px, 0, 0);'\n                + ' }'\n              ;\n            }\n            style += '</style>';\n            $style = $(style)\n              .appendTo($head)\n            ;\n            module.debug('Adding sizing css to head', $style);\n          }\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $context  = $(settings.context);\n          $sidebars = $context.children(selector.sidebar);\n          $pusher   = $context.children(selector.pusher);\n          $fixed    = $context.children(selector.fixed);\n          module.clear.cache();\n        },\n\n        refreshSidebars: function() {\n          module.verbose('Refreshing other sidebars');\n          $sidebars = $context.children(selector.sidebar);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          element.style.display = 'none';\n          var ignored = element.offsetHeight;\n          element.scrollTop = element.scrollTop;\n          element.style.display = '';\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              width  : $module.outerWidth(),\n              height : $module.outerHeight(),\n              rtl    : ($module.css('direction') == 'rtl')\n            };\n          },\n          layout: function() {\n            if( $context.children(selector.pusher).length === 0 ) {\n              module.debug('Adding wrapper element for sidebar');\n              module.error(error.pusher);\n              $pusher = $('<div class=\"pusher\" />');\n              $context\n                .children()\n                  .not(selector.omitted)\n                  .not($sidebars)\n                  .wrapAll($pusher)\n              ;\n              module.refresh();\n            }\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\n              module.debug('Moved sidebar to correct parent element');\n              module.error(error.movedSidebar, element);\n              $module.detach().prependTo($context);\n              module.refresh();\n            }\n            module.clear.cache();\n            module.set.pushable();\n            module.set.direction();\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching sidebar events to element', selector, event);\n            $toggle\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.hidden()) {\n            module.refreshSidebars();\n            if(settings.overlay)  {\n              module.error(error.overlay);\n              settings.transition = 'overlay';\n            }\n            module.refresh();\n            if(module.othersActive()) {\n              module.debug('Other sidebars currently visible');\n              if(settings.exclusive) {\n                // if not overlay queue animation after hide\n                if(settings.transition != 'overlay') {\n                  module.hideOthers(module.show);\n                  return;\n                }\n                else {\n                  module.hideOthers();\n                }\n              }\n              else {\n                settings.transition = 'overlay';\n              }\n            }\n            module.pushPage(function() {\n              callback.call(element);\n              settings.onShow.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onVisible.call(element);\n          }\n          else {\n            module.debug('Sidebar is already visible');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.visible() || module.is.animating()) {\n            module.debug('Hiding sidebar', callback);\n            module.refreshSidebars();\n            module.pullPage(function() {\n              callback.call(element);\n              settings.onHidden.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onHide.call(element);\n          }\n        },\n\n        othersAnimating: function() {\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\n        },\n        othersVisible: function() {\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\n        },\n        othersActive: function() {\n          return(module.othersVisible() || module.othersAnimating());\n        },\n\n        hideOthers: function(callback) {\n          var\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\n            sidebarCount   = $otherSidebars.length,\n            callbackCount  = 0\n          ;\n          callback = callback || function(){};\n          $otherSidebars\n            .sidebar('hide', function() {\n              callbackCount++;\n              if(callbackCount == sidebarCount) {\n                callback();\n              }\n            })\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Determining toggled direction');\n          if(module.is.hidden()) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        pushPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition === 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            dim,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(settings.transition == 'scale down') {\n            module.scrollToTop();\n          }\n          module.set.transition(transition);\n          module.repaint();\n          animate = function() {\n            module.bind.clickaway();\n            module.add.inlineCSS();\n            module.set.animating();\n            module.set.visible();\n          };\n          dim = function() {\n            module.set.dimmed();\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.bind.scrollLock();\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n          if(settings.dimPage && !module.othersVisible()) {\n            requestAnimationFrame(dim);\n          }\n        },\n\n        pullPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition == 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.verbose('Removing context push state', module.get.direction());\n\n          module.unbind.clickaway();\n          module.unbind.scrollLock();\n\n          animate = function() {\n            module.set.transition(transition);\n            module.set.animating();\n            module.remove.visible();\n            if(settings.dimPage && !module.othersVisible()) {\n              $pusher.removeClass(className.dimmed);\n            }\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.remove.transition();\n              module.remove.inlineCSS();\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\n                module.scrollBack();\n              }\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n        },\n\n        scrollToTop: function() {\n          module.verbose('Scrolling to top of page to avoid animation issues');\n          currentScroll = $(window).scrollTop();\n          $module.scrollTop(0);\n          window.scrollTo(0, 0);\n        },\n\n        scrollBack: function() {\n          module.verbose('Scrolling back to original page position');\n          window.scrollTo(0, currentScroll);\n        },\n\n        clear: {\n          cache: function() {\n            module.verbose('Clearing cached dimensions');\n            module.cache = {};\n          }\n        },\n\n        set: {\n\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\n          // (This is no longer necessary in latest iOS)\n          ios: function() {\n            $html.addClass(className.ios);\n          },\n\n          // container\n          pushed: function() {\n            $context.addClass(className.pushed);\n          },\n          pushable: function() {\n            $context.addClass(className.pushable);\n          },\n\n          // pusher\n          dimmed: function() {\n            $pusher.addClass(className.dimmed);\n          },\n\n          // sidebar\n          active: function() {\n            $module.addClass(className.active);\n          },\n          animating: function() {\n            $module.addClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.addClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.addClass(className[direction]);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          overlay: function() {\n            $module.addClass(className.overlay);\n          }\n        },\n        remove: {\n\n          inlineCSS: function() {\n            module.debug('Removing inline css styles', $style);\n            if($style && $style.length > 0) {\n              $style.remove();\n            }\n          },\n\n          // ios scroll on html not document\n          ios: function() {\n            $html.removeClass(className.ios);\n          },\n\n          // context\n          pushed: function() {\n            $context.removeClass(className.pushed);\n          },\n          pushable: function() {\n            $context.removeClass(className.pushable);\n          },\n\n          // sidebar\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.removeClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.removeClass(className[direction]);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          overlay: function() {\n            $module.removeClass(className.overlay);\n          }\n        },\n\n        get: {\n          direction: function() {\n            if($module.hasClass(className.top)) {\n              return className.top;\n            }\n            else if($module.hasClass(className.right)) {\n              return className.right;\n            }\n            else if($module.hasClass(className.bottom)) {\n              return className.bottom;\n            }\n            return className.left;\n          },\n          transition: function() {\n            var\n              direction = module.get.direction(),\n              transition\n            ;\n            transition = ( module.is.mobile() )\n              ? (settings.mobileTransition == 'auto')\n                ? settings.defaultTransition.mobile[direction]\n                : settings.mobileTransition\n              : (settings.transition == 'auto')\n                ? settings.defaultTransition.computer[direction]\n                : settings.transition\n            ;\n            module.verbose('Determined transition', transition);\n            return transition;\n          },\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          }\n        },\n\n        is: {\n\n          ie: function() {\n            var\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\n              isIE   = ('ActiveXObject' in window)\n            ;\n            return (isIE11 || isIE);\n          },\n\n          ios: function() {\n            var\n              userAgent      = navigator.userAgent,\n              isIOS          = userAgent.match(regExp.ios),\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\n            ;\n            if(isIOS && !isMobileChrome) {\n              module.verbose('Browser was found to be iOS', userAgent);\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          mobile: function() {\n            var\n              userAgent    = navigator.userAgent,\n              isMobile     = userAgent.match(regExp.mobile)\n            ;\n            if(isMobile) {\n              module.verbose('Browser was found to be mobile', userAgent);\n              return true;\n            }\n            else {\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\n              return false;\n            }\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          visible: function() {\n            return $module.hasClass(className.visible);\n          },\n          // alias\n          open: function() {\n            return module.is.visible();\n          },\n          closed: function() {\n            return module.is.hidden();\n          },\n          vertical: function() {\n            return $module.hasClass(className.top);\n          },\n          animating: function() {\n            return $context.hasClass(className.animating);\n          },\n          rtl: function () {\n            if(module.cache.rtl === undefined) {\n              module.cache.rtl = ($module.css('direction') == 'rtl');\n            }\n            return module.cache.rtl;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      }\n    ;\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.invoke('destroy');\n      }\n      module.initialize();\n    }\n  });\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sidebar.settings = {\n\n  name              : 'Sidebar',\n  namespace         : 'sidebar',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  transition        : 'auto',\n  mobileTransition  : 'auto',\n\n  defaultTransition : {\n    computer: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    },\n    mobile: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    }\n  },\n\n  context           : 'body',\n  exclusive         : false,\n  closable          : true,\n  dimPage           : true,\n  scrollLock        : false,\n  returnScroll      : false,\n  delaySetup        : false,\n\n  duration          : 500,\n\n  onChange          : function(){},\n  onShow            : function(){},\n  onHide            : function(){},\n\n  onHidden          : function(){},\n  onVisible         : function(){},\n\n  className         : {\n    active    : 'active',\n    animating : 'animating',\n    dimmed    : 'dimmed',\n    ios       : 'ios',\n    pushable  : 'pushable',\n    pushed    : 'pushed',\n    right     : 'right',\n    top       : 'top',\n    left      : 'left',\n    bottom    : 'bottom',\n    visible   : 'visible'\n  },\n\n  selector: {\n    fixed   : '.fixed',\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\n    pusher  : '.pusher',\n    sidebar : '.ui.sidebar'\n  },\n\n  regExp: {\n    ios          : /(iPad|iPhone|iPod)/g,\n    mobileChrome : /(CriOS)/g,\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\n  },\n\n  error   : {\n    method       : 'The method you called is not defined.',\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\n    notFound     : 'There were no elements that matched the specified selector'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Sticky\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sticky = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings              = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\n          : $.extend({}, $.fn.sticky.settings),\n\n        className             = settings.className,\n        namespace             = settings.namespace,\n        error                 = settings.error,\n\n        eventNamespace        = '.' + namespace,\n        moduleNamespace       = 'module-' + namespace,\n\n        $module               = $(this),\n        $window               = $(window),\n        $scroll               = $(settings.scrollContext),\n        $container,\n        $context,\n\n        selector              = $module.selector || '',\n        instance              = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n\n        documentObserver,\n        observer,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          module.determineContainer();\n          module.determineContext();\n          module.verbose('Initializing sticky', settings, $container);\n\n          module.save.positions();\n          module.checkErrors();\n          module.bind.events();\n\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance');\n          module.reset();\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          if(observer) {\n            observer.disconnect();\n          }\n          $window\n            .off('load' + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $scroll\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          $module.removeData(moduleNamespace);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            observer         = new MutationObserver(module.event.changed);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe($context[0], {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        determineContainer: function() {\n          if(settings.container) {\n            $container = $(settings.container);\n          }\n          else {\n            $container = $module.offsetParent();\n          }\n        },\n\n        determineContext: function() {\n          if(settings.context) {\n            $context = $(settings.context);\n          }\n          else {\n            $context = $container;\n          }\n          if($context.length === 0) {\n            module.error(error.invalidContext, settings.context, $module);\n            return;\n          }\n        },\n\n        checkErrors: function() {\n          if( module.is.hidden() ) {\n            module.error(error.visible, $module);\n          }\n          if(module.cache.element.height > module.cache.context.height) {\n            module.reset();\n            module.error(error.elementSize, $module);\n            return;\n          }\n        },\n\n        bind: {\n          events: function() {\n            $window\n              .on('load' + eventNamespace, module.event.load)\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $scroll\n              .off('scroll' + eventNamespace)\n              .on('scroll' + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\n              module.refresh();\n            }, 100);\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          load: function() {\n            module.verbose('Page contents finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          resize: function() {\n            module.verbose('Window resized');\n            requestAnimationFrame(module.refresh);\n          },\n          scroll: function() {\n            requestAnimationFrame(function() {\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\n            });\n          },\n          scrollchange: function(event, scrollPosition) {\n            module.stick(scrollPosition);\n            settings.onScroll.call(element);\n          }\n        },\n\n        refresh: function(hardRefresh) {\n          module.reset();\n          if(!settings.context) {\n            module.determineContext();\n          }\n          if(hardRefresh) {\n            module.determineContainer();\n          }\n          module.save.positions();\n          module.stick();\n          settings.onReposition.call(element);\n        },\n\n        supports: {\n          sticky: function() {\n            var\n              $element = $('<div/>'),\n              element = $element[0]\n            ;\n            $element.addClass(className.supported);\n            return($element.css('position').match('sticky'));\n          }\n        },\n\n        save: {\n          lastScroll: function(scroll) {\n            module.lastScroll = scroll;\n          },\n          elementScroll: function(scroll) {\n            module.elementScroll = scroll;\n          },\n          positions: function() {\n            var\n              scrollContext = {\n                height : $scroll.height()\n              },\n              element = {\n                margin: {\n                  top    : parseInt($module.css('margin-top'), 10),\n                  bottom : parseInt($module.css('margin-bottom'), 10),\n                },\n                offset : $module.offset(),\n                width  : $module.outerWidth(),\n                height : $module.outerHeight()\n              },\n              context = {\n                offset : $context.offset(),\n                height : $context.outerHeight()\n              },\n              container = {\n                height: $container.outerHeight()\n              }\n            ;\n            if( !module.is.standardScroll() ) {\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\n\n              scrollContext.top  = $scroll.scrollTop();\n              scrollContext.left = $scroll.scrollLeft();\n\n              element.offset.top  += scrollContext.top;\n              context.offset.top  += scrollContext.top;\n              element.offset.left += scrollContext.left;\n              context.offset.left += scrollContext.left;\n            }\n            module.cache = {\n              fits          : ( (element.height + settings.offset) <= scrollContext.height),\n              sameHeight    : (element.height == context.height),\n              scrollContext : {\n                height : scrollContext.height\n              },\n              element: {\n                margin : element.margin,\n                top    : element.offset.top - element.margin.top,\n                left   : element.offset.left,\n                width  : element.width,\n                height : element.height,\n                bottom : element.offset.top + element.height\n              },\n              context: {\n                top           : context.offset.top,\n                height        : context.height,\n                bottom        : context.offset.top + context.height\n              }\n            };\n            module.set.containerSize();\n\n            module.stick();\n            module.debug('Caching element positions', module.cache);\n          }\n        },\n\n        get: {\n          direction: function(scroll) {\n            var\n              direction = 'down'\n            ;\n            scroll = scroll || $scroll.scrollTop();\n            if(module.lastScroll !== undefined) {\n              if(module.lastScroll < scroll) {\n                direction = 'down';\n              }\n              else if(module.lastScroll > scroll) {\n                direction = 'up';\n              }\n            }\n            return direction;\n          },\n          scrollChange: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            return (module.lastScroll)\n              ? (scroll - module.lastScroll)\n              : 0\n            ;\n          },\n          currentElementScroll: function() {\n            if(module.elementScroll) {\n              return module.elementScroll;\n            }\n            return ( module.is.top() )\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\n            ;\n          },\n\n          elementScroll: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            var\n              element        = module.cache.element,\n              scrollContext  = module.cache.scrollContext,\n              delta          = module.get.scrollChange(scroll),\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\n              elementScroll  = module.get.currentElementScroll(),\n              possibleScroll = (elementScroll + delta)\n            ;\n            if(module.cache.fits || possibleScroll < 0) {\n              elementScroll = 0;\n            }\n            else if(possibleScroll > maxScroll ) {\n              elementScroll = maxScroll;\n            }\n            else {\n              elementScroll = possibleScroll;\n            }\n            return elementScroll;\n          }\n        },\n\n        remove: {\n          lastScroll: function() {\n            delete module.lastScroll;\n          },\n          elementScroll: function(scroll) {\n            delete module.elementScroll;\n          },\n          minimumSize: function() {\n            $container\n              .css('min-height', '')\n            ;\n          },\n          offset: function() {\n            $module.css('margin-top', '');\n          }\n        },\n\n        set: {\n          offset: function() {\n            module.verbose('Setting offset on element', settings.offset);\n            $module\n              .css('margin-top', settings.offset)\n            ;\n          },\n          containerSize: function() {\n            var\n              tagName = $container.get(0).tagName\n            ;\n            if(tagName === 'HTML' || tagName == 'body') {\n              // this can trigger for too many reasons\n              //module.error(error.container, tagName, $module);\n              module.determineContainer();\n            }\n            else {\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\n                $container.css({\n                  height: module.cache.context.height\n                });\n              }\n            }\n          },\n          minimumSize: function() {\n            var\n              element   = module.cache.element\n            ;\n            $container\n              .css('min-height', element.height)\n            ;\n          },\n          scroll: function(scroll) {\n            module.debug('Setting scroll on element', scroll);\n            if(module.elementScroll == scroll) {\n              return;\n            }\n            if( module.is.top() ) {\n              $module\n                .css('bottom', '')\n                .css('top', -scroll)\n              ;\n            }\n            if( module.is.bottom() ) {\n              $module\n                .css('top', '')\n                .css('bottom', scroll)\n              ;\n            }\n          },\n          size: function() {\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\n            }\n          }\n        },\n\n        is: {\n          standardScroll: function() {\n            return ($scroll[0] == window);\n          },\n          top: function() {\n            return $module.hasClass(className.top);\n          },\n          bottom: function() {\n            return $module.hasClass(className.bottom);\n          },\n          initialPosition: function() {\n            return (!module.is.fixed() && !module.is.bound());\n          },\n          hidden: function() {\n            return (!$module.is(':visible'));\n          },\n          bound: function() {\n            return $module.hasClass(className.bound);\n          },\n          fixed: function() {\n            return $module.hasClass(className.fixed);\n          }\n        },\n\n        stick: function(scroll) {\n          var\n            cachedPosition = scroll || $scroll.scrollTop(),\n            cache          = module.cache,\n            fits           = cache.fits,\n            sameHeight     = cache.sameHeight,\n            element        = cache.element,\n            scrollContext  = cache.scrollContext,\n            context        = cache.context,\n            offset         = (module.is.bottom() && settings.pushing)\n              ? settings.bottomOffset\n              : settings.offset,\n            scroll         = {\n              top    : cachedPosition + offset,\n              bottom : cachedPosition + offset + scrollContext.height\n            },\n            direction      = module.get.direction(scroll.top),\n            elementScroll  = (fits)\n              ? 0\n              : module.get.elementScroll(scroll.top),\n\n            // shorthand\n            doesntFit      = !fits,\n            elementVisible = (element.height !== 0)\n          ;\n          if(elementVisible && !sameHeight) {\n\n            if( module.is.initialPosition() ) {\n              if(scroll.top >= context.bottom) {\n                module.debug('Initial element position is bottom of container');\n                module.bindBottom();\n              }\n              else if(scroll.top > element.top) {\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Initial element position is bottom of container');\n                  module.bindBottom();\n                }\n                else {\n                  module.debug('Initial element position is fixed');\n                  module.fixTop();\n                }\n              }\n\n            }\n            else if( module.is.fixed() ) {\n\n              // currently fixed top\n              if( module.is.top() ) {\n                if( scroll.top <= element.top ) {\n                  module.debug('Fixed element reached top of container');\n                  module.setInitialPosition();\n                }\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Fixed element reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n              }\n\n              // currently fixed bottom\n              else if(module.is.bottom() ) {\n\n                // top edge\n                if( (scroll.bottom - element.height) <= element.top) {\n                  module.debug('Bottom fixed rail has reached top of container');\n                  module.setInitialPosition();\n                }\n                // bottom edge\n                else if(scroll.bottom >= context.bottom) {\n                  module.debug('Bottom fixed rail has reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n\n              }\n            }\n            else if( module.is.bottom() ) {\n              if( scroll.top <= element.top ) {\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\n                module.setInitialPosition();\n              }\n              else {\n                if(settings.pushing) {\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\n                    module.debug('Fixing bottom attached element to bottom of browser.');\n                    module.fixBottom();\n                  }\n                }\n                else {\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\n                    module.debug('Fixing bottom attached element to top of browser.');\n                    module.fixTop();\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        bindTop: function() {\n          module.debug('Binding element to top of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : '',\n              marginBottom : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.bottom)\n            .addClass(className.bound)\n            .addClass(className.top)\n          ;\n          settings.onTop.call(element);\n          settings.onUnstick.call(element);\n        },\n        bindBottom: function() {\n          module.debug('Binding element to bottom of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.top)\n            .addClass(className.bound)\n            .addClass(className.bottom)\n          ;\n          settings.onBottom.call(element);\n          settings.onUnstick.call(element);\n        },\n\n        setInitialPosition: function() {\n          module.debug('Returning to initial position');\n          module.unfix();\n          module.unbind();\n        },\n\n\n        fixTop: function() {\n          module.debug('Fixing element to top of page');\n          if(settings.setSize) {\n            module.set.size();\n          }\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.bottom)\n            .addClass(className.fixed)\n            .addClass(className.top)\n          ;\n          settings.onStick.call(element);\n        },\n\n        fixBottom: function() {\n          module.debug('Sticking element to bottom of page');\n          if(settings.setSize) {\n            module.set.size();\n          }\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.top)\n            .addClass(className.fixed)\n            .addClass(className.bottom)\n          ;\n          settings.onStick.call(element);\n        },\n\n        unbind: function() {\n          if( module.is.bound() ) {\n            module.debug('Removing container bound position on element');\n            module.remove.offset();\n            $module\n              .removeClass(className.bound)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n          }\n        },\n\n        unfix: function() {\n          if( module.is.fixed() ) {\n            module.debug('Removing fixed position on element');\n            module.remove.minimumSize();\n            module.remove.offset();\n            $module\n              .removeClass(className.fixed)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n            settings.onUnstick.call(element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting elements position');\n          module.unbind();\n          module.unfix();\n          module.resetCSS();\n          module.remove.offset();\n          module.remove.lastScroll();\n        },\n\n        resetCSS: function() {\n          $module\n            .css({\n              width  : '',\n              height : ''\n            })\n          ;\n          $container\n            .css({\n              height: ''\n            })\n          ;\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 0);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sticky.settings = {\n\n  name           : 'Sticky',\n  namespace      : 'sticky',\n\n  silent         : false,\n  debug          : false,\n  verbose        : true,\n  performance    : true,\n\n  // whether to stick in the opposite direction on scroll up\n  pushing        : false,\n\n  context        : false,\n  container      : false,\n\n  // Context to watch scroll events\n  scrollContext  : window,\n\n  // Offset to adjust scroll\n  offset         : 0,\n\n  // Offset to adjust scroll when attached to bottom of screen\n  bottomOffset   : 0,\n\n  // will only set container height if difference between context and container is larger than this number\n  jitter         : 5,\n\n  // set width of sticky element when it is fixed to page (used to make sure 100% width is maintained if no fixed size set)\n  setSize        : true,\n\n  // Whether to automatically observe changes with Mutation Observers\n  observeChanges : false,\n\n  // Called when position is recalculated\n  onReposition   : function(){},\n\n  // Called on each scroll\n  onScroll       : function(){},\n\n  // Called when element is stuck to viewport\n  onStick        : function(){},\n\n  // Called when element is unstuck from viewport\n  onUnstick      : function(){},\n\n  // Called when element reaches top of context\n  onTop          : function(){},\n\n  // Called when element reaches bottom of context\n  onBottom       : function(){},\n\n  error         : {\n    container      : 'Sticky element must be inside a relative container',\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\n    method         : 'The method you called is not defined.',\n    invalidContext : 'Context specified does not exist',\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\n  },\n\n  className : {\n    bound     : 'bound',\n    fixed     : 'fixed',\n    supported : 'native',\n    top       : 'top',\n    bottom    : 'bottom'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Tab\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.tab = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n\n    moduleSelector  = $allModules.selector || '',\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    initializedHistory = false,\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\n          : $.extend({}, $.fn.tab.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + settings.namespace,\n        moduleNamespace = 'module-' + settings.namespace,\n\n        $module         = $(this),\n        $context,\n        $tabs,\n\n        cache           = {},\n        firstLoad       = true,\n        recursionDepth  = 0,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        activeTabPath,\n        parameterArray,\n        module,\n\n        historyEvent\n\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing tab menu item', $module);\n          module.fix.callbacks();\n          module.determineTabs();\n\n          module.debug('Determining tabs', settings.context, $tabs);\n          // set up automatic routing\n          if(settings.auto) {\n            module.set.auto();\n          }\n          module.bind.events();\n\n          if(settings.history && !initializedHistory) {\n            module.initializeHistory();\n            initializedHistory = true;\n          }\n\n          module.instantiate();\n        },\n\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying tabs', $module);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            // if using $.tab don't add events\n            if( !$.isWindow( element ) ) {\n              module.debug('Attaching tab activation events to element', $module);\n              $module\n                .on('click' + eventNamespace, module.event.click)\n              ;\n            }\n          }\n        },\n\n        determineTabs: function() {\n          var\n            $reference\n          ;\n\n          // determine tab context\n          if(settings.context === 'parent') {\n            if($module.closest(selector.ui).length > 0) {\n              $reference = $module.closest(selector.ui);\n              module.verbose('Using closest UI element as parent', $reference);\n            }\n            else {\n              $reference = $module;\n            }\n            $context = $reference.parent();\n            module.verbose('Determined parent element for creating context', $context);\n          }\n          else if(settings.context) {\n            $context = $(settings.context);\n            module.verbose('Using selector for tab context', settings.context, $context);\n          }\n          else {\n            $context = $('body');\n          }\n          // find tabs\n          if(settings.childrenOnly) {\n            $tabs = $context.children(selector.tabs);\n            module.debug('Searching tab context children for tabs', $context, $tabs);\n          }\n          else {\n            $tabs = $context.find(selector.tabs);\n            module.debug('Searching tab context for tabs', $context, $tabs);\n          }\n        },\n\n        fix: {\n          callbacks: function() {\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\n              if(parameters.onTabLoad) {\n                parameters.onLoad = parameters.onTabLoad;\n                delete parameters.onTabLoad;\n                module.error(error.legacyLoad, parameters.onLoad);\n              }\n              if(parameters.onTabInit) {\n                parameters.onFirstLoad = parameters.onTabInit;\n                delete parameters.onTabInit;\n                module.error(error.legacyInit, parameters.onFirstLoad);\n              }\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\n            }\n          }\n        },\n\n        initializeHistory: function() {\n          module.debug('Initializing page state');\n          if( $.address === undefined ) {\n            module.error(error.state);\n            return false;\n          }\n          else {\n            if(settings.historyType == 'state') {\n              module.debug('Using HTML5 to manage state');\n              if(settings.path !== false) {\n                $.address\n                  .history(true)\n                  .state(settings.path)\n                ;\n              }\n              else {\n                module.error(error.path);\n                return false;\n              }\n            }\n            $.address\n              .bind('change', module.event.history.change)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              tabPath = $(this).data(metadata.tab)\n            ;\n            if(tabPath !== undefined) {\n              if(settings.history) {\n                module.verbose('Updating page state', event);\n                $.address.value(tabPath);\n              }\n              else {\n                module.verbose('Changing tab', event);\n                module.changeTab(tabPath);\n              }\n              event.preventDefault();\n            }\n            else {\n              module.debug('No tab specified');\n            }\n          },\n          history: {\n            change: function(event) {\n              var\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n                pageTitle = settings.templates.determineTitle(tabPath) || false\n              ;\n              module.performance.display();\n              module.debug('History change event', tabPath, event);\n              historyEvent = event;\n              if(tabPath !== undefined) {\n                module.changeTab(tabPath);\n              }\n              if(pageTitle) {\n                $.address.title(pageTitle);\n              }\n            }\n          }\n        },\n\n        refresh: function() {\n          if(activeTabPath) {\n            module.debug('Refreshing tab', activeTabPath);\n            module.changeTab(activeTabPath);\n          }\n        },\n\n        cache: {\n\n          read: function(cacheKey) {\n            return (cacheKey !== undefined)\n              ? cache[cacheKey]\n              : false\n            ;\n          },\n          add: function(cacheKey, content) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Adding cached content for', cacheKey);\n            cache[cacheKey] = content;\n          },\n          remove: function(cacheKey) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Removing cached content for', cacheKey);\n            delete cache[cacheKey];\n          }\n        },\n\n        set: {\n          auto: function() {\n            var\n              url = (typeof settings.path == 'string')\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\n                : '/{$tab}'\n            ;\n            module.verbose('Setting up automatic tab retrieval from server', url);\n            if($.isPlainObject(settings.apiSettings)) {\n              settings.apiSettings.url = url;\n            }\n            else {\n              settings.apiSettings = {\n                url: url\n              };\n            }\n          },\n          loading: function(tabPath) {\n            var\n              $tab      = module.get.tabElement(tabPath),\n              isLoading = $tab.hasClass(className.loading)\n            ;\n            if(!isLoading) {\n              module.verbose('Setting loading state for', $tab);\n              $tab\n                .addClass(className.loading)\n                .siblings($tabs)\n                  .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onRequest.call($tab[0], tabPath);\n              }\n            }\n          },\n          state: function(state) {\n            $.address.value(state);\n          }\n        },\n\n        changeTab: function(tabPath) {\n          var\n            pushStateAvailable = (window.history && window.history.pushState),\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n            // only add default path if not remote content\n            pathArray = (remoteContent && !shouldIgnoreLoad)\n              ? module.utilities.pathToArray(tabPath)\n              : module.get.defaultPathArray(tabPath)\n          ;\n          tabPath = module.utilities.arrayToPath(pathArray);\n          $.each(pathArray, function(index, tab) {\n            var\n              currentPathArray   = pathArray.slice(0, index + 1),\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\n\n              isTab              = module.is.tab(currentPath),\n              isLastIndex        = (index + 1 == pathArray.length),\n\n              $tab               = module.get.tabElement(currentPath),\n              $anchor,\n              nextPathArray,\n              nextPath,\n              isLastTab\n            ;\n            module.verbose('Looking for tab', tab);\n            if(isTab) {\n              module.verbose('Tab was found', tab);\n              // scope up\n              activeTabPath  = currentPath;\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\n              if(isLastIndex) {\n                isLastTab = true;\n              }\n              else {\n                nextPathArray = pathArray.slice(0, index + 2);\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\n                isLastTab     = ( !module.is.tab(nextPath) );\n                if(isLastTab) {\n                  module.verbose('Tab parameters found', nextPathArray);\n                }\n              }\n              if(isLastTab && remoteContent) {\n                if(!shouldIgnoreLoad) {\n                  module.activate.navigation(currentPath);\n                  module.fetch.content(currentPath, tabPath);\n                }\n                else {\n                  module.debug('Ignoring remote content on first tab load', currentPath);\n                  firstLoad = false;\n                  module.cache.add(tabPath, $tab.html());\n                  module.activate.all(currentPath);\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                return false;\n              }\n              else {\n                module.debug('Opened local tab', currentPath);\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n              }\n\n            }\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\n              // look for in page anchor\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\n              $tab        = module.get.tabElement(currentPath);\n              // if anchor exists use parent tab\n              if($anchor && $anchor.length > 0 && currentPath) {\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\n                if( !$tab.hasClass(className.active) ) {\n                  setTimeout(function() {\n                    module.scrollTo($anchor);\n                  }, 0);\n                }\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                return false;\n              }\n            }\n            else {\n              module.error(error.missingTab, $module, $context, currentPath);\n              return false;\n            }\n          });\n        },\n\n        scrollTo: function($element) {\n          var\n            scrollOffset = ($element && $element.length > 0)\n              ? $element.offset().top\n              : false\n          ;\n          if(scrollOffset !== false) {\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\n            $(document).scrollTop(scrollOffset);\n          }\n        },\n\n        update: {\n          content: function(tabPath, html, evaluateScripts) {\n            var\n              $tab = module.get.tabElement(tabPath),\n              tab  = $tab[0]\n            ;\n            evaluateScripts = (evaluateScripts !== undefined)\n              ? evaluateScripts\n              : settings.evaluateScripts\n            ;\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\n              $tab\n                .empty()\n                .append($(html).clone(true))\n              ;\n            }\n            else {\n              if(evaluateScripts) {\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\n                $tab.html(html);\n              }\n              else {\n                module.debug('Updating HTML', tabPath, html);\n                tab.innerHTML = html;\n              }\n            }\n          }\n        },\n\n        fetch: {\n\n          content: function(tabPath, fullTabPath) {\n            var\n              $tab        = module.get.tabElement(tabPath),\n              apiSettings = {\n                dataType         : 'html',\n                encodeParameters : false,\n                on               : 'now',\n                cache            : settings.alwaysRefresh,\n                headers          : {\n                  'X-Remote': true\n                },\n                onSuccess : function(response) {\n                  if(settings.cacheType == 'response') {\n                    module.cache.add(fullTabPath, response);\n                  }\n                  module.update.content(tabPath, response);\n                  if(tabPath == activeTabPath) {\n                    module.debug('Content loaded', tabPath);\n                    module.activate.tab(tabPath);\n                  }\n                  else {\n                    module.debug('Content loaded in background', tabPath);\n                  }\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\n                  if(settings.loadOnce) {\n                    module.cache.add(fullTabPath, true);\n                  }\n                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\n                    setTimeout(function() {\n                      var\n                        $clone = $tab.children().clone(true)\n                      ;\n                      $clone = $clone.not('script');\n                      module.cache.add(fullTabPath, $clone);\n                    }, 0);\n                  }\n                  else {\n                    module.cache.add(fullTabPath, $tab.html());\n                  }\n                },\n                urlData: {\n                  tab: fullTabPath\n                }\n              },\n              request         = $tab.api('get request') || false,\n              existingRequest = ( request && request.state() === 'pending' ),\n              requestSettings,\n              cachedContent\n            ;\n\n            fullTabPath   = fullTabPath || tabPath;\n            cachedContent = module.cache.read(fullTabPath);\n\n\n            if(settings.cache && cachedContent) {\n              module.activate.tab(tabPath);\n              module.debug('Adding cached content', fullTabPath);\n              if(!settings.loadOnce) {\n                if(settings.evaluateScripts == 'once') {\n                  module.update.content(tabPath, cachedContent, false);\n                }\n                else {\n                  module.update.content(tabPath, cachedContent);\n                }\n              }\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n            }\n            else if(existingRequest) {\n              module.set.loading(tabPath);\n              module.debug('Content is already loading', fullTabPath);\n            }\n            else if($.api !== undefined) {\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\n              module.set.loading(tabPath);\n              $tab.api(requestSettings);\n            }\n            else {\n              module.error(error.api);\n            }\n          }\n        },\n\n        activate: {\n          all: function(tabPath) {\n            module.activate.tab(tabPath);\n            module.activate.navigation(tabPath);\n          },\n          tab: function(tabPath) {\n            var\n              $tab          = module.get.tabElement(tabPath),\n              $deactiveTabs = (settings.deactivate == 'siblings')\n                ? $tab.siblings($tabs)\n                : $tabs.not($tab),\n              isActive      = $tab.hasClass(className.active)\n            ;\n            module.verbose('Showing tab content for', $tab);\n            if(!isActive) {\n              $tab\n                .addClass(className.active)\n              ;\n              $deactiveTabs\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onVisible.call($tab[0], tabPath);\n              }\n            }\n          },\n          navigation: function(tabPath) {\n            var\n              $navigation         = module.get.navElement(tabPath),\n              $deactiveNavigation = (settings.deactivate == 'siblings')\n                ? $navigation.siblings($allModules)\n                : $allModules.not($navigation),\n              isActive    = $navigation.hasClass(className.active)\n            ;\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\n            if(!isActive) {\n              $navigation\n                .addClass(className.active)\n              ;\n              $deactiveNavigation\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n            }\n          }\n        },\n\n        deactivate: {\n          all: function() {\n            module.deactivate.navigation();\n            module.deactivate.tabs();\n          },\n          navigation: function() {\n            $allModules\n              .removeClass(className.active)\n            ;\n          },\n          tabs: function() {\n            $tabs\n              .removeClass(className.active + ' ' + className.loading)\n            ;\n          }\n        },\n\n        is: {\n          tab: function(tabName) {\n            return (tabName !== undefined)\n              ? ( module.get.tabElement(tabName).length > 0 )\n              : false\n            ;\n          }\n        },\n\n        get: {\n          initialPath: function() {\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n          },\n          path: function() {\n            return $.address.value();\n          },\n          // adds default tabs to tab path\n          defaultPathArray: function(tabPath) {\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n          },\n          defaultPath: function(tabPath) {\n            var\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n              defaultTab  = $defaultNav.data(metadata.tab) || false\n            ;\n            if( defaultTab ) {\n              module.debug('Found default tab', defaultTab);\n              if(recursionDepth < settings.maxDepth) {\n                recursionDepth++;\n                return module.get.defaultPath(defaultTab);\n              }\n              module.error(error.recursion);\n            }\n            else {\n              module.debug('No default tabs found for', tabPath, $tabs);\n            }\n            recursionDepth = 0;\n            return tabPath;\n          },\n          navElement: function(tabPath) {\n            tabPath = tabPath || activeTabPath;\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n          },\n          tabElement: function(tabPath) {\n            var\n              $fullPathTab,\n              $simplePathTab,\n              tabPathArray,\n              lastTab\n            ;\n            tabPath        = tabPath || activeTabPath;\n            tabPathArray   = module.utilities.pathToArray(tabPath);\n            lastTab        = module.utilities.last(tabPathArray);\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n            return ($fullPathTab.length > 0)\n              ? $fullPathTab\n              : $simplePathTab\n            ;\n          },\n          tab: function() {\n            return activeTabPath;\n          }\n        },\n\n        utilities: {\n          filterArray: function(keepArray, removeArray) {\n            return $.grep(keepArray, function(keepValue) {\n              return ( $.inArray(keepValue, removeArray) == -1);\n            });\n          },\n          last: function(array) {\n            return $.isArray(array)\n              ? array[ array.length - 1]\n              : false\n            ;\n          },\n          pathToArray: function(pathName) {\n            if(pathName === undefined) {\n              pathName = activeTabPath;\n            }\n            return typeof pathName == 'string'\n              ? pathName.split('/')\n              : [pathName]\n            ;\n          },\n          arrayToPath: function(pathArray) {\n            return $.isArray(pathArray)\n              ? pathArray.join('/')\n              : false\n            ;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n\n};\n\n// shortcut for tabbed content with no defined navigation\n$.tab = function() {\n  $(window).tab.apply(this, arguments);\n};\n\n$.fn.tab.settings = {\n\n  name            : 'Tab',\n  namespace       : 'tab',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\n  history         : false,      // use browser history\n  historyType     : 'hash',     // #/ or html5 state\n  path            : false,      // base path of url\n\n  context         : false,      // specify a context that tabs must appear inside\n  childrenOnly    : false,      // use only tabs that are children of context\n  maxDepth        : 25,         // max depth a tab can be nested\n\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\n\n  alwaysRefresh   : false,      // load tab content new every tab click\n  cache           : true,       // cache the content requests to pull locally\n  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\n  ignoreFirstLoad : false,      // don't load remote content on first load\n\n  apiSettings     : false,      // settings for api call\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\n\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\n\n  templates : {\n    determineTitle: function(tabArray) {} // returns page title for path\n  },\n\n  error: {\n    api        : 'You attempted to load content without API module',\n    method     : 'The method you called is not defined',\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\n    noContent  : 'The tab you specified is missing a content url.',\n    path       : 'History enabled, but no path was specified',\n    recursion  : 'Max recursive depth reached',\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\n  },\n\n  metadata : {\n    tab    : 'tab',\n    loaded : 'loaded',\n    promise: 'promise'\n  },\n\n  className   : {\n    loading : 'loading',\n    active  : 'active'\n  },\n\n  selector    : {\n    tabs : '.ui.tab',\n    ui   : '.ui'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Transition\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.transition = function() {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    moduleArguments = arguments,\n    query           = moduleArguments[0],\n    queryArguments  = [].slice.call(arguments, 1),\n    methodInvoked   = (typeof query === 'string'),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function(index) {\n      var\n        $module  = $(this),\n        element  = this,\n\n        // set at run time\n        settings,\n        instance,\n\n        error,\n        className,\n        metadata,\n        animationEnd,\n        animationName,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n\n          // get full settings\n          settings        = module.get.settings.apply(element, moduleArguments);\n\n          // shorthand\n          className       = settings.className;\n          error           = settings.error;\n          metadata        = settings.metadata;\n\n          // define namespace\n          eventNamespace  = '.' + settings.namespace;\n          moduleNamespace = 'module-' + settings.namespace;\n          instance        = $module.data(moduleNamespace) || module;\n\n          // get vendor specific events\n          animationEnd    = module.get.animationEndEvent();\n\n          if(methodInvoked) {\n            methodInvoked = module.invoke(query);\n          }\n\n          // method not invoked, lets run an animation\n          if(methodInvoked === false) {\n            module.verbose('Converted arguments into settings object', settings);\n            if(settings.interval) {\n              module.delay(settings.animate);\n            }\n            else  {\n              module.animate();\n            }\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing display type on next animation');\n          delete module.displayType;\n        },\n\n        forceRepaint: function() {\n          module.verbose('Forcing element repaint');\n          var\n            $parentElement = $module.parent(),\n            $nextElement = $module.next()\n          ;\n          if($nextElement.length === 0) {\n            $module.detach().appendTo($parentElement);\n          }\n          else {\n            $module.detach().insertBefore($nextElement);\n          }\n        },\n\n        repaint: function() {\n          module.verbose('Repainting element');\n          var\n            fakeAssignment = element.offsetWidth\n          ;\n        },\n\n        delay: function(interval) {\n          var\n            direction = module.get.animationDirection(),\n            shouldReverse,\n            delay\n          ;\n          if(!direction) {\n            direction = module.can.transition()\n              ? module.get.direction()\n              : 'static'\n            ;\n          }\n          interval = (interval !== undefined)\n            ? interval\n            : settings.interval\n          ;\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\n          delay = (shouldReverse || settings.reverse == true)\n            ? ($allModules.length - index) * settings.interval\n            : index * settings.interval\n          ;\n          module.debug('Delaying animation by', delay);\n          setTimeout(module.animate, delay);\n        },\n\n        animate: function(overrideSettings) {\n          settings = overrideSettings || settings;\n          if(!module.is.supported()) {\n            module.error(error.support);\n            return false;\n          }\n          module.debug('Preparing animation', settings.animation);\n          if(module.is.animating()) {\n            if(settings.queue) {\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\n              }\n              else {\n                module.queue(settings.animation);\n              }\n              return false;\n            }\n            else if(!settings.allowRepeats && module.is.occurring()) {\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\n              return false;\n            }\n            else {\n              module.debug('New animation started, completing previous early', settings.animation);\n              instance.complete();\n            }\n          }\n          if( module.can.animate() ) {\n            module.set.animating(settings.animation);\n          }\n          else {\n            module.error(error.noAnimation, settings.animation, element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting animation to beginning conditions');\n          module.remove.animationCallbacks();\n          module.restore.conditions();\n          module.remove.animating();\n        },\n\n        queue: function(animation) {\n          module.debug('Queueing animation of', animation);\n          module.queuing = true;\n          $module\n            .one(animationEnd + '.queue' + eventNamespace, function() {\n              module.queuing = false;\n              module.repaint();\n              module.animate.apply(this, settings);\n            })\n          ;\n        },\n\n        complete: function (event) {\n          module.debug('Animation complete', settings.animation);\n          module.remove.completeCallback();\n          module.remove.failSafe();\n          if(!module.is.looping()) {\n            if( module.is.outward() ) {\n              module.verbose('Animation is outward, hiding element');\n              module.restore.conditions();\n              module.hide();\n            }\n            else if( module.is.inward() ) {\n              module.verbose('Animation is outward, showing element');\n              module.restore.conditions();\n              module.show();\n            }\n            else {\n              module.verbose('Static animation completed');\n              module.restore.conditions();\n              settings.onComplete.call(element);\n            }\n          }\n        },\n\n        force: {\n          visible: function() {\n            var\n              style          = $module.attr('style'),\n              userStyle      = module.get.userStyle(),\n              displayType    = module.get.displayType(),\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== displayType) {\n              module.verbose('Overriding default display to show element', displayType);\n              $module\n                .attr('style', overrideStyle)\n              ;\n            }\n            else if(emptyStyle) {\n              $module.removeAttr('style');\n            }\n          },\n          hidden: function() {\n            var\n              style          = $module.attr('style'),\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\n              module.verbose('Overriding default display to hide element');\n              $module\n                .css('display', 'none')\n              ;\n            }\n            else if(emptyStyle) {\n              $module\n                .removeAttr('style')\n              ;\n            }\n          }\n        },\n\n        has: {\n          direction: function(animation) {\n            var\n              hasDirection = false\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              $.each(animation, function(index, word){\n                if(word === className.inward || word === className.outward) {\n                  hasDirection = true;\n                }\n              });\n            }\n            return hasDirection;\n          },\n          inlineDisplay: function() {\n            var\n              style = $module.attr('style') || ''\n            ;\n            return $.isArray(style.match(/display.*?;/, ''));\n          }\n        },\n\n        set: {\n          animating: function(animation) {\n            var\n              animationClass,\n              direction\n            ;\n            // remove previous callbacks\n            module.remove.completeCallback();\n\n            // determine exact animation\n            animation      = animation || settings.animation;\n            animationClass = module.get.animationClass(animation);\n\n            // save animation class in cache to restore class names\n            module.save.animation(animationClass);\n\n            // override display if necessary so animation appears visibly\n            module.force.visible();\n\n            module.remove.hidden();\n            module.remove.direction();\n\n            module.start.animation(animationClass);\n\n          },\n          duration: function(animationName, duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            if(duration || duration === 0) {\n              module.verbose('Setting animation duration', duration);\n              $module\n                .css({\n                  'animation-duration':  duration\n                })\n              ;\n            }\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            if(direction == className.inward) {\n              module.set.inward();\n            }\n            else {\n              module.set.outward();\n            }\n          },\n          looping: function() {\n            module.debug('Transition set to loop');\n            $module\n              .addClass(className.looping)\n            ;\n          },\n          hidden: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.hidden)\n            ;\n          },\n          inward: function() {\n            module.debug('Setting direction to inward');\n            $module\n              .removeClass(className.outward)\n              .addClass(className.inward)\n            ;\n          },\n          outward: function() {\n            module.debug('Setting direction to outward');\n            $module\n              .removeClass(className.inward)\n              .addClass(className.outward)\n            ;\n          },\n          visible: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.visible)\n            ;\n          }\n        },\n\n        start: {\n          animation: function(animationClass) {\n            animationClass = animationClass || module.get.animationClass();\n            module.debug('Starting tween', animationClass);\n            $module\n              .addClass(animationClass)\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\n            ;\n            if(settings.useFailSafe) {\n              module.add.failSafe();\n            }\n            module.set.duration(settings.duration);\n            settings.onStart.call(element);\n          }\n        },\n\n        save: {\n          animation: function(animation) {\n            if(!module.cache) {\n              module.cache = {};\n            }\n            module.cache.animation = animation;\n          },\n          displayType: function(displayType) {\n            if(displayType !== 'none') {\n              $module.data(metadata.displayType, displayType);\n            }\n          },\n          transitionExists: function(animation, exists) {\n            $.fn.transition.exists[animation] = exists;\n            module.verbose('Saving existence of transition', animation, exists);\n          }\n        },\n\n        restore: {\n          conditions: function() {\n            var\n              animation = module.get.currentAnimation()\n            ;\n            if(animation) {\n              $module\n                .removeClass(animation)\n              ;\n              module.verbose('Removing animation class', module.cache);\n            }\n            module.remove.duration();\n          }\n        },\n\n        add: {\n          failSafe: function() {\n            var\n              duration = module.get.duration()\n            ;\n            module.timer = setTimeout(function() {\n              $module.triggerHandler(animationEnd);\n            }, duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        remove: {\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          animationCallbacks: function() {\n            module.remove.queueCallback();\n            module.remove.completeCallback();\n          },\n          queueCallback: function() {\n            $module.off('.queue' + eventNamespace);\n          },\n          completeCallback: function() {\n            $module.off('.complete' + eventNamespace);\n          },\n          display: function() {\n            $module.css('display', '');\n          },\n          direction: function() {\n            $module\n              .removeClass(className.inward)\n              .removeClass(className.outward)\n            ;\n          },\n          duration: function() {\n            $module\n              .css('animation-duration', '')\n            ;\n          },\n          failSafe: function() {\n            module.verbose('Removing fail safe timer', module.timer);\n            if(module.timer) {\n              clearTimeout(module.timer);\n            }\n          },\n          hidden: function() {\n            $module.removeClass(className.hidden);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          looping: function() {\n            module.debug('Transitions are no longer looping');\n            if( module.is.looping() ) {\n              module.reset();\n              $module\n                .removeClass(className.looping)\n              ;\n            }\n          },\n          transition: function() {\n            $module\n              .removeClass(className.visible)\n              .removeClass(className.hidden)\n            ;\n          }\n        },\n        get: {\n          settings: function(animation, duration, onComplete) {\n            // single settings object\n            if(typeof animation == 'object') {\n              return $.extend(true, {}, $.fn.transition.settings, animation);\n            }\n            // all arguments provided\n            else if(typeof onComplete == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : onComplete,\n                duration   : duration\n              });\n            }\n            // only duration provided\n            else if(typeof duration == 'string' || typeof duration == 'number') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation,\n                duration  : duration\n              });\n            }\n            // duration is actually settings object\n            else if(typeof duration == 'object') {\n              return $.extend({}, $.fn.transition.settings, duration, {\n                animation : animation\n              });\n            }\n            // duration is actually callback\n            else if(typeof duration == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : duration\n              });\n            }\n            // only animation provided\n            else {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation\n              });\n            }\n          },\n          animationClass: function(animation) {\n            var\n              animationClass = animation || settings.animation,\n              directionClass = (module.can.transition() && !module.has.direction())\n                ? module.get.direction() + ' '\n                : ''\n            ;\n            return className.animating + ' '\n              + className.transition + ' '\n              + directionClass\n              + animationClass\n            ;\n          },\n          currentAnimation: function() {\n            return (module.cache && module.cache.animation !== undefined)\n              ? module.cache.animation\n              : false\n            ;\n          },\n          currentDirection: function() {\n            return module.is.inward()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          direction: function() {\n            return module.is.hidden() || !module.is.visible()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          animationDirection: function(animation) {\n            var\n              direction\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              // search animation name for out/in class\n              $.each(animation, function(index, word){\n                if(word === className.inward) {\n                  direction = className.inward;\n                }\n                else if(word === className.outward) {\n                  direction = className.outward;\n                }\n              });\n            }\n            // return found direction\n            if(direction) {\n              return direction;\n            }\n            return false;\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            if(duration === false) {\n              duration = $module.css('animation-duration') || 0;\n            }\n            return (typeof duration === 'string')\n              ? (duration.indexOf('ms') > -1)\n                ? parseFloat(duration)\n                : parseFloat(duration) * 1000\n              : duration\n            ;\n          },\n          displayType: function(shouldDetermine) {\n            shouldDetermine = (shouldDetermine !== undefined)\n              ? shouldDetermine\n              : true\n            ;\n            if(settings.displayType) {\n              return settings.displayType;\n            }\n            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\n              // create fake element to determine display state\n              module.can.transition(true);\n            }\n            return $module.data(metadata.displayType);\n          },\n          userStyle: function(style) {\n            style = style || $module.attr('style') || '';\n            return style.replace(/display.*?;/, '');\n          },\n          transitionExists: function(animation) {\n            return $.fn.transition.exists[animation];\n          },\n          animationStartEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationstart',\n                'OAnimation'      :'oAnimationStart',\n                'MozAnimation'    :'mozAnimationStart',\n                'WebkitAnimation' :'webkitAnimationStart'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          },\n          animationEndEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationend',\n                'OAnimation'      :'oAnimationEnd',\n                'MozAnimation'    :'mozAnimationEnd',\n                'WebkitAnimation' :'webkitAnimationEnd'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          }\n\n        },\n\n        can: {\n          transition: function(forced) {\n            var\n              animation         = settings.animation,\n              transitionExists  = module.get.transitionExists(animation),\n              displayType       = module.get.displayType(false),\n              elementClass,\n              tagName,\n              $clone,\n              currentAnimation,\n              inAnimation,\n              directionExists\n            ;\n            if( transitionExists === undefined || forced) {\n              module.verbose('Determining whether animation exists');\n              elementClass = $module.attr('class');\n              tagName      = $module.prop('tagName');\n\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\n              currentAnimation = $clone\n                .addClass(animation)\n                .removeClass(className.inward)\n                .removeClass(className.outward)\n                .addClass(className.animating)\n                .addClass(className.transition)\n                .css('animationName')\n              ;\n              inAnimation = $clone\n                .addClass(className.inward)\n                .css('animationName')\n              ;\n              if(!displayType) {\n                displayType = $clone\n                  .attr('class', elementClass)\n                  .removeAttr('style')\n                  .removeClass(className.hidden)\n                  .removeClass(className.visible)\n                  .show()\n                  .css('display')\n                ;\n                module.verbose('Determining final display state', displayType);\n                module.save.displayType(displayType);\n              }\n\n              $clone.remove();\n              if(currentAnimation != inAnimation) {\n                module.debug('Direction exists for animation', animation);\n                directionExists = true;\n              }\n              else if(currentAnimation == 'none' || !currentAnimation) {\n                module.debug('No animation defined in css', animation);\n                return;\n              }\n              else {\n                module.debug('Static animation found', animation, displayType);\n                directionExists = false;\n              }\n              module.save.transitionExists(animation, directionExists);\n            }\n            return (transitionExists !== undefined)\n              ? transitionExists\n              : directionExists\n            ;\n          },\n          animate: function() {\n            // can transition does not return a value if animation does not exist\n            return (module.can.transition() !== undefined);\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $module.hasClass(className.animating);\n          },\n          inward: function() {\n            return $module.hasClass(className.inward);\n          },\n          outward: function() {\n            return $module.hasClass(className.outward);\n          },\n          looping: function() {\n            return $module.hasClass(className.looping);\n          },\n          occurring: function(animation) {\n            animation = animation || settings.animation;\n            animation = '.' + animation.replace(' ', '.');\n            return ( $module.filter(animation).length > 0 );\n          },\n          visible: function() {\n            return $module.is(':visible');\n          },\n          hidden: function() {\n            return $module.css('visibility') === 'hidden';\n          },\n          supported: function() {\n            return(animationEnd !== false);\n          }\n        },\n\n        hide: function() {\n          module.verbose('Hiding element');\n          if( module.is.animating() ) {\n            module.reset();\n          }\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\n          module.remove.display();\n          module.remove.visible();\n          module.set.hidden();\n          module.force.hidden();\n          settings.onHide.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        show: function(display) {\n          module.verbose('Showing element', display);\n          module.remove.hidden();\n          module.set.visible();\n          module.force.visible();\n          settings.onShow.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        toggle: function() {\n          if( module.is.visible() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        stop: function() {\n          module.debug('Stopping current animation');\n          $module.triggerHandler(animationEnd);\n        },\n\n        stopAll: function() {\n          module.debug('Stopping all animation');\n          module.remove.queueCallback();\n          $module.triggerHandler(animationEnd);\n        },\n\n        clear: {\n          queue: function() {\n            module.debug('Clearing animation queue');\n            module.remove.queueCallback();\n          }\n        },\n\n        enable: function() {\n          module.verbose('Starting animation');\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          module.debug('Stopping animation');\n          $module.addClass(className.disabled);\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        // modified for transition to return invoke success\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return (found !== undefined)\n            ? found\n            : false\n          ;\n        }\n      };\n      module.initialize();\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n// Records if CSS transition is available\n$.fn.transition.exists = {};\n\n$.fn.transition.settings = {\n\n  // module info\n  name          : 'Transition',\n\n  // hide all output from this component regardless of other settings\n  silent        : false,\n\n  // debug content outputted to console\n  debug         : false,\n\n  // verbose debug output\n  verbose       : false,\n\n  // performance data output\n  performance   : true,\n\n  // event namespace\n  namespace     : 'transition',\n\n  // delay between animations in group\n  interval      : 0,\n\n  // whether group animations should be reversed\n  reverse       : 'auto',\n\n  // animation callback event\n  onStart       : function() {},\n  onComplete    : function() {},\n  onShow        : function() {},\n  onHide        : function() {},\n\n  // whether timeout should be used to ensure callback fires in cases animationend does not\n  useFailSafe   : true,\n\n  // delay in ms for fail safe\n  failSafeDelay : 100,\n\n  // whether EXACT animation can occur twice in a row\n  allowRepeats  : false,\n\n  // Override final display type on visible\n  displayType   : false,\n\n  // animation duration\n  animation     : 'fade',\n  duration      : false,\n\n  // new animations will occur after previous ones\n  queue         : true,\n\n  metadata : {\n    displayType: 'display'\n  },\n\n  className   : {\n    animating  : 'animating',\n    disabled   : 'disabled',\n    hidden     : 'hidden',\n    inward     : 'in',\n    loading    : 'loading',\n    looping    : 'looping',\n    outward    : 'out',\n    transition : 'transition',\n    visible    : 'visible'\n  },\n\n  // possible errors\n  error: {\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\n    method      : 'The method you called is not defined',\n    support     : 'This browser does not support CSS animations'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - API\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nvar\n  window = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.api = $.fn.api = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n    moduleSelector = $allModules.selector || '',\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\n          : $.extend({}, $.fn.api.settings),\n\n        // internal aliases\n        namespace       = settings.namespace,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n        className       = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // element that creates request\n        $module         = $(this),\n        $form           = $module.closest(selector.form),\n\n        // context used for state\n        $context        = (settings.stateContext)\n          ? $(settings.stateContext)\n          : $module,\n\n        // request details\n        ajaxSettings,\n        requestSettings,\n        url,\n        data,\n        requestStartTime,\n\n        // standard module\n        element         = this,\n        context         = $context[0],\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          if(!methodInvoked) {\n            module.bind.events();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            var\n              triggerEvent = module.get.event()\n            ;\n            if( triggerEvent ) {\n              module.verbose('Attaching API events to element', triggerEvent);\n              $module\n                .on(triggerEvent + eventNamespace, module.event.trigger)\n              ;\n            }\n            else if(settings.on == 'now') {\n              module.debug('Querying API endpoint immediately');\n              module.query();\n            }\n          }\n        },\n\n        decode: {\n          json: function(response) {\n            if(response !== undefined && typeof response == 'string') {\n              try {\n               response = JSON.parse(response);\n              }\n              catch(e) {\n                // isnt json string\n              }\n            }\n            return response;\n          }\n        },\n\n        read: {\n          cachedResponse: function(url) {\n            var\n              response\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            response = sessionStorage.getItem(url);\n            module.debug('Using cached response', url, response);\n            response = module.decode.json(response);\n            return response;\n          }\n        },\n        write: {\n          cachedResponse: function(url, response) {\n            if(response && response === '') {\n              module.debug('Response empty, not caching', response);\n              return;\n            }\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            if( $.isPlainObject(response) ) {\n              response = JSON.stringify(response);\n            }\n            sessionStorage.setItem(url, response);\n            module.verbose('Storing cached response for url', url, response);\n          }\n        },\n\n        query: function() {\n\n          if(module.is.disabled()) {\n            module.debug('Element is disabled API request aborted');\n            return;\n          }\n\n          if(module.is.loading()) {\n            if(settings.interruptRequests) {\n              module.debug('Interrupting previous request');\n              module.abort();\n            }\n            else {\n              module.debug('Cancelling request, previous request is still pending');\n              return;\n            }\n          }\n\n          // pass element metadata to url (value, text)\n          if(settings.defaultData) {\n            $.extend(true, settings.urlData, module.get.defaultData());\n          }\n\n          // Add form content\n          if(settings.serializeForm) {\n            settings.data = module.add.formData(settings.data);\n          }\n\n          // call beforesend and get any settings changes\n          requestSettings = module.get.settings();\n\n          // check if before send cancelled request\n          if(requestSettings === false) {\n            module.cancelled = true;\n            module.error(error.beforeSend);\n            return;\n          }\n          else {\n            module.cancelled = false;\n          }\n\n          // get url\n          url = module.get.templatedURL();\n\n          if(!url && !module.is.mocked()) {\n            module.error(error.missingURL);\n            return;\n          }\n\n          // replace variables\n          url = module.add.urlData( url );\n          // missing url parameters\n          if( !url && !module.is.mocked()) {\n            return;\n          }\n\n          requestSettings.url = settings.base + url;\n\n          // look for jQuery ajax parameters in settings\n          ajaxSettings = $.extend(true, {}, settings, {\n            type       : settings.method || settings.type,\n            data       : data,\n            url        : settings.base + url,\n            beforeSend : settings.beforeXHR,\n            success    : function() {},\n            failure    : function() {},\n            complete   : function() {}\n          });\n\n          module.debug('Querying URL', ajaxSettings.url);\n          module.verbose('Using AJAX settings', ajaxSettings);\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\n            module.debug('Response returned from local cache');\n            module.request = module.create.request();\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\n            return;\n          }\n\n          if( !settings.throttle ) {\n            module.debug('Sending request', data, ajaxSettings.method);\n            module.send.request();\n          }\n          else {\n            if(!settings.throttleFirstRequest && !module.timer) {\n              module.debug('Sending request', data, ajaxSettings.method);\n              module.send.request();\n              module.timer = setTimeout(function(){}, settings.throttle);\n            }\n            else {\n              module.debug('Throttling request', settings.throttle);\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                if(module.timer) {\n                  delete module.timer;\n                }\n                module.debug('Sending throttled request', data, ajaxSettings.method);\n                module.send.request();\n              }, settings.throttle);\n            }\n          }\n\n        },\n\n        should: {\n          removeError: function() {\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\n          }\n        },\n\n        is: {\n          disabled: function() {\n            return ($module.filter(selector.disabled).length > 0);\n          },\n          expectingJSON: function() {\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\n          },\n          form: function() {\n            return $module.is('form') || $context.is('form');\n          },\n          mocked: function() {\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          loading: function() {\n            return (module.request)\n              ? (module.request.state() == 'pending')\n              : false\n            ;\n          },\n          abortedRequest: function(xhr) {\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\n              module.verbose('XHR request determined to be aborted');\n              return true;\n            }\n            else {\n              module.verbose('XHR request was not aborted');\n              return false;\n            }\n          },\n          validResponse: function(response) {\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\n              return true;\n            }\n            module.debug('Checking JSON returned success', settings.successTest, response);\n            if( settings.successTest(response) ) {\n              module.debug('Response passed success test', response);\n              return true;\n            }\n            else {\n              module.debug('Response failed success test', response);\n              return false;\n            }\n          }\n        },\n\n        was: {\n          cancelled: function() {\n            return (module.cancelled || false);\n          },\n          succesful: function() {\n            return (module.request && module.request.state() == 'resolved');\n          },\n          failure: function() {\n            return (module.request && module.request.state() == 'rejected');\n          },\n          complete: function() {\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\n          }\n        },\n\n        add: {\n          urlData: function(url, urlData) {\n            var\n              requiredVariables,\n              optionalVariables\n            ;\n            if(url) {\n              requiredVariables = url.match(settings.regExp.required);\n              optionalVariables = url.match(settings.regExp.optional);\n              urlData           = urlData || settings.urlData;\n              if(requiredVariables) {\n                module.debug('Looking for required URL variables', requiredVariables);\n                $.each(requiredVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(2, templatedString.length - 3)\n                      : templatedString.substr(1, templatedString.length - 2),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // remove value\n                  if(value === undefined) {\n                    module.error(error.requiredParameter, variable, url);\n                    url = false;\n                    return false;\n                  }\n                  else {\n                    module.verbose('Found required variable', variable, value);\n                    value = (settings.encodeParameters)\n                      ? module.get.urlEncodedValue(value)\n                      : value\n                    ;\n                    url = url.replace(templatedString, value);\n                  }\n                });\n              }\n              if(optionalVariables) {\n                module.debug('Looking for optional URL variables', requiredVariables);\n                $.each(optionalVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {/$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(3, templatedString.length - 4)\n                      : templatedString.substr(2, templatedString.length - 3),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // optional replacement\n                  if(value !== undefined) {\n                    module.verbose('Optional variable Found', variable, value);\n                    url = url.replace(templatedString, value);\n                  }\n                  else {\n                    module.verbose('Optional variable not found', variable);\n                    // remove preceding slash if set\n                    if(url.indexOf('/' + templatedString) !== -1) {\n                      url = url.replace('/' + templatedString, '');\n                    }\n                    else {\n                      url = url.replace(templatedString, '');\n                    }\n                  }\n                });\n              }\n            }\n            return url;\n          },\n          formData: function(data) {\n            var\n              canSerialize = ($.fn.serializeObject !== undefined),\n              formData     = (canSerialize)\n                ? $form.serializeObject()\n                : $form.serialize(),\n              hasOtherData\n            ;\n            data         = data || settings.data;\n            hasOtherData = $.isPlainObject(data);\n\n            if(hasOtherData) {\n              if(canSerialize) {\n                module.debug('Extending existing data with form data', data, formData);\n                data = $.extend(true, {}, data, formData);\n              }\n              else {\n                module.error(error.missingSerialize);\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\n                data = formData;\n              }\n            }\n            else {\n              module.debug('Adding form data', formData);\n              data = formData;\n            }\n            return data;\n          }\n        },\n\n        send: {\n          request: function() {\n            module.set.loading();\n            module.request = module.create.request();\n            if( module.is.mocked() ) {\n              module.mockedXHR = module.create.mockedXHR();\n            }\n            else {\n              module.xhr = module.create.xhr();\n            }\n            settings.onRequest.call(context, module.request, module.xhr);\n          }\n        },\n\n        event: {\n          trigger: function(event) {\n            module.query();\n            if(event.type == 'submit' || event.type == 'click') {\n              event.preventDefault();\n            }\n          },\n          xhr: {\n            always: function() {\n              // nothing special\n            },\n            done: function(response, textStatus, xhr) {\n              var\n                context            = this,\n                elapsedTime        = (new Date().getTime() - requestStartTime),\n                timeLeft           = (settings.loadingDuration - elapsedTime),\n                translatedResponse = ( $.isFunction(settings.onResponse) )\n                  ? module.is.expectingJSON()\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\n                    : settings.onResponse.call(context, response)\n                  : false\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(translatedResponse) {\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\n                response = translatedResponse;\n              }\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.validResponse(response) ) {\n                  module.request.resolveWith(context, [response, xhr]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'invalid']);\n                }\n              }, timeLeft);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                context     = this,\n                elapsedTime = (new Date().getTime() - requestStartTime),\n                timeLeft    = (settings.loadingDuration - elapsedTime)\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.abortedRequest(xhr) ) {\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\n                }\n              }, timeLeft);\n            }\n          },\n          request: {\n            done: function(response, xhr) {\n              module.debug('Successful API Response', response);\n              if(settings.cache === 'local' && url) {\n                module.write.cachedResponse(url, response);\n                module.debug('Saving server response locally', module.cache);\n              }\n              settings.onSuccess.call(context, response, $module, xhr);\n            },\n            complete: function(firstParameter, secondParameter) {\n              var\n                xhr,\n                response\n              ;\n              // have to guess callback parameters based on request success\n              if( module.was.succesful() ) {\n                response = firstParameter;\n                xhr      = secondParameter;\n              }\n              else {\n                xhr      = firstParameter;\n                response = module.get.responseFromXHR(xhr);\n              }\n              module.remove.loading();\n              settings.onComplete.call(context, response, $module, xhr);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                // pull response from xhr if available\n                response     = module.get.responseFromXHR(xhr),\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\n              ;\n              if(status == 'aborted') {\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\n                settings.onAbort.call(context, status, $module, xhr);\n                return true;\n              }\n              else if(status == 'invalid') {\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\n              }\n              else if(status == 'error') {\n                if(xhr !== undefined) {\n                  module.debug('XHR produced a server error', status, httpMessage);\n                  // make sure we have an error to display to console\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\n                  }\n                  settings.onError.call(context, errorMessage, $module, xhr);\n                }\n              }\n\n              if(settings.errorDuration && status !== 'aborted') {\n                module.debug('Adding error state');\n                module.set.error();\n                if( module.should.removeError() ) {\n                  setTimeout(module.remove.error, settings.errorDuration);\n                }\n              }\n              module.debug('API Request failed', errorMessage, xhr);\n              settings.onFailure.call(context, response, $module, xhr);\n            }\n          }\n        },\n\n        create: {\n\n          request: function() {\n            // api request promise\n            return $.Deferred()\n              .always(module.event.request.complete)\n              .done(module.event.request.done)\n              .fail(module.event.request.fail)\n            ;\n          },\n\n          mockedXHR: function () {\n            var\n              // xhr does not simulate these properties of xhr but must return them\n              textStatus     = false,\n              status         = false,\n              httpMessage    = false,\n              responder      = settings.mockResponse      || settings.response,\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\n              asyncCallback,\n              response,\n              mockedXHR\n            ;\n\n            mockedXHR = $.Deferred()\n              .always(module.event.xhr.complete)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n\n            if(responder) {\n              if( $.isFunction(responder) ) {\n                module.debug('Using specified synchronous callback', responder);\n                response = responder.call(context, requestSettings);\n              }\n              else {\n                module.debug('Using settings specified response', responder);\n                response = responder;\n              }\n              // simulating response\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n            }\n            else if( $.isFunction(asyncResponder) ) {\n              asyncCallback = function(response) {\n                module.debug('Async callback returned response', response);\n\n                if(response) {\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n                }\n                else {\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\n                }\n              };\n              module.debug('Using specified async response callback', asyncResponder);\n              asyncResponder.call(context, requestSettings, asyncCallback);\n            }\n            return mockedXHR;\n          },\n\n          xhr: function() {\n            var\n              xhr\n            ;\n            // ajax request promise\n            xhr = $.ajax(ajaxSettings)\n              .always(module.event.xhr.always)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n            module.verbose('Created server request', xhr, ajaxSettings);\n            return xhr;\n          }\n        },\n\n        set: {\n          error: function() {\n            module.verbose('Adding error state to element', $context);\n            $context.addClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Adding loading state to element', $context);\n            $context.addClass(className.loading);\n            requestStartTime = new Date().getTime();\n          }\n        },\n\n        remove: {\n          error: function() {\n            module.verbose('Removing error state from element', $context);\n            $context.removeClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Removing loading state from element', $context);\n            $context.removeClass(className.loading);\n          }\n        },\n\n        get: {\n          responseFromXHR: function(xhr) {\n            return $.isPlainObject(xhr)\n              ? (module.is.expectingJSON())\n                ? module.decode.json(xhr.responseText)\n                : xhr.responseText\n              : false\n            ;\n          },\n          errorFromRequest: function(response, status, httpMessage) {\n            return ($.isPlainObject(response) && response.error !== undefined)\n              ? response.error // use json error message\n              : (settings.error[status] !== undefined) // use server error message\n                ? settings.error[status]\n                : httpMessage\n            ;\n          },\n          request: function() {\n            return module.request || false;\n          },\n          xhr: function() {\n            return module.xhr || false;\n          },\n          settings: function() {\n            var\n              runSettings\n            ;\n            runSettings = settings.beforeSend.call(context, settings);\n            if(runSettings) {\n              if(runSettings.success !== undefined) {\n                module.debug('Legacy success callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.success);\n                runSettings.onSuccess = runSettings.success;\n              }\n              if(runSettings.failure !== undefined) {\n                module.debug('Legacy failure callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.failure);\n                runSettings.onFailure = runSettings.failure;\n              }\n              if(runSettings.complete !== undefined) {\n                module.debug('Legacy complete callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.complete);\n                runSettings.onComplete = runSettings.complete;\n              }\n            }\n            if(runSettings === undefined) {\n              module.error(error.noReturnedValue);\n            }\n            if(runSettings === false) {\n              return runSettings;\n            }\n            return (runSettings !== undefined)\n              ? $.extend(true, {}, runSettings)\n              : $.extend(true, {}, settings)\n            ;\n          },\n          urlEncodedValue: function(value) {\n            var\n              decodedValue   = window.decodeURIComponent(value),\n              encodedValue   = window.encodeURIComponent(value),\n              alreadyEncoded = (decodedValue !== value)\n            ;\n            if(alreadyEncoded) {\n              module.debug('URL value is already encoded, avoiding double encoding', value);\n              return value;\n            }\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\n            return encodedValue;\n          },\n          defaultData: function() {\n            var\n              data = {}\n            ;\n            if( !$.isWindow(element) ) {\n              if( module.is.input() ) {\n                data.value = $module.val();\n              }\n              else if( module.is.form() ) {\n\n              }\n              else {\n                data.text = $module.text();\n              }\n            }\n            return data;\n          },\n          event: function() {\n            if( $.isWindow(element) || settings.on == 'now' ) {\n              module.debug('API called without element, no events attached');\n              return false;\n            }\n            else if(settings.on == 'auto') {\n              if( $module.is('input') ) {\n                return (element.oninput !== undefined)\n                  ? 'input'\n                  : (element.onpropertychange !== undefined)\n                    ? 'propertychange'\n                    : 'keyup'\n                ;\n              }\n              else if( $module.is('form') ) {\n                return 'submit';\n              }\n              else {\n                return 'click';\n              }\n            }\n            else {\n              return settings.on;\n            }\n          },\n          templatedURL: function(action) {\n            action = action || $module.data(metadata.action) || settings.action || false;\n            url    = $module.data(metadata.url) || settings.url || false;\n            if(url) {\n              module.debug('Using specified url', url);\n              return url;\n            }\n            if(action) {\n              module.debug('Looking up url for action', action, settings.api);\n              if(settings.api[action] === undefined && !module.is.mocked()) {\n                module.error(error.missingAction, settings.action, settings.api);\n                return;\n              }\n              url = settings.api[action];\n            }\n            else if( module.is.form() ) {\n              url = $module.attr('action') || $context.attr('action') || false;\n              module.debug('No url or action specified, defaulting to form action', url);\n            }\n            return url;\n          }\n        },\n\n        abort: function() {\n          var\n            xhr = module.get.xhr()\n          ;\n          if( xhr && xhr.state() !== 'resolved') {\n            module.debug('Cancelling API request');\n            xhr.abort();\n          }\n        },\n\n        // reset state\n        reset: function() {\n          module.remove.error();\n          module.remove.loading();\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                //'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.api.settings = {\n\n  name              : 'API',\n  namespace         : 'api',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // object containing all templates endpoints\n  api               : {},\n\n  // whether to cache responses\n  cache             : true,\n\n  // whether new requests should abort previous requests\n  interruptRequests : true,\n\n  // event binding\n  on                : 'auto',\n\n  // context for applying state classes\n  stateContext      : false,\n\n  // duration for loading state\n  loadingDuration   : 0,\n\n  // whether to hide errors after a period of time\n  hideError         : 'auto',\n\n  // duration for error state\n  errorDuration     : 2000,\n\n  // whether parameters should be encoded with encodeURIComponent\n  encodeParameters  : true,\n\n  // API action to use\n  action            : false,\n\n  // templated URL to use\n  url               : false,\n\n  // base URL to apply to all endpoints\n  base              : '',\n\n  // data that will\n  urlData           : {},\n\n  // whether to add default data to url data\n  defaultData          : true,\n\n  // whether to serialize closest form\n  serializeForm        : false,\n\n  // how long to wait before request should occur\n  throttle             : 0,\n\n  // whether to throttle first request or only repeated\n  throttleFirstRequest : true,\n\n  // standard ajax settings\n  method            : 'get',\n  data              : {},\n  dataType          : 'json',\n\n  // mock response\n  mockResponse      : false,\n  mockResponseAsync : false,\n\n  // aliases for mock\n  response          : false,\n  responseAsync     : false,\n\n  // callbacks before request\n  beforeSend  : function(settings) { return settings; },\n  beforeXHR   : function(xhr) {},\n  onRequest   : function(promise, xhr) {},\n\n  // after request\n  onResponse  : false, // function(response) { },\n\n  // response was successful, if JSON passed validation\n  onSuccess   : function(response, $module) {},\n\n  // request finished without aborting\n  onComplete  : function(response, $module) {},\n\n  // failed JSON success test\n  onFailure   : function(response, $module) {},\n\n  // server error\n  onError     : function(errorMessage, $module) {},\n\n  // request aborted\n  onAbort     : function(errorMessage, $module) {},\n\n  successTest : false,\n\n  // errors\n  error : {\n    beforeSend        : 'The before send function has aborted the request',\n    error             : 'There was an error with your request',\n    exitConditions    : 'API Request Aborted. Exit conditions met',\n    JSONParse         : 'JSON could not be parsed during error handling',\n    legacyParameters  : 'You are using legacy API success callback names',\n    method            : 'The method you called is not defined',\n    missingAction     : 'API action used but no url was defined',\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\n    missingURL        : 'No URL specified for api event',\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\n    noStorage         : 'Caching responses locally requires session storage',\n    parseError        : 'There was an error parsing your request',\n    requiredParameter : 'Missing a required URL parameter: ',\n    statusMessage     : 'Server gave an error: ',\n    timeout           : 'Your request timed out'\n  },\n\n  regExp  : {\n    required : /\\{\\$*[A-z0-9]+\\}/g,\n    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\n  },\n\n  className: {\n    loading : 'loading',\n    error   : 'error'\n  },\n\n  selector: {\n    disabled : '.disabled',\n    form      : 'form'\n  },\n\n  metadata: {\n    action  : 'action',\n    url     : 'url'\n  }\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - State\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.state = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    hasTouch        = ('ontouchstart' in document.documentElement),\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\n          : $.extend({}, $.fn.state.settings),\n\n        error           = settings.error,\n        metadata        = settings.metadata,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        states          = settings.states,\n        text            = settings.text,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n\n          // allow module to guess desired state based on element\n          if(settings.automatic) {\n            module.add.defaults();\n          }\n\n          // bind events with delegated events\n          if(settings.context && moduleSelector !== '') {\n            $(settings.context)\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          else {\n            $module\n              .on('mouseenter' + eventNamespace, module.change.text)\n              .on('mouseleave' + eventNamespace, module.reset.text)\n              .on('click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $module = $(element);\n        },\n\n        add: {\n          defaults: function() {\n            var\n              userStates = parameters && $.isPlainObject(parameters.states)\n                ? parameters.states\n                : {}\n            ;\n            $.each(settings.defaults, function(type, typeStates) {\n              if( module.is[type] !== undefined && module.is[type]() ) {\n                module.verbose('Adding default states', type, element);\n                $.extend(settings.states, typeStates, userStates);\n              }\n            });\n          }\n        },\n\n        is: {\n\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          loading: function() {\n            return $module.hasClass(className.loading);\n          },\n          inactive: function() {\n            return !( $module.hasClass(className.active) );\n          },\n          state: function(state) {\n            if(className[state] === undefined) {\n              return false;\n            }\n            return $module.hasClass( className[state] );\n          },\n\n          enabled: function() {\n            return !( $module.is(settings.filter.active) );\n          },\n          disabled: function() {\n            return ( $module.is(settings.filter.active) );\n          },\n          textEnabled: function() {\n            return !( $module.is(settings.filter.text) );\n          },\n\n          // definitions for automatic type detection\n          button: function() {\n            return $module.is('.button:not(a, .submit)');\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          progress: function() {\n            return $module.is('.ui.progress');\n          }\n        },\n\n        allow: function(state) {\n          module.debug('Now allowing state', state);\n          states[state] = true;\n        },\n        disallow: function(state) {\n          module.debug('No longer allowing', state);\n          states[state] = false;\n        },\n\n        allows: function(state) {\n          return states[state] || false;\n        },\n\n        enable: function() {\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          $module.addClass(className.disabled);\n        },\n\n        setState: function(state) {\n          if(module.allows(state)) {\n            $module.addClass( className[state] );\n          }\n        },\n\n        removeState: function(state) {\n          if(module.allows(state)) {\n            $module.removeClass( className[state] );\n          }\n        },\n\n        toggle: {\n          state: function() {\n            var\n              apiRequest,\n              requestCancelled\n            ;\n            if( module.allows('active') && module.is.enabled() ) {\n              module.refresh();\n              if($.fn.api !== undefined) {\n                apiRequest       = $module.api('get request');\n                requestCancelled = $module.api('was cancelled');\n                if( requestCancelled ) {\n                  module.debug('API Request cancelled by beforesend');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                else if(apiRequest) {\n                  module.listenTo(apiRequest);\n                  return;\n                }\n              }\n              module.change.state();\n            }\n          }\n        },\n\n        listenTo: function(apiRequest) {\n          module.debug('API request detected, waiting for state signal', apiRequest);\n          if(apiRequest) {\n            if(text.loading) {\n              module.update.text(text.loading);\n            }\n            $.when(apiRequest)\n              .then(function() {\n                if(apiRequest.state() == 'resolved') {\n                  module.debug('API request succeeded');\n                  settings.activateTest   = function(){ return true; };\n                  settings.deactivateTest = function(){ return true; };\n                }\n                else {\n                  module.debug('API request failed');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                module.change.state();\n              })\n            ;\n          }\n        },\n\n        // checks whether active/inactive state can be given\n        change: {\n\n          state: function() {\n            module.debug('Determining state change direction');\n            // inactive to active change\n            if( module.is.inactive() ) {\n              module.activate();\n            }\n            else {\n              module.deactivate();\n            }\n            if(settings.sync) {\n              module.sync();\n            }\n            settings.onChange.call(element);\n          },\n\n          text: function() {\n            if( module.is.textEnabled() ) {\n              if(module.is.disabled() ) {\n                module.verbose('Changing text to disabled text', text.hover);\n                module.update.text(text.disabled);\n              }\n              else if( module.is.active() ) {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.deactivate) {\n                  module.verbose('Changing text to deactivating text', text.deactivate);\n                  module.update.text(text.deactivate);\n                }\n              }\n              else {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.activate){\n                  module.verbose('Changing text to activating text', text.activate);\n                  module.update.text(text.activate);\n                }\n              }\n            }\n          }\n\n        },\n\n        activate: function() {\n          if( settings.activateTest.call(element) ) {\n            module.debug('Setting state to active');\n            $module\n              .addClass(className.active)\n            ;\n            module.update.text(text.active);\n            settings.onActivate.call(element);\n          }\n        },\n\n        deactivate: function() {\n          if( settings.deactivateTest.call(element) ) {\n            module.debug('Setting state to inactive');\n            $module\n              .removeClass(className.active)\n            ;\n            module.update.text(text.inactive);\n            settings.onDeactivate.call(element);\n          }\n        },\n\n        sync: function() {\n          module.verbose('Syncing other buttons to current state');\n          if( module.is.active() ) {\n            $allModules\n              .not($module)\n                .state('activate');\n          }\n          else {\n            $allModules\n              .not($module)\n                .state('deactivate')\n            ;\n          }\n        },\n\n        get: {\n          text: function() {\n            return (settings.selector.text)\n              ? $module.find(settings.selector.text).text()\n              : $module.html()\n            ;\n          },\n          textFor: function(state) {\n            return text[state] || false;\n          }\n        },\n\n        flash: {\n          text: function(text, duration, callback) {\n            var\n              previousText = module.get.text()\n            ;\n            module.debug('Flashing text message', text, duration);\n            text     = text     || settings.text.flash;\n            duration = duration || settings.flashDuration;\n            callback = callback || function() {};\n            module.update.text(text);\n            setTimeout(function(){\n              module.update.text(previousText);\n              callback.call(element);\n            }, duration);\n          }\n        },\n\n        reset: {\n          // on mouseout sets text to previous value\n          text: function() {\n            var\n              activeText   = text.active   || $module.data(metadata.storedText),\n              inactiveText = text.inactive || $module.data(metadata.storedText)\n            ;\n            if( module.is.textEnabled() ) {\n              if( module.is.active() && activeText) {\n                module.verbose('Resetting active text', activeText);\n                module.update.text(activeText);\n              }\n              else if(inactiveText) {\n                module.verbose('Resetting inactive text', activeText);\n                module.update.text(inactiveText);\n              }\n            }\n          }\n        },\n\n        update: {\n          text: function(text) {\n            var\n              currentText = module.get.text()\n            ;\n            if(text && text !== currentText) {\n              module.debug('Updating text', text);\n              if(settings.selector.text) {\n                $module\n                  .data(metadata.storedText, text)\n                  .find(settings.selector.text)\n                    .text(text)\n                ;\n              }\n              else {\n                $module\n                  .data(metadata.storedText, text)\n                  .html(text)\n                ;\n              }\n            }\n            else {\n              module.debug('Text is already set, ignoring update', text);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.state.settings = {\n\n  // module info\n  name           : 'State',\n\n  // debug output\n  debug          : false,\n\n  // verbose debug output\n  verbose        : false,\n\n  // namespace for events\n  namespace      : 'state',\n\n  // debug data includes performance\n  performance    : true,\n\n  // callback occurs on state change\n  onActivate     : function() {},\n  onDeactivate   : function() {},\n  onChange       : function() {},\n\n  // state test functions\n  activateTest   : function() { return true; },\n  deactivateTest : function() { return true; },\n\n  // whether to automatically map default states\n  automatic      : true,\n\n  // activate / deactivate changes all elements instantiated at same time\n  sync           : false,\n\n  // default flash text duration, used for temporarily changing text of an element\n  flashDuration  : 1000,\n\n  // selector filter\n  filter     : {\n    text   : '.loading, .disabled',\n    active : '.disabled'\n  },\n\n  context    : false,\n\n  // error\n  error: {\n    beforeSend : 'The before send function has cancelled state change',\n    method     : 'The method you called is not defined.'\n  },\n\n  // metadata\n  metadata: {\n    promise    : 'promise',\n    storedText : 'stored-text'\n  },\n\n  // change class on state\n  className: {\n    active   : 'active',\n    disabled : 'disabled',\n    error    : 'error',\n    loading  : 'loading',\n    success  : 'success',\n    warning  : 'warning'\n  },\n\n  selector: {\n    // selector for text node\n    text: false\n  },\n\n  defaults : {\n    input: {\n      disabled : true,\n      loading  : true,\n      active   : true\n    },\n    button: {\n      disabled : true,\n      loading  : true,\n      active   : true,\n    },\n    progress: {\n      active   : true,\n      success  : true,\n      warning  : true,\n      error    : true\n    }\n  },\n\n  states     : {\n    active   : true,\n    disabled : true,\n    error    : true,\n    loading  : true,\n    success  : true,\n    warning  : true\n  },\n\n  text     : {\n    disabled   : false,\n    flash      : false,\n    hover      : false,\n    active     : false,\n    inactive   : false,\n    activate   : false,\n    deactivate : false\n  }\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Visibility\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.visibility = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue,\n\n    moduleCount    = $allModules.length,\n    loadedCount    = 0\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\n          : $.extend({}, $.fn.visibility.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n        metadata        = settings.metadata,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $placeholder,\n\n        selector        = $module.selector || '',\n        instance        = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n        disabled        = false,\n\n        contextObserver,\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', settings);\n\n          module.setup.cache();\n\n          if( module.should.trackChanges() ) {\n\n            if(settings.type == 'image') {\n              module.setup.image();\n            }\n            if(settings.type == 'fixed') {\n              module.setup.fixed();\n            }\n\n            if(settings.observeChanges) {\n              module.observeChanges();\n            }\n            module.bind.events();\n          }\n\n          module.save.position();\n          if( !module.is.visible() ) {\n            module.error(error.visible, $module);\n          }\n\n          if(settings.initialCheck) {\n            module.checkVisibility();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.debug('Storing instance', module);\n          $module\n            .data(moduleNamespace, module)\n          ;\n          instance = module;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module');\n          if(observer) {\n            observer.disconnect();\n          }\n          if(contextObserver) {\n            contextObserver.disconnect();\n          }\n          $window\n            .off('load'   + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $context\n            .off('scroll'       + eventNamespace, module.event.scroll)\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n            module.remove.placeholder();\n          }\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            contextObserver = new MutationObserver(module.event.contextChanged);\n            observer        = new MutationObserver(module.event.changed);\n            contextObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding visibility events to scroll and resize');\n            if(settings.refreshOnLoad) {\n              $window\n                .on('load'   + eventNamespace, module.event.load)\n              ;\n            }\n            $window\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $context\n              .off('scroll'      + eventNamespace)\n              .on('scroll'       + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            module.verbose('DOM tree modified, updating visibility calculations');\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu');\n              module.refresh();\n            }, 100);\n          },\n          contextChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          resize: function() {\n            module.debug('Window resized');\n            if(settings.refreshOnResize) {\n              requestAnimationFrame(module.refresh);\n            }\n          },\n          load: function() {\n            module.debug('Page finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          // publishes scrollchange event on one scroll\n          scroll: function() {\n            if(settings.throttle) {\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              }, settings.throttle);\n            }\n            else {\n              requestAnimationFrame(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              });\n            }\n          },\n          // subscribes to scrollchange\n          scrollchange: function(event, scrollPosition) {\n            module.checkVisibility(scrollPosition);\n          },\n        },\n\n        precache: function(images, callback) {\n          if (!(images instanceof Array)) {\n            images = [images];\n          }\n          var\n            imagesLength  = images.length,\n            loadedCounter = 0,\n            cache         = [],\n            cacheImage    = document.createElement('img'),\n            handleLoad    = function() {\n              loadedCounter++;\n              if (loadedCounter >= images.length) {\n                if ($.isFunction(callback)) {\n                  callback();\n                }\n              }\n            }\n          ;\n          while (imagesLength--) {\n            cacheImage         = document.createElement('img');\n            cacheImage.onload  = handleLoad;\n            cacheImage.onerror = handleLoad;\n            cacheImage.src     = images[imagesLength];\n            cache.push(cacheImage);\n          }\n        },\n\n        enableCallbacks: function() {\n          module.debug('Allowing callbacks to occur');\n          disabled = false;\n        },\n\n        disableCallbacks: function() {\n          module.debug('Disabling all callbacks temporarily');\n          disabled = true;\n        },\n\n        should: {\n          trackChanges: function() {\n            if(methodInvoked) {\n              module.debug('One time query, no need to bind events');\n              return false;\n            }\n            module.debug('Callbacks being attached');\n            return true;\n          }\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              occurred : {},\n              screen   : {},\n              element  : {},\n            };\n          },\n          image: function() {\n            var\n              src = $module.data(metadata.src)\n            ;\n            if(src) {\n              module.verbose('Lazy loading image', src);\n              settings.once           = true;\n              settings.observeChanges = false;\n\n              // show when top visible\n              settings.onOnScreen = function() {\n                module.debug('Image on screen', element);\n                module.precache(src, function() {\n                  module.set.image(src, function() {\n                    loadedCount++;\n                    if(loadedCount == moduleCount) {\n                      settings.onAllLoaded.call(this);\n                    }\n                    settings.onLoad.call(this);\n                  });\n                });\n              };\n            }\n          },\n          fixed: function() {\n            module.debug('Setting up fixed');\n            settings.once           = false;\n            settings.observeChanges = false;\n            settings.initialCheck   = true;\n            settings.refreshOnLoad  = true;\n            if(!parameters.transition) {\n              settings.transition = false;\n            }\n            module.create.placeholder();\n            module.debug('Added placeholder', $placeholder);\n            settings.onTopPassed = function() {\n              module.debug('Element passed, adding fixed position', $module);\n              module.show.placeholder();\n              module.set.fixed();\n              if(settings.transition) {\n                if($.fn.transition !== undefined) {\n                  $module.transition(settings.transition, settings.duration);\n                }\n              }\n            };\n            settings.onTopPassedReverse = function() {\n              module.debug('Element returned to position, removing fixed', $module);\n              module.hide.placeholder();\n              module.remove.fixed();\n            };\n          }\n        },\n\n        create: {\n          placeholder: function() {\n            module.verbose('Creating fixed position placeholder');\n            $placeholder = $module\n              .clone(false)\n              .css('display', 'none')\n              .addClass(className.placeholder)\n              .insertAfter($module)\n            ;\n          }\n        },\n\n        show: {\n          placeholder: function() {\n            module.verbose('Showing placeholder');\n            $placeholder\n              .css('display', 'block')\n              .css('visibility', 'hidden')\n            ;\n          }\n        },\n        hide: {\n          placeholder: function() {\n            module.verbose('Hiding placeholder');\n            $placeholder\n              .css('display', 'none')\n              .css('visibility', '')\n            ;\n          }\n        },\n\n        set: {\n          fixed: function() {\n            module.verbose('Setting element to fixed position');\n            $module\n              .addClass(className.fixed)\n              .css({\n                position : 'fixed',\n                top      : settings.offset + 'px',\n                left     : 'auto',\n                zIndex   : settings.zIndex\n              })\n            ;\n            settings.onFixed.call(element);\n          },\n          image: function(src, callback) {\n            $module\n              .attr('src', src)\n            ;\n            if(settings.transition) {\n              if( $.fn.transition !== undefined) {\n                if($module.hasClass(className.visible)) {\n                  module.debug('Transition already occurred on this image, skipping animation');\n                  return;\n                }\n                $module.transition(settings.transition, settings.duration, callback);\n              }\n              else {\n                $module.fadeIn(settings.duration, callback);\n              }\n            }\n            else {\n              $module.show();\n            }\n          }\n        },\n\n        is: {\n          onScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.onScreen;\n          },\n          offScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.offScreen;\n          },\n          visible: function() {\n            if(module.cache && module.cache.element) {\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\n            }\n            return false;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          },\n          horizontallyScrollableContext: function() {\n            var\n              overflowX = ($context.get(0) !== window)\n                ? $context.css('overflow-x')\n                : false\n            ;\n            return (overflowX == 'auto' || overflowX == 'scroll');\n          }\n        },\n\n        refresh: function() {\n          module.debug('Refreshing constants (width/height)');\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n          }\n          module.reset();\n          module.save.position();\n          if(settings.checkOnRefresh) {\n            module.checkVisibility();\n          }\n          settings.onRefresh.call(element);\n        },\n\n        resetFixed: function () {\n          module.remove.fixed();\n          module.remove.occurred();\n        },\n\n        reset: function() {\n          module.verbose('Resetting all cached values');\n          if( $.isPlainObject(module.cache) ) {\n            module.cache.screen = {};\n            module.cache.element = {};\n          }\n        },\n\n        checkVisibility: function(scroll) {\n          module.verbose('Checking visibility of element', module.cache.element);\n\n          if( !disabled && module.is.visible() ) {\n\n            // save scroll position\n            module.save.scroll(scroll);\n\n            // update calculations derived from scroll\n            module.save.calculations();\n\n            // percentage\n            module.passed();\n\n            // reverse (must be first)\n            module.passingReverse();\n            module.topVisibleReverse();\n            module.bottomVisibleReverse();\n            module.topPassedReverse();\n            module.bottomPassedReverse();\n\n            // one time\n            module.onScreen();\n            module.offScreen();\n            module.passing();\n            module.topVisible();\n            module.bottomVisible();\n            module.topPassed();\n            module.bottomPassed();\n\n            // on update callback\n            if(settings.onUpdate) {\n              settings.onUpdate.call(element, module.get.elementCalculations());\n            }\n          }\n        },\n\n        passed: function(amount, newCallback) {\n          var\n            calculations   = module.get.elementCalculations(),\n            amountInPixels\n          ;\n          // assign callback\n          if(amount && newCallback) {\n            settings.onPassed[amount] = newCallback;\n          }\n          else if(amount !== undefined) {\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\n          }\n          else if(calculations.passing) {\n            $.each(settings.onPassed, function(amount, callback) {\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\n                module.execute(callback, amount);\n              }\n              else if(!settings.once) {\n                module.remove.occurred(callback);\n              }\n            });\n          }\n        },\n\n        onScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOnScreen,\n            callbackName = 'onScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for onScreen', newCallback);\n            settings.onOnScreen = newCallback;\n          }\n          if(calculations.onScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOnScreen;\n          }\n        },\n\n        offScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOffScreen,\n            callbackName = 'offScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for offScreen', newCallback);\n            settings.onOffScreen = newCallback;\n          }\n          if(calculations.offScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOffScreen;\n          }\n        },\n\n        passing: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassing,\n            callbackName = 'passing'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing', newCallback);\n            settings.onPassing = newCallback;\n          }\n          if(calculations.passing) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.passing;\n          }\n        },\n\n\n        topVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisible,\n            callbackName = 'topVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible', newCallback);\n            settings.onTopVisible = newCallback;\n          }\n          if(calculations.topVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topVisible;\n          }\n        },\n\n        bottomVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisible,\n            callbackName = 'bottomVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible', newCallback);\n            settings.onBottomVisible = newCallback;\n          }\n          if(calculations.bottomVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomVisible;\n          }\n        },\n\n        topPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassed,\n            callbackName = 'topPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed', newCallback);\n            settings.onTopPassed = newCallback;\n          }\n          if(calculations.topPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topPassed;\n          }\n        },\n\n        bottomPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassed,\n            callbackName = 'bottomPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed', newCallback);\n            settings.onBottomPassed = newCallback;\n          }\n          if(calculations.bottomPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomPassed;\n          }\n        },\n\n        passingReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassingReverse,\n            callbackName = 'passingReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing reverse', newCallback);\n            settings.onPassingReverse = newCallback;\n          }\n          if(!calculations.passing) {\n            if(module.get.occurred('passing')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return !calculations.passing;\n          }\n        },\n\n\n        topVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisibleReverse,\n            callbackName = 'topVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible reverse', newCallback);\n            settings.onTopVisibleReverse = newCallback;\n          }\n          if(!calculations.topVisible) {\n            if(module.get.occurred('topVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.topVisible;\n          }\n        },\n\n        bottomVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisibleReverse,\n            callbackName = 'bottomVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible reverse', newCallback);\n            settings.onBottomVisibleReverse = newCallback;\n          }\n          if(!calculations.bottomVisible) {\n            if(module.get.occurred('bottomVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomVisible;\n          }\n        },\n\n        topPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassedReverse,\n            callbackName = 'topPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed reverse', newCallback);\n            settings.onTopPassedReverse = newCallback;\n          }\n          if(!calculations.topPassed) {\n            if(module.get.occurred('topPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.onTopPassed;\n          }\n        },\n\n        bottomPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassedReverse,\n            callbackName = 'bottomPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed reverse', newCallback);\n            settings.onBottomPassedReverse = newCallback;\n          }\n          if(!calculations.bottomPassed) {\n            if(module.get.occurred('bottomPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomPassed;\n          }\n        },\n\n        execute: function(callback, callbackName) {\n          var\n            calculations = module.get.elementCalculations(),\n            screen       = module.get.screenCalculations()\n          ;\n          callback = callback || false;\n          if(callback) {\n            if(settings.continuous) {\n              module.debug('Callback being called continuously', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n            else if(!module.get.occurred(callbackName)) {\n              module.debug('Conditions met', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n          }\n          module.save.occurred(callbackName);\n        },\n\n        remove: {\n          fixed: function() {\n            module.debug('Removing fixed position');\n            $module\n              .removeClass(className.fixed)\n              .css({\n                position : '',\n                top      : '',\n                left     : '',\n                zIndex   : ''\n              })\n            ;\n            settings.onUnfixed.call(element);\n          },\n          placeholder: function() {\n            module.debug('Removing placeholder content');\n            if($placeholder) {\n              $placeholder.remove();\n            }\n          },\n          occurred: function(callback) {\n            if(callback) {\n              var\n                occurred = module.cache.occurred\n              ;\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\n                module.debug('Callback can now be called again', callback);\n                module.cache.occurred[callback] = false;\n              }\n            }\n            else {\n              module.cache.occurred = {};\n            }\n          }\n        },\n\n        save: {\n          calculations: function() {\n            module.verbose('Saving all calculations necessary to determine positioning');\n            module.save.direction();\n            module.save.screenCalculations();\n            module.save.elementCalculations();\n          },\n          occurred: function(callback) {\n            if(callback) {\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\n                module.verbose('Saving callback occurred', callback);\n                module.cache.occurred[callback] = true;\n              }\n            }\n          },\n          scroll: function(scrollPosition) {\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\n            module.cache.scroll = scrollPosition;\n          },\n          direction: function() {\n            var\n              scroll     = module.get.scroll(),\n              lastScroll = module.get.lastScroll(),\n              direction\n            ;\n            if(scroll > lastScroll && lastScroll) {\n              direction = 'down';\n            }\n            else if(scroll < lastScroll && lastScroll) {\n              direction = 'up';\n            }\n            else {\n              direction = 'static';\n            }\n            module.cache.direction = direction;\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            var\n              element = module.cache.element,\n              screen  = module.get.screenSize()\n            ;\n            module.verbose('Saving element position');\n            // (quicker than $.extend)\n            element.fits          = (element.height < screen.height);\n            element.offset        = $module.offset();\n            element.width         = $module.outerWidth();\n            element.height        = $module.outerHeight();\n            // compensate for scroll in context\n            if(module.is.verticallyScrollableContext()) {\n              element.offset.top += $context.scrollTop() - $context.offset().top;\n            }\n            if(module.is.horizontallyScrollableContext()) {\n              element.offset.left += $context.scrollLeft - $context.offset().left;\n            }\n            // store\n            module.cache.element = element;\n            return element;\n          },\n          elementCalculations: function() {\n            var\n              screen     = module.get.screenCalculations(),\n              element    = module.get.elementPosition()\n            ;\n            // offset\n            if(settings.includeMargin) {\n              element.margin        = {};\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\n              element.top    = element.offset.top - element.margin.top;\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\n            }\n            else {\n              element.top    = element.offset.top;\n              element.bottom = element.offset.top + element.height;\n            }\n\n            // visibility\n            element.topPassed        = (screen.top >= element.top);\n            element.bottomPassed     = (screen.top >= element.bottom);\n            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\n            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\n            element.pixelsPassed     = 0;\n            element.percentagePassed = 0;\n\n            // meta calculations\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\n            element.passing   = (element.topPassed && !element.bottomPassed);\n            element.offScreen = (!element.onScreen);\n\n            // passing calculations\n            if(element.passing) {\n              element.pixelsPassed     = (screen.top - element.top);\n              element.percentagePassed = (screen.top - element.top) / element.height;\n            }\n            module.cache.element = element;\n            module.verbose('Updated element calculations', element);\n            return element;\n          },\n          screenCalculations: function() {\n            var\n              scroll = module.get.scroll()\n            ;\n            module.save.direction();\n            module.cache.screen.top    = scroll;\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            module.verbose('Saving window position');\n            module.cache.screen = {\n              height: $context.height()\n            };\n          },\n          position: function() {\n            module.save.screenSize();\n            module.save.elementPosition();\n          }\n        },\n\n        get: {\n          pixelsPassed: function(amount) {\n            var\n              element = module.get.elementCalculations()\n            ;\n            if(amount.search('%') > -1) {\n              return ( element.height * (parseInt(amount, 10) / 100) );\n            }\n            return parseInt(amount, 10);\n          },\n          occurred: function(callback) {\n            return (module.cache.occurred !== undefined)\n              ? module.cache.occurred[callback] || false\n              : false\n            ;\n          },\n          direction: function() {\n            if(module.cache.direction === undefined) {\n              module.save.direction();\n            }\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementPosition();\n            }\n            return module.cache.element;\n          },\n          elementCalculations: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementCalculations();\n            }\n            return module.cache.element;\n          },\n          screenCalculations: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenCalculations();\n            }\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenSize();\n            }\n            return module.cache.screen;\n          },\n          scroll: function() {\n            if(module.cache.scroll === undefined) {\n              module.save.scroll();\n            }\n            return module.cache.scroll;\n          },\n          lastScroll: function() {\n            if(module.cache.screen === undefined) {\n              module.debug('First scroll event, no last scroll could be found');\n              return false;\n            }\n            return module.cache.screen.top;\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        instance.save.scroll();\n        instance.save.calculations();\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.visibility.settings = {\n\n  name                   : 'Visibility',\n  namespace              : 'visibility',\n\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  // whether to use mutation observers to follow changes\n  observeChanges         : true,\n\n  // check position immediately on init\n  initialCheck           : true,\n\n  // whether to refresh calculations after all page images load\n  refreshOnLoad          : true,\n\n  // whether to refresh calculations after page resize event\n  refreshOnResize        : true,\n\n  // should call callbacks on refresh event (resize, etc)\n  checkOnRefresh         : true,\n\n  // callback should only occur one time\n  once                   : true,\n\n  // callback should fire continuously whe evaluates to true\n  continuous             : false,\n\n  // offset to use with scroll top\n  offset                 : 0,\n\n  // whether to include margin in elements position\n  includeMargin          : false,\n\n  // scroll context for visibility checks\n  context                : window,\n\n  // visibility check delay in ms (defaults to animationFrame)\n  throttle               : false,\n\n  // special visibility type (image, fixed)\n  type                   : false,\n\n  // z-index to use with visibility 'fixed'\n  zIndex                 : '10',\n\n  // image only animation settings\n  transition             : 'fade in',\n  duration               : 1000,\n\n  // array of callbacks for percentage\n  onPassed               : {},\n\n  // standard callbacks\n  onOnScreen             : false,\n  onOffScreen            : false,\n  onPassing              : false,\n  onTopVisible           : false,\n  onBottomVisible        : false,\n  onTopPassed            : false,\n  onBottomPassed         : false,\n\n  // reverse callbacks\n  onPassingReverse       : false,\n  onTopVisibleReverse    : false,\n  onBottomVisibleReverse : false,\n  onTopPassedReverse     : false,\n  onBottomPassedReverse  : false,\n\n  // special callbacks for image\n  onLoad                 : function() {},\n  onAllLoaded            : function() {},\n\n  // special callbacks for fixed position\n  onFixed                : function() {},\n  onUnfixed              : function() {},\n\n  // utility callbacks\n  onUpdate               : false, // disabled by default for performance\n  onRefresh              : function(){},\n\n  metadata : {\n    src: 'src'\n  },\n\n  className: {\n    fixed       : 'fixed',\n    placeholder : 'placeholder',\n    visible     : 'visible'\n  },\n\n  error : {\n    method  : 'The method you called is not defined.',\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_semantic_ui__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_semantic_ui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_semantic_ui__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__App__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(31);\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */].config.productionTip = false;\n\nnew __WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */]({\n  el: '#app',\n  router: __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */],\n  template: '<App/>',\n  components: { App: __WEBPACK_IMPORTED_MODULE_3__App___default.a }\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'app'\n});\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Dropdown__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Dropdown___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Dropdown__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Message__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Message___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Message__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_jquery__);\n\n\n\n\n\n\n\nvar users = __WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getRandonUserList();\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'channel',\n  data: function data() {\n    return {\n      messages: __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].reactive.messages,\n      showMessageForm: false,\n      newMessageContent: '',\n      userList: users,\n      selectedUser: users[0]\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    if (!__WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].hasMessages()) {\n      __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].setMessages([{\n        author: users[0].username,\n        avatar: users[0].avatar,\n        content: 'Gidday maaate!!',\n        likers: [],\n        time: '2017-5-28 17:49:24',\n        replies: []\n      }]);\n    }\n\n    __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].loadMessages();\n  },\n\n  methods: {\n    addMessage: function addMessage() {\n      var messageForm = __WEBPACK_IMPORTED_MODULE_4_jquery___default()('#messageForm');\n      messageForm.form({\n        inline: true,\n        fields: {\n          newMessageContent: {\n            identifier: 'newMessageContent',\n            rules: [{\n              type: 'empty',\n              prompt: 'Please enter your message'\n            }]\n          }\n        }\n      });\n      messageForm.form('validate form');\n\n      if (messageForm.form('is valid')) {\n        this.messages.unshift(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getNewMessage(this.selectedUser, this.newMessageContent));\n        this.toggleMessageForm();\n        __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].saveState();\n      }\n    },\n    toggleMessageForm: function toggleMessageForm() {\n      this.showMessageForm = !this.showMessageForm;\n      this.newMessageContent = '';\n    },\n    removeChild: function removeChild(index) {\n      this.messages.splice(index, 1);\n      __WEBPACK_IMPORTED_MODULE_3__data__[\"a\" /* default */].saveState();\n    }\n  },\n  components: {\n    'message': __WEBPACK_IMPORTED_MODULE_2__Message___default.a,\n    'dropdown': __WEBPACK_IMPORTED_MODULE_1__Dropdown___default.a\n  }\n});\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'dropdown',\n  props: {\n    items: Array,\n    selected: Object\n  },\n  mounted: function mounted() {\n    var that = this;\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.$el).dropdown({\n      onChange: function onChange(value, text, $choice) {\n        that.$emit('update:selected', that.items.filter(function (item) {\n          return item.username === value;\n        })[0]);\n      }\n    }).dropdown('set selected', this.selected.username);\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.$el).dropdown('destroy');\n  }\n});\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__data__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'message',\n  props: {\n    replyAs: Object,\n    model: Object\n  },\n  data: function data() {\n    return {\n      showReplyForm: false,\n      replyContent: ''\n    };\n  },\n\n  computed: {\n    replyFormIdentifier: function replyFormIdentifier() {\n      return __WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].guid();\n    },\n    liked: function liked() {\n      return this.model.likers.includes(this.replyAs.username);\n    },\n    currentUserOwnsComment: function currentUserOwnsComment() {\n      if (this.replyAs.username === this.model.author) {\n        return true;\n      }\n      return false;\n    }\n  },\n  methods: {\n    remove: function remove() {\n      if (!this.currentUserOwnsComment) {\n        return;\n      }\n\n      this.$emit('remove');\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    hasReplies: function hasReplies() {\n      return this.model.hasOwnProperty('replies') && this.model.replies.length > 0;\n    },\n    addLike: function addLike() {\n      this.model.likers.push(this.replyAs.username);\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    removeLike: function removeLike() {\n      this.model.likers.splice(this.model.likers.indexOf(this.replyAs.username), 1);\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    toggleReplyForm: function toggleReplyForm() {\n      this.showReplyForm = !this.showReplyForm;\n      this.replyContent = '';\n    },\n    addReply: function addReply() {\n      var replyForm = __WEBPACK_IMPORTED_MODULE_2_jquery___default()('#' + this.replyFormIdentifier);\n      replyForm.form({\n        inline: true,\n        fields: {\n          replyContent: {\n            identifier: 'replyContent',\n            rules: [{\n              type: 'empty',\n              prompt: 'Please enter your reply'\n            }]\n          }\n        }\n      });\n      replyForm.form('validate form');\n\n      if (replyForm.form('is valid')) {\n        this.model.replies.push(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getNewMessage(this.replyAs, this.replyContent));\n        this.toggleReplyForm();\n        __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n      }\n    },\n    removeChild: function removeChild(index) {\n      this.model.replies.splice(index, 1);\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    }\n  }\n});\n\n/***/ }),\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(70)\n\nvar Component = __webpack_require__(9)(\n  /* script */\n  __webpack_require__(37),\n  /* template */\n  __webpack_require__(77),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(69)\n\nvar Component = __webpack_require__(9)(\n  /* script */\n  __webpack_require__(38),\n  /* template */\n  __webpack_require__(76),\n  /* scopeId */\n  \"data-v-354542f4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(72)\n\nvar Component = __webpack_require__(9)(\n  /* script */\n  __webpack_require__(39),\n  /* template */\n  __webpack_require__(79),\n  /* scopeId */\n  \"data-v-d42101bc\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui fluid selection dropdown\"\n  }, [_c('input', {\n    attrs: {\n      \"type\": \"hidden\",\n      \"name\": \"user\"\n    }\n  }), _vm._v(\" \"), _c('i', {\n    staticClass: \"dropdown icon\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"default text\"\n  }, [_vm._v(\"Select User\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"menu\"\n  }, _vm._l((_vm.items), function(item, index) {\n    return _c('div', {\n      key: item.username,\n      staticClass: \"item\",\n      attrs: {\n        \"data-value\": item.username\n      }\n    }, [_c('img', {\n      staticClass: \"ui mini avatar image\",\n      attrs: {\n        \"src\": item.avatar\n      }\n    }), _vm._v(\" \" + _vm._s(item.username) + \"\\n    \")])\n  }))])\n},staticRenderFns: []}\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui container\"\n  }, [_c('h2', [_vm._v(\"Yammerer\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui centered grid\"\n  }, [_c('div', {\n    staticClass: \"ten wide column\"\n  }, [_c('div', {\n    staticClass: \"ui threaded comments\"\n  }, [_c('div', {\n    staticClass: \"ui text menu\"\n  }, [_c('dropdown', {\n    attrs: {\n      \"items\": _vm.userList,\n      \"selected\": _vm.selectedUser\n    },\n    on: {\n      \"update:selected\": function($event) {\n        _vm.selectedUser = $event\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"right menu\"\n  }, [_c('div', {\n    staticClass: \"item\"\n  }, [_c('div', {\n    staticClass: \"ui icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [(!_vm.showMessageForm) ? _c('i', {\n    staticClass: \"plus icon\"\n  }) : _c('i', {\n    staticClass: \"remove icon\"\n  })])])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showMessageForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": \"messageForm\"\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.newMessageContent),\n      expression: \"newMessageContent\"\n    }],\n    attrs: {\n      \"name\": \"newMessageContent\"\n    },\n    domProps: {\n      \"value\": (_vm.newMessageContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.newMessageContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addMessage()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Message\\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [_vm._v(\"\\n              Cancel\\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider hidden\"\n  })]) : _vm._e()]), _vm._v(\" \"), _vm._l((_vm.messages), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.selectedUser\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })], 2)])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('router-view')], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"comment\"\n  }, [_c('a', {\n    staticClass: \"avatar\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.model.avatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('a', {\n    staticClass: \"author\"\n  }, [_vm._v(_vm._s(_vm.model.author))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"metadata\"\n  }, [_c('span', {\n    staticClass: \"date\"\n  }, [_vm._v(_vm._s(_vm.model.time))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('i', {\n    staticClass: \"thumbs up icon\"\n  }), _vm._v(\"\\n        \" + _vm._s(_vm.model.likers.length) + \" likes \\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm.model.content) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.showReplyForm) ? _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Reply\")]) : _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Cancel\")]), _vm._v(\" \"), (_vm.liked) ? _c('a', {\n    staticClass: \"like active\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.removeLike()\n      }\n    }\n  }, [_vm._v(\"You like this\")]) : (!_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addLike()\n      }\n    }\n  }, [_vm._v(\"Like\")]) : _vm._e(), _vm._v(\" \"), (_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.remove()\n      }\n    }\n  }, [_vm._v(\"Delete\")]) : _vm._e()])]), _vm._v(\" \"), (_vm.hasReplies()) ? _c('div', {\n    staticClass: \"comments\"\n  }, _vm._l((_vm.model.replies), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.replyAs\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })) : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showReplyForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": _vm.replyFormIdentifier\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.replyContent),\n      expression: \"replyContent\"\n    }],\n    staticClass: \"ui focus\",\n    attrs: {\n      \"name\": \"replyContent\"\n    },\n    domProps: {\n      \"value\": (_vm.replyContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.replyContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addReply()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Reply\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"\\n        Cancel \\n      \")])]) : _vm._e()])], 1)\n},staticRenderFns: []}\n\n/***/ })\n],[35]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.c516fe7a3c3eb1f8db2b.js","export default {\r\n    // Our persistent storage is not reactive.\r\n    // So, we need to provide an object which we can bind to.\r\n    reactive: {\r\n        messages: []\r\n    },\r\n    hasMessages() {\r\n        // Is this the first visit for this browser?\r\n        if (localStorage.getItem('messages') === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    saveState() {\r\n        // Persist the current messages.\r\n        this.setMessages(this.reactive.messages);\r\n    },\r\n    loadMessages() {\r\n        // Hydrate the reactive messages with the contents of localStorage.\r\n        let parsedMessages = JSON.parse(localStorage.getItem('messages'));\r\n        this.reactive.messages = parsedMessages;\r\n    },\r\n    setMessages(newMessages) {\r\n        // Write/Overwrite messages into localStorage\r\n        localStorage.setItem('messages', JSON.stringify(newMessages));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/index.js","const adjectives = [\r\n      'Noisy',\r\n      'Agreeable',\r\n      'Calm',\r\n      'Eager',\r\n      'Happy',\r\n      'Jolly',\r\n      'Kind',\r\n      'Nice',\r\n      'Relieved',\r\n      'Crazy',\r\n      'Victorious',\r\n      'Witty',\r\n      'Zealous'\r\n    ];\r\nconst nouns = [\r\n      'Cat',\r\n      'Dog',\r\n      'Mouse',\r\n      'Horse',\r\n      'Giraffe',\r\n      'Robin',\r\n      'Sparrow',\r\n      'Goat',\r\n      'Duck',\r\n      'Gull',\r\n      'Owl',\r\n      'Trout'\r\n    ];\r\nconst avatars = [\r\n      'https://semantic-ui.com/images/avatar/small/elliot.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/jenny.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/joe.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/matt.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/helen.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/justen.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/laura.jpg'\r\n    ];\r\n\r\nexport default {\r\n  getNewMessage (user, content) {\r\n    return {\r\n      author: user.username,\r\n      avatar: user.avatar,\r\n      content: content,\r\n      likers: [],\r\n      replies: [],\r\n      time: (new Date()).toLocaleString()\r\n    };\r\n  },\r\n  getRandomUserName () {\r\n    return adjectives[Math.floor(Math.random() * adjectives.length)] + ' ' +\r\n            nouns[Math.floor(Math.random() * nouns.length)];\r\n  },\r\n  getRandomAvatarUrl () {\r\n    return avatars[Math.floor(Math.random() * avatars.length)];\r\n  },\r\n  guid () {\r\n    function s4 () {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n      s4() + '-' + s4() + s4() + s4();\r\n  },\r\n  getRandonUserList () {\r\n    return Array.from({length: 5}, (v, i) => {\r\n      return {\r\n      username: this.getRandomUserName(),\r\n      avatar: this.getRandomAvatarUrl()\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/index.js","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Channel from '@/components/Channel'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    { path: '/', name: 'Channel', component: Channel }\r\n  ]\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-cad49406\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cad49406\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 33\n// module chunks = 1"," /*\n * # Semantic UI - 2.2.11\n * https://github.com/Semantic-Org/Semantic-UI\n * http://www.semantic-ui.com/\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\n * # Semantic UI 2.2.11 - Site\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.site = $.fn.site = function(parameters) {\n  var\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    settings        = ( $.isPlainObject(parameters) )\n      ? $.extend(true, {}, $.site.settings, parameters)\n      : $.extend({}, $.site.settings),\n\n    namespace       = settings.namespace,\n    error           = settings.error,\n\n    eventNamespace  = '.' + namespace,\n    moduleNamespace = 'module-' + namespace,\n\n    $document       = $(document),\n    $module         = $document,\n    element         = this,\n    instance        = $module.data(moduleNamespace),\n\n    module,\n    returnedValue\n  ;\n  module = {\n\n    initialize: function() {\n      module.instantiate();\n    },\n\n    instantiate: function() {\n      module.verbose('Storing instance of site', module);\n      instance = module;\n      $module\n        .data(moduleNamespace, module)\n      ;\n    },\n\n    normalize: function() {\n      module.fix.console();\n      module.fix.requestAnimationFrame();\n    },\n\n    fix: {\n      console: function() {\n        module.debug('Normalizing window.console');\n        if (console === undefined || console.log === undefined) {\n          module.verbose('Console not available, normalizing events');\n          module.disable.console();\n        }\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\n          module.verbose('Console group not available, normalizing events');\n          window.console.group = function() {};\n          window.console.groupEnd = function() {};\n          window.console.groupCollapsed = function() {};\n        }\n        if (typeof console.markTimeline == 'undefined') {\n          module.verbose('Mark timeline not available, normalizing events');\n          window.console.markTimeline = function() {};\n        }\n      },\n      consoleClear: function() {\n        module.debug('Disabling programmatic console clearing');\n        window.console.clear = function() {};\n      },\n      requestAnimationFrame: function() {\n        module.debug('Normalizing requestAnimationFrame');\n        if(window.requestAnimationFrame === undefined) {\n          module.debug('RequestAnimationFrame not available, normalizing event');\n          window.requestAnimationFrame = window.requestAnimationFrame\n            || window.mozRequestAnimationFrame\n            || window.webkitRequestAnimationFrame\n            || window.msRequestAnimationFrame\n            || function(callback) { setTimeout(callback, 0); }\n          ;\n        }\n      }\n    },\n\n    moduleExists: function(name) {\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\n    },\n\n    enabled: {\n      modules: function(modules) {\n        var\n          enabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(module.moduleExists(name)) {\n            enabledModules.push(name);\n          }\n        });\n        return enabledModules;\n      }\n    },\n\n    disabled: {\n      modules: function(modules) {\n        var\n          disabledModules = []\n        ;\n        modules = modules || settings.modules;\n        $.each(modules, function(index, name) {\n          if(!module.moduleExists(name)) {\n            disabledModules.push(name);\n          }\n        });\n        return disabledModules;\n      }\n    },\n\n    change: {\n      setting: function(setting, value, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? (modules === 'all')\n            ? settings.modules\n            : [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            namespace = (module.moduleExists(name))\n              ? $.fn[name].settings.namespace || false\n              : true,\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', setting, value, name);\n            $.fn[name].settings[setting] = value;\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', setting, value);\n              }\n            }\n          }\n        });\n      },\n      settings: function(newSettings, modules, modifyExisting) {\n        modules = (typeof modules === 'string')\n          ? [modules]\n          : modules || settings.modules\n        ;\n        modifyExisting = (modifyExisting !== undefined)\n          ? modifyExisting\n          : true\n        ;\n        $.each(modules, function(index, name) {\n          var\n            $existingModules\n          ;\n          if(module.moduleExists(name)) {\n            module.verbose('Changing default setting', newSettings, name);\n            $.extend(true, $.fn[name].settings, newSettings);\n            if(modifyExisting && namespace) {\n              $existingModules = $(':data(module-' + namespace + ')');\n              if($existingModules.length > 0) {\n                module.verbose('Modifying existing settings', $existingModules);\n                $existingModules[name]('setting', newSettings);\n              }\n            }\n          }\n        });\n      }\n    },\n\n    enable: {\n      console: function() {\n        module.console(true);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling debug for modules', modules);\n        module.change.setting('debug', true, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Enabling verbose debug for modules', modules);\n        module.change.setting('verbose', true, modules, modifyExisting);\n      }\n    },\n    disable: {\n      console: function() {\n        module.console(false);\n      },\n      debug: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling debug for modules', modules);\n        module.change.setting('debug', false, modules, modifyExisting);\n      },\n      verbose: function(modules, modifyExisting) {\n        modules = modules || settings.modules;\n        module.debug('Disabling verbose debug for modules', modules);\n        module.change.setting('verbose', false, modules, modifyExisting);\n      }\n    },\n\n    console: function(enable) {\n      if(enable) {\n        if(instance.cache.console === undefined) {\n          module.error(error.console);\n          return;\n        }\n        module.debug('Restoring console function');\n        window.console = instance.cache.console;\n      }\n      else {\n        module.debug('Disabling console function');\n        instance.cache.console = window.console;\n        window.console = {\n          clear          : function(){},\n          error          : function(){},\n          group          : function(){},\n          groupCollapsed : function(){},\n          groupEnd       : function(){},\n          info           : function(){},\n          log            : function(){},\n          markTimeline   : function(){},\n          warn           : function(){}\n        };\n      }\n    },\n\n    destroy: function() {\n      module.verbose('Destroying previous site for', $module);\n      $module\n        .removeData(moduleNamespace)\n      ;\n    },\n\n    cache: {},\n\n    setting: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, settings, name);\n      }\n      else if(value !== undefined) {\n        settings[name] = value;\n      }\n      else {\n        return settings[name];\n      }\n    },\n    internal: function(name, value) {\n      if( $.isPlainObject(name) ) {\n        $.extend(true, module, name);\n      }\n      else if(value !== undefined) {\n        module[name] = value;\n      }\n      else {\n        return module[name];\n      }\n    },\n    debug: function() {\n      if(settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.debug.apply(console, arguments);\n        }\n      }\n    },\n    verbose: function() {\n      if(settings.verbose && settings.debug) {\n        if(settings.performance) {\n          module.performance.log(arguments);\n        }\n        else {\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n          module.verbose.apply(console, arguments);\n        }\n      }\n    },\n    error: function() {\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n      module.error.apply(console, arguments);\n    },\n    performance: {\n      log: function(message) {\n        var\n          currentTime,\n          executionTime,\n          previousTime\n        ;\n        if(settings.performance) {\n          currentTime   = new Date().getTime();\n          previousTime  = time || currentTime;\n          executionTime = currentTime - previousTime;\n          time          = currentTime;\n          performance.push({\n            'Element'        : element,\n            'Name'           : message[0],\n            'Arguments'      : [].slice.call(message, 1) || '',\n            'Execution Time' : executionTime\n          });\n        }\n        clearTimeout(module.performance.timer);\n        module.performance.timer = setTimeout(module.performance.display, 500);\n      },\n      display: function() {\n        var\n          title = settings.name + ':',\n          totalTime = 0\n        ;\n        time = false;\n        clearTimeout(module.performance.timer);\n        $.each(performance, function(index, data) {\n          totalTime += data['Execution Time'];\n        });\n        title += ' ' + totalTime + 'ms';\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n          console.groupCollapsed(title);\n          if(console.table) {\n            console.table(performance);\n          }\n          else {\n            $.each(performance, function(index, data) {\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n            });\n          }\n          console.groupEnd();\n        }\n        performance = [];\n      }\n    },\n    invoke: function(query, passedArguments, context) {\n      var\n        object = instance,\n        maxDepth,\n        found,\n        response\n      ;\n      passedArguments = passedArguments || queryArguments;\n      context         = element         || context;\n      if(typeof query == 'string' && object !== undefined) {\n        query    = query.split(/[\\. ]/);\n        maxDepth = query.length - 1;\n        $.each(query, function(depth, value) {\n          var camelCaseValue = (depth != maxDepth)\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n            : query\n          ;\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n            object = object[camelCaseValue];\n          }\n          else if( object[camelCaseValue] !== undefined ) {\n            found = object[camelCaseValue];\n            return false;\n          }\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n            object = object[value];\n          }\n          else if( object[value] !== undefined ) {\n            found = object[value];\n            return false;\n          }\n          else {\n            module.error(error.method, query);\n            return false;\n          }\n        });\n      }\n      if ( $.isFunction( found ) ) {\n        response = found.apply(context, passedArguments);\n      }\n      else if(found !== undefined) {\n        response = found;\n      }\n      if($.isArray(returnedValue)) {\n        returnedValue.push(response);\n      }\n      else if(returnedValue !== undefined) {\n        returnedValue = [returnedValue, response];\n      }\n      else if(response !== undefined) {\n        returnedValue = response;\n      }\n      return found;\n    }\n  };\n\n  if(methodInvoked) {\n    if(instance === undefined) {\n      module.initialize();\n    }\n    module.invoke(query);\n  }\n  else {\n    if(instance !== undefined) {\n      module.destroy();\n    }\n    module.initialize();\n  }\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.site.settings = {\n\n  name        : 'Site',\n  namespace   : 'site',\n\n  error : {\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\n    method : 'The method you called is not defined.'\n  },\n\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  modules: [\n    'accordion',\n    'api',\n    'checkbox',\n    'dimmer',\n    'dropdown',\n    'embed',\n    'form',\n    'modal',\n    'nag',\n    'popup',\n    'rating',\n    'shape',\n    'sidebar',\n    'state',\n    'sticky',\n    'tab',\n    'transition',\n    'visit',\n    'visibility'\n  ],\n\n  siteNamespace   : 'site',\n  namespaceStub   : {\n    cache     : {},\n    config    : {},\n    sections  : {},\n    section   : {},\n    utilities : {}\n  }\n\n};\n\n// allows for selection of elements with data attributes\n$.extend($.expr[ \":\" ], {\n  data: ($.expr.createPseudo)\n    ? $.expr.createPseudo(function(dataName) {\n        return function(elem) {\n          return !!$.data(elem, dataName);\n        };\n      })\n    : function(elem, i, match) {\n      // support: jQuery < 1.8\n      return !!$.data(elem, match[ 3 ]);\n    }\n});\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.form = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        regExp,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        determine: {\n          isValid: function() {\n            var\n              allValid = true\n            ;\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName, true) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          shorthandFields: function(fields) {\n            var\n              fieldKeys = Object.keys(fields),\n              firstRule = fields[fieldKeys[0]]\n            ;\n            return module.is.shorthandRules(firstRule);\n          },\n          // duck type rule test\n          shorthandRules: function(rules) {\n            return (typeof rules == 'string' || $.isArray(rules));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function(field) {\n            var\n              allValid = true\n            ;\n            if(field) {\n              module.verbose('Checking if field is valid', field);\n              return module.validate.field(validation[field], field, false);\n            }\n            else {\n              module.verbose('Checking if form is valid');\n              $.each(validation, function(fieldName, field) {\n                if( !module.is.valid(fieldName) ) {\n                  allValid = false;\n                }\n              });\n              return allValid;\n            }\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n              return false;\n            }\n            return (rule.value !== undefined)\n              ? rule.value\n              : rule.type.match(settings.regExp.bracket)[1] + ''\n            ;\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          fieldsFromShorthand: function(fields) {\n            var\n              fullFields = {}\n            ;\n            $.each(fields, function(name, rules) {\n              if(typeof rules == 'string') {\n                rules = [rules];\n              }\n              fullFields[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                fullFields[name].rules.push({ type: rule });\n              });\n            });\n            return fullFields;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              $field,\n              name\n            ;\n            if(requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields && module.is.shorthandFields(parameters.fields)) {\n                  parameters.fields = module.get.fieldsFromShorthand(parameters.fields);\n                }\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            regExp          = settings.regExp;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if($field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(values[name] === undefined) {\n                      values[name] = (isChecked)\n                        ? true\n                        : false\n                      ;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if($field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        escape: {\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        add: {\n          // alias\n          rule: function(name, rules) {\n            module.add.field(name, rules);\n          },\n          field: function(name, rules) {\n            var\n              newValidation = {}\n            ;\n            if(module.is.shorthandRules(rules)) {\n              rules = $.isArray(rules)\n                ? rules\n                : [rules]\n              ;\n              newValidation[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                newValidation[name].rules.push({ type: rule });\n              });\n            }\n            else {\n              newValidation[name] = rules;\n            }\n            validation = $.extend({}, validation, newValidation);\n            module.debug('Adding rules', newValidation, validation);\n          },\n          fields: function(fields) {\n            var\n              newValidation\n            ;\n            if(fields && module.is.shorthandFields(fields)) {\n              newValidation = module.get.fieldsFromShorthand(fields);\n            }\n            else {\n              newValidation = fields;\n            }\n            validation = $.extend({}, validation, newValidation);\n          },\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          rule: function(field, rule) {\n            var\n              rules = $.isArray(rule)\n                ? rule\n                : [rule]\n            ;\n            if(rule == undefined) {\n              module.debug('Removed all rules');\n              validation[field].rules = [];\n              return;\n            }\n            if(validation[field] == undefined || !$.isArray(validation[field].rules)) {\n              return;\n            }\n            $.each(validation[field].rules, function(index, rule) {\n              if(rules.indexOf(rule.type) !== -1) {\n                module.debug('Removed rule', rule.type);\n                validation[field].rules.splice(index, 1);\n              }\n            });\n          },\n          field: function(field) {\n            var\n              fields = $.isArray(field)\n                ? field\n                : [field]\n            ;\n            $.each(fields, function(index, field) {\n              module.remove.rule(field);\n            });\n          },\n          // alias\n          rules: function(field, rules) {\n            if($.isArray(field)) {\n              $.each(fields, function(index, field) {\n                module.remove.rule(field, rules);\n              });\n            }\n            else {\n              module.remove.rule(field, rules);\n            }\n          },\n          fields: function(fields) {\n            module.remove.field(fields);\n          },\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.determine.isValid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName, showErrors) {\n            showErrors = (showErrors !== undefined)\n              ? showErrors\n              : true\n            ;\n            if(typeof field == 'string') {\n              module.verbose('Validating field', field);\n              fieldName = field;\n              field     = validation[field];\n            }\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              if(showErrors) {\n                module.remove.prompt(identifier, fieldErrors);\n                settings.onValid.call($field);\n              }\n            }\n            else {\n              if(showErrors) {\n                formErrors = formErrors.concat(fieldErrors);\n                module.add.prompt(identifier, fieldErrors);\n                settings.onInvalid.call($field, fieldErrors);\n              }\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d+\\.?\\d*$/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} cannot contain \"{ruleValue}\"',\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return $.fn.form.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return $.fn.form.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      if(regExp instanceof RegExp) {\n        return value.match(regExp);\n      }\n      var\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = $.fn.form.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return $.fn.form.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return $.fn.form.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // allow dashes in card\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Accordion\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.accordion = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\n          : $.extend({}, $.fn.accordion.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        $module  = $(this),\n        $title   = $module.find(selector.title),\n        $content = $module.find(selector.content),\n\n        element  = this,\n        instance = $module.data(moduleNamespace),\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous instance', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $title   = $module.find(selector.title);\n          $content = $module.find(selector.content);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding delegated events');\n            $module\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\n            ;\n          }\n        },\n\n        event: {\n          click: function() {\n            module.toggle.call(this);\n          }\n        },\n\n        toggle: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive && !isAnimating),\n            isOpening   = (!isActive && isAnimating)\n          ;\n          module.debug('Toggling visibility of content', $activeTitle);\n          if(isOpen || isOpening) {\n            if(settings.collapsible) {\n              module.close.call($activeTitle);\n            }\n            else {\n              module.debug('Cannot close accordion content collapsing is disabled');\n            }\n          }\n          else {\n            module.open.call($activeTitle);\n          }\n        },\n\n        open: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating = $activeContent.hasClass(className.animating),\n            isActive    = $activeContent.hasClass(className.active),\n            isOpen      = (isActive || isAnimating)\n          ;\n          if(isOpen) {\n            module.debug('Accordion already open, skipping', $activeContent);\n            return;\n          }\n          module.debug('Opening accordion content', $activeTitle);\n          settings.onOpening.call($activeContent);\n          if(settings.exclusive) {\n            module.closeOthers.call($activeTitle);\n          }\n          $activeTitle\n            .addClass(className.active)\n          ;\n          $activeContent\n            .stop(true, true)\n            .addClass(className.animating)\n          ;\n          if(settings.animateChildren) {\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\n              $activeContent\n                .children()\n                  .transition({\n                    animation   : 'fade in',\n                    queue       : false,\n                    useFailSafe : true,\n                    debug       : settings.debug,\n                    verbose     : settings.verbose,\n                    duration    : settings.duration\n                  })\n              ;\n            }\n            else {\n              $activeContent\n                .children()\n                  .stop(true, true)\n                  .animate({\n                    opacity: 1\n                  }, settings.duration, module.resetOpacity)\n              ;\n            }\n          }\n          $activeContent\n            .slideDown(settings.duration, settings.easing, function() {\n              $activeContent\n                .removeClass(className.animating)\n                .addClass(className.active)\n              ;\n              module.reset.display.call(this);\n              settings.onOpen.call(this);\n              settings.onChange.call(this);\n            })\n          ;\n        },\n\n        close: function(query) {\n          var\n            $activeTitle = (query !== undefined)\n              ? (typeof query === 'number')\n                ? $title.eq(query)\n                : $(query).closest(selector.title)\n              : $(this).closest(selector.title),\n            $activeContent = $activeTitle.next($content),\n            isAnimating    = $activeContent.hasClass(className.animating),\n            isActive       = $activeContent.hasClass(className.active),\n            isOpening      = (!isActive && isAnimating),\n            isClosing      = (isActive && isAnimating)\n          ;\n          if((isActive || isOpening) && !isClosing) {\n            module.debug('Closing accordion content', $activeContent);\n            settings.onClosing.call($activeContent);\n            $activeTitle\n              .removeClass(className.active)\n            ;\n            $activeContent\n              .stop(true, true)\n              .addClass(className.animating)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $activeContent\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      queue       : false,\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $activeContent\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $activeContent\n              .slideUp(settings.duration, settings.easing, function() {\n                $activeContent\n                  .removeClass(className.animating)\n                  .removeClass(className.active)\n                ;\n                module.reset.display.call(this);\n                settings.onClose.call(this);\n                settings.onChange.call(this);\n              })\n            ;\n          }\n        },\n\n        closeOthers: function(index) {\n          var\n            $activeTitle = (index !== undefined)\n              ? $title.eq(index)\n              : $(this).closest(selector.title),\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\n            $activeAccordion = $activeTitle.closest(selector.accordion),\n            activeSelector   = selector.title + '.' + className.active + ':visible',\n            activeContent    = selector.content + '.' + className.active + ':visible',\n            $openTitles,\n            $nestedTitles,\n            $openContents\n          ;\n          if(settings.closeNested) {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $openContents = $openTitles.next($content);\n          }\n          else {\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\n            $openTitles   = $openTitles.not($nestedTitles);\n            $openContents = $openTitles.next($content);\n          }\n          if( ($openTitles.length > 0) ) {\n            module.debug('Exclusive enabled, closing other content', $openTitles);\n            $openTitles\n              .removeClass(className.active)\n            ;\n            $openContents\n              .removeClass(className.animating)\n              .stop(true, true)\n            ;\n            if(settings.animateChildren) {\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $openContents\n                  .children()\n                    .transition({\n                      animation   : 'fade out',\n                      useFailSafe : true,\n                      debug       : settings.debug,\n                      verbose     : settings.verbose,\n                      duration    : settings.duration\n                    })\n                ;\n              }\n              else {\n                $openContents\n                  .children()\n                    .stop(true, true)\n                    .animate({\n                      opacity: 0\n                    }, settings.duration, module.resetOpacity)\n                ;\n              }\n            }\n            $openContents\n              .slideUp(settings.duration , settings.easing, function() {\n                $(this).removeClass(className.active);\n                module.reset.display.call(this);\n              })\n            ;\n          }\n        },\n\n        reset: {\n\n          display: function() {\n            module.verbose('Removing inline display from element', this);\n            $(this).css('display', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n          opacity: function() {\n            module.verbose('Removing inline opacity from element', this);\n            $(this).css('opacity', '');\n            if( $(this).attr('style') === '') {\n              $(this)\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n            }\n          },\n\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.accordion.settings = {\n\n  name            : 'Accordion',\n  namespace       : 'accordion',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  on              : 'click', // event on title that opens accordion\n\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\n\n  exclusive       : true,  // whether a single accordion content panel should be open at once\n  collapsible     : true,  // whether accordion content can be closed\n  closeNested     : false, // whether nested content should be closed when a panel is closed\n  animateChildren : true,  // whether children opacity should be animated\n\n  duration        : 350, // duration of animation\n  easing          : 'easeOutQuad', // easing equation for animation\n\n\n  onOpening       : function(){}, // callback before open animation\n  onOpen          : function(){}, // callback after open animation\n  onClosing       : function(){}, // callback before closing animation\n  onClose         : function(){}, // callback after closing animation\n  onChange        : function(){}, // callback after closing or opening animation\n\n  error: {\n    method : 'The method you called is not defined'\n  },\n\n  className   : {\n    active    : 'active',\n    animating : 'animating'\n  },\n\n  selector    : {\n    accordion : '.accordion',\n    title     : '.title',\n    trigger   : '.title',\n    content   : '.content'\n  }\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n\n/*!\n * # Semantic UI 2.2.11 - Checkbox\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.checkbox = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $label          = $(this).children(selector.label),\n        $input          = $(this).children(selector.input),\n        input           = $input[0],\n\n        initialLoad     = false,\n        shortcutPressed = false,\n        instance        = $module.data(moduleNamespace),\n\n        observer,\n        element         = this,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.verbose('Initializing checkbox', settings);\n\n          module.create.label();\n          module.bind.events();\n\n          module.set.tabbable();\n          module.hide.input();\n\n          module.observeChanges();\n          module.instantiate();\n          module.setup();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying module');\n          module.unbind.events();\n          module.show.input();\n          $module.removeData(moduleNamespace);\n        },\n\n        fix: {\n          reference: function() {\n            if( $module.is(selector.input) ) {\n              module.debug('Behavior called on <input> adjusting invoked element');\n              $module = $module.closest(selector.checkbox);\n              module.refresh();\n            }\n          }\n        },\n\n        setup: function() {\n          module.set.initialLoad();\n          if( module.is.indeterminate() ) {\n            module.debug('Initial value is indeterminate');\n            module.indeterminate();\n          }\n          else if( module.is.checked() ) {\n            module.debug('Initial value is checked');\n            module.check();\n          }\n          else {\n            module.debug('Initial value is unchecked');\n            module.uncheck();\n          }\n          module.remove.initialLoad();\n        },\n\n        refresh: function() {\n          $label = $module.children(selector.label);\n          $input = $module.children(selector.input);\n          input  = $input[0];\n        },\n\n        hide: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be unselectable');\n            $input.addClass(className.hidden);\n          }\n        },\n        show: {\n          input: function() {\n            module.verbose('Modifying <input> z-index to be selectable');\n            $input.removeClass(className.hidden);\n          }\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, updating selector cache');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $element = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($element.length > 0) {\n            module.debug('Attaching checkbox events to element', selector, event);\n            $element\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound);\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            if( $target.is(selector.input) ) {\n              module.verbose('Using default check action on initialized checkbox');\n              return;\n            }\n            if( $target.is(selector.link) ) {\n              module.debug('Clicking link inside checkbox, skipping toggle');\n              return;\n            }\n            module.toggle();\n            $input.focus();\n            event.preventDefault();\n          },\n          keydown: function(event) {\n            var\n              key     = event.which,\n              keyCode = {\n                enter  : 13,\n                space  : 32,\n                escape : 27\n              }\n            ;\n            if(key == keyCode.escape) {\n              module.verbose('Escape key pressed blurring field');\n              $input.blur();\n              shortcutPressed = true;\n            }\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\n              module.verbose('Enter/space key pressed, toggling checkbox');\n              module.toggle();\n              shortcutPressed = true;\n            }\n            else {\n              shortcutPressed = false;\n            }\n          },\n          keyup: function(event) {\n            if(shortcutPressed) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        check: function() {\n          if( !module.should.allowCheck() ) {\n            return;\n          }\n          module.debug('Checking checkbox', $input);\n          module.set.checked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onChecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        uncheck: function() {\n          if( !module.should.allowUncheck() ) {\n            return;\n          }\n          module.debug('Unchecking checkbox');\n          module.set.unchecked();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onUnchecked.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        indeterminate: function() {\n          if( module.should.allowIndeterminate() ) {\n            module.debug('Checkbox is already indeterminate');\n            return;\n          }\n          module.debug('Making checkbox indeterminate');\n          module.set.indeterminate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onIndeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        determinate: function() {\n          if( module.should.allowDeterminate() ) {\n            module.debug('Checkbox is already determinate');\n            return;\n          }\n          module.debug('Making checkbox determinate');\n          module.set.determinate();\n          if( !module.should.ignoreCallbacks() ) {\n            settings.onDeterminate.call(input);\n            settings.onChange.call(input);\n          }\n        },\n\n        enable: function() {\n          if( module.is.enabled() ) {\n            module.debug('Checkbox is already enabled');\n            return;\n          }\n          module.debug('Enabling checkbox');\n          module.set.enabled();\n          settings.onEnable.call(input);\n          // preserve legacy callbacks\n          settings.onEnabled.call(input);\n        },\n\n        disable: function() {\n          if( module.is.disabled() ) {\n            module.debug('Checkbox is already disabled');\n            return;\n          }\n          module.debug('Disabling checkbox');\n          module.set.disabled();\n          settings.onDisable.call(input);\n          // preserve legacy callbacks\n          settings.onDisabled.call(input);\n        },\n\n        get: {\n          radios: function() {\n            var\n              name = module.get.name()\n            ;\n            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\n          },\n          otherRadios: function() {\n            return module.get.radios().not($module);\n          },\n          name: function() {\n            return $input.attr('name');\n          }\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          },\n          radio: function() {\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\n          },\n          indeterminate: function() {\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\n          },\n          checked: function() {\n            return $input.prop('checked') !== undefined && $input.prop('checked');\n          },\n          disabled: function() {\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          determinate: function() {\n            return !module.is.indeterminate();\n          },\n          unchecked: function() {\n            return !module.is.checked();\n          }\n        },\n\n        should: {\n          allowCheck: function() {\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow check, checkbox is already checked');\n              return false;\n            }\n            if(settings.beforeChecked.apply(input) === false) {\n              module.debug('Should not allow check, beforeChecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowUncheck: function() {\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\n              return false;\n            }\n            if(settings.beforeUnchecked.apply(input) === false) {\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowIndeterminate: function() {\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\n              return false;\n            }\n            if(settings.beforeIndeterminate.apply(input) === false) {\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          allowDeterminate: function() {\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\n              module.debug('Should not allow determinate, checkbox is already determinate');\n              return false;\n            }\n            if(settings.beforeDeterminate.apply(input) === false) {\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\n              return false;\n            }\n            return true;\n          },\n          forceCallbacks: function() {\n            return (module.is.initialLoad() && settings.fireOnInit);\n          },\n          ignoreCallbacks: function() {\n            return (initialLoad && !settings.fireOnInit);\n          }\n        },\n\n        can: {\n          change: function() {\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\n          },\n          uncheck: function() {\n            return (typeof settings.uncheckable === 'boolean')\n              ? settings.uncheckable\n              : !module.is.radio()\n            ;\n          }\n        },\n\n        set: {\n          initialLoad: function() {\n            initialLoad = true;\n          },\n          checked: function() {\n            module.verbose('Setting class to checked');\n            $module\n              .removeClass(className.indeterminate)\n              .addClass(className.checked)\n            ;\n            if( module.is.radio() ) {\n              module.uncheckOthers();\n            }\n            if(!module.is.indeterminate() && module.is.checked()) {\n              module.debug('Input is already checked, skipping input property change');\n              return;\n            }\n            module.verbose('Setting state to checked', input);\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', true)\n            ;\n            module.trigger.change();\n          },\n          unchecked: function() {\n            module.verbose('Removing checked class');\n            $module\n              .removeClass(className.indeterminate)\n              .removeClass(className.checked)\n            ;\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\n              module.debug('Input is already unchecked');\n              return;\n            }\n            module.debug('Setting state to unchecked');\n            $input\n              .prop('indeterminate', false)\n              .prop('checked', false)\n            ;\n            module.trigger.change();\n          },\n          indeterminate: function() {\n            module.verbose('Setting class to indeterminate');\n            $module\n              .addClass(className.indeterminate)\n            ;\n            if( module.is.indeterminate() ) {\n              module.debug('Input is already indeterminate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to indeterminate');\n            $input\n              .prop('indeterminate', true)\n            ;\n            module.trigger.change();\n          },\n          determinate: function() {\n            module.verbose('Removing indeterminate class');\n            $module\n              .removeClass(className.indeterminate)\n            ;\n            if( module.is.determinate() ) {\n              module.debug('Input is already determinate, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to determinate');\n            $input\n              .prop('indeterminate', false)\n            ;\n          },\n          disabled: function() {\n            module.verbose('Setting class to disabled');\n            $module\n              .addClass(className.disabled)\n            ;\n            if( module.is.disabled() ) {\n              module.debug('Input is already disabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to disabled');\n            $input\n              .prop('disabled', 'disabled')\n            ;\n            module.trigger.change();\n          },\n          enabled: function() {\n            module.verbose('Removing disabled class');\n            $module.removeClass(className.disabled);\n            if( module.is.enabled() ) {\n              module.debug('Input is already enabled, skipping input property change');\n              return;\n            }\n            module.debug('Setting state to enabled');\n            $input\n              .prop('disabled', false)\n            ;\n            module.trigger.change();\n          },\n          tabbable: function() {\n            module.verbose('Adding tabindex to checkbox');\n            if( $input.attr('tabindex') === undefined) {\n              $input.attr('tabindex', 0);\n            }\n          }\n        },\n\n        remove: {\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n\n        create: {\n          label: function() {\n            if($input.prevAll(selector.label).length > 0) {\n              $input.prev(selector.label).detach().insertAfter($input);\n              module.debug('Moving existing label', $label);\n            }\n            else if( !module.has.label() ) {\n              $label = $('<label>').insertAfter($input);\n              module.debug('Creating label', $label);\n            }\n          }\n        },\n\n        has: {\n          label: function() {\n            return ($label.length > 0);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching checkbox events');\n            $module\n              .on('click'   + eventNamespace, module.event.click)\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\n            ;\n          }\n        },\n\n        unbind: {\n          events: function() {\n            module.debug('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        uncheckOthers: function() {\n          var\n            $radios = module.get.otherRadios()\n          ;\n          module.debug('Unchecking other radios', $radios);\n          $radios.removeClass(className.checked);\n        },\n\n        toggle: function() {\n          if( !module.can.change() ) {\n            if(!module.is.radio()) {\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\n            }\n            return;\n          }\n          if( module.is.indeterminate() || module.is.unchecked() ) {\n            module.debug('Currently unchecked');\n            module.check();\n          }\n          else if( module.is.checked() && module.can.uncheck() ) {\n            module.debug('Currently checked');\n            module.uncheck();\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.checkbox.settings = {\n\n  name                : 'Checkbox',\n  namespace           : 'checkbox',\n\n  silent              : false,\n  debug               : false,\n  verbose             : true,\n  performance         : true,\n\n  // delegated event context\n  uncheckable         : 'auto',\n  fireOnInit          : false,\n\n  onChange            : function(){},\n\n  beforeChecked       : function(){},\n  beforeUnchecked     : function(){},\n  beforeDeterminate   : function(){},\n  beforeIndeterminate : function(){},\n\n  onChecked           : function(){},\n  onUnchecked         : function(){},\n\n  onDeterminate       : function() {},\n  onIndeterminate     : function() {},\n\n  onEnable            : function(){},\n  onDisable           : function(){},\n\n  // preserve misspelled callbacks (will be removed in 3.0)\n  onEnabled           : function(){},\n  onDisabled          : function(){},\n\n  className       : {\n    checked       : 'checked',\n    indeterminate : 'indeterminate',\n    disabled      : 'disabled',\n    hidden        : 'hidden',\n    radio         : 'radio',\n    readOnly      : 'read-only'\n  },\n\n  error     : {\n    method       : 'The method you called is not defined'\n  },\n\n  selector : {\n    checkbox : '.ui.checkbox',\n    label    : 'label, .box',\n    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    link     : 'a[href]'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Dimmer\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dimmer = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\n          : $.extend({}, $.fn.dimmer.settings),\n\n        selector        = settings.selector,\n        namespace       = settings.namespace,\n        className       = settings.className,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        clickEvent      = ('ontouchstart' in document.documentElement)\n          ? 'touchstart'\n          : 'click',\n\n        $module = $(this),\n        $dimmer,\n        $dimmable,\n\n        element   = this,\n        instance  = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        preinitialize: function() {\n          if( module.is.dimmer() ) {\n\n            $dimmable = $module.parent();\n            $dimmer   = $module;\n          }\n          else {\n            $dimmable = $module;\n            if( module.has.dimmer() ) {\n              if(settings.dimmerName) {\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\n              }\n              else {\n                $dimmer = $dimmable.find(selector.dimmer);\n              }\n            }\n            else {\n              $dimmer = module.create();\n            }\n            module.set.variation();\n          }\n        },\n\n        initialize: function() {\n          module.debug('Initializing dimmer', settings);\n\n          module.bind.events();\n          module.set.dimmable();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', $dimmer);\n          module.unbind.events();\n          module.remove.variation();\n          $dimmable\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            if(settings.on == 'hover') {\n              $dimmable\n                .on('mouseenter' + eventNamespace, module.show)\n                .on('mouseleave' + eventNamespace, module.hide)\n              ;\n            }\n            else if(settings.on == 'click') {\n              $dimmable\n                .on(clickEvent + eventNamespace, module.toggle)\n              ;\n            }\n            if( module.is.page() ) {\n              module.debug('Setting as a page dimmer', $dimmable);\n              module.set.pageDimmer();\n            }\n\n            if( module.is.closable() ) {\n              module.verbose('Adding dimmer close event', $dimmer);\n              $dimmable\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\n              ;\n            }\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $module\n              .removeData(moduleNamespace)\n            ;\n            $dimmable\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            module.verbose('Determining if event occured on dimmer', event);\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\n              module.hide();\n              event.stopImmediatePropagation();\n            }\n          }\n        },\n\n        addContent: function(element) {\n          var\n            $content = $(element)\n          ;\n          module.debug('Add content to dimmer', $content);\n          if($content.parent()[0] !== $dimmer[0]) {\n            $content.detach().appendTo($dimmer);\n          }\n        },\n\n        create: function() {\n          var\n            $element = $( settings.template.dimmer() )\n          ;\n          if(settings.dimmerName) {\n            module.debug('Creating named dimmer', settings.dimmerName);\n            $element.addClass(settings.dimmerName);\n          }\n          $element\n            .appendTo($dimmable)\n          ;\n          return $element;\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Showing dimmer', $dimmer, settings);\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\n            module.animate.show(callback);\n            settings.onShow.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is already shown or disabled');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.dimmed() || module.is.animating() ) {\n            module.debug('Hiding dimmer', $dimmer);\n            module.animate.hide(callback);\n            settings.onHide.call(element);\n            settings.onChange.call(element);\n          }\n          else {\n            module.debug('Dimmer is not visible');\n          }\n        },\n\n        toggle: function() {\n          module.verbose('Toggling dimmer visibility', $dimmer);\n          if( !module.is.dimmed() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              if(settings.opacity !== 'auto') {\n                module.set.opacity();\n              }\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' in',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.set.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.set.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Showing dimmer animation with javascript');\n              module.set.dimmed();\n              if(settings.opacity == 'auto') {\n                settings.opacity = 0.8;\n              }\n              $dimmer\n                .stop()\n                .css({\n                  opacity : 0,\n                  width   : '100%',\n                  height  : '100%'\n                })\n                .fadeTo(module.get.duration(), settings.opacity, function() {\n                  $dimmer.removeAttr('style');\n                  module.set.active();\n                  callback();\n                })\n              ;\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\n              module.verbose('Hiding dimmer with css');\n              $dimmer\n                .transition({\n                  animation   : settings.transition + ' out',\n                  queue       : false,\n                  duration    : module.get.duration(),\n                  useFailSafe : true,\n                  onStart     : function() {\n                    module.remove.dimmed();\n                  },\n                  onComplete  : function() {\n                    module.remove.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Hiding dimmer with javascript');\n              module.remove.dimmed();\n              $dimmer\n                .stop()\n                .fadeOut(module.get.duration(), function() {\n                  module.remove.active();\n                  $dimmer.removeAttr('style');\n                  callback();\n                })\n              ;\n            }\n          }\n        },\n\n        get: {\n          dimmer: function() {\n            return $dimmer;\n          },\n          duration: function() {\n            if(typeof settings.duration == 'object') {\n              if( module.is.active() ) {\n                return settings.duration.hide;\n              }\n              else {\n                return settings.duration.show;\n              }\n            }\n            return settings.duration;\n          }\n        },\n\n        has: {\n          dimmer: function() {\n            if(settings.dimmerName) {\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\n            }\n            else {\n              return ( $module.find(selector.dimmer).length > 0 );\n            }\n          }\n        },\n\n        is: {\n          active: function() {\n            return $dimmer.hasClass(className.active);\n          },\n          animating: function() {\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\n          },\n          closable: function() {\n            if(settings.closable == 'auto') {\n              if(settings.on == 'hover') {\n                return false;\n              }\n              return true;\n            }\n            return settings.closable;\n          },\n          dimmer: function() {\n            return $module.hasClass(className.dimmer);\n          },\n          dimmable: function() {\n            return $module.hasClass(className.dimmable);\n          },\n          dimmed: function() {\n            return $dimmable.hasClass(className.dimmed);\n          },\n          disabled: function() {\n            return $dimmable.hasClass(className.disabled);\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          page: function () {\n            return $dimmable.is('body');\n          },\n          pageDimmer: function() {\n            return $dimmer.hasClass(className.pageDimmer);\n          }\n        },\n\n        can: {\n          show: function() {\n            return !$dimmer.hasClass(className.disabled);\n          }\n        },\n\n        set: {\n          opacity: function(opacity) {\n            var\n              color      = $dimmer.css('background-color'),\n              colorArray = color.split(','),\n              isRGB      = (colorArray && colorArray.length == 3),\n              isRGBA     = (colorArray && colorArray.length == 4)\n            ;\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\n            if(isRGB || isRGBA) {\n              colorArray[3] = opacity + ')';\n              color         = colorArray.join(',');\n            }\n            else {\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\n            }\n            module.debug('Setting opacity to', opacity);\n            $dimmer.css('background-color', color);\n          },\n          active: function() {\n            $dimmer.addClass(className.active);\n          },\n          dimmable: function() {\n            $dimmable.addClass(className.dimmable);\n          },\n          dimmed: function() {\n            $dimmable.addClass(className.dimmed);\n          },\n          pageDimmer: function() {\n            $dimmer.addClass(className.pageDimmer);\n          },\n          disabled: function() {\n            $dimmer.addClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.addClass(variation);\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $dimmer\n              .removeClass(className.active)\n            ;\n          },\n          dimmed: function() {\n            $dimmable.removeClass(className.dimmed);\n          },\n          disabled: function() {\n            $dimmer.removeClass(className.disabled);\n          },\n          variation: function(variation) {\n            variation = variation || settings.variation;\n            if(variation) {\n              $dimmer.removeClass(variation);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      module.preinitialize();\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.dimmer.settings = {\n\n  name        : 'Dimmer',\n  namespace   : 'dimmer',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  // name to distinguish between multiple dimmers in context\n  dimmerName  : false,\n\n  // whether to add a variation type\n  variation   : false,\n\n  // whether to bind close events\n  closable    : 'auto',\n\n  // whether to use css animations\n  useCSS      : true,\n\n  // css animation to use\n  transition  : 'fade',\n\n  // event to bind to\n  on          : false,\n\n  // overriding opacity value\n  opacity     : 'auto',\n\n  // transition durations\n  duration    : {\n    show : 500,\n    hide : 500\n  },\n\n  onChange    : function(){},\n  onShow      : function(){},\n  onHide      : function(){},\n\n  error   : {\n    method   : 'The method you called is not defined.'\n  },\n\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    dimmable   : 'dimmable',\n    dimmed     : 'dimmed',\n    dimmer     : 'dimmer',\n    disabled   : 'disabled',\n    hide       : 'hide',\n    pageDimmer : 'page',\n    show       : 'show'\n  },\n\n  selector: {\n    dimmer   : '> .ui.dimmer',\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\n  },\n\n  template: {\n    dimmer: function() {\n     return $('<div />').attr('class', 'ui dimmer');\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Dropdown\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.dropdown = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = ('ontouchstart' in document.documentElement),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function(elementIndex) {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\n          : $.extend({}, $.fn.dropdown.settings),\n\n        className       = settings.className,\n        message         = settings.message,\n        fields          = settings.fields,\n        keys            = settings.keys,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        selector        = settings.selector,\n        error           = settings.error,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $text           = $module.find(selector.text),\n        $search         = $module.find(selector.search),\n        $sizer          = $module.find(selector.sizer),\n        $input          = $module.find(selector.input),\n        $icon           = $module.find(selector.icon),\n\n        $combo = ($module.prev().find(selector.text).length > 0)\n          ? $module.prev().find(selector.text)\n          : $module.prev(),\n\n        $menu           = $module.children(selector.menu),\n        $item           = $menu.find(selector.item),\n\n        activated       = false,\n        itemActivated   = false,\n        internalChange  = false,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        initialLoad,\n        pageLostFocus,\n        willRefocus,\n        elementNamespace,\n        id,\n        selectObserver,\n        menuObserver,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing dropdown', settings);\n\n          if( module.is.alreadySetup() ) {\n            module.setup.reference();\n          }\n          else {\n            module.setup.layout();\n            module.refreshData();\n\n            module.save.defaults();\n            module.restore.selected();\n\n            module.create.id();\n            module.bind.events();\n\n            module.observeChanges();\n            module.instantiate();\n          }\n\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of dropdown', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous dropdown', $module);\n          module.remove.tabbable();\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          $menu\n            .off(eventNamespace)\n          ;\n          $document\n            .off(elementNamespace)\n          ;\n          module.disconnect.menuObserver();\n          module.disconnect.selectObserver();\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            selectObserver = new MutationObserver(module.event.select.mutation);\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\n            module.observe.select();\n            module.observe.menu();\n          }\n        },\n\n        disconnect: {\n          menuObserver: function() {\n            if(menuObserver) {\n              menuObserver.disconnect();\n            }\n          },\n          selectObserver: function() {\n            if(selectObserver) {\n              selectObserver.disconnect();\n            }\n          }\n        },\n        observe: {\n          select: function() {\n            if(module.has.input()) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          menu: function() {\n            if(module.has.menu()) {\n              menuObserver.observe($menu[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          }\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          },\n          userChoice: function(values) {\n            var\n              $userChoices,\n              $userChoice,\n              isUserValue,\n              html\n            ;\n            values = values || module.get.userValues();\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            $.each(values, function(index, value) {\n              if(module.get.item(value) === false) {\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $userChoice  = $('<div />')\n                  .html(html)\n                  .attr('data-' + metadata.value, value)\n                  .attr('data-' + metadata.text, value)\n                  .addClass(className.addition)\n                  .addClass(className.item)\n                ;\n                if(settings.hideAdditions) {\n                  $userChoice.addClass(className.hidden);\n                }\n                $userChoices = ($userChoices === undefined)\n                  ? $userChoice\n                  : $userChoices.add($userChoice)\n                ;\n                module.verbose('Creating user choices for value', value, $userChoice);\n              }\n            });\n            return $userChoices;\n          },\n          userLabels: function(value) {\n            var\n              userValues = module.get.userValues()\n            ;\n            if(userValues) {\n              module.debug('Adding user labels', userValues);\n              $.each(userValues, function(index, value) {\n                module.verbose('Adding custom user value');\n                module.add.label(value, value);\n              });\n            }\n          },\n          menu: function() {\n            $menu = $('<div />')\n              .addClass(className.menu)\n              .appendTo($module)\n            ;\n          },\n          sizer: function() {\n            $sizer = $('<span />')\n              .addClass(className.sizer)\n              .insertAfter($search)\n            ;\n          }\n        },\n\n        search: function(query) {\n          query = (query !== undefined)\n            ? query\n            : module.get.query()\n          ;\n          module.verbose('Searching for query', query);\n          if(module.has.minCharacters(query)) {\n            module.filter(query);\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        select: {\n          firstUnfiltered: function() {\n            module.verbose('Selecting first non-filtered element');\n            module.remove.selectedItem();\n            $item\n              .not(selector.unselectable)\n              .not(selector.addition + selector.hidden)\n                .eq(0)\n                .addClass(className.selected)\n            ;\n          },\n          nextAvailable: function($selected) {\n            $selected = $selected.eq(0);\n            var\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\n              hasNext        = ($nextAvailable.length > 0)\n            ;\n            if(hasNext) {\n              module.verbose('Moving selection to', $nextAvailable);\n              $nextAvailable.addClass(className.selected);\n            }\n            else {\n              module.verbose('Moving selection to', $prevAvailable);\n              $prevAvailable.addClass(className.selected);\n            }\n          }\n        },\n\n        setup: {\n          api: function() {\n            var\n              apiSettings = {\n                debug   : settings.debug,\n                urlData : {\n                  value : module.get.value(),\n                  query : module.get.query()\n                },\n                on    : false\n              }\n            ;\n            module.verbose('First request, initializing API');\n            $module\n              .api(apiSettings)\n            ;\n          },\n          layout: function() {\n            if( $module.is('select') ) {\n              module.setup.select();\n              module.setup.returnedObject();\n            }\n            if( !module.has.menu() ) {\n              module.create.menu();\n            }\n            if( module.is.search() && !module.has.search() ) {\n              module.verbose('Adding search input');\n              $search = $('<input />')\n                .addClass(className.search)\n                .prop('autocomplete', 'off')\n                .insertBefore($text)\n              ;\n            }\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\n              module.create.sizer();\n            }\n            if(settings.allowTab) {\n              module.set.tabbable();\n            }\n          },\n          select: function() {\n            var\n              selectValues  = module.get.selectValues()\n            ;\n            module.debug('Dropdown initialized on a select', selectValues);\n            if( $module.is('select') ) {\n              $input = $module;\n            }\n            // see if select is placed correctly already\n            if($input.parent(selector.dropdown).length > 0) {\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\n              $module = $input.closest(selector.dropdown);\n              if( !module.has.menu() ) {\n                module.create.menu();\n              }\n              $menu = $module.children(selector.menu);\n              module.setup.menu(selectValues);\n            }\n            else {\n              module.debug('Creating entire dropdown from select');\n              $module = $('<div />')\n                .attr('class', $input.attr('class') )\n                .addClass(className.selection)\n                .addClass(className.dropdown)\n                .html( templates.dropdown(selectValues) )\n                .insertBefore($input)\n              ;\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\n                module.error(error.missingMultiple);\n                $input.prop('multiple', true);\n              }\n              if($input.is('[multiple]')) {\n                module.set.multiple();\n              }\n              if ($input.prop('disabled')) {\n                module.debug('Disabling dropdown');\n                $module.addClass(className.disabled);\n              }\n              $input\n                .removeAttr('class')\n                .detach()\n                .prependTo($module)\n              ;\n            }\n            module.refresh();\n          },\n          menu: function(values) {\n            $menu.html( templates.menu(values, fields));\n            $item = $menu.find(selector.item);\n          },\n          reference: function() {\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\n            // replace module reference\n            $module = $module.parent(selector.dropdown);\n            module.refresh();\n            module.setup.returnedObject();\n            // invoke method in context of current instance\n            if(methodInvoked) {\n              instance = module;\n              module.invoke(query);\n            }\n          },\n          returnedObject: function() {\n            var\n              $firstModules = $allModules.slice(0, elementIndex),\n              $lastModules = $allModules.slice(elementIndex + 1)\n            ;\n            // adjust all modules to use correct reference\n            $allModules = $firstModules.add($module).add($lastModules);\n          }\n        },\n\n        refresh: function() {\n          module.refreshSelectors();\n          module.refreshData();\n        },\n\n        refreshItems: function() {\n          $item = $menu.find(selector.item);\n        },\n\n        refreshSelectors: function() {\n          module.verbose('Refreshing selector cache');\n          $text   = $module.find(selector.text);\n          $search = $module.find(selector.search);\n          $input  = $module.find(selector.input);\n          $icon   = $module.find(selector.icon);\n          $combo  = ($module.prev().find(selector.text).length > 0)\n            ? $module.prev().find(selector.text)\n            : $module.prev()\n          ;\n          $menu    = $module.children(selector.menu);\n          $item    = $menu.find(selector.item);\n        },\n\n        refreshData: function() {\n          module.verbose('Refreshing cached metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n        },\n\n        clearData: function() {\n          module.verbose('Clearing metadata');\n          $item\n            .removeData(metadata.text)\n            .removeData(metadata.value)\n          ;\n          $module\n            .removeData(metadata.defaultText)\n            .removeData(metadata.defaultValue)\n            .removeData(metadata.placeholderText)\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Toggling menu visibility');\n          if( !module.is.active() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(!module.can.show() && module.is.remote()) {\n            module.debug('No API results retrieved, searching before show');\n            module.queryRemote(module.get.query(), module.show);\n          }\n          if( module.can.show() && !module.is.active() ) {\n            module.debug('Showing dropdown');\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\n              module.remove.message();\n            }\n            if(module.is.allFiltered()) {\n              return true;\n            }\n            if(settings.onShow.call(element) !== false) {\n              module.animate.show(function() {\n                if( module.can.click() ) {\n                  module.bind.intent();\n                }\n                if(module.has.menuSearch()) {\n                  module.focusSearch();\n                }\n                module.set.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.active() ) {\n            module.debug('Hiding dropdown');\n            if(settings.onHide.call(element) !== false) {\n              module.animate.hide(function() {\n                module.remove.visible();\n                callback.call(element);\n              });\n            }\n          }\n        },\n\n        hideOthers: function() {\n          module.verbose('Finding other dropdowns to hide');\n          $allModules\n            .not($module)\n              .has(selector.menu + '.' + className.visible)\n                .dropdown('hide')\n          ;\n        },\n\n        hideMenu: function() {\n          module.verbose('Hiding menu  instantaneously');\n          module.remove.active();\n          module.remove.visible();\n          $menu.transition('hide');\n        },\n\n        hideSubMenus: function() {\n          var\n            $subMenus = $menu.children(selector.item).find(selector.menu)\n          ;\n          module.verbose('Hiding sub menus', $subMenus);\n          $subMenus.transition('hide');\n        },\n\n        bind: {\n          events: function() {\n            if(hasTouch) {\n              module.bind.touchEvents();\n            }\n            module.bind.keyboardEvents();\n            module.bind.inputEvents();\n            module.bind.mouseEvents();\n          },\n          touchEvents: function() {\n            module.debug('Touch device detected binding additional touch events');\n            if( module.is.searchSelection() ) {\n              // do nothing special yet\n            }\n            else if( module.is.single() ) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\n              ;\n            }\n            $menu\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\n            ;\n          },\n          keyboardEvents: function() {\n            module.verbose('Binding keyboard events');\n            $module\n              .on('keydown' + eventNamespace, module.event.keydown)\n            ;\n            if( module.has.search() ) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\n              ;\n            }\n            if( module.is.multiple() ) {\n              $document\n                .on('keydown' + elementNamespace, module.event.document.keydown)\n              ;\n            }\n          },\n          inputEvents: function() {\n            module.verbose('Binding input change events');\n            $module\n              .on('change' + eventNamespace, selector.input, module.event.change)\n            ;\n          },\n          mouseEvents: function() {\n            module.verbose('Binding mouse events');\n            if(module.is.multiple()) {\n              $module\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\n              ;\n            }\n            if( module.is.searchSelection() ) {\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\n              ;\n              if(module.is.multiple()) {\n                $module\n                  .on('click' + eventNamespace, module.event.click)\n                ;\n              }\n            }\n            else {\n              if(settings.on == 'click') {\n                $module\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\n                  .on('click' + eventNamespace, module.event.test.toggle)\n                ;\n              }\n              else if(settings.on == 'hover') {\n                $module\n                  .on('mouseenter' + eventNamespace, module.delay.show)\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\n                ;\n              }\n              else {\n                $module\n                  .on(settings.on + eventNamespace, module.toggle)\n                ;\n              }\n              $module\n                .on('mousedown' + eventNamespace, module.event.mousedown)\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\n                .on('focus'     + eventNamespace, module.event.focus)\n              ;\n              if(module.has.menuSearch() ) {\n                $module\n                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\n                ;\n              }\n              else {\n                $module\n                  .on('blur' + eventNamespace, module.event.blur)\n                ;\n              }\n            }\n            $menu\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\n            ;\n          },\n          intent: function() {\n            module.verbose('Binding hide intent event to document');\n            if(hasTouch) {\n              $document\n                .on('touchstart' + elementNamespace, module.event.test.touch)\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\n              ;\n            }\n            $document\n              .on('click' + elementNamespace, module.event.test.hide)\n            ;\n          }\n        },\n\n        unbind: {\n          intent: function() {\n            module.verbose('Removing hide intent event from document');\n            if(hasTouch) {\n              $document\n                .off('touchstart' + elementNamespace)\n                .off('touchmove' + elementNamespace)\n              ;\n            }\n            $document\n              .off('click' + elementNamespace)\n            ;\n          }\n        },\n\n        filter: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            afterFiltered = function() {\n              if(module.is.multiple()) {\n                module.filterActive();\n              }\n              if(query || (!query && module.get.activeItem().length == 0)) {\n                module.select.firstUnfiltered();\n              }\n              if( module.has.allResultsFiltered() ) {\n                if( settings.onNoResults.call(element, searchTerm) ) {\n                  if(settings.allowAdditions) {\n                    if(settings.hideAdditions) {\n                      module.verbose('User addition with no menu, setting empty style');\n                      module.set.empty();\n                      module.hideMenu();\n                    }\n                  }\n                  else {\n                    module.verbose('All items filtered, showing message', searchTerm);\n                    module.add.message(message.noResults);\n                  }\n                }\n                else {\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\n                  module.hideMenu();\n                }\n              }\n              else {\n                module.remove.empty();\n                module.remove.message();\n              }\n              if(settings.allowAdditions) {\n                module.add.userSuggestion(query);\n              }\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\n                module.show();\n              }\n            }\n          ;\n          if(settings.useLabels && module.has.maxSelections()) {\n            return;\n          }\n          if(settings.apiSettings) {\n            if( module.can.useAPI() ) {\n              module.queryRemote(searchTerm, function() {\n                if(settings.filterRemoteData) {\n                  module.filterItems(searchTerm);\n                }\n                afterFiltered();\n              });\n            }\n            else {\n              module.error(error.noAPI);\n            }\n          }\n          else {\n            module.filterItems(searchTerm);\n            afterFiltered();\n          }\n        },\n\n        queryRemote: function(query, callback) {\n          var\n            apiSettings = {\n              errorDuration : false,\n              cache         : 'local',\n              throttle      : settings.throttle,\n              urlData       : {\n                query: query\n              },\n              onError: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onFailure: function() {\n                module.add.message(message.serverError);\n                callback();\n              },\n              onSuccess : function(response) {\n                module.remove.message();\n                module.setup.menu({\n                  values: response[fields.remoteValues]\n                });\n                callback();\n              }\n            }\n          ;\n          if( !$module.api('get request') ) {\n            module.setup.api();\n          }\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\n          $module\n            .api('setting', apiSettings)\n            .api('query')\n          ;\n        },\n\n        filterItems: function(query) {\n          var\n            searchTerm = (query !== undefined)\n              ? query\n              : module.get.query(),\n            results          =  null,\n            escapedTerm      = module.escape.string(searchTerm),\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\n          ;\n          // avoid loop if we're matching nothing\n          if( module.has.query() ) {\n            results = [];\n\n            module.verbose('Searching for matching values', searchTerm);\n            $item\n              .each(function(){\n                var\n                  $choice = $(this),\n                  text,\n                  value\n                ;\n                if(settings.match == 'both' || settings.match == 'text') {\n                  text = String(module.get.choiceText($choice, false));\n                  if(text.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n                if(settings.match == 'both' || settings.match == 'value') {\n                  value = String(module.get.choiceValue($choice, text));\n                  if(value.search(beginsWithRegExp) !== -1) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\n                    results.push(this);\n                    return true;\n                  }\n                }\n              })\n            ;\n          }\n          module.debug('Showing only matched items', searchTerm);\n          module.remove.filteredItem();\n          if(results) {\n            $item\n              .not(results)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n        exactSearch: function (query, term) {\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(term.indexOf(query) > -1) {\n             return true;\n          }\n          return false;\n        },\n        filterActive: function() {\n          if(settings.useLabels) {\n            $item.filter('.' + className.active)\n              .addClass(className.filtered)\n            ;\n          }\n        },\n\n        focusSearch: function(skipHandler) {\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\n            if(skipHandler) {\n              $module.off('focus' + eventNamespace, selector.search);\n              $search.focus();\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\n            }\n            else {\n              $search.focus();\n            }\n          }\n        },\n\n        forceSelection: function() {\n          var\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\n            $selectedItem      = ($currentlySelected.length > 0)\n              ? $currentlySelected\n              : $activeItem,\n            hasSelected = ($selectedItem.length > 0)\n          ;\n          if(hasSelected && !module.is.multiple()) {\n            module.debug('Forcing partial selection to selected item', $selectedItem);\n            module.event.item.click.call($selectedItem, {}, true);\n            return;\n          }\n          else {\n            if(settings.allowAdditions) {\n              module.set.selected(module.get.query());\n              module.remove.searchTerm();\n            }\n            else {\n              module.remove.searchTerm();\n            }\n          }\n        },\n\n        event: {\n          change: function() {\n            if(!internalChange) {\n              module.debug('Input changed, updating selection');\n              module.set.selected();\n            }\n          },\n          focus: function() {\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\n              module.show();\n            }\n          },\n          blur: function(event) {\n            pageLostFocus = (document.activeElement === this);\n            if(!activated && !pageLostFocus) {\n              module.remove.activeLabel();\n              module.hide();\n            }\n          },\n          mousedown: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = true;\n            }\n            else {\n              // prevents focus callback from occurring on mousedown\n              activated = true;\n            }\n          },\n          mouseup: function() {\n            if(module.is.searchSelection()) {\n              // prevent menu hiding on immediate re-focus\n              willRefocus = false;\n            }\n            else {\n              activated = false;\n            }\n          },\n          click: function(event) {\n            var\n              $target = $(event.target)\n            ;\n            // focus search\n            if($target.is($module)) {\n              if(!module.is.focusedOnSearch()) {\n                module.focusSearch();\n              }\n              else {\n                module.show();\n              }\n            }\n          },\n          search: {\n            focus: function() {\n              activated = true;\n              if(module.is.multiple()) {\n                module.remove.activeLabel();\n              }\n              if(settings.showOnFocus) {\n                module.search();\n              }\n            },\n            blur: function(event) {\n              pageLostFocus = (document.activeElement === this);\n              if(module.is.searchSelection() && !willRefocus) {\n                if(!itemActivated && !pageLostFocus) {\n                  if(settings.forceSelection) {\n                    module.forceSelection();\n                  }\n                  module.hide();\n                }\n              }\n              willRefocus = false;\n            }\n          },\n          icon: {\n            click: function(event) {\n              module.toggle();\n            }\n          },\n          text: {\n            focus: function(event) {\n              activated = true;\n              module.focusSearch();\n            }\n          },\n          input: function(event) {\n            if(module.is.multiple() || module.is.searchSelection()) {\n              module.set.filtered();\n            }\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.search, settings.delay.search);\n          },\n          label: {\n            click: function(event) {\n              var\n                $label        = $(this),\n                $labels       = $module.find(selector.label),\n                $activeLabels = $labels.filter('.' + className.active),\n                $nextActive   = $label.nextAll('.' + className.active),\n                $prevActive   = $label.prevAll('.' + className.active),\n                $range = ($nextActive.length > 0)\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\n              ;\n              if(event.shiftKey) {\n                $activeLabels.removeClass(className.active);\n                $range.addClass(className.active);\n              }\n              else if(event.ctrlKey) {\n                $label.toggleClass(className.active);\n              }\n              else {\n                $activeLabels.removeClass(className.active);\n                $label.addClass(className.active);\n              }\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\n            }\n          },\n          remove: {\n            click: function() {\n              var\n                $label = $(this).parent()\n              ;\n              if( $label.hasClass(className.active) ) {\n                // remove all selected labels\n                module.remove.activeLabels();\n              }\n              else {\n                // remove this label only\n                module.remove.activeLabels( $label );\n              }\n            }\n          },\n          test: {\n            toggle: function(event) {\n              var\n                toggleBehavior = (module.is.multiple())\n                  ? module.show\n                  : module.toggle\n              ;\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\n                return;\n              }\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\n                event.preventDefault();\n              }\n            },\n            touch: function(event) {\n              module.determine.eventOnElement(event, function() {\n                if(event.type == 'touchstart') {\n                  module.timer = setTimeout(function() {\n                    module.hide();\n                  }, settings.delay.touch);\n                }\n                else if(event.type == 'touchmove') {\n                  clearTimeout(module.timer);\n                }\n              });\n              event.stopPropagation();\n            },\n            hide: function(event) {\n              module.determine.eventInModule(event, module.hide);\n            }\n          },\n          select: {\n            mutation: function(mutations) {\n              module.debug('<select> modified, recreating menu');\n              module.setup.select();\n            }\n          },\n          menu: {\n            mutation: function(mutations) {\n              var\n                mutation   = mutations[0],\n                $addedNode = mutation.addedNodes\n                  ? $(mutation.addedNodes[0])\n                  : $(false),\n                $removedNode = mutation.removedNodes\n                  ? $(mutation.removedNodes[0])\n                  : $(false),\n                $changedNodes  = $addedNode.add($removedNode),\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\n              ;\n              if(isUserAddition || isMessage) {\n                module.debug('Updating item selector cache');\n                module.refreshItems();\n              }\n              else {\n                module.debug('Menu modified, updating selector cache');\n                module.refresh();\n              }\n            },\n            mousedown: function() {\n              itemActivated = true;\n            },\n            mouseup: function() {\n              itemActivated = false;\n            }\n          },\n          item: {\n            mouseenter: function(event) {\n              var\n                $target        = $(event.target),\n                $item          = $(this),\n                $subMenu       = $item.children(selector.menu),\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              if( !isBubbledEvent && hasSubMenu ) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Showing sub-menu', $subMenu);\n                  $.each($otherMenus, function() {\n                    module.animate.hide(false, $(this));\n                  });\n                  module.animate.show(false, $subMenu);\n                }, settings.delay.show);\n                event.preventDefault();\n              }\n            },\n            mouseleave: function(event) {\n              var\n                $subMenu = $(this).children(selector.menu)\n              ;\n              if($subMenu.length > 0) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Hiding sub-menu', $subMenu);\n                  module.animate.hide(false, $subMenu);\n                }, settings.delay.hide);\n              }\n            },\n            click: function (event, skipRefocus) {\n              var\n                $choice        = $(this),\n                $target        = (event)\n                  ? $(event.target)\n                  : $(''),\n                $subMenu       = $choice.find(selector.menu),\n                text           = module.get.choiceText($choice),\n                value          = module.get.choiceValue($choice, text),\n                hasSubMenu     = ($subMenu.length > 0),\n                isBubbledEvent = ($subMenu.find($target).length > 0)\n              ;\n              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\n              if(module.has.menuSearch()) {\n                $(document.activeElement).blur();\n              }\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\n                if(module.is.searchSelection()) {\n                  if(settings.allowAdditions) {\n                    module.remove.userAddition();\n                  }\n                  module.remove.searchTerm();\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\n                    module.focusSearch(true);\n                  }\n                }\n                if(!settings.useLabels) {\n                  module.remove.filteredItem();\n                  module.set.scrollPosition($choice);\n                }\n                module.determine.selectAction.call(this, text, value);\n              }\n            }\n          },\n\n          document: {\n            // label selection should occur even when element has no focus\n            keydown: function(event) {\n              var\n                pressedKey    = event.which,\n                isShortcutKey = module.is.inObject(pressedKey, keys)\n              ;\n              if(isShortcutKey) {\n                var\n                  $label            = $module.find(selector.label),\n                  $activeLabel      = $label.filter('.' + className.active),\n                  activeValue       = $activeLabel.data(metadata.value),\n                  labelIndex        = $label.index($activeLabel),\n                  labelCount        = $label.length,\n                  hasActiveLabel    = ($activeLabel.length > 0),\n                  hasMultipleActive = ($activeLabel.length > 1),\n                  isFirstLabel      = (labelIndex === 0),\n                  isLastLabel       = (labelIndex + 1 == labelCount),\n                  isSearch          = module.is.searchSelection(),\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\n                  isFocused         = module.is.focused(),\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\n                  $nextLabel\n                ;\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\n                  return;\n                }\n\n                if(pressedKey == keys.leftArrow) {\n                  // activate previous label\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\n                    module.verbose('Selecting previous label');\n                    $label.last().addClass(className.active);\n                  }\n                  else if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting previous label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding previous label to selection');\n                    }\n                    if(isFirstLabel && !hasMultipleActive) {\n                      $activeLabel.addClass(className.active);\n                    }\n                    else {\n                      $activeLabel.prev(selector.siblingLabel)\n                        .addClass(className.active)\n                        .end()\n                      ;\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.rightArrow) {\n                  // activate first label\n                  if(isFocused && !hasActiveLabel) {\n                    $label.first().addClass(className.active);\n                  }\n                  // activate next label\n                  if(hasActiveLabel) {\n                    if(!event.shiftKey) {\n                      module.verbose('Selecting next label');\n                      $label.removeClass(className.active);\n                    }\n                    else {\n                      module.verbose('Adding next label to selection');\n                    }\n                    if(isLastLabel) {\n                      if(isSearch) {\n                        if(!isFocusedOnSearch) {\n                          module.focusSearch();\n                        }\n                        else {\n                          $label.removeClass(className.active);\n                        }\n                      }\n                      else if(hasMultipleActive) {\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                      }\n                      else {\n                        $activeLabel.addClass(className.active);\n                      }\n                    }\n                    else {\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\n                    }\n                    event.preventDefault();\n                  }\n                }\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\n                  if(hasActiveLabel) {\n                    module.verbose('Removing active labels');\n                    if(isLastLabel) {\n                      if(isSearch && !isFocusedOnSearch) {\n                        module.focusSearch();\n                      }\n                    }\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                    event.preventDefault();\n                  }\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\n                    module.verbose('Removing last label on input backspace');\n                    $activeLabel = $label.last().addClass(className.active);\n                    module.remove.activeLabels($activeLabel);\n                  }\n                }\n                else {\n                  $activeLabel.removeClass(className.active);\n                }\n              }\n            }\n          },\n\n          keydown: function(event) {\n            var\n              pressedKey    = event.which,\n              isShortcutKey = module.is.inObject(pressedKey, keys)\n            ;\n            if(isShortcutKey) {\n              var\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\n                $activeItem        = $menu.children('.' + className.active).eq(0),\n                $selectedItem      = ($currentlySelected.length > 0)\n                  ? $currentlySelected\n                  : $activeItem,\n                $visibleItems = ($selectedItem.length > 0)\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\n                  : $menu.children(':not(.' + className.filtered +')'),\n                $subMenu              = $selectedItem.children(selector.menu),\n                $parentMenu           = $selectedItem.closest(selector.menu),\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\n                hasSubMenu            = ($subMenu.length> 0),\n                hasSelectedItem       = ($selectedItem.length > 0),\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\n                $nextItem,\n                isSubMenuItem,\n                newIndex\n              ;\n              // allow selection with menu closed\n              if(isAdditionWithoutMenu) {\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                module.event.item.click.call($selectedItem, event);\n                if(module.is.searchSelection()) {\n                  module.remove.searchTerm();\n                }\n              }\n\n              // visible menu keyboard shortcuts\n              if( module.is.visible() ) {\n\n                // enter (select or open sub-menu)\n                if(pressedKey == keys.enter || delimiterPressed) {\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\n                    pressedKey = keys.rightArrow;\n                  }\n                  else if(selectedIsSelectable) {\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\n                    module.event.item.click.call($selectedItem, event);\n                    if(module.is.searchSelection()) {\n                      module.remove.searchTerm();\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // sub-menu actions\n                if(hasSelectedItem) {\n\n                  if(pressedKey == keys.leftArrow) {\n\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\n\n                    if(isSubMenuItem) {\n                      module.verbose('Left key pressed, closing sub-menu');\n                      module.animate.hide(false, $parentMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $parentMenu\n                        .closest(selector.item)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n\n                  // right arrow (show sub-menu)\n                  if(pressedKey == keys.rightArrow) {\n                    if(hasSubMenu) {\n                      module.verbose('Right key pressed, opening sub-menu');\n                      module.animate.show(false, $subMenu);\n                      $selectedItem\n                        .removeClass(className.selected)\n                      ;\n                      $subMenu\n                        .find(selector.item).eq(0)\n                          .addClass(className.selected)\n                      ;\n                      event.preventDefault();\n                    }\n                  }\n                }\n\n                // up arrow (traverse menu up)\n                if(pressedKey == keys.upArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($visibleItems.index( $nextItem ) < 0) {\n                    module.verbose('Up key pressed but reached top of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Up key pressed, changing active item');\n                    $selectedItem\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // down arrow (traverse menu down)\n                if(pressedKey == keys.downArrow) {\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\n                    : $item.eq(0)\n                  ;\n                  if($nextItem.length === 0) {\n                    module.verbose('Down key pressed but reached bottom of current menu');\n                    event.preventDefault();\n                    return;\n                  }\n                  else {\n                    module.verbose('Down key pressed, changing active item');\n                    $item\n                      .removeClass(className.selected)\n                    ;\n                    $nextItem\n                      .addClass(className.selected)\n                    ;\n                    module.set.scrollPosition($nextItem);\n                    if(settings.selectOnKeydown && module.is.single()) {\n                      module.set.selectedItem($nextItem);\n                    }\n                  }\n                  event.preventDefault();\n                }\n\n                // page down (show next page)\n                if(pressedKey == keys.pageUp) {\n                  module.scrollPage('up');\n                  event.preventDefault();\n                }\n                if(pressedKey == keys.pageDown) {\n                  module.scrollPage('down');\n                  event.preventDefault();\n                }\n\n                // escape (close menu)\n                if(pressedKey == keys.escape) {\n                  module.verbose('Escape key pressed, closing dropdown');\n                  module.hide();\n                }\n\n              }\n              else {\n                // delimiter key\n                if(delimiterPressed) {\n                  event.preventDefault();\n                }\n                // down arrow (open menu)\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\n                  module.verbose('Down key pressed, showing dropdown');\n                  module.show();\n                  event.preventDefault();\n                }\n              }\n            }\n            else {\n              if( !module.has.search() ) {\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\n              }\n            }\n          }\n        },\n\n        trigger: {\n          change: function() {\n            var\n              events       = document.createEvent('HTMLEvents'),\n              inputElement = $input[0]\n            ;\n            if(inputElement) {\n              module.verbose('Triggering native change event');\n              events.initEvent('change', true, false);\n              inputElement.dispatchEvent(events);\n            }\n          }\n        },\n\n        determine: {\n          selectAction: function(text, value) {\n            module.verbose('Determining action', settings.action);\n            if( $.isFunction( module.action[settings.action] ) ) {\n              module.verbose('Triggering preset action', settings.action, text, value);\n              module.action[ settings.action ].call(element, text, value, this);\n            }\n            else if( $.isFunction(settings.action) ) {\n              module.verbose('Triggering user action', settings.action, text, value);\n              settings.action.call(element, text, value, this);\n            }\n            else {\n              module.error(error.action, settings.action);\n            }\n          },\n          eventInModule: function(event, callback) {\n            var\n              $target    = $(event.target),\n              inDocument = ($target.closest(document.documentElement).length > 0),\n              inModule   = ($target.closest($module).length > 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inDocument && !inModule) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown, canceling callback');\n              return false;\n            }\n          },\n          eventOnElement: function(event, callback) {\n            var\n              $target      = $(event.target),\n              $label       = $target.closest(selector.siblingLabel),\n              inVisibleDOM = document.body.contains(event.target),\n              notOnLabel   = ($module.find($label).length === 0),\n              notInMenu    = ($target.closest($menu).length === 0)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(inVisibleDOM && notOnLabel && notInMenu) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown menu, canceling callback');\n              return false;\n            }\n          }\n        },\n\n        action: {\n\n          nothing: function() {},\n\n          activate: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.selected(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          select: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            if( module.can.activate( $(element) ) ) {\n              module.set.value(value, $(element));\n              if(module.is.multiple() && !module.is.allFiltered()) {\n                return;\n              }\n              else {\n                module.hideAndClear();\n              }\n            }\n          },\n\n          combo: function(text, value, element) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value, $(element));\n            module.hideAndClear();\n          },\n\n          hide: function(text, value, element) {\n            module.set.value(value, text);\n            module.hideAndClear();\n          }\n\n        },\n\n        get: {\n          id: function() {\n            return id;\n          },\n          defaultText: function() {\n            return $module.data(metadata.defaultText);\n          },\n          defaultValue: function() {\n            return $module.data(metadata.defaultValue);\n          },\n          placeholderText: function() {\n            return $module.data(metadata.placeholderText) || '';\n          },\n          text: function() {\n            return $text.text();\n          },\n          query: function() {\n            return $.trim($search.val());\n          },\n          searchWidth: function(value) {\n            value = (value !== undefined)\n              ? value\n              : $search.val()\n            ;\n            $sizer.text(value);\n            // prevent rounding issues\n            return Math.ceil( $sizer.width() + 1);\n          },\n          selectionCount: function() {\n            var\n              values = module.get.values(),\n              count\n            ;\n            count = ( module.is.multiple() )\n              ? $.isArray(values)\n                ? values.length\n                : 0\n              : (module.get.value() !== '')\n                ? 1\n                : 0\n            ;\n            return count;\n          },\n          transition: function($subMenu) {\n            return (settings.transition == 'auto')\n              ? module.is.upward($subMenu)\n                ? 'slide up'\n                : 'slide down'\n              : settings.transition\n            ;\n          },\n          userValues: function() {\n            var\n              values = module.get.values()\n            ;\n            if(!values) {\n              return false;\n            }\n            values = $.isArray(values)\n              ? values\n              : [values]\n            ;\n            return $.grep(values, function(value) {\n              return (module.get.item(value) === false);\n            });\n          },\n          uniqueArray: function(array) {\n            return $.grep(array, function (value, index) {\n                return $.inArray(value, array) === index;\n            });\n          },\n          caretPosition: function() {\n            var\n              input = $search.get(0),\n              range,\n              rangeLength\n            ;\n            if('selectionStart' in input) {\n              return input.selectionStart;\n            }\n            else if (document.selection) {\n              input.focus();\n              range       = document.selection.createRange();\n              rangeLength = range.text.length;\n              range.moveStart('character', -input.value.length);\n              return range.text.length - rangeLength;\n            }\n          },\n          value: function() {\n            var\n              value = ($input.length > 0)\n                ? $input.val()\n                : $module.data(metadata.value),\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\n            ;\n            // prevents placeholder element from being selected when multiple\n            return (value === undefined || isEmptyMultiselect)\n              ? ''\n              : value\n            ;\n          },\n          values: function() {\n            var\n              value = module.get.value()\n            ;\n            if(value === '') {\n              return '';\n            }\n            return ( !module.has.selectInput() && module.is.multiple() )\n              ? (typeof value == 'string') // delimited string\n                ? value.split(settings.delimiter)\n                : ''\n              : value\n            ;\n          },\n          remoteValues: function() {\n            var\n              values = module.get.values(),\n              remoteValues = false\n            ;\n            if(values) {\n              if(typeof values == 'string') {\n                values = [values];\n              }\n              $.each(values, function(index, value) {\n                var\n                  name = module.read.remoteData(value)\n                ;\n                module.verbose('Restoring value from session data', name, value);\n                if(name) {\n                  if(!remoteValues) {\n                    remoteValues = {};\n                  }\n                  remoteValues[value] = name;\n                }\n              });\n            }\n            return remoteValues;\n          },\n          choiceText: function($choice, preserveHTML) {\n            preserveHTML = (preserveHTML !== undefined)\n              ? preserveHTML\n              : settings.preserveHTML\n            ;\n            if($choice) {\n              if($choice.find(selector.menu).length > 0) {\n                module.verbose('Retrieving text of element with sub-menu');\n                $choice = $choice.clone();\n                $choice.find(selector.menu).remove();\n                $choice.find(selector.menuIcon).remove();\n              }\n              return ($choice.data(metadata.text) !== undefined)\n                ? $choice.data(metadata.text)\n                : (preserveHTML)\n                  ? $.trim($choice.html())\n                  : $.trim($choice.text())\n              ;\n            }\n          },\n          choiceValue: function($choice, choiceText) {\n            choiceText = choiceText || module.get.choiceText($choice);\n            if(!$choice) {\n              return false;\n            }\n            return ($choice.data(metadata.value) !== undefined)\n              ? String( $choice.data(metadata.value) )\n              : (typeof choiceText === 'string')\n                ? $.trim(choiceText.toLowerCase())\n                : String(choiceText)\n            ;\n          },\n          inputEvent: function() {\n            var\n              input = $search[0]\n            ;\n            if(input) {\n              return (input.oninput !== undefined)\n                ? 'input'\n                : (input.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n              ;\n            }\n            return false;\n          },\n          selectValues: function() {\n            var\n              select = {}\n            ;\n            select.values = [];\n            $module\n              .find('option')\n                .each(function() {\n                  var\n                    $option  = $(this),\n                    name     = $option.html(),\n                    disabled = $option.attr('disabled'),\n                    value    = ( $option.attr('value') !== undefined )\n                      ? $option.attr('value')\n                      : name\n                  ;\n                  if(settings.placeholder === 'auto' && value === '') {\n                    select.placeholder = name;\n                  }\n                  else {\n                    select.values.push({\n                      name     : name,\n                      value    : value,\n                      disabled : disabled\n                    });\n                  }\n                })\n            ;\n            if(settings.placeholder && settings.placeholder !== 'auto') {\n              module.debug('Setting placeholder value to', settings.placeholder);\n              select.placeholder = settings.placeholder;\n            }\n            if(settings.sortSelect) {\n              select.values.sort(function(a, b) {\n                return (a.name > b.name)\n                  ? 1\n                  : -1\n                ;\n              });\n              module.debug('Retrieved and sorted values from select', select);\n            }\n            else {\n              module.debug('Retrieved values from select', select);\n            }\n            return select;\n          },\n          activeItem: function() {\n            return $item.filter('.'  + className.active);\n          },\n          selectedItem: function() {\n            var\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\n            ;\n            return ($selectedItem.length > 0)\n              ? $selectedItem\n              : $item.eq(0)\n            ;\n          },\n          itemWithAdditions: function(value) {\n            var\n              $items       = module.get.item(value),\n              $userItems   = module.create.userChoice(value),\n              hasUserItems = ($userItems && $userItems.length > 0)\n            ;\n            if(hasUserItems) {\n              $items = ($items.length > 0)\n                ? $items.add($userItems)\n                : $userItems\n              ;\n            }\n            return $items;\n          },\n          item: function(value, strict) {\n            var\n              $selectedItem = false,\n              shouldSearch,\n              isMultiple\n            ;\n            value = (value !== undefined)\n              ? value\n              : ( module.get.values() !== undefined)\n                ? module.get.values()\n                : module.get.text()\n            ;\n            shouldSearch = (isMultiple)\n              ? (value.length > 0)\n              : (value !== undefined && value !== null)\n            ;\n            isMultiple = (module.is.multiple() && $.isArray(value));\n            strict     = (value === '' || value === 0)\n              ? true\n              : strict || false\n            ;\n            if(shouldSearch) {\n              $item\n                .each(function() {\n                  var\n                    $choice       = $(this),\n                    optionText    = module.get.choiceText($choice),\n                    optionValue   = module.get.choiceValue($choice, optionText)\n                  ;\n                  // safe early exit\n                  if(optionValue === null || optionValue === undefined) {\n                    return;\n                  }\n                  if(isMultiple) {\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\n                      $selectedItem = ($selectedItem)\n                        ? $selectedItem.add($choice)\n                        : $choice\n                      ;\n                    }\n                  }\n                  else if(strict) {\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\n                    if( optionValue === value || optionText === value) {\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                  else {\n                    if( String(optionValue) == String(value) || optionText == value) {\n                      module.verbose('Found select item by value', optionValue, value);\n                      $selectedItem = $choice;\n                      return true;\n                    }\n                  }\n                })\n              ;\n            }\n            return $selectedItem;\n          }\n        },\n\n        check: {\n          maxSelections: function(selectionCount) {\n            if(settings.maxSelections) {\n              selectionCount = (selectionCount !== undefined)\n                ? selectionCount\n                : module.get.selectionCount()\n              ;\n              if(selectionCount >= settings.maxSelections) {\n                module.debug('Maximum selection count reached');\n                if(settings.useLabels) {\n                  $item.addClass(className.filtered);\n                  module.add.message(message.maxSelections);\n                }\n                return true;\n              }\n              else {\n                module.verbose('No longer at maximum selection count');\n                module.remove.message();\n                module.remove.filteredItem();\n                if(module.is.searchSelection()) {\n                  module.filterItems();\n                }\n                return false;\n              }\n            }\n            return true;\n          }\n        },\n\n        restore: {\n          defaults: function() {\n            module.clear();\n            module.restore.defaultText();\n            module.restore.defaultValue();\n          },\n          defaultText: function() {\n            var\n              defaultText     = module.get.defaultText(),\n              placeholderText = module.get.placeholderText\n            ;\n            if(defaultText === placeholderText) {\n              module.debug('Restoring default placeholder text', defaultText);\n              module.set.placeholderText(defaultText);\n            }\n            else {\n              module.debug('Restoring default text', defaultText);\n              module.set.text(defaultText);\n            }\n          },\n          placeholderText: function() {\n            module.set.placeholderText();\n          },\n          defaultValue: function() {\n            var\n              defaultValue = module.get.defaultValue()\n            ;\n            if(defaultValue !== undefined) {\n              module.debug('Restoring default value', defaultValue);\n              if(defaultValue !== '') {\n                module.set.value(defaultValue);\n                module.set.selected();\n              }\n              else {\n                module.remove.activeItem();\n                module.remove.selectedItem();\n              }\n            }\n          },\n          labels: function() {\n            if(settings.allowAdditions) {\n              if(!settings.useLabels) {\n                module.error(error.labels);\n                settings.useLabels = true;\n              }\n              module.debug('Restoring selected values');\n              module.create.userLabels();\n            }\n            module.check.maxSelections();\n          },\n          selected: function() {\n            module.restore.values();\n            if(module.is.multiple()) {\n              module.debug('Restoring previously selected values and labels');\n              module.restore.labels();\n            }\n            else {\n              module.debug('Restoring previously selected values');\n            }\n          },\n          values: function() {\n            // prevents callbacks from occurring on initial load\n            module.set.initialLoad();\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\n              module.restore.remoteValues();\n            }\n            else {\n              module.set.selected();\n            }\n            module.remove.initialLoad();\n          },\n          remoteValues: function() {\n            var\n              values = module.get.remoteValues()\n            ;\n            module.debug('Recreating selected from session data', values);\n            if(values) {\n              if( module.is.single() ) {\n                $.each(values, function(value, name) {\n                  module.set.text(name);\n                });\n              }\n              else {\n                $.each(values, function(value, name) {\n                  module.add.label(value, name);\n                });\n              }\n            }\n          }\n        },\n\n        read: {\n          remoteData: function(value) {\n            var\n              name\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            name = sessionStorage.getItem(value);\n            return (name !== undefined)\n              ? name\n              : false\n            ;\n          }\n        },\n\n        save: {\n          defaults: function() {\n            module.save.defaultText();\n            module.save.placeholderText();\n            module.save.defaultValue();\n          },\n          defaultValue: function() {\n            var\n              value = module.get.value()\n            ;\n            module.verbose('Saving default value as', value);\n            $module.data(metadata.defaultValue, value);\n          },\n          defaultText: function() {\n            var\n              text = module.get.text()\n            ;\n            module.verbose('Saving default text as', text);\n            $module.data(metadata.defaultText, text);\n          },\n          placeholderText: function() {\n            var\n              text\n            ;\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\n              text = module.get.text();\n              module.verbose('Saving placeholder text as', text);\n              $module.data(metadata.placeholderText, text);\n            }\n          },\n          remoteData: function(name, value) {\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            module.verbose('Saving remote data to session storage', value, name);\n            sessionStorage.setItem(value, name);\n          }\n        },\n\n        clear: function() {\n          if(module.is.multiple() && settings.useLabels) {\n            module.remove.labels();\n          }\n          else {\n            module.remove.activeItem();\n            module.remove.selectedItem();\n          }\n          module.set.placeholderText();\n          module.clearValue();\n        },\n\n        clearValue: function() {\n          module.set.value('');\n        },\n\n        scrollPage: function(direction, $selectedItem) {\n          var\n            $currentItem  = $selectedItem || module.get.selectedItem(),\n            $menu         = $currentItem.closest(selector.menu),\n            menuHeight    = $menu.outerHeight(),\n            currentScroll = $menu.scrollTop(),\n            itemHeight    = $item.eq(0).outerHeight(),\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\n            maxScroll     = $menu.prop('scrollHeight'),\n            newScroll     = (direction == 'up')\n              ? currentScroll - (itemHeight * itemsPerPage)\n              : currentScroll + (itemHeight * itemsPerPage),\n            $selectableItem = $item.not(selector.unselectable),\n            isWithinRange,\n            $nextSelectedItem,\n            elementIndex\n          ;\n          elementIndex      = (direction == 'up')\n            ? $selectableItem.index($currentItem) - itemsPerPage\n            : $selectableItem.index($currentItem) + itemsPerPage\n          ;\n          isWithinRange = (direction == 'up')\n            ? (elementIndex >= 0)\n            : (elementIndex < $selectableItem.length)\n          ;\n          $nextSelectedItem = (isWithinRange)\n            ? $selectableItem.eq(elementIndex)\n            : (direction == 'up')\n              ? $selectableItem.first()\n              : $selectableItem.last()\n          ;\n          if($nextSelectedItem.length > 0) {\n            module.debug('Scrolling page', direction, $nextSelectedItem);\n            $currentItem\n              .removeClass(className.selected)\n            ;\n            $nextSelectedItem\n              .addClass(className.selected)\n            ;\n            if(settings.selectOnKeydown && module.is.single()) {\n              module.set.selectedItem($nextSelectedItem);\n            }\n            $menu\n              .scrollTop(newScroll)\n            ;\n          }\n        },\n\n        set: {\n          filtered: function() {\n            var\n              isMultiple       = module.is.multiple(),\n              isSearch         = module.is.searchSelection(),\n              isSearchMultiple = (isMultiple && isSearch),\n              searchValue      = (isSearch)\n                ? module.get.query()\n                : '',\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\n              searchWidth      = module.get.searchWidth(),\n              valueIsSet       = searchValue !== ''\n            ;\n            if(isMultiple && hasSearchValue) {\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\n              $search.css('width', searchWidth);\n            }\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\n              module.verbose('Hiding placeholder text');\n              $text.addClass(className.filtered);\n            }\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\n              module.verbose('Showing placeholder text');\n              $text.removeClass(className.filtered);\n            }\n          },\n          empty: function() {\n            $module.addClass(className.empty);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          placeholderText: function(text) {\n            text = text || module.get.placeholderText();\n            module.debug('Setting placeholder text', text);\n            module.set.text(text);\n            $text.addClass(className.placeholder);\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Added tabindex to searchable dropdown');\n              $search\n                .val('')\n                .attr('tabindex', 0)\n              ;\n              $menu\n                .attr('tabindex', -1)\n              ;\n            }\n            else {\n              module.debug('Added tabindex to dropdown');\n              if( $module.attr('tabindex') === undefined) {\n                $module\n                  .attr('tabindex', 0)\n                ;\n                $menu\n                  .attr('tabindex', -1)\n                ;\n              }\n            }\n          },\n          initialLoad: function() {\n            module.verbose('Setting initial load');\n            initialLoad = true;\n          },\n          activeItem: function($item) {\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\n              $item.addClass(className.filtered);\n            }\n            else {\n              $item.addClass(className.active);\n            }\n          },\n          partialSearch: function(text) {\n            var\n              length = module.get.query().length\n            ;\n            $search.val( text.substr(0 , length));\n          },\n          scrollPosition: function($item, forceScroll) {\n            var\n              edgeTolerance = 5,\n              $menu,\n              hasActive,\n              offset,\n              itemHeight,\n              itemOffset,\n              menuOffset,\n              menuScroll,\n              menuHeight,\n              abovePage,\n              belowPage\n            ;\n\n            $item       = $item || module.get.selectedItem();\n            $menu       = $item.closest(selector.menu);\n            hasActive   = ($item && $item.length > 0);\n            forceScroll = (forceScroll !== undefined)\n              ? forceScroll\n              : false\n            ;\n            if($item && $menu.length > 0 && hasActive) {\n              itemOffset = $item.position().top;\n\n              $menu.addClass(className.loading);\n              menuScroll = $menu.scrollTop();\n              menuOffset = $menu.offset().top;\n              itemOffset = $item.offset().top;\n              offset     = menuScroll - menuOffset + itemOffset;\n              if(!forceScroll) {\n                menuHeight = $menu.height();\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\n              }\n              module.debug('Scrolling to active item', offset);\n              if(forceScroll || abovePage || belowPage) {\n                $menu.scrollTop(offset);\n              }\n              $menu.removeClass(className.loading);\n            }\n          },\n          text: function(text) {\n            if(settings.action !== 'select') {\n              if(settings.action == 'combo') {\n                module.debug('Changing combo button text', text, $combo);\n                if(settings.preserveHTML) {\n                  $combo.html(text);\n                }\n                else {\n                  $combo.text(text);\n                }\n              }\n              else {\n                if(text !== module.get.placeholderText()) {\n                  $text.removeClass(className.placeholder);\n                }\n                module.debug('Changing text', text, $text);\n                $text\n                  .removeClass(className.filtered)\n                ;\n                if(settings.preserveHTML) {\n                  $text.html(text);\n                }\n                else {\n                  $text.text(text);\n                }\n              }\n            }\n          },\n          selectedItem: function($item) {\n            var\n              value      = module.get.choiceValue($item),\n              searchText = module.get.choiceText($item, false),\n              text       = module.get.choiceText($item, true)\n            ;\n            module.debug('Setting user selection to item', $item);\n            module.remove.activeItem();\n            module.set.partialSearch(searchText);\n            module.set.activeItem($item);\n            module.set.selected(value, $item);\n            module.set.text(text);\n          },\n          selectedLetter: function(letter) {\n            var\n              $selectedItem         = $item.filter('.' + className.selected),\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\n              $nextValue            = false,\n              $nextItem\n            ;\n            // check next of same letter\n            if(alreadySelectedLetter) {\n              $nextItem = $selectedItem.nextAll($item).eq(0);\n              if( module.has.firstLetter($nextItem, letter) ) {\n                $nextValue  = $nextItem;\n              }\n            }\n            // check all values\n            if(!$nextValue) {\n              $item\n                .each(function(){\n                  if(module.has.firstLetter($(this), letter)) {\n                    $nextValue = $(this);\n                    return false;\n                  }\n                })\n              ;\n            }\n            // set next value\n            if($nextValue) {\n              module.verbose('Scrolling to next value with letter', letter);\n              module.set.scrollPosition($nextValue);\n              $selectedItem.removeClass(className.selected);\n              $nextValue.addClass(className.selected);\n              if(settings.selectOnKeydown && module.is.single()) {\n                module.set.selectedItem($nextValue);\n              }\n            }\n          },\n          direction: function($menu) {\n            if(settings.direction == 'auto') {\n              // reset position\n              module.remove.upward();\n\n              if(module.can.openDownward($menu)) {\n                module.remove.upward($menu);\n              }\n              else {\n                module.set.upward($menu);\n              }\n              if(!module.is.leftward($menu) && !module.can.openRightward($menu)) {\n                module.set.leftward($menu);\n              }\n            }\n            else if(settings.direction == 'upward') {\n              module.set.upward($menu);\n            }\n          },\n          upward: function($currentMenu) {\n            var $element = $currentMenu || $module;\n            $element.addClass(className.upward);\n          },\n          leftward: function($currentMenu) {\n            var $element = $currentMenu || $menu;\n            $element.addClass(className.leftward);\n          },\n          value: function(value, text, $selected) {\n            var\n              escapedValue = module.escape.value(value),\n              hasInput     = ($input.length > 0),\n              isAddition   = !module.has.value(value),\n              currentValue = module.get.values(),\n              stringValue  = (value !== undefined)\n                ? String(value)\n                : value,\n              newValue\n            ;\n            if(hasInput) {\n              if(!settings.allowReselection && stringValue == currentValue) {\n                module.verbose('Skipping value update already same value', value, currentValue);\n                if(!module.is.initialLoad()) {\n                  return;\n                }\n              }\n\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\n                module.debug('Adding user option', value);\n                module.add.optionValue(value);\n              }\n              module.debug('Updating input value', escapedValue, currentValue);\n              internalChange = true;\n              $input\n                .val(escapedValue)\n              ;\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\n                module.debug('Input native change event ignored on initial load');\n              }\n              else {\n                module.trigger.change();\n              }\n              internalChange = false;\n            }\n            else {\n              module.verbose('Storing value in metadata', escapedValue, $input);\n              if(escapedValue !== currentValue) {\n                $module.data(metadata.value, stringValue);\n              }\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onChange);\n            }\n            else {\n              settings.onChange.call(element, value, text, $selected);\n            }\n          },\n          active: function() {\n            $module\n              .addClass(className.active)\n            ;\n          },\n          multiple: function() {\n            $module.addClass(className.multiple);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          exactly: function(value, $selectedItem) {\n            module.debug('Setting selected to exact values');\n            module.clear();\n            module.set.selected(value, $selectedItem);\n          },\n          selected: function(value, $selectedItem) {\n            var\n              isMultiple = module.is.multiple(),\n              $userSelectedItem\n            ;\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n            if(!$selectedItem) {\n              return;\n            }\n            module.debug('Setting selected menu item to', $selectedItem);\n            if(module.is.multiple()) {\n              module.remove.searchWidth();\n            }\n            if(module.is.single()) {\n              module.remove.activeItem();\n              module.remove.selectedItem();\n            }\n            else if(settings.useLabels) {\n              module.remove.selectedItem();\n            }\n            // select each item\n            $selectedItem\n              .each(function() {\n                var\n                  $selected      = $(this),\n                  selectedText   = module.get.choiceText($selected),\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\n\n                  isFiltered     = $selected.hasClass(className.filtered),\n                  isActive       = $selected.hasClass(className.active),\n                  isUserValue    = $selected.hasClass(className.addition),\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\n                ;\n                if(isMultiple) {\n                  if(!isActive || isUserValue) {\n                    if(settings.apiSettings && settings.saveRemoteData) {\n                      module.save.remoteData(selectedText, selectedValue);\n                    }\n                    if(settings.useLabels) {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\n                      module.set.activeItem($selected);\n                      module.filterActive();\n                      module.select.nextAvailable($selectedItem);\n                    }\n                    else {\n                      module.add.value(selectedValue, selectedText, $selected);\n                      module.set.text(module.add.variables(message.count));\n                      module.set.activeItem($selected);\n                    }\n                  }\n                  else if(!isFiltered) {\n                    module.debug('Selected active value, removing label');\n                    module.remove.selected(selectedValue);\n                  }\n                }\n                else {\n                  if(settings.apiSettings && settings.saveRemoteData) {\n                    module.save.remoteData(selectedText, selectedValue);\n                  }\n                  module.set.text(selectedText);\n                  module.set.value(selectedValue, selectedText, $selected);\n                  $selected\n                    .addClass(className.active)\n                    .addClass(className.selected)\n                  ;\n                }\n              })\n            ;\n          }\n        },\n\n        add: {\n          label: function(value, text, shouldAnimate) {\n            var\n              $next  = module.is.searchSelection()\n                ? $search\n                : $text,\n              escapedValue = module.escape.value(value),\n              $label\n            ;\n            $label =  $('<a />')\n              .addClass(className.label)\n              .attr('data-' + metadata.value, escapedValue)\n              .html(templates.label(escapedValue, text))\n            ;\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\n\n            if(module.has.label(value)) {\n              module.debug('Label already exists, skipping', escapedValue);\n              return;\n            }\n            if(settings.label.variation) {\n              $label.addClass(settings.label.variation);\n            }\n            if(shouldAnimate === true) {\n              module.debug('Animating in label', $label);\n              $label\n                .addClass(className.hidden)\n                .insertBefore($next)\n                .transition(settings.label.transition, settings.label.duration)\n              ;\n            }\n            else {\n              module.debug('Adding selection label', $label);\n              $label\n                .insertBefore($next)\n              ;\n            }\n          },\n          message: function(message) {\n            var\n              $message = $menu.children(selector.message),\n              html     = settings.templates.message(module.add.variables(message))\n            ;\n            if($message.length > 0) {\n              $message\n                .html(html)\n              ;\n            }\n            else {\n              $message = $('<div/>')\n                .html(html)\n                .addClass(className.message)\n                .appendTo($menu)\n              ;\n            }\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(hasOption) {\n              return;\n            }\n            // temporarily disconnect observer\n            module.disconnect.selectObserver();\n            if( module.is.single() ) {\n              module.verbose('Removing previous user addition');\n              $input.find('option.' + className.addition).remove();\n            }\n            $('<option/>')\n              .prop('value', escapedValue)\n              .addClass(className.addition)\n              .html(value)\n              .appendTo($input)\n            ;\n            module.verbose('Adding user addition as an <option>', value);\n            module.observe.select();\n          },\n          userSuggestion: function(value) {\n            var\n              $addition         = $menu.children(selector.addition),\n              $existingItem     = module.get.item(value),\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\n              hasUserSuggestion = $addition.length > 0,\n              html\n            ;\n            if(settings.useLabels && module.has.maxSelections()) {\n              return;\n            }\n            if(value === '' || alreadyHasValue) {\n              $addition.remove();\n              return;\n            }\n            if(hasUserSuggestion) {\n              $addition\n                .data(metadata.value, value)\n                .data(metadata.text, value)\n                .attr('data-' + metadata.value, value)\n                .attr('data-' + metadata.text, value)\n                .removeClass(className.filtered)\n              ;\n              if(!settings.hideAdditions) {\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\n                $addition\n                  .html(html)\n                ;\n              }\n              module.verbose('Replacing user suggestion with new value', $addition);\n            }\n            else {\n              $addition = module.create.userChoice(value);\n              $addition\n                .prependTo($menu)\n              ;\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\n            }\n            if(!settings.hideAdditions || module.is.allFiltered()) {\n              $addition\n                .addClass(className.selected)\n                .siblings()\n                .removeClass(className.selected)\n              ;\n            }\n            module.refreshItems();\n          },\n          variables: function(message, term) {\n            var\n              hasCount    = (message.search('{count}') !== -1),\n              hasMaxCount = (message.search('{maxCount}') !== -1),\n              hasTerm     = (message.search('{term}') !== -1),\n              values,\n              count,\n              query\n            ;\n            module.verbose('Adding templated variables to message', message);\n            if(hasCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{count}', count);\n            }\n            if(hasMaxCount) {\n              count  = module.get.selectionCount();\n              message = message.replace('{maxCount}', settings.maxSelections);\n            }\n            if(hasTerm) {\n              query   = term || module.get.query();\n              message = message.replace('{term}', query);\n            }\n            return message;\n          },\n          value: function(addedValue, addedText, $selectedItem) {\n            var\n              currentValue = module.get.values(),\n              newValue\n            ;\n            if(addedValue === '') {\n              module.debug('Cannot select blank values from multiselect');\n              return;\n            }\n            // extend current array\n            if($.isArray(currentValue)) {\n              newValue = currentValue.concat([addedValue]);\n              newValue = module.get.uniqueArray(newValue);\n            }\n            else {\n              newValue = [addedValue];\n            }\n            // add values\n            if( module.has.selectInput() ) {\n              if(module.can.extendSelect()) {\n                module.debug('Adding value to select', addedValue, newValue, $input);\n                module.add.optionValue(addedValue);\n              }\n            }\n            else {\n              newValue = newValue.join(settings.delimiter);\n              module.debug('Setting hidden input to delimited value', newValue, $input);\n            }\n\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\n            }\n            else {\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\n            }\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\n            module.check.maxSelections();\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          activeLabel: function() {\n            $module.find(selector.label).removeClass(className.active);\n          },\n          empty: function() {\n            $module.removeClass(className.empty);\n          },\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          },\n          upward: function($currentMenu) {\n            var $element = $currentMenu || $module;\n            $element.removeClass(className.upward);\n          },\n          leftward: function($currentMenu) {\n            var $element = $currentMenu || $menu;\n            $element.removeClass(className.leftward);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          activeItem: function() {\n            $item.removeClass(className.active);\n          },\n          filteredItem: function() {\n            if(settings.useLabels && module.has.maxSelections() ) {\n              return;\n            }\n            if(settings.useLabels && module.is.multiple()) {\n              $item.not('.' + className.active).removeClass(className.filtered);\n            }\n            else {\n              $item.removeClass(className.filtered);\n            }\n            module.remove.empty();\n          },\n          optionValue: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\n              hasOption    = ($option.length > 0)\n            ;\n            if(!hasOption || !$option.hasClass(className.addition)) {\n              return;\n            }\n            // temporarily disconnect observer\n            if(selectObserver) {\n              selectObserver.disconnect();\n              module.verbose('Temporarily disconnecting mutation observer');\n            }\n            $option.remove();\n            module.verbose('Removing user addition as an <option>', escapedValue);\n            if(selectObserver) {\n              selectObserver.observe($input[0], {\n                childList : true,\n                subtree   : true\n              });\n            }\n          },\n          message: function() {\n            $menu.children(selector.message).remove();\n          },\n          searchWidth: function() {\n            $search.css('width', '');\n          },\n          searchTerm: function() {\n            module.verbose('Cleared search term');\n            $search.val('');\n            module.set.filtered();\n          },\n          userAddition: function() {\n            $item.filter(selector.addition).remove();\n          },\n          selected: function(value, $selectedItem) {\n            $selectedItem = (settings.allowAdditions)\n              ? $selectedItem || module.get.itemWithAdditions(value)\n              : $selectedItem || module.get.item(value)\n            ;\n\n            if(!$selectedItem) {\n              return false;\n            }\n\n            $selectedItem\n              .each(function() {\n                var\n                  $selected     = $(this),\n                  selectedText  = module.get.choiceText($selected),\n                  selectedValue = module.get.choiceValue($selected, selectedText)\n                ;\n                if(module.is.multiple()) {\n                  if(settings.useLabels) {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    module.remove.label(selectedValue);\n                  }\n                  else {\n                    module.remove.value(selectedValue, selectedText, $selected);\n                    if(module.get.selectionCount() === 0) {\n                      module.set.placeholderText();\n                    }\n                    else {\n                      module.set.text(module.add.variables(message.count));\n                    }\n                  }\n                }\n                else {\n                  module.remove.value(selectedValue, selectedText, $selected);\n                }\n                $selected\n                  .removeClass(className.filtered)\n                  .removeClass(className.active)\n                ;\n                if(settings.useLabels) {\n                  $selected.removeClass(className.selected);\n                }\n              })\n            ;\n          },\n          selectedItem: function() {\n            $item.removeClass(className.selected);\n          },\n          value: function(removedValue, removedText, $removedItem) {\n            var\n              values = module.get.values(),\n              newValue\n            ;\n            if( module.has.selectInput() ) {\n              module.verbose('Input is <select> removing selected option', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              module.remove.optionValue(removedValue);\n            }\n            else {\n              module.verbose('Removing from delimited values', removedValue);\n              newValue = module.remove.arrayValue(removedValue, values);\n              newValue = newValue.join(settings.delimiter);\n            }\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\n              module.verbose('No callback on initial load', settings.onRemove);\n            }\n            else {\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\n            }\n            module.set.value(newValue, removedText, $removedItem);\n            module.check.maxSelections();\n          },\n          arrayValue: function(removedValue, values) {\n            if( !$.isArray(values) ) {\n              values = [values];\n            }\n            values = $.grep(values, function(value){\n              return (removedValue != value);\n            });\n            module.verbose('Removed value from delimited string', removedValue, values);\n            return values;\n          },\n          label: function(value, shouldAnimate) {\n            var\n              $labels       = $module.find(selector.label),\n              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\n            ;\n            module.verbose('Removing label', $removedLabel);\n            $removedLabel.remove();\n          },\n          activeLabels: function($activeLabels) {\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\n            module.verbose('Removing active label selections', $activeLabels);\n            module.remove.labels($activeLabels);\n          },\n          labels: function($labels) {\n            $labels = $labels || $module.find(selector.label);\n            module.verbose('Removing labels', $labels);\n            $labels\n              .each(function(){\n                var\n                  $label      = $(this),\n                  value       = $label.data(metadata.value),\n                  stringValue = (value !== undefined)\n                    ? String(value)\n                    : value,\n                  isUserValue = module.is.userValue(stringValue)\n                ;\n                if(settings.onLabelRemove.call($label, value) === false) {\n                  module.debug('Label remove callback cancelled removal');\n                  return;\n                }\n                module.remove.message();\n                if(isUserValue) {\n                  module.remove.value(stringValue);\n                  module.remove.label(stringValue);\n                }\n                else {\n                  // selected will also remove label\n                  module.remove.selected(stringValue);\n                }\n              })\n            ;\n          },\n          tabbable: function() {\n            if( module.is.searchSelection() ) {\n              module.debug('Searchable dropdown initialized');\n              $search\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n            else {\n              module.debug('Simple selection dropdown initialized');\n              $module\n                .removeAttr('tabindex')\n              ;\n              $menu\n                .removeAttr('tabindex')\n              ;\n            }\n          }\n        },\n\n        has: {\n          menuSearch: function() {\n            return (module.has.search() && $search.closest($menu).length > 0);\n          },\n          search: function() {\n            return ($search.length > 0);\n          },\n          sizer: function() {\n            return ($sizer.length > 0);\n          },\n          selectInput: function() {\n            return ( $input.is('select') );\n          },\n          minCharacters: function(searchTerm) {\n            if(settings.minCharacters) {\n              searchTerm = (searchTerm !== undefined)\n                ? String(searchTerm)\n                : String(module.get.query())\n              ;\n              return (searchTerm.length >= settings.minCharacters);\n            }\n            return true;\n          },\n          firstLetter: function($item, letter) {\n            var\n              text,\n              firstLetter\n            ;\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\n              return false;\n            }\n            text        = module.get.choiceText($item, false);\n            letter      = letter.toLowerCase();\n            firstLetter = String(text).charAt(0).toLowerCase();\n            return (letter == firstLetter);\n          },\n          input: function() {\n            return ($input.length > 0);\n          },\n          items: function() {\n            return ($item.length > 0);\n          },\n          menu: function() {\n            return ($menu.length > 0);\n          },\n          message: function() {\n            return ($menu.children(selector.message).length !== 0);\n          },\n          label: function(value) {\n            var\n              escapedValue = module.escape.value(value),\n              $labels      = $module.find(selector.label)\n            ;\n            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\n          },\n          maxSelections: function() {\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\n          },\n          allResultsFiltered: function() {\n            var\n              $normalResults = $item.not(selector.addition)\n            ;\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\n          },\n          userSuggestion: function() {\n            return ($menu.children(selector.addition).length > 0);\n          },\n          query: function() {\n            return (module.get.query() !== '');\n          },\n          value: function(value) {\n            var\n              values   = module.get.values(),\n              hasValue = $.isArray(values)\n               ? values && ($.inArray(value, values) !== -1)\n               : (values == value)\n            ;\n            return (hasValue)\n              ? true\n              : false\n            ;\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          bubbledLabelClick: function(event) {\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\n          },\n          bubbledIconClick: function(event) {\n            return $(event.target).closest($icon).length > 0;\n          },\n          alreadySetup: function() {\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\n          },\n          animating: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.transition && $subMenu.transition('is animating')\n              : $menu.transition    && $menu.transition('is animating')\n            ;\n          },\n          leftward: function($subMenu) {\n            var $selectedMenu = $subMenu || $menu;\n            return $selectedMenu.hasClass(className.leftward);\n          },\n          disabled: function() {\n            return $module.hasClass(className.disabled);\n          },\n          focused: function() {\n            return (document.activeElement === $module[0]);\n          },\n          focusedOnSearch: function() {\n            return (document.activeElement === $search[0]);\n          },\n          allFiltered: function() {\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\n          },\n          hidden: function($subMenu) {\n            return !module.is.visible($subMenu);\n          },\n          initialLoad: function() {\n            return initialLoad;\n          },\n          inObject: function(needle, object) {\n            var\n              found = false\n            ;\n            $.each(object, function(index, property) {\n              if(property == needle) {\n                found = true;\n                return true;\n              }\n            });\n            return found;\n          },\n          multiple: function() {\n            return $module.hasClass(className.multiple);\n          },\n          remote: function() {\n            return settings.apiSettings && module.can.useAPI();\n          },\n          single: function() {\n            return !module.is.multiple();\n          },\n          selectMutation: function(mutations) {\n            var\n              selectChanged = false\n            ;\n            $.each(mutations, function(index, mutation) {\n              if(mutation.target && $(mutation.target).is('select')) {\n                selectChanged = true;\n                return true;\n              }\n            });\n            return selectChanged;\n          },\n          search: function() {\n            return $module.hasClass(className.search);\n          },\n          searchSelection: function() {\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\n          },\n          selection: function() {\n            return $module.hasClass(className.selection);\n          },\n          userValue: function(value) {\n            return ($.inArray(value, module.get.userValues()) !== -1);\n          },\n          upward: function($menu) {\n            var $element = $menu || $module;\n            return $element.hasClass(className.upward);\n          },\n          visible: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.hasClass(className.visible)\n              : $menu.hasClass(className.visible)\n            ;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          },\n          horizontallyScrollableContext: function() {\n            var\n              overflowX = ($context.get(0) !== window)\n                ? $context.css('overflow-X')\n                : false\n            ;\n            return (overflowX == 'auto' || overflowX == 'scroll');\n          }\n        },\n\n        can: {\n          activate: function($item) {\n            if(settings.useLabels) {\n              return true;\n            }\n            if(!module.has.maxSelections()) {\n              return true;\n            }\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\n              return true;\n            }\n            return false;\n          },\n          openDownward: function($subMenu) {\n            var\n              $currentMenu    = $subMenu || $menu,\n              canOpenDownward = true,\n              onScreen        = {},\n              calculations\n            ;\n            $currentMenu\n              .addClass(className.loading)\n            ;\n            calculations = {\n              context: {\n                scrollTop : $context.scrollTop(),\n                height    : $context.outerHeight()\n              },\n              menu : {\n                offset: $currentMenu.offset(),\n                height: $currentMenu.outerHeight()\n              }\n            };\n            if(module.is.verticallyScrollableContext()) {\n              calculations.menu.offset.top += calculations.context.scrollTop;\n            }\n            onScreen = {\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\n            };\n            if(onScreen.below) {\n              module.verbose('Dropdown can fit in context downward', onScreen);\n              canOpenDownward = true;\n            }\n            else if(!onScreen.below && !onScreen.above) {\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\n              canOpenDownward = true;\n            }\n            else {\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\n              canOpenDownward = false;\n            }\n            $currentMenu.removeClass(className.loading);\n            return canOpenDownward;\n          },\n          openRightward: function($subMenu) {\n            var\n              $currentMenu     = $subMenu || $menu,\n              canOpenRightward = true,\n              isOffscreenRight = false,\n              calculations\n            ;\n            $currentMenu\n              .addClass(className.loading)\n            ;\n            calculations = {\n              context: {\n                scrollLeft : $context.scrollLeft(),\n                width      : $context.outerWidth()\n              },\n              menu: {\n                offset : $currentMenu.offset(),\n                width  : $currentMenu.outerWidth()\n              }\n            };\n            if(module.is.horizontallyScrollableContext()) {\n              calculations.menu.offset.left += calculations.context.scrollLeft;\n            }\n            isOffscreenRight = (calculations.menu.offset.left + calculations.menu.width >= calculations.context.scrollLeft + calculations.context.width);\n            if(isOffscreenRight) {\n              module.verbose('Dropdown cannot fit in context rightward', isOffscreenRight);\n              canOpenRightward = false;\n            }\n            $currentMenu.removeClass(className.loading);\n            return canOpenRightward;\n          },\n          click: function() {\n            return (hasTouch || settings.on == 'click');\n          },\n          extendSelect: function() {\n            return settings.allowAdditions || settings.apiSettings;\n          },\n          show: function() {\n            return !module.is.disabled() && (module.has.items() || module.has.message());\n          },\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          }\n        },\n\n        animate: {\n          show: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  module.hideSubMenus();\n                  module.hideOthers();\n                  module.set.active();\n                },\n              transition\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            module.verbose('Doing menu show animation', $currentMenu);\n            module.set.direction($subMenu);\n            transition = module.get.transition($subMenu);\n            if( module.is.selection() ) {\n              module.set.scrollPosition(module.get.selectedItem(), true);\n            }\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('show');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' in',\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    duration   : settings.duration,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition, transition);\n              }\n            }\n          },\n          hide: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu,\n              duration = ($subMenu)\n                ? (settings.duration * 0.9)\n                : settings.duration,\n              start = ($subMenu)\n                ? function() {}\n                : function() {\n                  if( module.can.click() ) {\n                    module.unbind.intent();\n                  }\n                  module.remove.active();\n                },\n              transition = module.get.transition($subMenu)\n            ;\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\n              module.verbose('Doing menu hide animation', $currentMenu);\n\n              if(transition == 'none') {\n                start();\n                $currentMenu.transition('hide');\n                callback.call(element);\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu\n                  .transition({\n                    animation  : transition + ' out',\n                    duration   : settings.duration,\n                    debug      : settings.debug,\n                    verbose    : settings.verbose,\n                    queue      : true,\n                    onStart    : start,\n                    onComplete : function() {\n                      callback.call(element);\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.transition);\n              }\n            }\n          }\n        },\n\n        hideAndClear: function() {\n          module.remove.searchTerm();\n          if( module.has.maxSelections() ) {\n            return;\n          }\n          if(module.has.search()) {\n            module.hide(function() {\n              module.remove.filteredItem();\n            });\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        delay: {\n          show: function() {\n            module.verbose('Delaying show event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.show, settings.delay.show);\n          },\n          hide: function() {\n            module.verbose('Delaying hide event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.hide, settings.delay.hide);\n          }\n        },\n\n        escape: {\n          value: function(value) {\n            var\n              multipleValues = $.isArray(value),\n              stringValue    = (typeof value === 'string'),\n              isUnparsable   = (!stringValue && !multipleValues),\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\n              values         = []\n            ;\n            if(isUnparsable || !hasQuotes) {\n              return value;\n            }\n            module.debug('Encoding quote values for use in select', value);\n            if(multipleValues) {\n              $.each(value, function(index, value){\n                values.push(value.replace(regExp.quote, '&quot;'));\n              });\n              return values;\n            }\n            return value.replace(regExp.quote, '&quot;');\n          },\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : $allModules\n  ;\n};\n\n$.fn.dropdown.settings = {\n\n  silent                 : false,\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  on                     : 'click',    // what event should show menu action on item selection\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\n\n\n  apiSettings            : false,\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\n  minCharacters          : 0,          // Minimum characters required to trigger API call\n\n  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\n\n  throttle               : 200,        // How long to wait after last user input to search remotely\n\n  context                : window,     // Context to use when determining if on screen\n  direction              : 'auto',     // Whether dropdown should always open in one direction\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\n\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\n\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\n  preserveHTML           : true,       // preserve html when selecting value\n  sortSelect             : false,      // sort selection on init\n\n  forceSelection         : true,       // force a choice on blur with search selection\n\n  allowAdditions         : false,      // whether multiple select should allow user added values\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\n\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\n\n  showOnFocus            : true,       // show menu on focus\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\n  allowTab               : true,       // add tabindex to element\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\n\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\n\n  transition             : 'auto',     // auto transition will slide down or up based on direction\n  duration               : 200,        // duration of transition\n\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\n\n  // label settings on multi-select\n  label: {\n    transition : 'scale',\n    duration   : 200,\n    variation  : false\n  },\n\n  // delay before event\n  delay : {\n    hide   : 300,\n    show   : 200,\n    search : 20,\n    touch  : 50\n  },\n\n  /* Callbacks */\n  onChange      : function(value, text, $selected){},\n  onAdd         : function(value, text, $selected){},\n  onRemove      : function(value, text, $selected){},\n\n  onLabelSelect : function($selectedLabels){},\n  onLabelCreate : function(value, text) { return $(this); },\n  onLabelRemove : function(value) { return true; },\n  onNoResults   : function(searchTerm) { return true; },\n  onShow        : function(){},\n  onHide        : function(){},\n\n  /* Component */\n  name           : 'Dropdown',\n  namespace      : 'dropdown',\n\n  message: {\n    addResult     : 'Add <b>{term}</b>',\n    count         : '{count} selected',\n    maxSelections : 'Max {maxCount} selections',\n    noResults     : 'No results found.',\n    serverError   : 'There was an error contacting the server'\n  },\n\n  error : {\n    action          : 'You called a dropdown action that was not defined',\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\n    labels          : 'Allowing user additions currently requires the use of labels.',\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\n    method          : 'The method you called is not defined.',\n    noAPI           : 'The API module is required to load resources remotely',\n    noStorage       : 'Saving remote data requires session storage',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\n  },\n\n  regExp : {\n    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n    quote    : /\"/g\n  },\n\n  metadata : {\n    defaultText     : 'defaultText',\n    defaultValue    : 'defaultValue',\n    placeholderText : 'placeholder',\n    text            : 'text',\n    value           : 'value'\n  },\n\n  // property names for remote query\n  fields: {\n    remoteValues : 'results',  // grouping for api results\n    values       : 'values',   // grouping for all dropdown values\n    disabled     : 'disabled', // whether value should be disabled\n    name         : 'name',     // displayed dropdown text\n    value        : 'value',    // actual dropdown value\n    text         : 'text'      // displayed text when selected\n  },\n\n  keys : {\n    backspace  : 8,\n    delimiter  : 188, // comma\n    deleteKey  : 46,\n    enter      : 13,\n    escape     : 27,\n    pageUp     : 33,\n    pageDown   : 34,\n    leftArrow  : 37,\n    upArrow    : 38,\n    rightArrow : 39,\n    downArrow  : 40\n  },\n\n  selector : {\n    addition     : '.addition',\n    dropdown     : '.ui.dropdown',\n    hidden       : '.hidden',\n    icon         : '> .dropdown.icon',\n    input        : '> input[type=\"hidden\"], > select',\n    item         : '.item',\n    label        : '> .label',\n    remove       : '> .label > .delete.icon',\n    siblingLabel : '.label',\n    menu         : '.menu',\n    message      : '.message',\n    menuIcon     : '.dropdown.icon',\n    search       : 'input.search, .menu > .search > input, .menu input.search',\n    sizer        : '> input.sizer',\n    text         : '> .text:not(.icon)',\n    unselectable : '.disabled, .filtered'\n  },\n\n  className : {\n    active      : 'active',\n    addition    : 'addition',\n    animating   : 'animating',\n    disabled    : 'disabled',\n    empty       : 'empty',\n    dropdown    : 'ui dropdown',\n    filtered    : 'filtered',\n    hidden      : 'hidden transition',\n    item        : 'item',\n    label       : 'ui label',\n    loading     : 'loading',\n    menu        : 'menu',\n    message     : 'message',\n    multiple    : 'multiple',\n    placeholder : 'default',\n    sizer       : 'sizer',\n    search      : 'search',\n    selected    : 'selected',\n    selection   : 'selection',\n    upward      : 'upward',\n    leftward    : 'left',\n    visible     : 'visible'\n  }\n\n};\n\n/* Templates */\n$.fn.dropdown.settings.templates = {\n\n  // generates dropdown from select values\n  dropdown: function(select) {\n    var\n      placeholder = select.placeholder || false,\n      values      = select.values || {},\n      html        = ''\n    ;\n    html +=  '<i class=\"dropdown icon\"></i>';\n    if(select.placeholder) {\n      html += '<div class=\"default text\">' + placeholder + '</div>';\n    }\n    else {\n      html += '<div class=\"text\"></div>';\n    }\n    html += '<div class=\"menu\">';\n    $.each(select.values, function(index, option) {\n      html += (option.disabled)\n        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\n      ;\n    });\n    html += '</div>';\n    return html;\n  },\n\n  // generates just menu from select\n  menu: function(response, fields) {\n    var\n      values = response[fields.values] || {},\n      html   = ''\n    ;\n    $.each(values, function(index, option) {\n      var\n        maybeText = (option[fields.text])\n          ? 'data-text=\"' + option[fields.text] + '\"'\n          : '',\n        maybeDisabled = (option[fields.disabled])\n          ? 'disabled '\n          : ''\n      ;\n      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\n      html +=   option[fields.name];\n      html += '</div>';\n    });\n    return html;\n  },\n\n  // generates label for multiselect\n  label: function(value, text) {\n    return text + '<i class=\"delete icon\"></i>';\n  },\n\n\n  // generates messages like \"No results\"\n  message: function(message) {\n    return message;\n  },\n\n  // generates user addition to selection menu\n  addition: function(choice) {\n    return choice;\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Embed\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.embed = function(parameters) {\n\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\n          : $.extend({}, $.fn.embed.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        sources         = settings.sources,\n        error           = settings.error,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        templates       = settings.templates,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n        $module         = $(this),\n        $placeholder    = $module.find(selector.placeholder),\n        $icon           = $module.find(selector.icon),\n        $embed          = $module.find(selector.embed),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing embed');\n          module.determine.autoplay();\n          module.create();\n          module.bind.events();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance of embed');\n          module.reset();\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $placeholder = $module.find(selector.placeholder);\n          $icon        = $module.find(selector.icon);\n          $embed       = $module.find(selector.embed);\n        },\n\n        bind: {\n          events: function() {\n            if( module.has.placeholder() ) {\n              module.debug('Adding placeholder events');\n              $module\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\n              ;\n            }\n          }\n        },\n\n        create: function() {\n          var\n            placeholder = module.get.placeholder()\n          ;\n          if(placeholder) {\n            module.createPlaceholder();\n          }\n          else {\n            module.createAndShow();\n          }\n        },\n\n        createPlaceholder: function(placeholder) {\n          var\n            icon  = module.get.icon(),\n            url   = module.get.url(),\n            embed = module.generate.embed(url)\n          ;\n          placeholder = placeholder || module.get.placeholder();\n          $module.html( templates.placeholder(placeholder, icon) );\n          module.debug('Creating placeholder for embed', placeholder, icon);\n        },\n\n        createEmbed: function(url) {\n          module.refresh();\n          url = url || module.get.url();\n          $embed = $('<div/>')\n            .addClass(className.embed)\n            .html( module.generate.embed(url) )\n            .appendTo($module)\n          ;\n          settings.onCreate.call(element, url);\n          module.debug('Creating embed object', $embed);\n        },\n\n        changeEmbed: function(url) {\n          $embed\n            .html( module.generate.embed(url) )\n          ;\n        },\n\n        createAndShow: function() {\n          module.createEmbed();\n          module.show();\n        },\n\n        // sets new embed\n        change: function(source, id, url) {\n          module.debug('Changing video to ', source, id, url);\n          $module\n            .data(metadata.source, source)\n            .data(metadata.id, id)\n          ;\n          if(url) {\n            $module.data(metadata.url, url);\n          }\n          else {\n            $module.removeData(metadata.url);\n          }\n          if(module.has.embed()) {\n            module.changeEmbed();\n          }\n          else {\n            module.create();\n          }\n        },\n\n        // clears embed\n        reset: function() {\n          module.debug('Clearing embed and showing placeholder');\n          module.remove.active();\n          module.remove.embed();\n          module.showPlaceholder();\n          settings.onReset.call(element);\n        },\n\n        // shows current embed\n        show: function() {\n          module.debug('Showing embed');\n          module.set.active();\n          settings.onDisplay.call(element);\n        },\n\n        hide: function() {\n          module.debug('Hiding embed');\n          module.showPlaceholder();\n        },\n\n        showPlaceholder: function() {\n          module.debug('Showing placeholder image');\n          module.remove.active();\n          settings.onPlaceholderDisplay.call(element);\n        },\n\n        get: {\n          id: function() {\n            return settings.id || $module.data(metadata.id);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          },\n          icon: function() {\n            return (settings.icon)\n              ? settings.icon\n              : ($module.data(metadata.icon) !== undefined)\n                ? $module.data(metadata.icon)\n                : module.determine.icon()\n            ;\n          },\n          source: function(url) {\n            return (settings.source)\n              ? settings.source\n              : ($module.data(metadata.source) !== undefined)\n                ? $module.data(metadata.source)\n                : module.determine.source()\n            ;\n          },\n          type: function() {\n            var source = module.get.source();\n            return (sources[source] !== undefined)\n              ? sources[source].type\n              : false\n            ;\n          },\n          url: function() {\n            return (settings.url)\n              ? settings.url\n              : ($module.data(metadata.url) !== undefined)\n                ? $module.data(metadata.url)\n                : module.determine.url()\n            ;\n          }\n        },\n\n        determine: {\n          autoplay: function() {\n            if(module.should.autoplay()) {\n              settings.autoplay = true;\n            }\n          },\n          source: function(url) {\n            var\n              matchedSource = false\n            ;\n            url = url || module.get.url();\n            if(url) {\n              $.each(sources, function(name, source) {\n                if(url.search(source.domain) !== -1) {\n                  matchedSource = name;\n                  return false;\n                }\n              });\n            }\n            return matchedSource;\n          },\n          icon: function() {\n            var\n              source = module.get.source()\n            ;\n            return (sources[source] !== undefined)\n              ? sources[source].icon\n              : false\n            ;\n          },\n          url: function() {\n            var\n              id     = settings.id     || $module.data(metadata.id),\n              source = settings.source || $module.data(metadata.source),\n              url\n            ;\n            url = (sources[source] !== undefined)\n              ? sources[source].url.replace('{id}', id)\n              : false\n            ;\n            if(url) {\n              $module.data(metadata.url, url);\n            }\n            return url;\n          }\n        },\n\n\n        set: {\n          active: function() {\n            $module.addClass(className.active);\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          embed: function() {\n            $embed.empty();\n          }\n        },\n\n        encode: {\n          parameters: function(parameters) {\n            var\n              urlString = [],\n              index\n            ;\n            for (index in parameters) {\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\n            }\n            return urlString.join('&amp;');\n          }\n        },\n\n        generate: {\n          embed: function(url) {\n            module.debug('Generating embed html');\n            var\n              source = module.get.source(),\n              html,\n              parameters\n            ;\n            url = module.get.url(url);\n            if(url) {\n              parameters = module.generate.parameters(source);\n              html       = templates.iframe(url, parameters);\n            }\n            else {\n              module.error(error.noURL, $module);\n            }\n            return html;\n          },\n          parameters: function(source, extraParameters) {\n            var\n              parameters = (sources[source] && sources[source].parameters !== undefined)\n                ? sources[source].parameters(settings)\n                : {}\n            ;\n            extraParameters = extraParameters || settings.parameters;\n            if(extraParameters) {\n              parameters = $.extend({}, parameters, extraParameters);\n            }\n            parameters = settings.onEmbed(parameters);\n            return module.encode.parameters(parameters);\n          }\n        },\n\n        has: {\n          embed: function() {\n            return ($embed.length > 0);\n          },\n          placeholder: function() {\n            return settings.placeholder || $module.data(metadata.placeholder);\n          }\n        },\n\n        should: {\n          autoplay: function() {\n            return (settings.autoplay === 'auto')\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\n              : settings.autoplay\n            ;\n          }\n        },\n\n        is: {\n          video: function() {\n            return module.get.type() == 'video';\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.embed.settings = {\n\n  name        : 'Embed',\n  namespace   : 'embed',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  icon     : false,\n  source   : false,\n  url      : false,\n  id       : false,\n\n  // standard video settings\n  autoplay  : 'auto',\n  color     : '#444444',\n  hd        : true,\n  brandedUI : false,\n\n  // additional parameters to include with the embed\n  parameters: false,\n\n  onDisplay            : function() {},\n  onPlaceholderDisplay : function() {},\n  onReset              : function() {},\n  onCreate             : function(url) {},\n  onEmbed              : function(parameters) {\n    return parameters;\n  },\n\n  metadata    : {\n    id          : 'id',\n    icon        : 'icon',\n    placeholder : 'placeholder',\n    source      : 'source',\n    url         : 'url'\n  },\n\n  error : {\n    noURL  : 'No URL specified',\n    method : 'The method you called is not defined'\n  },\n\n  className : {\n    active : 'active',\n    embed  : 'embed'\n  },\n\n  selector : {\n    embed       : '.embed',\n    placeholder : '.placeholder',\n    icon        : '.icon'\n  },\n\n  sources: {\n    youtube: {\n      name   : 'youtube',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'youtube.com',\n      url    : '//www.youtube.com/embed/{id}',\n      parameters: function(settings) {\n        return {\n          autohide       : !settings.brandedUI,\n          autoplay       : settings.autoplay,\n          color          : settings.color || undefined,\n          hq             : settings.hd,\n          jsapi          : settings.api,\n          modestbranding : !settings.brandedUI\n        };\n      }\n    },\n    vimeo: {\n      name   : 'vimeo',\n      type   : 'video',\n      icon   : 'video play',\n      domain : 'vimeo.com',\n      url    : '//player.vimeo.com/video/{id}',\n      parameters: function(settings) {\n        return {\n          api      : settings.api,\n          autoplay : settings.autoplay,\n          byline   : settings.brandedUI,\n          color    : settings.color || undefined,\n          portrait : settings.brandedUI,\n          title    : settings.brandedUI\n        };\n      }\n    }\n  },\n\n  templates: {\n    iframe : function(url, parameters) {\n      var src = url;\n      if (parameters) {\n          src += '?' + parameters;\n      }\n      return ''\n        + '<iframe src=\"' + src + '\"'\n        + ' width=\"100%\" height=\"100%\"'\n        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n      ;\n    },\n    placeholder : function(image, icon) {\n      var\n        html = ''\n      ;\n      if(icon) {\n        html += '<i class=\"' + icon + ' icon\"></i>';\n      }\n      if(image) {\n        html += '<img class=\"placeholder\" src=\"' + image + '\">';\n      }\n      return html;\n    }\n  },\n\n  // NOT YET IMPLEMENTED\n  api     : false,\n  onPause : function() {},\n  onPlay  : function() {},\n  onStop  : function() {}\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Modal\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.modal = function(parameters) {\n  var\n    $allModules    = $(this),\n    $window        = $(window),\n    $document      = $(document),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings    = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\n          : $.extend({}, $.fn.modal.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $close          = $module.find(selector.close),\n\n        $allModals,\n        $otherModals,\n        $focusedElement,\n        $dimmable,\n        $dimmer,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        ignoreRepeatedEvents = false,\n\n        elementEventNamespace,\n        id,\n        observer,\n        module\n      ;\n      module  = {\n\n        initialize: function() {\n          module.verbose('Initializing dimmer', $context);\n\n          module.create.id();\n          module.create.dimmer();\n          module.refreshModals();\n\n          module.bind.events();\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of modal');\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        create: {\n          dimmer: function() {\n            var\n              defaultSettings = {\n                debug      : settings.debug,\n                dimmerName : 'modals'\n              },\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n            ;\n            if($.fn.dimmer === undefined) {\n              module.error(error.dimmer);\n              return;\n            }\n            module.debug('Creating dimmer');\n            $dimmable = $context.dimmer(dimmerSettings);\n            if(settings.detachable) {\n              module.verbose('Modal is detachable, moving content into dimmer');\n              $dimmable.dimmer('add content', $module);\n            }\n            else {\n              module.set.undetached();\n            }\n            $dimmer = $dimmable.dimmer('get dimmer');\n          },\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementEventNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous modal');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          $window.off(elementEventNamespace);\n          $dimmer.off(elementEventNamespace);\n          $close.off(eventNamespace);\n          $context.dimmer('destroy');\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            observer = new MutationObserver(function(mutations) {\n              module.debug('DOM tree modified, refreshing');\n              module.refresh();\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        refresh: function() {\n          module.remove.scrolling();\n          module.cacheSizes();\n          module.set.screenHeight();\n          module.set.type();\n          module.set.position();\n        },\n\n        refreshModals: function() {\n          $otherModals = $module.siblings(selector.modal);\n          $allModals   = $otherModals.add($module);\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching modal events to element', selector, event);\n            $toggle\n              .off(eventNamespace)\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Attaching events');\n            $module\n              .on('click' + eventNamespace, selector.close, module.event.close)\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\n            ;\n            $window\n              .on('resize' + elementEventNamespace, module.event.resize)\n            ;\n          }\n        },\n\n        get: {\n          id: function() {\n            return (Math.random().toString(16) + '000000000').substr(2,8);\n          }\n        },\n\n        event: {\n          approve: function() {\n            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\n              module.verbose('Approve callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          deny: function() {\n            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\n              module.verbose('Deny callback returned false cancelling hide');\n              return;\n            }\n            ignoreRepeatedEvents = true;\n            module.hide(function() {\n              ignoreRepeatedEvents = false;\n            });\n          },\n          close: function() {\n            module.hide();\n          },\n          click: function(event) {\n            var\n              $target   = $(event.target),\n              isInModal = ($target.closest(selector.modal).length > 0),\n              isInDOM   = $.contains(document.documentElement, event.target)\n            ;\n            if(!isInModal && isInDOM) {\n              module.debug('Dimmer clicked, hiding all modals');\n              if( module.is.active() ) {\n                module.remove.clickaway();\n                if(settings.allowMultiple) {\n                  module.hide();\n                }\n                else {\n                  module.hideAll();\n                }\n              }\n            }\n          },\n          debounce: function(method, delay) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(method, delay);\n          },\n          keyboard: function(event) {\n            var\n              keyCode   = event.which,\n              escapeKey = 27\n            ;\n            if(keyCode == escapeKey) {\n              if(settings.closable) {\n                module.debug('Escape key pressed hiding modal');\n                module.hide();\n              }\n              else {\n                module.debug('Escape key pressed, but closable is set to false');\n              }\n              event.preventDefault();\n            }\n          },\n          resize: function() {\n            if( $dimmable.dimmer('is active') && ( module.is.animating() || module.is.active() ) ) {\n              requestAnimationFrame(module.refresh);\n            }\n          }\n        },\n\n        toggle: function() {\n          if( module.is.active() || module.is.animating() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.set.dimmerSettings();\n          module.showModal(callback);\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.refreshModals();\n          module.hideModal(callback);\n        },\n\n        showModal: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.animating() || !module.is.active() ) {\n\n            module.showDimmer();\n            module.cacheSizes();\n            module.set.position();\n            module.set.screenHeight();\n            module.set.type();\n            module.set.clickaway();\n\n            if( !settings.allowMultiple && module.others.active() ) {\n              module.hideOthers(module.showModal);\n            }\n            else {\n              settings.onShow.call(element);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                module.debug('Showing modal with css animations');\n                $module\n                  .transition({\n                    debug       : settings.debug,\n                    animation   : settings.transition + ' in',\n                    queue       : settings.queue,\n                    duration    : settings.duration,\n                    useFailSafe : true,\n                    onComplete : function() {\n                      settings.onVisible.apply(element);\n                      if(settings.keyboardShortcuts) {\n                        module.add.keyboardShortcuts();\n                      }\n                      module.save.focus();\n                      module.set.active();\n                      if(settings.autofocus) {\n                        module.set.autofocus();\n                      }\n                      callback();\n                    }\n                  })\n                ;\n              }\n              else {\n                module.error(error.noTransition);\n              }\n            }\n          }\n          else {\n            module.debug('Modal is already visible');\n          }\n        },\n\n        hideModal: function(callback, keepDimmed) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Hiding modal');\n          if(settings.onHide.call(element, $(this)) === false) {\n            module.verbose('Hide callback returned false cancelling hide');\n            return;\n          }\n\n          if( module.is.animating() || module.is.active() ) {\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.remove.active();\n              $module\n                .transition({\n                  debug       : settings.debug,\n                  animation   : settings.transition + ' out',\n                  queue       : settings.queue,\n                  duration    : settings.duration,\n                  useFailSafe : true,\n                  onStart     : function() {\n                    if(!module.others.active() && !keepDimmed) {\n                      module.hideDimmer();\n                    }\n                    if(settings.keyboardShortcuts) {\n                      module.remove.keyboardShortcuts();\n                    }\n                  },\n                  onComplete : function() {\n                    settings.onHidden.call(element);\n                    module.restore.focus();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        showDimmer: function() {\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\n            module.debug('Showing dimmer');\n            $dimmable.dimmer('show');\n          }\n          else {\n            module.debug('Dimmer already visible');\n          }\n        },\n\n        hideDimmer: function() {\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\n            $dimmable.dimmer('hide', function() {\n              module.remove.clickaway();\n              module.remove.screenHeight();\n            });\n          }\n          else {\n            module.debug('Dimmer is not visible cannot hide');\n            return;\n          }\n        },\n\n        hideAll: function(callback) {\n          var\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding all visible modals');\n            module.hideDimmer();\n            $visibleModals\n              .modal('hide modal', callback)\n            ;\n          }\n        },\n\n        hideOthers: function(callback) {\n          var\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $visibleModals.length > 0 ) {\n            module.debug('Hiding other modals', $otherModals);\n            $visibleModals\n              .modal('hide modal', callback, true)\n            ;\n          }\n        },\n\n        others: {\n          active: function() {\n            return ($otherModals.filter('.' + className.active).length > 0);\n          },\n          animating: function() {\n            return ($otherModals.filter('.' + className.animating).length > 0);\n          }\n        },\n\n\n        add: {\n          keyboardShortcuts: function() {\n            module.verbose('Adding keyboard shortcuts');\n            $document\n              .on('keyup' + eventNamespace, module.event.keyboard)\n            ;\n          }\n        },\n\n        save: {\n          focus: function() {\n            $focusedElement = $(document.activeElement).blur();\n          }\n        },\n\n        restore: {\n          focus: function() {\n            if($focusedElement && $focusedElement.length > 0) {\n              $focusedElement.focus();\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .off('click' + elementEventNamespace)\n              ;\n            }\n          },\n          bodyStyle: function() {\n            if($body.attr('style') === '') {\n              module.verbose('Removing style attribute');\n              $body.removeAttr('style');\n            }\n          },\n          screenHeight: function() {\n            module.debug('Removing page height');\n            $body\n              .css('height', '')\n            ;\n          },\n          keyboardShortcuts: function() {\n            module.verbose('Removing keyboard shortcuts');\n            $document\n              .off('keyup' + eventNamespace)\n            ;\n          },\n          scrolling: function() {\n            $dimmable.removeClass(className.scrolling);\n            $module.removeClass(className.scrolling);\n          }\n        },\n\n        cacheSizes: function() {\n          var\n            modalHeight = $module.outerHeight()\n          ;\n          if(module.cache === undefined || modalHeight !== 0) {\n            module.cache = {\n              pageHeight    : $(document).outerHeight(),\n              height        : modalHeight + settings.offset,\n              contextHeight : (settings.context == 'body')\n                ? $(window).height()\n                : $dimmable.height()\n            };\n          }\n          module.debug('Caching modal and container sizes', module.cache);\n        },\n\n        can: {\n          fit: function() {\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return $module.transition('is supported')\n              ? $module.transition('is animating')\n              : $module.is(':visible')\n            ;\n          },\n          scrolling: function() {\n            return $dimmable.hasClass(className.scrolling);\n          },\n          modernBrowser: function() {\n            // appName for IE11 reports 'Netscape' can no longer use\n            return !(window.ActiveXObject || \"ActiveXObject\" in window);\n          }\n        },\n\n        set: {\n          autofocus: function() {\n            var\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\n              $autofocus = $inputs.filter('[autofocus]'),\n              $input     = ($autofocus.length > 0)\n                ? $autofocus.first()\n                : $inputs.first()\n            ;\n            if($input.length > 0) {\n              $input.focus();\n            }\n          },\n          clickaway: function() {\n            if(settings.closable) {\n              $dimmer\n                .on('click' + elementEventNamespace, module.event.click)\n              ;\n            }\n          },\n          dimmerSettings: function() {\n            if($.fn.dimmer === undefined) {\n              module.error(error.dimmer);\n              return;\n            }\n            var\n              defaultSettings = {\n                debug      : settings.debug,\n                dimmerName : 'modals',\n                variation  : false,\n                closable   : 'auto',\n                duration   : {\n                  show     : settings.duration,\n                  hide     : settings.duration\n                }\n              },\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\n            ;\n            if(settings.inverted) {\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\n                ? dimmerSettings.variation + ' inverted'\n                : 'inverted'\n              ;\n              $dimmer.addClass(className.inverted);\n            }\n            else {\n              $dimmer.removeClass(className.inverted);\n            }\n            if(settings.blurring) {\n              $dimmable.addClass(className.blurring);\n            }\n            else {\n              $dimmable.removeClass(className.blurring);\n            }\n            $context.dimmer('setting', dimmerSettings);\n          },\n          screenHeight: function() {\n            if( module.can.fit() ) {\n              $body.css('height', '');\n            }\n            else {\n              module.debug('Modal is taller than page content, resizing page height');\n              $body\n                .css('height', module.cache.height + (settings.padding * 2) )\n              ;\n            }\n          },\n          active: function() {\n            $module.addClass(className.active);\n          },\n          scrolling: function() {\n            $dimmable.addClass(className.scrolling);\n            $module.addClass(className.scrolling);\n          },\n          type: function() {\n            if(module.can.fit()) {\n              module.verbose('Modal fits on screen');\n              if(!module.others.active() && !module.others.animating()) {\n                module.remove.scrolling();\n              }\n            }\n            else {\n              module.verbose('Modal cannot fit on screen setting to scrolling');\n              module.set.scrolling();\n            }\n          },\n          position: function() {\n            module.verbose('Centering modal on page', module.cache);\n            if(module.can.fit()) {\n              $module\n                .css({\n                  top: '',\n                  marginTop: -(module.cache.height / 2)\n                })\n              ;\n            }\n            else {\n              $module\n                .css({\n                  marginTop : '',\n                  top       : $document.scrollTop()\n                })\n              ;\n            }\n          },\n          undetached: function() {\n            $dimmable.addClass(className.undetached);\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.modal.settings = {\n\n  name           : 'Modal',\n  namespace      : 'modal',\n\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n\n  observeChanges : false,\n\n  allowMultiple  : false,\n  detachable     : true,\n  closable       : true,\n  autofocus      : true,\n\n  inverted       : false,\n  blurring       : false,\n\n  dimmerSettings : {\n    closable : false,\n    useCSS   : true\n  },\n\n  // whether to use keyboard shortcuts\n  keyboardShortcuts: true,\n\n  context    : 'body',\n\n  queue      : false,\n  duration   : 500,\n  offset     : 0,\n  transition : 'scale',\n\n  // padding with edge of page\n  padding    : 50,\n\n  // called before show animation\n  onShow     : function(){},\n\n  // called after show animation\n  onVisible  : function(){},\n\n  // called before hide animation\n  onHide     : function(){ return true; },\n\n  // called after hide animation\n  onHidden   : function(){},\n\n  // called after approve selector match\n  onApprove  : function(){ return true; },\n\n  // called after deny selector match\n  onDeny     : function(){ return true; },\n\n  selector    : {\n    close    : '> .close',\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\n    modal    : '.ui.modal'\n  },\n  error : {\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\n    method    : 'The method you called is not defined.',\n    notFound  : 'The element you specified could not be found'\n  },\n  className : {\n    active     : 'active',\n    animating  : 'animating',\n    blurring   : 'blurring',\n    inverted   : 'inverted',\n    scrolling  : 'scrolling',\n    undetached : 'undetached'\n  }\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Nag\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.nag = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\n          : $.extend({}, $.fn.nag.settings),\n\n        className       = settings.className,\n        selector        = settings.selector,\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        $close          = $module.find(selector.close),\n        $context        = (settings.context)\n          ? $(settings.context)\n          : $('body'),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        moduleOffset,\n        moduleHeight,\n\n        contextWidth,\n        contextHeight,\n        contextOffset,\n\n        yOffset,\n        yPosition,\n\n        timer,\n        module,\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); }\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing element');\n\n          $module\n            .on('click' + eventNamespace, selector.close, module.dismiss)\n            .data(moduleNamespace, module)\n          ;\n\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\n            $module\n              .detach()\n              .prependTo($context)\n            ;\n          }\n\n          if(settings.displayTime > 0) {\n            setTimeout(module.hide, settings.displayTime);\n          }\n          module.show();\n        },\n\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        show: function() {\n          if( module.should.show() && !$module.is(':visible') ) {\n            module.debug('Showing nag', settings.animation.show);\n            if(settings.animation.show == 'fade') {\n              $module\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            else {\n              $module\n                .slideDown(settings.duration, settings.easing)\n              ;\n            }\n          }\n        },\n\n        hide: function() {\n          module.debug('Showing nag', settings.animation.hide);\n          if(settings.animation.show == 'fade') {\n            $module\n              .fadeIn(settings.duration, settings.easing)\n            ;\n          }\n          else {\n            $module\n              .slideUp(settings.duration, settings.easing)\n            ;\n          }\n        },\n\n        onHide: function() {\n          module.debug('Removing nag', settings.animation.hide);\n          $module.remove();\n          if (settings.onHide) {\n            settings.onHide();\n          }\n        },\n\n        dismiss: function(event) {\n          if(settings.storageMethod) {\n            module.storage.set(settings.key, settings.value);\n          }\n          module.hide();\n          event.stopImmediatePropagation();\n          event.preventDefault();\n        },\n\n        should: {\n          show: function() {\n            if(settings.persist) {\n              module.debug('Persistent nag is set, can show nag');\n              return true;\n            }\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\n              return true;\n            }\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\n            return false;\n          }\n        },\n\n        get: {\n          storageOptions: function() {\n            var\n              options = {}\n            ;\n            if(settings.expires) {\n              options.expires = settings.expires;\n            }\n            if(settings.domain) {\n              options.domain = settings.domain;\n            }\n            if(settings.path) {\n              options.path = settings.path;\n            }\n            return options;\n          }\n        },\n\n        clear: function() {\n          module.storage.remove(settings.key);\n        },\n\n        storage: {\n          set: function(key, value) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.setItem(key, value);\n              module.debug('Value stored using local storage', key, value);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.setItem(key, value);\n              module.debug('Value stored using session storage', key, value);\n            }\n            else if($.cookie !== undefined) {\n              $.cookie(key, value, options);\n              module.debug('Value stored using cookie', key, value, options);\n            }\n            else {\n              module.error(error.noCookieStorage);\n              return;\n            }\n          },\n          get: function(key, value) {\n            var\n              storedValue\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              storedValue = window.localStorage.getItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              storedValue = window.sessionStorage.getItem(key);\n            }\n            // get by cookie\n            else if($.cookie !== undefined) {\n              storedValue = $.cookie(key);\n            }\n            else {\n              module.error(error.noCookieStorage);\n            }\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\n              storedValue = undefined;\n            }\n            return storedValue;\n          },\n          remove: function(key) {\n            var\n              options = module.get.storageOptions()\n            ;\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\n              window.localStorage.removeItem(key);\n            }\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\n              window.sessionStorage.removeItem(key);\n            }\n            // store by cookie\n            else if($.cookie !== undefined) {\n              $.removeCookie(key, options);\n            }\n            else {\n              module.error(error.noStorage);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.nag.settings = {\n\n  name        : 'Nag',\n\n  silent      : false,\n  debug       : false,\n  verbose     : false,\n  performance : true,\n\n  namespace   : 'Nag',\n\n  // allows cookie to be overridden\n  persist     : false,\n\n  // set to zero to require manually dismissal, otherwise hides on its own\n  displayTime : 0,\n\n  animation   : {\n    show : 'slide',\n    hide : 'slide'\n  },\n\n  context       : false,\n  detachable    : false,\n\n  expires       : 30,\n  domain        : false,\n  path          : '/',\n\n  // type of storage to use\n  storageMethod : 'cookie',\n\n  // value to store in dismissed localstorage/cookie\n  key           : 'nag',\n  value         : 'dismiss',\n\n  error: {\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\n    method          : 'The method you called is not defined.'\n  },\n\n  className     : {\n    bottom : 'bottom',\n    fixed  : 'fixed'\n  },\n\n  selector      : {\n    close : '.close.icon'\n  },\n\n  speed         : 500,\n  easing        : 'easeOutQuad',\n\n  onHide: function() {}\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  }\n});\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Popup\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.popup = function(parameters) {\n  var\n    $allModules    = $(this),\n    $document      = $(document),\n    $window        = $(window),\n    $body          = $('body'),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = (true),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\n          : $.extend({}, $.fn.popup.settings),\n\n        selector           = settings.selector,\n        className          = settings.className,\n        error              = settings.error,\n        metadata           = settings.metadata,\n        namespace          = settings.namespace,\n\n        eventNamespace     = '.' + settings.namespace,\n        moduleNamespace    = 'module-' + namespace,\n\n        $module            = $(this),\n        $context           = $(settings.context),\n        $scrollContext     = $(settings.scrollContext),\n        $boundary          = $(settings.boundary),\n        $target            = (settings.target)\n          ? $(settings.target)\n          : $module,\n\n        $popup,\n        $offsetParent,\n\n        searchDepth        = 0,\n        triedPositions     = false,\n        openedWithTouch    = false,\n\n        element            = this,\n        instance           = $module.data(moduleNamespace),\n\n        documentObserver,\n        elementNamespace,\n        id,\n        module\n      ;\n\n      module = {\n\n        // binds events\n        initialize: function() {\n          module.debug('Initializing', $module);\n          module.createID();\n          module.bind.events();\n          if(!module.exists() && settings.preserve) {\n            module.create();\n          }\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', documentObserver);\n          }\n        },\n\n        refresh: function() {\n          if(settings.popup) {\n            $popup = $(settings.popup).eq(0);\n          }\n          else {\n            if(settings.inline) {\n              $popup = $target.nextAll(selector.popup).eq(0);\n              settings.popup = $popup;\n            }\n          }\n          if(settings.popup) {\n            $popup.addClass(className.loading);\n            $offsetParent = module.get.offsetParent($target);\n            $popup.removeClass(className.loading);\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\n              module.debug('Moving popup to the same offset parent as target');\n              $popup\n                .detach()\n                .appendTo($offsetParent)\n              ;\n            }\n          }\n          else {\n            $offsetParent = (settings.inline)\n              ? module.get.offsetParent($target)\n              : module.has.popup()\n                ? module.get.offsetParent($target)\n                : $body\n            ;\n          }\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\n            module.debug('Setting page as offset parent');\n            $offsetParent = $body;\n          }\n          if( module.get.variation() ) {\n            module.set.variation();\n          }\n        },\n\n        reposition: function() {\n          module.refresh();\n          module.set.position();\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous module');\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          // remove element only if was created dynamically\n          if($popup && !settings.preserve) {\n            module.removePopup();\n          }\n          // clear all timeouts\n          clearTimeout(module.hideTimer);\n          clearTimeout(module.showTimer);\n          // remove events\n          module.unbind.close();\n          module.unbind.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        event: {\n          start:  function(event) {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.show\n                : settings.delay\n            ;\n            clearTimeout(module.hideTimer);\n            if(!openedWithTouch) {\n              module.showTimer = setTimeout(module.show, delay);\n            }\n          },\n          end:  function() {\n            var\n              delay = ($.isPlainObject(settings.delay))\n                ? settings.delay.hide\n                : settings.delay\n            ;\n            clearTimeout(module.showTimer);\n            module.hideTimer = setTimeout(module.hide, delay);\n          },\n          touchstart: function(event) {\n            openedWithTouch = true;\n            module.show();\n          },\n          resize: function() {\n            if( module.is.visible() ) {\n              module.set.position();\n            }\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          hideGracefully: function(event) {\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target),\n              inPopup = ($target.closest(selector.popup).length > 0)\n            ;\n            // don't close on clicks inside popup\n            if(event && !inPopup && isInDOM) {\n              module.debug('Click occurred outside popup hiding popup');\n              module.hide();\n            }\n            else {\n              module.debug('Click was inside popup, keeping popup open');\n            }\n          }\n        },\n\n        // generates popup html from metadata\n        create: function() {\n          var\n            html      = module.get.html(),\n            title     = module.get.title(),\n            content   = module.get.content()\n          ;\n\n          if(html || content || title) {\n            module.debug('Creating pop-up html');\n            if(!html) {\n              html = settings.templates.popup({\n                title   : title,\n                content : content\n              });\n            }\n            $popup = $('<div/>')\n              .addClass(className.popup)\n              .data(metadata.activator, $module)\n              .html(html)\n            ;\n            if(settings.inline) {\n              module.verbose('Inserting popup element inline', $popup);\n              $popup\n                .insertAfter($module)\n              ;\n            }\n            else {\n              module.verbose('Appending popup element to body', $popup);\n              $popup\n                .appendTo( $context )\n              ;\n            }\n            module.refresh();\n            module.set.variation();\n\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n            settings.onCreate.call($popup, element);\n          }\n          else if($target.next(selector.popup).length !== 0) {\n            module.verbose('Pre-existing popup found');\n            settings.inline = true;\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else if(settings.popup) {\n            $(settings.popup).data(metadata.activator, $module);\n            module.verbose('Used popup specified in settings');\n            module.refresh();\n            if(settings.hoverable) {\n              module.bind.popup();\n            }\n          }\n          else {\n            module.debug('No content specified skipping display', element);\n          }\n        },\n\n        createID: function() {\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\n          elementNamespace = '.' + id;\n          module.verbose('Creating unique id for element', id);\n        },\n\n        // determines popup state\n        toggle: function() {\n          module.debug('Toggling pop-up');\n          if( module.is.hidden() ) {\n            module.debug('Popup is hidden, showing pop-up');\n            module.unbind.close();\n            module.show();\n          }\n          else {\n            module.debug('Popup is visible, hiding pop-up');\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = callback || function(){};\n          module.debug('Showing pop-up', settings.transition);\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\n            if( !module.exists() ) {\n              module.create();\n            }\n            if(settings.onShow.call($popup, element) === false) {\n              module.debug('onShow callback returned false, cancelling popup animation');\n              return;\n            }\n            else if(!settings.preserve && !settings.popup) {\n              module.refresh();\n            }\n            if( $popup && module.set.position() ) {\n              module.save.conditions();\n              if(settings.exclusive) {\n                module.hideAll();\n              }\n              module.animate.show(callback);\n            }\n          }\n        },\n\n\n        hide: function(callback) {\n          callback = callback || function(){};\n          if( module.is.visible() || module.is.animating() ) {\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            module.remove.visible();\n            module.unbind.close();\n            module.restore.conditions();\n            module.animate.hide(callback);\n          }\n        },\n\n        hideAll: function() {\n          $(selector.popup)\n            .filter('.' + className.popupVisible)\n            .each(function() {\n              $(this)\n                .data(metadata.activator)\n                  .popup('hide')\n              ;\n            })\n          ;\n        },\n        exists: function() {\n          if(!$popup) {\n            return false;\n          }\n          if(settings.inline || settings.popup) {\n            return ( module.has.popup() );\n          }\n          else {\n            return ( $popup.closest($context).length >= 1 )\n              ? true\n              : false\n            ;\n          }\n        },\n\n        removePopup: function() {\n          if( module.has.popup() && !settings.popup) {\n            module.debug('Removing popup', $popup);\n            $popup.remove();\n            $popup = undefined;\n            settings.onRemove.call($popup, element);\n          }\n        },\n\n        save: {\n          conditions: function() {\n            module.cache = {\n              title: $module.attr('title')\n            };\n            if (module.cache.title) {\n              $module.removeAttr('title');\n            }\n            module.verbose('Saving original attributes', module.cache.title);\n          }\n        },\n        restore: {\n          conditions: function() {\n            if(module.cache && module.cache.title) {\n              $module.attr('title', module.cache.title);\n              module.verbose('Restoring original attributes', module.cache.title);\n            }\n            return true;\n          }\n        },\n        supports: {\n          svg: function() {\n            return (typeof SVGGraphicsElement === 'undefined');\n          }\n        },\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.set.visible();\n              $popup\n                .transition({\n                  animation  : settings.transition + ' in',\n                  queue      : false,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    module.bind.close();\n                    callback.call($popup, element);\n                    settings.onVisible.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback) ? callback : function(){};\n            module.debug('Hiding pop-up');\n            if(settings.onHide.call($popup, element) === false) {\n              module.debug('onHide callback returned false, cancelling popup animation');\n              return;\n            }\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $popup\n                .transition({\n                  animation  : settings.transition + ' out',\n                  queue      : false,\n                  duration   : settings.duration,\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  onComplete : function() {\n                    module.reset();\n                    callback.call($popup, element);\n                    settings.onHidden.call($popup, element);\n                  }\n                })\n              ;\n            }\n            else {\n              module.error(error.noTransition);\n            }\n          }\n        },\n\n        change: {\n          content: function(html) {\n            $popup.html(html);\n          }\n        },\n\n        get: {\n          html: function() {\n            $module.removeData(metadata.html);\n            return $module.data(metadata.html) || settings.html;\n          },\n          title: function() {\n            $module.removeData(metadata.title);\n            return $module.data(metadata.title) || settings.title;\n          },\n          content: function() {\n            $module.removeData(metadata.content);\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\n          },\n          variation: function() {\n            $module.removeData(metadata.variation);\n            return $module.data(metadata.variation) || settings.variation;\n          },\n          popup: function() {\n            return $popup;\n          },\n          popupOffset: function() {\n            return $popup.offset();\n          },\n          calculations: function() {\n            var\n              targetElement    = $target[0],\n              isWindow         = ($boundary[0] == window),\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\n                ? $target.position()\n                : $target.offset(),\n              screenPosition = (isWindow)\n                ? { top: 0, left: 0 }\n                : $boundary.offset(),\n              calculations   = {},\n              scroll = (isWindow)\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\n                : { top: 0, left: 0},\n              screen\n            ;\n            calculations = {\n              // element which is launching popup\n              target : {\n                element : $target[0],\n                width   : $target.outerWidth(),\n                height  : $target.outerHeight(),\n                top     : targetPosition.top,\n                left    : targetPosition.left,\n                margin  : {}\n              },\n              // popup itself\n              popup : {\n                width  : $popup.outerWidth(),\n                height : $popup.outerHeight()\n              },\n              // offset container (or 3d context)\n              parent : {\n                width  : $offsetParent.outerWidth(),\n                height : $offsetParent.outerHeight()\n              },\n              // screen boundaries\n              screen : {\n                top  : screenPosition.top,\n                left : screenPosition.left,\n                scroll: {\n                  top  : scroll.top,\n                  left : scroll.left\n                },\n                width  : $boundary.width(),\n                height : $boundary.height()\n              }\n            };\n\n            // add in container calcs if fluid\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              calculations.container = {\n                width: $popup.parent().outerWidth()\n              };\n              calculations.popup.width = calculations.container.width;\n            }\n\n            // add in margins if inline\n            calculations.target.margin.top = (settings.inline)\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\n              : 0\n            ;\n            calculations.target.margin.left = (settings.inline)\n              ? module.is.rtl()\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\n              : 0\n            ;\n            // calculate screen boundaries\n            screen = calculations.screen;\n            calculations.boundary = {\n              top    : screen.top + screen.scroll.top,\n              bottom : screen.top + screen.scroll.top + screen.height,\n              left   : screen.left + screen.scroll.left,\n              right  : screen.left + screen.scroll.left + screen.width\n            };\n            return calculations;\n          },\n          id: function() {\n            return id;\n          },\n          startEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseenter';\n            }\n            else if(settings.on == 'focus') {\n              return 'focus';\n            }\n            return false;\n          },\n          scrollEvent: function() {\n            return 'scroll';\n          },\n          endEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseleave';\n            }\n            else if(settings.on == 'focus') {\n              return 'blur';\n            }\n            return false;\n          },\n          distanceFromBoundary: function(offset, calculations) {\n            var\n              distanceFromBoundary = {},\n              popup,\n              boundary\n            ;\n            calculations = calculations || module.get.calculations();\n\n            // shorthand\n            popup        = calculations.popup;\n            boundary     = calculations.boundary;\n\n            if(offset) {\n              distanceFromBoundary = {\n                top    : (offset.top - boundary.top),\n                left   : (offset.left - boundary.left),\n                right  : (boundary.right - (offset.left + popup.width) ),\n                bottom : (boundary.bottom - (offset.top + popup.height) )\n              };\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\n            }\n            return distanceFromBoundary;\n          },\n          offsetParent: function($target) {\n            var\n              element = ($target !== undefined)\n                ? $target[0]\n                : $module[0],\n              parentNode = element.parentNode,\n              $node    = $(parentNode)\n            ;\n            if(parentNode) {\n              var\n                is2D     = ($node.css('transform') === 'none'),\n                isStatic = ($node.css('position') === 'static'),\n                isHTML   = $node.is('html')\n              ;\n              while(parentNode && !isHTML && isStatic && is2D) {\n                parentNode = parentNode.parentNode;\n                $node    = $(parentNode);\n                is2D     = ($node.css('transform') === 'none');\n                isStatic = ($node.css('position') === 'static');\n                isHTML   = $node.is('html');\n              }\n            }\n            return ($node && $node.length > 0)\n              ? $node\n              : $()\n            ;\n          },\n          positions: function() {\n            return {\n              'top left'      : false,\n              'top center'    : false,\n              'top right'     : false,\n              'bottom left'   : false,\n              'bottom center' : false,\n              'bottom right'  : false,\n              'left center'   : false,\n              'right center'  : false\n            };\n          },\n          nextPosition: function(position) {\n            var\n              positions          = position.split(' '),\n              verticalPosition   = positions[0],\n              horizontalPosition = positions[1],\n              opposite = {\n                top    : 'bottom',\n                bottom : 'top',\n                left   : 'right',\n                right  : 'left'\n              },\n              adjacent = {\n                left   : 'center',\n                center : 'right',\n                right  : 'left'\n              },\n              backup = {\n                'top left'      : 'top center',\n                'top center'    : 'top right',\n                'top right'     : 'right center',\n                'right center'  : 'bottom right',\n                'bottom right'  : 'bottom center',\n                'bottom center' : 'bottom left',\n                'bottom left'   : 'left center',\n                'left center'   : 'top left'\n              },\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\n              oppositeTried = false,\n              adjacentTried = false,\n              nextPosition  = false\n            ;\n            if(!triedPositions) {\n              module.verbose('All available positions available');\n              triedPositions = module.get.positions();\n            }\n\n            module.debug('Recording last position tried', position);\n            triedPositions[position] = true;\n\n            if(settings.prefer === 'opposite') {\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\n              nextPosition  = nextPosition.join(' ');\n              oppositeTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying opposite strategy', nextPosition);\n            }\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\n              nextPosition  = nextPosition.join(' ');\n              adjacentTried = (triedPositions[nextPosition] === true);\n              module.debug('Trying adjacent strategy', nextPosition);\n            }\n            if(adjacentTried || oppositeTried) {\n              module.debug('Using backup position', nextPosition);\n              nextPosition = backup[position];\n            }\n            return nextPosition;\n          }\n        },\n\n        set: {\n          position: function(position, calculations) {\n\n            // exit conditions\n            if($target.length === 0 || $popup.length === 0) {\n              module.error(error.notFound);\n              return;\n            }\n            var\n              offset,\n              distanceAway,\n              target,\n              popup,\n              parent,\n              positioning,\n              popupOffset,\n              distanceFromBoundary\n            ;\n\n            calculations = calculations || module.get.calculations();\n            position     = position     || $module.data(metadata.position) || settings.position;\n\n            offset       = $module.data(metadata.offset) || settings.offset;\n            distanceAway = settings.distanceAway;\n\n            // shorthand\n            target = calculations.target;\n            popup  = calculations.popup;\n            parent = calculations.parent;\n\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\n              module.debug('Popup target is hidden, no action taken');\n              return false;\n            }\n\n            if(settings.inline) {\n              module.debug('Adding margin to calculation', target.margin);\n              if(position == 'left center' || position == 'right center') {\n                offset       +=  target.margin.top;\n                distanceAway += -target.margin.left;\n              }\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\n                offset       += target.margin.left;\n                distanceAway -= target.margin.top;\n              }\n              else {\n                offset       += target.margin.left;\n                distanceAway += target.margin.top;\n              }\n            }\n\n            module.debug('Determining popup position from calculations', position, calculations);\n\n            if (module.is.rtl()) {\n              position = position.replace(/left|right/g, function (match) {\n                return (match == 'left')\n                  ? 'right'\n                  : 'left'\n                ;\n              });\n              module.debug('RTL: Popup position updated', position);\n            }\n\n            // if last attempt use specified last resort position\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\n              position = settings.lastResort;\n            }\n\n            switch (position) {\n              case 'top left':\n                positioning = {\n                  top    : 'auto',\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + offset,\n                  right  : 'auto'\n                };\n              break;\n              case 'top center':\n                positioning = {\n                  bottom : parent.height - target.top + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  top    : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'top right':\n                positioning = {\n                  bottom :  parent.height - target.top + distanceAway,\n                  right  :  parent.width - target.left - target.width - offset,\n                  top    : 'auto',\n                  left   : 'auto'\n                };\n              break;\n              case 'left center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  right  : parent.width - target.left + distanceAway,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n              case 'right center':\n                positioning = {\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\n                  left   : target.left + target.width + distanceAway,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom left':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom center':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom right':\n                positioning = {\n                  top    : target.top + target.height + distanceAway,\n                  right  : parent.width - target.left  - target.width - offset,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n            }\n            if(positioning === undefined) {\n              module.error(error.invalidPosition, position);\n            }\n\n            module.debug('Calculated popup positioning values', positioning);\n\n            // tentatively place on stage\n            $popup\n              .css(positioning)\n              .removeClass(className.position)\n              .addClass(position)\n              .addClass(className.loading)\n            ;\n\n            popupOffset = module.get.popupOffset();\n\n            // see if any boundaries are surpassed with this tentative position\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\n\n            if( module.is.offstage(distanceFromBoundary, position) ) {\n              module.debug('Position is outside viewport', position);\n              if(searchDepth < settings.maxSearchDepth) {\n                searchDepth++;\n                position = module.get.nextPosition(position);\n                module.debug('Trying new position', position);\n                return ($popup)\n                  ? module.set.position(position, calculations)\n                  : false\n                ;\n              }\n              else {\n                if(settings.lastResort) {\n                  module.debug('No position found, showing with last position');\n                }\n                else {\n                  module.debug('Popup could not find a position to display', $popup);\n                  module.error(error.cannotPlace, element);\n                  module.remove.attempts();\n                  module.remove.loading();\n                  module.reset();\n                  settings.onUnplaceable.call($popup, element);\n                  return false;\n                }\n              }\n            }\n            module.debug('Position is on stage', position);\n            module.remove.attempts();\n            module.remove.loading();\n            if( settings.setFluidWidth && module.is.fluid() ) {\n              module.set.fluidWidth(calculations);\n            }\n            return true;\n          },\n\n          fluidWidth: function(calculations) {\n            calculations = calculations || module.get.calculations();\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\n            $popup.css('width', calculations.container.width);\n          },\n\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation && module.has.popup() ) {\n              module.verbose('Adding variation to popup', variation);\n              $popup.addClass(variation);\n            }\n          },\n\n          visible: function() {\n            $module.addClass(className.visible);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $popup.removeClass(className.loading);\n          },\n          variation: function(variation) {\n            variation = variation || module.get.variation();\n            if(variation) {\n              module.verbose('Removing variation', variation);\n              $popup.removeClass(variation);\n            }\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          attempts: function() {\n            module.verbose('Resetting all searched positions');\n            searchDepth    = 0;\n            triedPositions = false;\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.debug('Binding popup events to module');\n            if(settings.on == 'click') {\n              $module\n                .on('click' + eventNamespace, module.toggle)\n              ;\n            }\n            if(settings.on == 'hover' && hasTouch) {\n              $module\n                .on('touchstart' + eventNamespace, module.event.touchstart)\n              ;\n            }\n            if( module.get.startEvent() ) {\n              $module\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\n              ;\n            }\n            if(settings.target) {\n              module.debug('Target set to element', $target);\n            }\n            $window.on('resize' + elementNamespace, module.event.resize);\n          },\n          popup: function() {\n            module.verbose('Allowing hover events on popup to prevent closing');\n            if( $popup && module.has.popup() ) {\n              $popup\n                .on('mouseenter' + eventNamespace, module.event.start)\n                .on('mouseleave' + eventNamespace, module.event.end)\n              ;\n            }\n          },\n          close: function() {\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\n              module.bind.closeOnScroll();\n            }\n            if(settings.on == 'hover' && openedWithTouch) {\n              module.bind.touchClose();\n            }\n            if(settings.on == 'click' && settings.closable) {\n              module.bind.clickaway();\n            }\n          },\n          closeOnScroll: function() {\n            module.verbose('Binding scroll close event to document');\n            $scrollContext\n              .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\n            ;\n          },\n          touchClose: function() {\n            module.verbose('Binding popup touchclose event to document');\n            $document\n              .on('touchstart' + elementNamespace, function(event) {\n                module.verbose('Touched away from popup');\n                module.event.hideGracefully.call(element, event);\n              })\n            ;\n          },\n          clickaway: function() {\n            module.verbose('Binding popup close event to document');\n            $document\n              .on('click' + elementNamespace, function(event) {\n                module.verbose('Clicked away from popup');\n                module.event.hideGracefully.call(element, event);\n              })\n            ;\n          }\n        },\n\n        unbind: {\n          events: function() {\n            $window\n              .off(elementNamespace)\n            ;\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          close: function() {\n            $document\n              .off(elementNamespace)\n            ;\n            $scrollContext\n              .off(elementNamespace)\n            ;\n          },\n        },\n\n        has: {\n          popup: function() {\n            return ($popup && $popup.length > 0);\n          }\n        },\n\n        is: {\n          offstage: function(distanceFromBoundary, position) {\n            var\n              offstage = []\n            ;\n            // return boundaries that have been surpassed\n            $.each(distanceFromBoundary, function(direction, distance) {\n              if(distance < -settings.jitter) {\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\n                offstage.push(direction);\n              }\n            });\n            if(offstage.length > 0) {\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          svg: function(element) {\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          animating: function() {\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\n          },\n          fluid: function() {\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\n          },\n          visible: function() {\n            return ($popup !== undefined && $popup.hasClass(className.popupVisible));\n          },\n          dropdown: function() {\n            return $module.hasClass(className.dropdown);\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          rtl: function () {\n            return $module.css('direction') == 'rtl';\n          }\n        },\n\n        reset: function() {\n          module.remove.visible();\n          if(settings.preserve) {\n            if($.fn.transition !== undefined) {\n              $popup\n                .transition('remove transition')\n              ;\n            }\n          }\n          else {\n            module.removePopup();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.popup.settings = {\n\n  name           : 'Popup',\n\n  // module settings\n  silent         : false,\n  debug          : false,\n  verbose        : false,\n  performance    : true,\n  namespace      : 'popup',\n\n  // whether it should use dom mutation observers\n  observeChanges : true,\n\n  // callback only when element added to dom\n  onCreate       : function(){},\n\n  // callback before element removed from dom\n  onRemove       : function(){},\n\n  // callback before show animation\n  onShow         : function(){},\n\n  // callback after show animation\n  onVisible      : function(){},\n\n  // callback before hide animation\n  onHide         : function(){},\n\n  // callback when popup cannot be positioned in visible screen\n  onUnplaceable  : function(){},\n\n  // callback after hide animation\n  onHidden       : function(){},\n\n  // when to show popup\n  on             : 'hover',\n\n  // element to use to determine if popup is out of boundary\n  boundary       : window,\n\n  // whether to add touchstart events when using hover\n  addTouchEvents : true,\n\n  // default position relative to element\n  position       : 'top left',\n\n  // name of variation to use\n  variation      : '',\n\n  // whether popup should be moved to context\n  movePopup      : true,\n\n  // element which popup should be relative to\n  target         : false,\n\n  // jq selector or element that should be used as popup\n  popup          : false,\n\n  // popup should remain inline next to activator\n  inline         : false,\n\n  // popup should be removed from page on hide\n  preserve       : false,\n\n  // popup should not close when being hovered on\n  hoverable      : false,\n\n  // explicitly set content\n  content        : false,\n\n  // explicitly set html\n  html           : false,\n\n  // explicitly set title\n  title          : false,\n\n  // whether automatically close on clickaway when on click\n  closable       : true,\n\n  // automatically hide on scroll\n  hideOnScroll   : 'auto',\n\n  // hide other popups on show\n  exclusive      : false,\n\n  // context to attach popups\n  context        : 'body',\n\n  // context for binding scroll events\n  scrollContext  : window,\n\n  // position to prefer when calculating new position\n  prefer         : 'opposite',\n\n  // specify position to appear even if it doesn't fit\n  lastResort     : false,\n\n  // delay used to prevent accidental refiring of animations due to user error\n  delay        : {\n    show : 50,\n    hide : 70\n  },\n\n  // whether fluid variation should assign width explicitly\n  setFluidWidth  : true,\n\n  // transition settings\n  duration       : 200,\n  transition     : 'scale',\n\n  // distance away from activating element in px\n  distanceAway   : 0,\n\n  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\n  jitter         : 2,\n\n  // offset on aligning axis from calculated position\n  offset         : 0,\n\n  // maximum times to look for a position before failing (9 positions total)\n  maxSearchDepth : 15,\n\n  error: {\n    invalidPosition : 'The position you specified is not a valid position',\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\n    method          : 'The method you called is not defined.',\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\n    notFound        : 'The target or popup you specified does not exist on the page'\n  },\n\n  metadata: {\n    activator : 'activator',\n    content   : 'content',\n    html      : 'html',\n    offset    : 'offset',\n    position  : 'position',\n    title     : 'title',\n    variation : 'variation'\n  },\n\n  className   : {\n    active       : 'active',\n    animating    : 'animating',\n    dropdown     : 'dropdown',\n    fluid        : 'fluid',\n    loading      : 'loading',\n    popup        : 'ui popup',\n    position     : 'top left center bottom right',\n    visible      : 'visible',\n    popupVisible : 'visible'\n  },\n\n  selector    : {\n    popup    : '.ui.popup'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    popup: function(text) {\n      var\n        html   = '',\n        escape = $.fn.popup.settings.templates.escape\n      ;\n      if(typeof text !== undefined) {\n        if(typeof text.title !== undefined && text.title) {\n          text.title = escape(text.title);\n          html += '<div class=\"header\">' + text.title + '</div>';\n        }\n        if(typeof text.content !== undefined && text.content) {\n          text.content = escape(text.content);\n          html += '<div class=\"content\">' + text.content + '</div>';\n        }\n      }\n      return html;\n    }\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\nvar\n  global = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.fn.progress = function(parameters) {\n  var\n    $allModules    = $(this),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n          : $.extend({}, $.fn.progress.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $bar            = $(this).find(selector.bar),\n        $progress       = $(this).find(selector.progress),\n        $label          = $(this).find(selector.label),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        animating = false,\n        transitionEnd,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing progress bar', settings);\n\n          module.set.duration();\n          module.set.transitionEvent();\n\n          module.read.metadata();\n          module.read.settings();\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n\n        reset: function() {\n          module.remove.nextValue();\n          module.update.progress(0);\n        },\n\n        complete: function() {\n          if(module.percent === undefined || module.percent < 100) {\n            module.remove.progressPoll();\n            module.set.percent(100);\n          }\n        },\n\n        read: {\n          metadata: function() {\n            var\n              data = {\n                percent : $module.data(metadata.percent),\n                total   : $module.data(metadata.total),\n                value   : $module.data(metadata.value)\n              }\n            ;\n            if(data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n            if(data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n            if(data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function() {\n            if(settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n            if(settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n            if(settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n\n        bind: {\n          transitionEnd: function(callback) {\n            var\n              transitionEnd = module.get.transitionEnd()\n            ;\n            $bar\n              .one(transitionEnd + eventNamespace, function(event) {\n                clearTimeout(module.failSafeTimer);\n                callback.call(this, event);\n              })\n            ;\n            module.failSafeTimer = setTimeout(function() {\n              $bar.triggerHandler(transitionEnd);\n            }, settings.duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        increment: function(incrementValue) {\n          var\n            maxValue,\n            startValue,\n            newValue\n          ;\n          if( module.has.total() ) {\n            startValue     = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue       = startValue + incrementValue;\n          }\n          else {\n            startValue     = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n\n            newValue       = startValue + incrementValue;\n            maxValue       = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        decrement: function(decrementValue) {\n          var\n            total     = module.get.total(),\n            startValue,\n            newValue\n          ;\n          if(total) {\n            startValue     =  module.get.value();\n            decrementValue =  decrementValue || 1;\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          }\n          else {\n            startValue     =  module.get.percent();\n            decrementValue =  decrementValue || module.get.randomValue();\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n\n        has: {\n          progressPoll: function() {\n            return module.progressPoll;\n          },\n          total: function() {\n            return (module.get.total() !== false);\n          }\n        },\n\n        get: {\n          text: function(templateText) {\n            var\n              value   = module.value                || 0,\n              total   = module.total                || 0,\n              percent = (animating)\n                ? module.get.displayPercent()\n                : module.percent || 0,\n              left = (module.total > 0)\n                ? (total - value)\n                : (100 - percent)\n            ;\n            templateText = templateText || '';\n            templateText = templateText\n              .replace('{value}', value)\n              .replace('{total}', total)\n              .replace('{left}', left)\n              .replace('{percent}', percent)\n            ;\n            module.verbose('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n\n          normalizedValue: function(value) {\n            if(value < 0) {\n              module.debug('Value cannot decrement below 0');\n              return 0;\n            }\n            if(module.has.total()) {\n              if(value > module.total) {\n                module.debug('Value cannot increment above total', module.total);\n                return module.total;\n              }\n            }\n            else if(value > 100 ) {\n              module.debug('Value cannot increment above 100 percent');\n              return 100;\n            }\n            return value;\n          },\n\n          updateInterval: function() {\n            if(settings.updateInterval == 'auto') {\n              return settings.duration;\n            }\n            return settings.updateInterval;\n          },\n\n          randomValue: function() {\n            module.debug('Generating random increment percentage');\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n          },\n\n          numericValue: function(value) {\n            return (typeof value === 'string')\n              ? (value.replace(/[^\\d.]/g, '') !== '')\n                ? +(value.replace(/[^\\d.]/g, ''))\n                : false\n              : value\n            ;\n          },\n\n          transitionEnd: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function() {\n            var\n              barWidth       = $bar.width(),\n              totalWidth     = $module.width(),\n              minDisplay     = parseInt($bar.css('min-width'), 10),\n              displayPercent = (barWidth > minDisplay)\n                ? (barWidth / totalWidth * 100)\n                : module.percent\n            ;\n            return (settings.precision > 0)\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(displayPercent)\n            ;\n          },\n\n          percent: function() {\n            return module.percent || 0;\n          },\n          value: function() {\n            return module.nextValue || module.value || 0;\n          },\n          total: function() {\n            return module.total || false;\n          }\n        },\n\n        create: {\n          progressPoll: function() {\n            module.progressPoll = setTimeout(function() {\n              module.update.toNextValue();\n              module.remove.progressPoll();\n            }, module.get.updateInterval());\n          },\n        },\n\n        is: {\n          complete: function() {\n            return module.is.success() || module.is.warning() || module.is.error();\n          },\n          success: function() {\n            return $module.hasClass(className.success);\n          },\n          warning: function() {\n            return $module.hasClass(className.warning);\n          },\n          error: function() {\n            return $module.hasClass(className.error);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          visible: function() {\n            return $module.is(':visible');\n          }\n        },\n\n        remove: {\n          progressPoll: function() {\n            module.verbose('Removing progress poll timer');\n            if(module.progressPoll) {\n              clearTimeout(module.progressPoll);\n              delete module.progressPoll;\n            }\n          },\n          nextValue: function() {\n            module.verbose('Removing progress value stored for next update');\n            delete module.nextValue;\n          },\n          state: function() {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function() {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function() {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function() {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function() {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n\n        set: {\n          barWidth: function(value) {\n            if(value > 100) {\n              module.error(error.tooHigh, value);\n            }\n            else if (value < 0) {\n              module.error(error.tooLow, value);\n            }\n            else {\n              $bar\n                .css('width', value + '%')\n              ;\n              $module\n                .attr('data-percent', parseInt(value, 10))\n              ;\n            }\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar\n              .css({\n                'transition-duration':  duration\n              })\n            ;\n          },\n          percent: function(percent) {\n            percent = (typeof percent == 'string')\n              ? +(percent.replace('%', ''))\n              : percent\n            ;\n            // round display percentage\n            percent = (settings.precision > 0)\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(percent)\n            ;\n            module.percent = percent;\n            if( !module.has.total() ) {\n              module.value = (settings.precision > 0)\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n                : Math.round( (percent / 100) * module.total * 10) / 10\n              ;\n              if(settings.limitValues) {\n                module.value = (module.value > 100)\n                  ? 100\n                  : (module.value < 0)\n                    ? 0\n                    : module.value\n                ;\n              }\n            }\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function() {\n            var\n              animationCallback = function() {\n                module.verbose('Bar finished animating, removing continuous label updates');\n                clearInterval(module.interval);\n                animating = false;\n                module.set.labels();\n              }\n            ;\n            clearInterval(module.interval);\n            module.bind.transitionEnd(animationCallback);\n            animating = true;\n            module.interval = setInterval(function() {\n              var\n                isInDOM = $.contains(document.documentElement, element)\n              ;\n              if(!isInDOM) {\n                clearInterval(module.interval);\n                animating = false;\n              }\n              module.set.labels();\n            }, settings.framerate);\n          },\n          labels: function() {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function(text) {\n            text = text || '';\n            if(text) {\n              text = module.get.text(text);\n              module.verbose('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function(percent) {\n            percent = (percent !== undefined)\n              ? percent\n              : module.percent\n            ;\n            if(percent === 100) {\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              }\n              else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n                module.remove.progressPoll();\n              }\n            }\n            else if(percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            }\n            else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function(text) {\n            if(text !== undefined) {\n              $progress.text( module.get.text(text) );\n            }\n            else if(settings.label == 'ratio' && module.total) {\n              module.verbose('Adding ratio to bar label');\n              $progress.text( module.get.text(settings.text.ratio) );\n            }\n            else if(settings.label == 'percent') {\n              module.verbose('Adding percentage to bar label');\n              $progress.text( module.get.text(settings.text.percent) );\n            }\n          },\n          active: function(text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n            if(settings.showActivity && !module.is.active() ) {\n              $module.addClass(className.active);\n            }\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onActive.call(element, module.value, module.total);\n            });\n          },\n          success : function(text) {\n            text = text || settings.text.success || settings.text.active;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n            if(settings.text.success) {\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\n              module.set.label(text);\n            }\n            else {\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onSuccess.call(element, module.total);\n            });\n          },\n          warning : function(text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onWarning.call(element, module.value, module.total);\n            });\n          },\n          error : function(text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            module.bind.transitionEnd(function() {\n              settings.onError.call(element, module.value, module.total);\n            });\n          },\n          transitionEvent: function() {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function(totalValue) {\n            module.total = totalValue;\n          },\n          value: function(value) {\n            module.value = value;\n          },\n          progress: function(value) {\n            if(!module.has.progressPoll()) {\n              module.debug('First update in progress update interval, immediately updating', value);\n              module.update.progress(value);\n              module.create.progressPoll();\n            }\n            else {\n              module.debug('Updated within interval, setting next update to use new value', value);\n              module.set.nextValue(value);\n            }\n          },\n          nextValue: function(value) {\n            module.nextValue = value;\n          }\n        },\n\n        update: {\n          toNextValue: function() {\n            var\n              nextValue = module.nextValue\n            ;\n            if(nextValue) {\n              module.debug('Update interval complete using last updated value', nextValue);\n              module.update.progress(nextValue);\n              module.remove.nextValue();\n            }\n          },\n          progress: function(value) {\n            var\n              percentComplete\n            ;\n            value = module.get.numericValue(value);\n            if(value === false) {\n              module.error(error.nonNumeric, value);\n            }\n            value = module.get.normalizedValue(value);\n            if( module.has.total() ) {\n              module.set.value(value);\n              percentComplete = (value / module.total) * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent( percentComplete );\n            }\n            else {\n              percentComplete = value;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent( percentComplete );\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.progress.settings = {\n\n  name         : 'Progress',\n  namespace    : 'progress',\n\n  silent       : false,\n  debug        : false,\n  verbose      : false,\n  performance  : true,\n\n  random       : {\n    min : 2,\n    max : 5\n  },\n\n  duration       : 300,\n\n  updateInterval : 'auto',\n\n  autoSuccess    : true,\n  showActivity   : true,\n  limitValues    : true,\n\n  label          : 'percent',\n  precision      : 0,\n  framerate      : (1000 / 30), /// 30 fps\n\n  percent        : false,\n  total          : false,\n  value          : false,\n\n  // delay in ms for fail safe animation callback\n  failSafeDelay : 100,\n\n  onLabelUpdate : function(state, text, value, total){\n    return text;\n  },\n  onChange      : function(percent, value, total){},\n  onSuccess     : function(total){},\n  onActive      : function(value, total){},\n  onError       : function(value, total){},\n  onWarning     : function(value, total){},\n\n  error    : {\n    method     : 'The method you called is not defined.',\n    nonNumeric : 'Progress value is non numeric',\n    tooHigh    : 'Value specified is above 100%',\n    tooLow     : 'Value specified is below 0%'\n  },\n\n  regExp: {\n    variable: /\\{\\$*[A-z0-9]+\\}/g\n  },\n\n  metadata: {\n    percent : 'percent',\n    total   : 'total',\n    value   : 'value'\n  },\n\n  selector : {\n    bar      : '> .bar',\n    label    : '> .label',\n    progress : '.bar > .progress'\n  },\n\n  text : {\n    active  : false,\n    error   : false,\n    success : false,\n    warning : false,\n    percent : '{percent}%',\n    ratio   : '{value} of {total}'\n  },\n\n  className : {\n    active  : 'active',\n    error   : 'error',\n    success : 'success',\n    warning : 'warning'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        initialLoad,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.initialLoad();\n          module.set.rating( module.get.initialRating() );\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          }\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .addBack()\n                  .addClass(className.active)\n              ;\n            }\n            if(!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function() {\n            initialLoad = true;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  slent         : false,\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  fireOnInit    : false,\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Search\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.search = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\n          : $.extend({}, $.fn.search.settings),\n\n        className        = settings.className,\n        metadata         = settings.metadata,\n        regExp           = settings.regExp,\n        fields           = settings.fields,\n        selector         = settings.selector,\n        error            = settings.error,\n        namespace        = settings.namespace,\n\n        eventNamespace   = '.' + namespace,\n        moduleNamespace  = namespace + '-module',\n\n        $module          = $(this),\n        $prompt          = $module.find(selector.prompt),\n        $searchButton    = $module.find(selector.searchButton),\n        $results         = $module.find(selector.results),\n        $result          = $module.find(selector.result),\n        $category        = $module.find(selector.category),\n\n        element          = this,\n        instance         = $module.data(moduleNamespace),\n\n        disabledBubbled  = false,\n        resultsDismissed = false,\n\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n          module.determine.searchFields();\n          module.bind.events();\n          module.set.type();\n          module.create.results();\n          module.instantiate();\n        },\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.debug('Refreshing selector cache');\n          $prompt         = $module.find(selector.prompt);\n          $searchButton   = $module.find(selector.searchButton);\n          $category       = $module.find(selector.category);\n          $results        = $module.find(selector.results);\n          $result         = $module.find(selector.result);\n        },\n\n        refreshResults: function() {\n          $results = $module.find(selector.results);\n          $result  = $module.find(selector.result);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events to search');\n            if(settings.automatic) {\n              $module\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\n              ;\n              $prompt\n                .attr('autocomplete', 'off')\n              ;\n            }\n            $module\n              // prompt\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\n              // search button\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\n              // results\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\n            ;\n          }\n        },\n\n        determine: {\n          searchFields: function() {\n            // this makes sure $.extend does not add specified search fields to default fields\n            // this is the only setting which should not extend defaults\n            if(parameters && parameters.searchFields !== undefined) {\n              settings.searchFields = parameters.searchFields;\n            }\n          }\n        },\n\n        event: {\n          input: function() {\n            if(settings.searchDelay) {\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                if(module.is.focused()) {\n                  module.query();\n                }\n              }, settings.searchDelay);\n            }\n            else {\n              module.query();\n            }\n          },\n          focus: function() {\n            module.set.focus();\n            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\n              module.query(function() {\n                if(module.can.show() ) {\n                  module.showResults();\n                }\n              });\n            }\n          },\n          blur: function(event) {\n            var\n              pageLostFocus = (document.activeElement === this),\n              callback      = function() {\n                module.cancel.query();\n                module.remove.focus();\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\n              }\n            ;\n            if(pageLostFocus) {\n              return;\n            }\n            resultsDismissed = false;\n            if(module.resultsClicked) {\n              module.debug('Determining if user action caused search to close');\n              $module\n                .one('click.close' + eventNamespace, selector.results, function(event) {\n                  if(module.is.inMessage(event) || disabledBubbled) {\n                    $prompt.focus();\n                    return;\n                  }\n                  disabledBubbled = false;\n                  if( !module.is.animating() && !module.is.hidden()) {\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.debug('Input blurred without user action, closing results');\n              callback();\n            }\n          },\n          result: {\n            mousedown: function() {\n              module.resultsClicked = true;\n            },\n            mouseup: function() {\n              module.resultsClicked = false;\n            },\n            click: function(event) {\n              module.debug('Search result selected');\n              var\n                $result = $(this),\n                $title  = $result.find(selector.title).eq(0),\n                $link   = $result.is('a[href]')\n                  ? $result\n                  : $result.find('a[href]').eq(0),\n                href    = $link.attr('href')   || false,\n                target  = $link.attr('target') || false,\n                title   = $title.html(),\n                // title is used for result lookup\n                value   = ($title.length > 0)\n                  ? $title.text()\n                  : false,\n                results = module.get.results(),\n                result  = $result.data(metadata.result) || module.get.result(value, results),\n                returnedValue\n              ;\n              if( $.isFunction(settings.onSelect) ) {\n                if(settings.onSelect.call(element, result, results) === false) {\n                  module.debug('Custom onSelect callback cancelled default select action');\n                  disabledBubbled = true;\n                  return;\n                }\n              }\n              module.hideResults();\n              if(value) {\n                module.set.value(value);\n              }\n              if(href) {\n                module.verbose('Opening search link found in result', $link);\n                if(target == '_blank' || event.ctrlKey) {\n                  window.open(href);\n                }\n                else {\n                  window.location.href = (href);\n                }\n              }\n            }\n          }\n        },\n        handleKeyboard: function(event) {\n          var\n            // force selector refresh\n            $result         = $module.find(selector.result),\n            $category       = $module.find(selector.category),\n            $activeResult   = $result.filter('.' + className.active),\n            currentIndex    = $result.index( $activeResult ),\n            resultSize      = $result.length,\n            hasActiveResult = $activeResult.length > 0,\n\n            keyCode         = event.which,\n            keys            = {\n              backspace : 8,\n              enter     : 13,\n              escape    : 27,\n              upArrow   : 38,\n              downArrow : 40\n            },\n            newIndex\n          ;\n          // search shortcuts\n          if(keyCode == keys.escape) {\n            module.verbose('Escape key pressed, blurring search field');\n            module.hideResults();\n            resultsDismissed = true;\n          }\n          if( module.is.visible() ) {\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, selecting active result');\n              if( $result.filter('.' + className.active).length > 0 ) {\n                module.event.result.click.call($result.filter('.' + className.active), event);\n                event.preventDefault();\n                return false;\n              }\n            }\n            else if(keyCode == keys.upArrow && hasActiveResult) {\n              module.verbose('Up key pressed, changing active result');\n              newIndex = (currentIndex - 1 < 0)\n                ? currentIndex\n                : currentIndex - 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n            else if(keyCode == keys.downArrow) {\n              module.verbose('Down key pressed, changing active result');\n              newIndex = (currentIndex + 1 >= resultSize)\n                ? currentIndex\n                : currentIndex + 1\n              ;\n              $category\n                .removeClass(className.active)\n              ;\n              $result\n                .removeClass(className.active)\n                .eq(newIndex)\n                  .addClass(className.active)\n                  .closest($category)\n                    .addClass(className.active)\n              ;\n              event.preventDefault();\n            }\n          }\n          else {\n            // query shortcuts\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, executing query');\n              module.query();\n              module.set.buttonPressed();\n              $prompt.one('keyup', module.remove.buttonFocus);\n            }\n          }\n        },\n\n        setup: {\n          api: function(searchTerm, callback) {\n            var\n              apiSettings = {\n                debug             : settings.debug,\n                on                : false,\n                cache             : true,\n                action            : 'search',\n                urlData           : {\n                  query : searchTerm\n                },\n                onSuccess         : function(response) {\n                  module.parse.response.call(element, response, searchTerm);\n                  callback();\n                },\n                onFailure         : function() {\n                  module.displayMessage(error.serverError);\n                  callback();\n                },\n                onAbort : function(response) {\n                },\n                onError           : module.error\n              },\n              searchHTML\n            ;\n            $.extend(true, apiSettings, settings.apiSettings);\n            module.verbose('Setting up API request', apiSettings);\n            $module.api(apiSettings);\n          }\n        },\n\n        can: {\n          useAPI: function() {\n            return $.fn.api !== undefined;\n          },\n          show: function() {\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\n          },\n          transition: function() {\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $results.hasClass(className.animating);\n          },\n          hidden: function() {\n            return $results.hasClass(className.hidden);\n          },\n          inMessage: function(event) {\n            if(!event.target) {\n              return;\n            }\n            var\n              $target = $(event.target),\n              isInDOM = $.contains(document.documentElement, event.target)\n            ;\n            return (isInDOM && $target.closest(selector.message).length > 0);\n          },\n          empty: function() {\n            return ($results.html() === '');\n          },\n          visible: function() {\n            return ($results.filter(':visible').length > 0);\n          },\n          focused: function() {\n            return ($prompt.filter(':focus').length > 0);\n          }\n        },\n\n        get: {\n          inputEvent: function() {\n            var\n              prompt = $prompt[0],\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\n                ? 'input'\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\n                  ? 'propertychange'\n                  : 'keyup'\n            ;\n            return inputEvent;\n          },\n          value: function() {\n            return $prompt.val();\n          },\n          results: function() {\n            var\n              results = $module.data(metadata.results)\n            ;\n            return results;\n          },\n          result: function(value, results) {\n            var\n              lookupFields = ['title', 'id'],\n              result       = false\n            ;\n            value = (value !== undefined)\n              ? value\n              : module.get.value()\n            ;\n            results = (results !== undefined)\n              ? results\n              : module.get.results()\n            ;\n            if(settings.type === 'category') {\n              module.debug('Finding result that matches', value);\n              $.each(results, function(index, category) {\n                if($.isArray(category.results)) {\n                  result = module.search.object(value, category.results, lookupFields)[0];\n                  // don't continue searching if a result is found\n                  if(result) {\n                    return false;\n                  }\n                }\n              });\n            }\n            else {\n              module.debug('Finding result in results object', value);\n              result = module.search.object(value, results, lookupFields)[0];\n            }\n            return result || false;\n          },\n        },\n\n        select: {\n          firstResult: function() {\n            module.verbose('Selecting first result');\n            $result.first().addClass(className.active);\n          }\n        },\n\n        set: {\n          focus: function() {\n            $module.addClass(className.focus);\n          },\n          loading: function() {\n            $module.addClass(className.loading);\n          },\n          value: function(value) {\n            module.verbose('Setting search input value', value);\n            $prompt\n              .val(value)\n            ;\n          },\n          type: function(type) {\n            type = type || settings.type;\n            if(settings.type == 'category') {\n              $module.addClass(settings.type);\n            }\n          },\n          buttonPressed: function() {\n            $searchButton.addClass(className.pressed);\n          }\n        },\n\n        remove: {\n          loading: function() {\n            $module.removeClass(className.loading);\n          },\n          focus: function() {\n            $module.removeClass(className.focus);\n          },\n          buttonPressed: function() {\n            $searchButton.removeClass(className.pressed);\n          }\n        },\n\n        query: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          var\n            searchTerm = module.get.value(),\n            cache = module.read.cache(searchTerm)\n          ;\n          callback = callback || function() {};\n          if( module.has.minimumCharacters() )  {\n            if(cache) {\n              module.debug('Reading result from cache', searchTerm);\n              module.save.results(cache.results);\n              module.addResults(cache.html);\n              module.inject.id(cache.results);\n              callback();\n            }\n            else {\n              module.debug('Querying for', searchTerm);\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\n                module.search.local(searchTerm);\n                callback();\n              }\n              else if( module.can.useAPI() ) {\n                module.search.remote(searchTerm, callback);\n              }\n              else {\n                module.error(error.source);\n                callback();\n              }\n            }\n            settings.onSearchQuery.call(element, searchTerm);\n          }\n          else {\n            module.hideResults();\n          }\n        },\n\n        search: {\n          local: function(searchTerm) {\n            var\n              results = module.search.object(searchTerm, settings.content),\n              searchHTML\n            ;\n            module.set.loading();\n            module.save.results(results);\n            module.debug('Returned local search results', results);\n\n            searchHTML = module.generateResults({\n              results: results\n            });\n            module.remove.loading();\n            module.addResults(searchHTML);\n            module.inject.id(results);\n            module.write.cache(searchTerm, {\n              html    : searchHTML,\n              results : results\n            });\n          },\n          remote: function(searchTerm, callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if($module.api('is loading')) {\n              $module.api('abort');\n            }\n            module.setup.api(searchTerm, callback);\n            $module\n              .api('query')\n            ;\n          },\n          object: function(searchTerm, source, searchFields) {\n            var\n              results      = [],\n              fuzzyResults = [],\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\n\n              // avoid duplicates when pushing results\n              addResult = function(array, result) {\n                var\n                  notResult      = ($.inArray(result, results) == -1),\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\n                ;\n                if(notResult && notFuzzyResult) {\n                  array.push(result);\n                }\n              }\n            ;\n            source = source || settings.source;\n            searchFields = (searchFields !== undefined)\n              ? searchFields\n              : settings.searchFields\n            ;\n\n            // search fields should be array to loop correctly\n            if(!$.isArray(searchFields)) {\n              searchFields = [searchFields];\n            }\n\n            // exit conditions if no source\n            if(source === undefined || source === false) {\n              module.error(error.source);\n              return [];\n            }\n\n            // iterate through search fields looking for matches\n            $.each(searchFields, function(index, field) {\n              $.each(source, function(label, content) {\n                var\n                  fieldExists = (typeof content[field] == 'string')\n                ;\n                if(fieldExists) {\n                  if( content[field].search(matchRegExp) !== -1) {\n                    // content starts with value (first in results)\n                    addResult(results, content);\n                  }\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\n                    // content fuzzy matches (last in results)\n                    addResult(fuzzyResults, content);\n                  }\n                }\n              });\n            });\n            return $.merge(results, fuzzyResults);\n          }\n        },\n\n        fuzzySearch: function(query, term) {\n          var\n            termLength  = term.length,\n            queryLength = query.length\n          ;\n          if(typeof query !== 'string') {\n            return false;\n          }\n          query = query.toLowerCase();\n          term  = term.toLowerCase();\n          if(queryLength > termLength) {\n            return false;\n          }\n          if(queryLength === termLength) {\n            return (query === term);\n          }\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\n            var\n              queryCharacter = query.charCodeAt(characterIndex)\n            ;\n            while(nextCharacterIndex < termLength) {\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\n                continue search;\n              }\n            }\n            return false;\n          }\n          return true;\n        },\n\n        parse: {\n          response: function(response, searchTerm) {\n            var\n              searchHTML = module.generateResults(response)\n            ;\n            module.verbose('Parsing server response', response);\n            if(response !== undefined) {\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\n                module.addResults(searchHTML);\n                module.inject.id(response[fields.results]);\n                module.write.cache(searchTerm, {\n                  html    : searchHTML,\n                  results : response[fields.results]\n                });\n                module.save.results(response[fields.results]);\n              }\n            }\n          }\n        },\n\n        cancel: {\n          query: function() {\n            if( module.can.useAPI() ) {\n              $module.api('abort');\n            }\n          }\n        },\n\n        has: {\n          minimumCharacters: function() {\n            var\n              searchTerm    = module.get.value(),\n              numCharacters = searchTerm.length\n            ;\n            return (numCharacters >= settings.minCharacters);\n          },\n          results: function() {\n            if($results.length === 0) {\n              return false;\n            }\n            var\n              html = $results.html()\n            ;\n            return html != '';\n          }\n        },\n\n        clear: {\n          cache: function(value) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(!value) {\n              module.debug('Clearing cache', value);\n              $module.removeData(metadata.cache);\n            }\n            else if(value && cache && cache[value]) {\n              module.debug('Removing value from cache', value);\n              delete cache[value];\n              $module.data(metadata.cache, cache);\n            }\n          }\n        },\n\n        read: {\n          cache: function(name) {\n            var\n              cache = $module.data(metadata.cache)\n            ;\n            if(settings.cache) {\n              module.verbose('Checking cache for generated html for query', name);\n              return (typeof cache == 'object') && (cache[name] !== undefined)\n                ? cache[name]\n                : false\n              ;\n            }\n            return false;\n          }\n        },\n\n        create: {\n          id: function(resultIndex, categoryIndex) {\n            var\n              resultID      = (resultIndex + 1), // not zero indexed\n              categoryID    = (categoryIndex + 1),\n              firstCharCode,\n              letterID,\n              id\n            ;\n            if(categoryIndex !== undefined) {\n              // start char code for \"A\"\n              letterID = String.fromCharCode(97 + categoryIndex);\n              id          = letterID + resultID;\n              module.verbose('Creating category result id', id);\n            }\n            else {\n              id = resultID;\n              module.verbose('Creating result id', id);\n            }\n            return id;\n          },\n          results: function() {\n            if($results.length === 0) {\n              $results = $('<div />')\n                .addClass(className.results)\n                .appendTo($module)\n              ;\n            }\n          }\n        },\n\n        inject: {\n          result: function(result, resultIndex, categoryIndex) {\n            module.verbose('Injecting result into results');\n            var\n              $selectedResult = (categoryIndex !== undefined)\n                ? $results\n                    .children().eq(categoryIndex)\n                      .children(selector.result).eq(resultIndex)\n                : $results\n                    .children(selector.result).eq(resultIndex)\n            ;\n            module.verbose('Injecting results metadata', $selectedResult);\n            $selectedResult\n              .data(metadata.result, result)\n            ;\n          },\n          id: function(results) {\n            module.debug('Injecting unique ids into results');\n            var\n              // since results may be object, we must use counters\n              categoryIndex = 0,\n              resultIndex   = 0\n            ;\n            if(settings.type === 'category') {\n              // iterate through each category result\n              $.each(results, function(index, category) {\n                resultIndex = 0;\n                $.each(category.results, function(index, value) {\n                  var\n                    result = category.results[index]\n                  ;\n                  if(result.id === undefined) {\n                    result.id = module.create.id(resultIndex, categoryIndex);\n                  }\n                  module.inject.result(result, resultIndex, categoryIndex);\n                  resultIndex++;\n                });\n                categoryIndex++;\n              });\n            }\n            else {\n              // top level\n              $.each(results, function(index, value) {\n                var\n                  result = results[index]\n                ;\n                if(result.id === undefined) {\n                  result.id = module.create.id(resultIndex);\n                }\n                module.inject.result(result, resultIndex);\n                resultIndex++;\n              });\n            }\n            return results;\n          }\n        },\n\n        save: {\n          results: function(results) {\n            module.verbose('Saving current search results to metadata', results);\n            $module.data(metadata.results, results);\n          }\n        },\n\n        write: {\n          cache: function(name, value) {\n            var\n              cache = ($module.data(metadata.cache) !== undefined)\n                ? $module.data(metadata.cache)\n                : {}\n            ;\n            if(settings.cache) {\n              module.verbose('Writing generated html to cache', name, value);\n              cache[name] = value;\n              $module\n                .data(metadata.cache, cache)\n              ;\n            }\n          }\n        },\n\n        addResults: function(html) {\n          if( $.isFunction(settings.onResultsAdd) ) {\n            if( settings.onResultsAdd.call($results, html) === false ) {\n              module.debug('onResultsAdd callback cancelled default action');\n              return false;\n            }\n          }\n          if(html) {\n            $results\n              .html(html)\n            ;\n            module.refreshResults();\n            if(settings.selectFirstResult) {\n              module.select.firstResult();\n            }\n            module.showResults();\n          }\n          else {\n            module.hideResults(function() {\n              $results.empty();\n            });\n          }\n        },\n\n        showResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(resultsDismissed) {\n            return;\n          }\n          if(!module.is.visible() && module.has.results()) {\n            if( module.can.transition() ) {\n              module.debug('Showing results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' in',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Showing results with javascript');\n              $results\n                .stop()\n                .fadeIn(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsOpen.call($results);\n          }\n        },\n        hideResults: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.visible() ) {\n            if( module.can.transition() ) {\n              module.debug('Hiding results with css animations');\n              $results\n                .transition({\n                  animation  : settings.transition + ' out',\n                  debug      : settings.debug,\n                  verbose    : settings.verbose,\n                  duration   : settings.duration,\n                  onComplete : function() {\n                    callback();\n                  },\n                  queue      : true\n                })\n              ;\n            }\n            else {\n              module.debug('Hiding results with javascript');\n              $results\n                .stop()\n                .fadeOut(settings.duration, settings.easing)\n              ;\n            }\n            settings.onResultsClose.call($results);\n          }\n        },\n\n        generateResults: function(response) {\n          module.debug('Generating html from response', response);\n          var\n            template       = settings.templates[settings.type],\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\n            html           = ''\n          ;\n          if(isProperObject || isProperArray ) {\n            if(settings.maxResults > 0) {\n              if(isProperObject) {\n                if(settings.type == 'standard') {\n                  module.error(error.maxResults);\n                }\n              }\n              else {\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\n              }\n            }\n            if($.isFunction(template)) {\n              html = template(response, fields);\n            }\n            else {\n              module.error(error.noTemplate, false);\n            }\n          }\n          else if(settings.showNoResults) {\n            html = module.displayMessage(error.noResults, 'empty');\n          }\n          settings.onResults.call(element, response);\n          return html;\n        },\n\n        displayMessage: function(text, type) {\n          type = type || 'standard';\n          module.debug('Displaying message', text, type);\n          module.addResults( settings.templates.message(text, type) );\n          return settings.templates.message(text, type);\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.search.settings = {\n\n  name              : 'Search',\n  namespace         : 'search',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // template to use (specified in settings.templates)\n  type              : 'standard',\n\n  // minimum characters required to search\n  minCharacters     : 1,\n\n  // whether to select first result after searching automatically\n  selectFirstResult : false,\n\n  // API config\n  apiSettings       : false,\n\n  // object to search\n  source            : false,\n\n  // Whether search should query current term on focus\n  searchOnFocus     : true,\n\n  // fields to search\n  searchFields   : [\n    'title',\n    'description'\n  ],\n\n  // field to display in standard results template\n  displayField   : '',\n\n  // whether to include fuzzy results in local search\n  searchFullText : true,\n\n  // whether to add events to prompt automatically\n  automatic      : true,\n\n  // delay before hiding menu after blur\n  hideDelay      : 0,\n\n  // delay before searching\n  searchDelay    : 200,\n\n  // maximum results returned from local\n  maxResults     : 7,\n\n  // whether to store lookups in local cache\n  cache          : true,\n\n  // whether no results errors should be shown\n  showNoResults  : true,\n\n  // transition settings\n  transition     : 'scale',\n  duration       : 200,\n  easing         : 'easeOutExpo',\n\n  // callbacks\n  onSelect       : false,\n  onResultsAdd   : false,\n\n  onSearchQuery  : function(query){},\n  onResults      : function(response){},\n\n  onResultsOpen  : function(){},\n  onResultsClose : function(){},\n\n  className: {\n    animating : 'animating',\n    active    : 'active',\n    empty     : 'empty',\n    focus     : 'focus',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    results   : 'results',\n    pressed   : 'down'\n  },\n\n  error : {\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\n    noResults   : 'Your search returned no results',\n    logging     : 'Error in debug logging, exiting.',\n    noEndpoint  : 'No search endpoint was specified',\n    noTemplate  : 'A valid template name was not specified.',\n    serverError : 'There was an issue querying the server.',\n    maxResults  : 'Results must be an array to use maxResults setting',\n    method      : 'The method you called is not defined.'\n  },\n\n  metadata: {\n    cache   : 'cache',\n    results : 'results',\n    result  : 'result'\n  },\n\n  regExp: {\n    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    beginsWith : '(?:\\s|^)'\n  },\n\n  // maps api response attributes to internal representation\n  fields: {\n    categories      : 'results',     // array of categories (category view)\n    categoryName    : 'name',        // name of category (category view)\n    categoryResults : 'results',     // array of results (category view)\n    description     : 'description', // result description\n    image           : 'image',       // result image\n    price           : 'price',       // result price\n    results         : 'results',     // array of results (standard)\n    title           : 'title',       // result title\n    url             : 'url',         // result url\n    action          : 'action',      // \"view more\" object name\n    actionText      : 'text',        // \"view more\" text\n    actionURL       : 'url'          // \"view more\" url\n  },\n\n  selector : {\n    prompt       : '.prompt',\n    searchButton : '.search.button',\n    results      : '.results',\n    message      : '.results > .message',\n    category     : '.category',\n    result       : '.result',\n    title        : '.title, .name'\n  },\n\n  templates: {\n    escape: function(string) {\n      var\n        badChars     = /[&<>\"'`]/g,\n        shouldEscape = /[&<>\"'`]/,\n        escape       = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#x27;\",\n          \"`\": \"&#x60;\"\n        },\n        escapedChar  = function(chr) {\n          return escape[chr];\n        }\n      ;\n      if(shouldEscape.test(string)) {\n        return string.replace(badChars, escapedChar);\n      }\n      return string;\n    },\n    message: function(message, type) {\n      var\n        html = ''\n      ;\n      if(message !== undefined && type !== undefined) {\n        html +=  ''\n          + '<div class=\"message ' + type + '\">'\n        ;\n        // message type\n        if(type == 'empty') {\n          html += ''\n            + '<div class=\"header\">No Results</div class=\"header\">'\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\n          ;\n        }\n        else {\n          html += ' <div class=\"description\">' + message + '</div>';\n        }\n        html += '</div>';\n      }\n      return html;\n    },\n    category: function(response, fields) {\n      var\n        html = '',\n        escape = $.fn.search.settings.templates.escape\n      ;\n      if(response[fields.categoryResults] !== undefined) {\n\n        // each category\n        $.each(response[fields.categoryResults], function(index, category) {\n          if(category[fields.results] !== undefined && category.results.length > 0) {\n\n            html  += '<div class=\"category\">';\n\n            if(category[fields.categoryName] !== undefined) {\n              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\n            }\n\n            // each item inside category\n            $.each(category.results, function(index, result) {\n              if(result[fields.url]) {\n                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n              }\n              else {\n                html  += '<a class=\"result\">';\n              }\n              if(result[fields.image] !== undefined) {\n                html += ''\n                  + '<div class=\"image\">'\n                  + ' <img src=\"' + result[fields.image] + '\">'\n                  + '</div>'\n                ;\n              }\n              html += '<div class=\"content\">';\n              if(result[fields.price] !== undefined) {\n                html += '<div class=\"price\">' + result[fields.price] + '</div>';\n              }\n              if(result[fields.title] !== undefined) {\n                html += '<div class=\"title\">' + result[fields.title] + '</div>';\n              }\n              if(result[fields.description] !== undefined) {\n                html += '<div class=\"description\">' + result[fields.description] + '</div>';\n              }\n              html  += ''\n                + '</div>'\n              ;\n              html += '</a>';\n            });\n            html  += ''\n              + '</div>'\n            ;\n          }\n        });\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    },\n    standard: function(response, fields) {\n      var\n        html = ''\n      ;\n      if(response[fields.results] !== undefined) {\n\n        // each result\n        $.each(response[fields.results], function(index, result) {\n          if(result[fields.url]) {\n            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\n          }\n          else {\n            html  += '<a class=\"result\">';\n          }\n          if(result[fields.image] !== undefined) {\n            html += ''\n              + '<div class=\"image\">'\n              + ' <img src=\"' + result[fields.image] + '\">'\n              + '</div>'\n            ;\n          }\n          html += '<div class=\"content\">';\n          if(result[fields.price] !== undefined) {\n            html += '<div class=\"price\">' + result[fields.price] + '</div>';\n          }\n          if(result[fields.title] !== undefined) {\n            html += '<div class=\"title\">' + result[fields.title] + '</div>';\n          }\n          if(result[fields.description] !== undefined) {\n            html += '<div class=\"description\">' + result[fields.description] + '</div>';\n          }\n          html  += ''\n            + '</div>'\n          ;\n          html += '</a>';\n        });\n\n        if(response[fields.action]) {\n          html += ''\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\n          +   response[fields.action][fields.actionText]\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    }\n  }\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Shape\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.shape = function(parameters) {\n  var\n    $allModules     = $(this),\n    $body           = $('body'),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        moduleSelector = $allModules.selector || '',\n        settings       = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\n          : $.extend({}, $.fn.shape.settings),\n\n        // internal aliases\n        namespace     = settings.namespace,\n        selector      = settings.selector,\n        error         = settings.error,\n        className     = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // selector cache\n        $module       = $(this),\n        $sides        = $module.find(selector.sides),\n        $side         = $module.find(selector.side),\n\n        // private variables\n        nextIndex = false,\n        $activeSide,\n        $nextSide,\n\n        // standard module\n        element       = this,\n        instance      = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module for', element);\n          module.set.defaultSide();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache for', element);\n          $module = $(element);\n          $sides  = $(this).find(selector.shape);\n          $side   = $(this).find(selector.side);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          var\n            shape          = $sides[0] || document.createElement('div'),\n            fakeAssignment = shape.offsetWidth\n          ;\n        },\n\n        animate: function(propertyObject, callback) {\n          module.verbose('Animating box with properties', propertyObject);\n          callback = callback || function(event) {\n            module.verbose('Executing animation callback');\n            if(event !== undefined) {\n              event.stopPropagation();\n            }\n            module.reset();\n            module.set.active();\n          };\n          settings.beforeChange.call($nextSide[0]);\n          if(module.get.transitionEvent()) {\n            module.verbose('Starting CSS animation');\n            $module\n              .addClass(className.animating)\n            ;\n            $sides\n              .css(propertyObject)\n              .one(module.get.transitionEvent(), callback)\n            ;\n            module.set.duration(settings.duration);\n            requestAnimationFrame(function() {\n              $module\n                .addClass(className.animating)\n              ;\n              $activeSide\n                .addClass(className.hidden)\n              ;\n            });\n          }\n          else {\n            callback();\n          }\n        },\n\n        queue: function(method) {\n          module.debug('Queueing animation of', method);\n          $sides\n            .one(module.get.transitionEvent(), function() {\n              module.debug('Executing queued animation');\n              setTimeout(function(){\n                $module.shape(method);\n              }, 0);\n            })\n          ;\n        },\n\n        reset: function() {\n          module.verbose('Animating states reset');\n          $module\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          // removeAttr style does not consistently work in safari\n          $sides\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          $side\n            .attr('style', '')\n            .removeAttr('style')\n            .removeClass(className.hidden)\n          ;\n          $nextSide\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n        },\n\n        is: {\n          complete: function() {\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\n          },\n          animating: function() {\n            return $module.hasClass(className.animating);\n          }\n        },\n\n        set: {\n\n          defaultSide: function() {\n            $activeSide = $module.find('.' + settings.className.active);\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n            nextIndex = false;\n            module.verbose('Active side set to', $activeSide);\n            module.verbose('Next side set to', $nextSide);\n          },\n\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting animation duration', duration);\n            if(settings.duration || settings.duration === 0) {\n              $sides.add($side)\n                .css({\n                  '-webkit-transition-duration': duration,\n                  '-moz-transition-duration': duration,\n                  '-ms-transition-duration': duration,\n                  '-o-transition-duration': duration,\n                  'transition-duration': duration\n                })\n              ;\n            }\n          },\n\n          currentStageSize: function() {\n            var\n              $activeSide = $module.find('.' + settings.className.active),\n              width       = $activeSide.outerWidth(true),\n              height      = $activeSide.outerHeight(true)\n            ;\n            $module\n              .css({\n                width: width,\n                height: height\n              })\n            ;\n          },\n\n          stageSize: function() {\n            var\n              $clone      = $module.clone().addClass(className.loading),\n              $activeSide = $clone.find('.' + settings.className.active),\n              $nextSide   = (nextIndex)\n                ? $clone.find(selector.side).eq(nextIndex)\n                : ( $activeSide.next(selector.side).length > 0 )\n                  ? $activeSide.next(selector.side)\n                  : $clone.find(selector.side).first(),\n              newWidth    = (settings.width == 'next')\n                ? $nextSide.outerWidth(true)\n                : (settings.width == 'initial')\n                  ? $module.width()\n                  : settings.width,\n              newHeight    = (settings.height == 'next')\n                ? $nextSide.outerHeight(true)\n                : (settings.height == 'initial')\n                  ? $module.height()\n                  : settings.height\n            ;\n            $activeSide.removeClass(className.active);\n            $nextSide.addClass(className.active);\n            $clone.insertAfter($module);\n            $clone.remove();\n            if(settings.width != 'auto') {\n              $module.css('width', newWidth + settings.jitter);\n              module.verbose('Specifying width during animation', newWidth);\n            }\n            if(settings.height != 'auto') {\n              $module.css('height', newHeight + settings.jitter);\n              module.verbose('Specifying height during animation', newHeight);\n            }\n          },\n\n          nextSide: function(selector) {\n            nextIndex = selector;\n            $nextSide = $side.filter(selector);\n            nextIndex = $side.index($nextSide);\n            if($nextSide.length === 0) {\n              module.set.defaultSide();\n              module.error(error.side);\n            }\n            module.verbose('Next side manually set to', $nextSide);\n          },\n\n          active: function() {\n            module.verbose('Setting new side to active', $nextSide);\n            $side\n              .removeClass(className.active)\n            ;\n            $nextSide\n              .addClass(className.active)\n            ;\n            settings.onChange.call($nextSide[0]);\n            module.set.defaultSide();\n          }\n        },\n\n        flip: {\n\n          up: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping up', $nextSide);\n              var\n                transform = module.get.transform.up()\n              ;\n              module.set.stageSize();\n              module.stage.above();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip up');\n            }\n          },\n\n          down: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping down', $nextSide);\n              var\n                transform = module.get.transform.down()\n              ;\n              module.set.stageSize();\n              module.stage.below();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip down');\n            }\n          },\n\n          left: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping left', $nextSide);\n              var\n                transform = module.get.transform.left()\n              ;\n              module.set.stageSize();\n              module.stage.left();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip left');\n            }\n          },\n\n          right: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping right', $nextSide);\n              var\n                transform = module.get.transform.right()\n              ;\n              module.set.stageSize();\n              module.stage.right();\n              module.animate(transform);\n            }\n            else {\n              module.queue('flip right');\n            }\n          },\n\n          over: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping over', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.over() );\n            }\n            else {\n              module.queue('flip over');\n            }\n          },\n\n          back: function() {\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\n              module.debug('Side already visible', $nextSide);\n              return;\n            }\n            if( !module.is.animating()) {\n              module.debug('Flipping back', $nextSide);\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.back() );\n            }\n            else {\n              module.queue('flip back');\n            }\n          }\n\n        },\n\n        get: {\n\n          transform: {\n            up: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\n              };\n            },\n\n            down: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                  z: -($activeSide.outerHeight(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\n              };\n            },\n\n            left: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\n              };\n            },\n\n            right: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\n                  z : -($activeSide.outerWidth(true) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\n              };\n            },\n\n            over: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\n              };\n            },\n\n            back: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\n              };\n            }\n          },\n\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          nextSide: function() {\n            return ( $activeSide.next(selector.side).length > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n          }\n\n        },\n\n        stage: {\n\n          above: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          below: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight(true) / 2),\n                  next   : ($activeSide.outerHeight(true) / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          left: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          right: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $sides\n              .css({\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\n              })\n            ;\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          behind: function() {\n            var\n              height = {\n                active : $activeSide.outerWidth(true),\n                next   : $nextSide.outerWidth(true)\n              },\n              box = {\n                origin : ( ( height.active - height.next ) / 2),\n                depth  : {\n                  active : (height.next / 2),\n                  next   : (height.active / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-180deg)'\n              })\n            ;\n          }\n        },\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.shape.settings = {\n\n  // module info\n  name : 'Shape',\n\n  // hide all debug content\n  silent     : false,\n\n  // debug content outputted to console\n  debug      : false,\n\n  // verbose debug output\n  verbose    : false,\n\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\n  jitter     : 0,\n\n  // performance data output\n  performance: true,\n\n  // event namespace\n  namespace  : 'shape',\n\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\n  width: 'initial',\n\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\n  height: 'initial',\n\n  // callback occurs on side change\n  beforeChange : function() {},\n  onChange     : function() {},\n\n  // allow animation to same side\n  allowRepeats: false,\n\n  // animation duration\n  duration   : false,\n\n  // possible errors\n  error: {\n    side   : 'You tried to switch to a side that does not exist.',\n    method : 'The method you called is not defined'\n  },\n\n  // classnames used\n  className   : {\n    animating : 'animating',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    active    : 'active'\n  },\n\n  // selectors used\n  selector    : {\n    sides : '.sides',\n    side  : '.side'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Sidebar\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sidebar = function(parameters) {\n  var\n    $allModules     = $(this),\n    $window         = $(window),\n    $document       = $(document),\n    $html           = $('html'),\n    $head           = $('head'),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\n          : $.extend({}, $.fn.sidebar.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        regExp          = settings.regExp,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $sidebars       = $module.children(selector.sidebar),\n        $fixed          = $context.children(selector.fixed),\n        $pusher         = $context.children(selector.pusher),\n        $style,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        elementNamespace,\n        id,\n        currentScroll,\n        transitionEvent,\n\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.debug('Initializing sidebar', parameters);\n\n          module.create.id();\n\n          transitionEvent = module.get.transitionEvent();\n\n          // avoids locking rendering if initialized in onReady\n          if(settings.delaySetup) {\n            requestAnimationFrame(module.setup.layout);\n          }\n          else {\n            module.setup.layout();\n          }\n\n          requestAnimationFrame(function() {\n            module.setup.cache();\n          });\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        create: {\n          id: function() {\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\n            elementNamespace = '.' + id;\n            module.verbose('Creating unique id for element', id);\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n          if(module.is.ios()) {\n            module.remove.ios();\n          }\n          // bound by uuid\n          $context.off(elementNamespace);\n          $window.off(elementNamespace);\n          $document.off(elementNamespace);\n        },\n\n        event: {\n          clickaway: function(event) {\n            var\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\n              clickedContext  = ($context.is(event.target))\n            ;\n            if(clickedInPusher) {\n              module.verbose('User clicked on dimmed page');\n              module.hide();\n            }\n            if(clickedContext) {\n              module.verbose('User clicked on dimmable context (scaled out page)');\n              module.hide();\n            }\n          },\n          touch: function(event) {\n            //event.stopPropagation();\n          },\n          containScroll: function(event) {\n            if(element.scrollTop <= 0)  {\n              element.scrollTop = 1;\n            }\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\n            }\n          },\n          scroll: function(event) {\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\n              event.preventDefault();\n            }\n          }\n        },\n\n        bind: {\n          clickaway: function() {\n            module.verbose('Adding clickaway events to context', $context);\n            if(settings.closable) {\n              $context\n                .on('click'    + elementNamespace, module.event.clickaway)\n                .on('touchend' + elementNamespace, module.event.clickaway)\n              ;\n            }\n          },\n          scrollLock: function() {\n            if(settings.scrollLock) {\n              module.debug('Disabling page scroll');\n              $window\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\n              ;\n            }\n            module.verbose('Adding events to contain sidebar scroll');\n            $document\n              .on('touchmove' + elementNamespace, module.event.touch)\n            ;\n            $module\n              .on('scroll' + eventNamespace, module.event.containScroll)\n            ;\n          }\n        },\n        unbind: {\n          clickaway: function() {\n            module.verbose('Removing clickaway events from context', $context);\n            $context.off(elementNamespace);\n          },\n          scrollLock: function() {\n            module.verbose('Removing scroll lock from page');\n            $document.off(elementNamespace);\n            $window.off(elementNamespace);\n            $module.off('scroll' + eventNamespace);\n          }\n        },\n\n        add: {\n          inlineCSS: function() {\n            var\n              width     = module.cache.width  || $module.outerWidth(),\n              height    = module.cache.height || $module.outerHeight(),\n              isRTL     = module.is.rtl(),\n              direction = module.get.direction(),\n              distance  = {\n                left   : width,\n                right  : -width,\n                top    : height,\n                bottom : -height\n              },\n              style\n            ;\n\n            if(isRTL){\n              module.verbose('RTL detected, flipping widths');\n              distance.left = -width;\n              distance.right = width;\n            }\n\n            style  = '<style>';\n\n            if(direction === 'left' || direction === 'right') {\n              module.debug('Adding CSS rules for animation distance', width);\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                + ' }'\n              ;\n            }\n            else if(direction === 'top' || direction == 'bottom') {\n              style  += ''\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                + ' }'\n              ;\n            }\n\n            /* IE is only browser not to create context with transforms */\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\n            if( module.is.ie() ) {\n              if(direction === 'left' || direction === 'right') {\n                module.debug('Adding CSS rules for animation distance', width);\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\n                  + ' }'\n                ;\n              }\n              else if(direction === 'top' || direction == 'bottom') {\n                style  += ''\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\n                  + ' }'\n                ;\n              }\n              /* opposite sides visible forces content overlay */\n              style += ''\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\n                + '           transform: translate3d(0px, 0, 0);'\n                + ' }'\n              ;\n            }\n            style += '</style>';\n            $style = $(style)\n              .appendTo($head)\n            ;\n            module.debug('Adding sizing css to head', $style);\n          }\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $context  = $(settings.context);\n          $sidebars = $context.children(selector.sidebar);\n          $pusher   = $context.children(selector.pusher);\n          $fixed    = $context.children(selector.fixed);\n          module.clear.cache();\n        },\n\n        refreshSidebars: function() {\n          module.verbose('Refreshing other sidebars');\n          $sidebars = $context.children(selector.sidebar);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          element.style.display = 'none';\n          var ignored = element.offsetHeight;\n          element.scrollTop = element.scrollTop;\n          element.style.display = '';\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              width  : $module.outerWidth(),\n              height : $module.outerHeight(),\n              rtl    : ($module.css('direction') == 'rtl')\n            };\n          },\n          layout: function() {\n            if( $context.children(selector.pusher).length === 0 ) {\n              module.debug('Adding wrapper element for sidebar');\n              module.error(error.pusher);\n              $pusher = $('<div class=\"pusher\" />');\n              $context\n                .children()\n                  .not(selector.omitted)\n                  .not($sidebars)\n                  .wrapAll($pusher)\n              ;\n              module.refresh();\n            }\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\n              module.debug('Moved sidebar to correct parent element');\n              module.error(error.movedSidebar, element);\n              $module.detach().prependTo($context);\n              module.refresh();\n            }\n            module.clear.cache();\n            module.set.pushable();\n            module.set.direction();\n          }\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.length > 0) {\n            module.debug('Attaching sidebar events to element', selector, event);\n            $toggle\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound, selector);\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.hidden()) {\n            module.refreshSidebars();\n            if(settings.overlay)  {\n              module.error(error.overlay);\n              settings.transition = 'overlay';\n            }\n            module.refresh();\n            if(module.othersActive()) {\n              module.debug('Other sidebars currently visible');\n              if(settings.exclusive) {\n                // if not overlay queue animation after hide\n                if(settings.transition != 'overlay') {\n                  module.hideOthers(module.show);\n                  return;\n                }\n                else {\n                  module.hideOthers();\n                }\n              }\n              else {\n                settings.transition = 'overlay';\n              }\n            }\n            module.pushPage(function() {\n              callback.call(element);\n              settings.onShow.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onVisible.call(element);\n          }\n          else {\n            module.debug('Sidebar is already visible');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(module.is.visible() || module.is.animating()) {\n            module.debug('Hiding sidebar', callback);\n            module.refreshSidebars();\n            module.pullPage(function() {\n              callback.call(element);\n              settings.onHidden.call(element);\n            });\n            settings.onChange.call(element);\n            settings.onHide.call(element);\n          }\n        },\n\n        othersAnimating: function() {\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\n        },\n        othersVisible: function() {\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\n        },\n        othersActive: function() {\n          return(module.othersVisible() || module.othersAnimating());\n        },\n\n        hideOthers: function(callback) {\n          var\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\n            sidebarCount   = $otherSidebars.length,\n            callbackCount  = 0\n          ;\n          callback = callback || function(){};\n          $otherSidebars\n            .sidebar('hide', function() {\n              callbackCount++;\n              if(callbackCount == sidebarCount) {\n                callback();\n              }\n            })\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Determining toggled direction');\n          if(module.is.hidden()) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        pushPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition === 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            dim,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if(settings.transition == 'scale down') {\n            module.scrollToTop();\n          }\n          module.set.transition(transition);\n          module.repaint();\n          animate = function() {\n            module.bind.clickaway();\n            module.add.inlineCSS();\n            module.set.animating();\n            module.set.visible();\n          };\n          dim = function() {\n            module.set.dimmed();\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.bind.scrollLock();\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n          if(settings.dimPage && !module.othersVisible()) {\n            requestAnimationFrame(dim);\n          }\n        },\n\n        pullPage: function(callback) {\n          var\n            transition = module.get.transition(),\n            $transition = (transition == 'overlay' || module.othersActive())\n              ? $module\n              : $pusher,\n            animate,\n            transitionEnd\n          ;\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.verbose('Removing context push state', module.get.direction());\n\n          module.unbind.clickaway();\n          module.unbind.scrollLock();\n\n          animate = function() {\n            module.set.transition(transition);\n            module.set.animating();\n            module.remove.visible();\n            if(settings.dimPage && !module.othersVisible()) {\n              $pusher.removeClass(className.dimmed);\n            }\n          };\n          transitionEnd = function(event) {\n            if( event.target == $transition[0] ) {\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\n              module.remove.animating();\n              module.remove.transition();\n              module.remove.inlineCSS();\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\n                module.scrollBack();\n              }\n              callback.call(element);\n            }\n          };\n          $transition.off(transitionEvent + elementNamespace);\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\n          requestAnimationFrame(animate);\n        },\n\n        scrollToTop: function() {\n          module.verbose('Scrolling to top of page to avoid animation issues');\n          currentScroll = $(window).scrollTop();\n          $module.scrollTop(0);\n          window.scrollTo(0, 0);\n        },\n\n        scrollBack: function() {\n          module.verbose('Scrolling back to original page position');\n          window.scrollTo(0, currentScroll);\n        },\n\n        clear: {\n          cache: function() {\n            module.verbose('Clearing cached dimensions');\n            module.cache = {};\n          }\n        },\n\n        set: {\n\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\n          // (This is no longer necessary in latest iOS)\n          ios: function() {\n            $html.addClass(className.ios);\n          },\n\n          // container\n          pushed: function() {\n            $context.addClass(className.pushed);\n          },\n          pushable: function() {\n            $context.addClass(className.pushable);\n          },\n\n          // pusher\n          dimmed: function() {\n            $pusher.addClass(className.dimmed);\n          },\n\n          // sidebar\n          active: function() {\n            $module.addClass(className.active);\n          },\n          animating: function() {\n            $module.addClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.addClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.addClass(className[direction]);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          overlay: function() {\n            $module.addClass(className.overlay);\n          }\n        },\n        remove: {\n\n          inlineCSS: function() {\n            module.debug('Removing inline css styles', $style);\n            if($style && $style.length > 0) {\n              $style.remove();\n            }\n          },\n\n          // ios scroll on html not document\n          ios: function() {\n            $html.removeClass(className.ios);\n          },\n\n          // context\n          pushed: function() {\n            $context.removeClass(className.pushed);\n          },\n          pushable: function() {\n            $context.removeClass(className.pushable);\n          },\n\n          // sidebar\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          transition: function(transition) {\n            transition = transition || module.get.transition();\n            $module.removeClass(transition);\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            $module.removeClass(className[direction]);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          overlay: function() {\n            $module.removeClass(className.overlay);\n          }\n        },\n\n        get: {\n          direction: function() {\n            if($module.hasClass(className.top)) {\n              return className.top;\n            }\n            else if($module.hasClass(className.right)) {\n              return className.right;\n            }\n            else if($module.hasClass(className.bottom)) {\n              return className.bottom;\n            }\n            return className.left;\n          },\n          transition: function() {\n            var\n              direction = module.get.direction(),\n              transition\n            ;\n            transition = ( module.is.mobile() )\n              ? (settings.mobileTransition == 'auto')\n                ? settings.defaultTransition.mobile[direction]\n                : settings.mobileTransition\n              : (settings.transition == 'auto')\n                ? settings.defaultTransition.computer[direction]\n                : settings.transition\n            ;\n            module.verbose('Determined transition', transition);\n            return transition;\n          },\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          }\n        },\n\n        is: {\n\n          ie: function() {\n            var\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\n              isIE   = ('ActiveXObject' in window)\n            ;\n            return (isIE11 || isIE);\n          },\n\n          ios: function() {\n            var\n              userAgent      = navigator.userAgent,\n              isIOS          = userAgent.match(regExp.ios),\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\n            ;\n            if(isIOS && !isMobileChrome) {\n              module.verbose('Browser was found to be iOS', userAgent);\n              return true;\n            }\n            else {\n              return false;\n            }\n          },\n          mobile: function() {\n            var\n              userAgent    = navigator.userAgent,\n              isMobile     = userAgent.match(regExp.mobile)\n            ;\n            if(isMobile) {\n              module.verbose('Browser was found to be mobile', userAgent);\n              return true;\n            }\n            else {\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\n              return false;\n            }\n          },\n          hidden: function() {\n            return !module.is.visible();\n          },\n          visible: function() {\n            return $module.hasClass(className.visible);\n          },\n          // alias\n          open: function() {\n            return module.is.visible();\n          },\n          closed: function() {\n            return module.is.hidden();\n          },\n          vertical: function() {\n            return $module.hasClass(className.top);\n          },\n          animating: function() {\n            return $context.hasClass(className.animating);\n          },\n          rtl: function () {\n            if(module.cache.rtl === undefined) {\n              module.cache.rtl = ($module.css('direction') == 'rtl');\n            }\n            return module.cache.rtl;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      }\n    ;\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.invoke('destroy');\n      }\n      module.initialize();\n    }\n  });\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sidebar.settings = {\n\n  name              : 'Sidebar',\n  namespace         : 'sidebar',\n\n  silent            : false,\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  transition        : 'auto',\n  mobileTransition  : 'auto',\n\n  defaultTransition : {\n    computer: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    },\n    mobile: {\n      left   : 'uncover',\n      right  : 'uncover',\n      top    : 'overlay',\n      bottom : 'overlay'\n    }\n  },\n\n  context           : 'body',\n  exclusive         : false,\n  closable          : true,\n  dimPage           : true,\n  scrollLock        : false,\n  returnScroll      : false,\n  delaySetup        : false,\n\n  duration          : 500,\n\n  onChange          : function(){},\n  onShow            : function(){},\n  onHide            : function(){},\n\n  onHidden          : function(){},\n  onVisible         : function(){},\n\n  className         : {\n    active    : 'active',\n    animating : 'animating',\n    dimmed    : 'dimmed',\n    ios       : 'ios',\n    pushable  : 'pushable',\n    pushed    : 'pushed',\n    right     : 'right',\n    top       : 'top',\n    left      : 'left',\n    bottom    : 'bottom',\n    visible   : 'visible'\n  },\n\n  selector: {\n    fixed   : '.fixed',\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\n    pusher  : '.pusher',\n    sidebar : '.ui.sidebar'\n  },\n\n  regExp: {\n    ios          : /(iPad|iPhone|iPod)/g,\n    mobileChrome : /(CriOS)/g,\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\n  },\n\n  error   : {\n    method       : 'The method you called is not defined.',\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\n    notFound     : 'There were no elements that matched the specified selector'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Sticky\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.sticky = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings              = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\n          : $.extend({}, $.fn.sticky.settings),\n\n        className             = settings.className,\n        namespace             = settings.namespace,\n        error                 = settings.error,\n\n        eventNamespace        = '.' + namespace,\n        moduleNamespace       = 'module-' + namespace,\n\n        $module               = $(this),\n        $window               = $(window),\n        $scroll               = $(settings.scrollContext),\n        $container,\n        $context,\n\n        selector              = $module.selector || '',\n        instance              = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n\n        documentObserver,\n        observer,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          module.determineContainer();\n          module.determineContext();\n          module.verbose('Initializing sticky', settings, $container);\n\n          module.save.positions();\n          module.checkErrors();\n          module.bind.events();\n\n          if(settings.observeChanges) {\n            module.observeChanges();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance');\n          module.reset();\n          if(documentObserver) {\n            documentObserver.disconnect();\n          }\n          if(observer) {\n            observer.disconnect();\n          }\n          $window\n            .off('load' + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $scroll\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          $module.removeData(moduleNamespace);\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            documentObserver = new MutationObserver(module.event.documentChanged);\n            observer         = new MutationObserver(module.event.changed);\n            documentObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe($context[0], {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        determineContainer: function() {\n          if(settings.container) {\n            $container = $(settings.container);\n          }\n          else {\n            $container = $module.offsetParent();\n          }\n        },\n\n        determineContext: function() {\n          if(settings.context) {\n            $context = $(settings.context);\n          }\n          else {\n            $context = $container;\n          }\n          if($context.length === 0) {\n            module.error(error.invalidContext, settings.context, $module);\n            return;\n          }\n        },\n\n        checkErrors: function() {\n          if( module.is.hidden() ) {\n            module.error(error.visible, $module);\n          }\n          if(module.cache.element.height > module.cache.context.height) {\n            module.reset();\n            module.error(error.elementSize, $module);\n            return;\n          }\n        },\n\n        bind: {\n          events: function() {\n            $window\n              .on('load' + eventNamespace, module.event.load)\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $scroll\n              .off('scroll' + eventNamespace)\n              .on('scroll' + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\n              module.refresh();\n            }, 100);\n          },\n          documentChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          load: function() {\n            module.verbose('Page contents finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          resize: function() {\n            module.verbose('Window resized');\n            requestAnimationFrame(module.refresh);\n          },\n          scroll: function() {\n            requestAnimationFrame(function() {\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\n            });\n          },\n          scrollchange: function(event, scrollPosition) {\n            module.stick(scrollPosition);\n            settings.onScroll.call(element);\n          }\n        },\n\n        refresh: function(hardRefresh) {\n          module.reset();\n          if(!settings.context) {\n            module.determineContext();\n          }\n          if(hardRefresh) {\n            module.determineContainer();\n          }\n          module.save.positions();\n          module.stick();\n          settings.onReposition.call(element);\n        },\n\n        supports: {\n          sticky: function() {\n            var\n              $element = $('<div/>'),\n              element = $element[0]\n            ;\n            $element.addClass(className.supported);\n            return($element.css('position').match('sticky'));\n          }\n        },\n\n        save: {\n          lastScroll: function(scroll) {\n            module.lastScroll = scroll;\n          },\n          elementScroll: function(scroll) {\n            module.elementScroll = scroll;\n          },\n          positions: function() {\n            var\n              scrollContext = {\n                height : $scroll.height()\n              },\n              element = {\n                margin: {\n                  top    : parseInt($module.css('margin-top'), 10),\n                  bottom : parseInt($module.css('margin-bottom'), 10),\n                },\n                offset : $module.offset(),\n                width  : $module.outerWidth(),\n                height : $module.outerHeight()\n              },\n              context = {\n                offset : $context.offset(),\n                height : $context.outerHeight()\n              },\n              container = {\n                height: $container.outerHeight()\n              }\n            ;\n            if( !module.is.standardScroll() ) {\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\n\n              scrollContext.top  = $scroll.scrollTop();\n              scrollContext.left = $scroll.scrollLeft();\n\n              element.offset.top  += scrollContext.top;\n              context.offset.top  += scrollContext.top;\n              element.offset.left += scrollContext.left;\n              context.offset.left += scrollContext.left;\n            }\n            module.cache = {\n              fits          : ( (element.height + settings.offset) <= scrollContext.height),\n              sameHeight    : (element.height == context.height),\n              scrollContext : {\n                height : scrollContext.height\n              },\n              element: {\n                margin : element.margin,\n                top    : element.offset.top - element.margin.top,\n                left   : element.offset.left,\n                width  : element.width,\n                height : element.height,\n                bottom : element.offset.top + element.height\n              },\n              context: {\n                top           : context.offset.top,\n                height        : context.height,\n                bottom        : context.offset.top + context.height\n              }\n            };\n            module.set.containerSize();\n\n            module.stick();\n            module.debug('Caching element positions', module.cache);\n          }\n        },\n\n        get: {\n          direction: function(scroll) {\n            var\n              direction = 'down'\n            ;\n            scroll = scroll || $scroll.scrollTop();\n            if(module.lastScroll !== undefined) {\n              if(module.lastScroll < scroll) {\n                direction = 'down';\n              }\n              else if(module.lastScroll > scroll) {\n                direction = 'up';\n              }\n            }\n            return direction;\n          },\n          scrollChange: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            return (module.lastScroll)\n              ? (scroll - module.lastScroll)\n              : 0\n            ;\n          },\n          currentElementScroll: function() {\n            if(module.elementScroll) {\n              return module.elementScroll;\n            }\n            return ( module.is.top() )\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\n            ;\n          },\n\n          elementScroll: function(scroll) {\n            scroll = scroll || $scroll.scrollTop();\n            var\n              element        = module.cache.element,\n              scrollContext  = module.cache.scrollContext,\n              delta          = module.get.scrollChange(scroll),\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\n              elementScroll  = module.get.currentElementScroll(),\n              possibleScroll = (elementScroll + delta)\n            ;\n            if(module.cache.fits || possibleScroll < 0) {\n              elementScroll = 0;\n            }\n            else if(possibleScroll > maxScroll ) {\n              elementScroll = maxScroll;\n            }\n            else {\n              elementScroll = possibleScroll;\n            }\n            return elementScroll;\n          }\n        },\n\n        remove: {\n          lastScroll: function() {\n            delete module.lastScroll;\n          },\n          elementScroll: function(scroll) {\n            delete module.elementScroll;\n          },\n          minimumSize: function() {\n            $container\n              .css('min-height', '')\n            ;\n          },\n          offset: function() {\n            $module.css('margin-top', '');\n          }\n        },\n\n        set: {\n          offset: function() {\n            module.verbose('Setting offset on element', settings.offset);\n            $module\n              .css('margin-top', settings.offset)\n            ;\n          },\n          containerSize: function() {\n            var\n              tagName = $container.get(0).tagName\n            ;\n            if(tagName === 'HTML' || tagName == 'body') {\n              // this can trigger for too many reasons\n              //module.error(error.container, tagName, $module);\n              module.determineContainer();\n            }\n            else {\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\n                $container.css({\n                  height: module.cache.context.height\n                });\n              }\n            }\n          },\n          minimumSize: function() {\n            var\n              element   = module.cache.element\n            ;\n            $container\n              .css('min-height', element.height)\n            ;\n          },\n          scroll: function(scroll) {\n            module.debug('Setting scroll on element', scroll);\n            if(module.elementScroll == scroll) {\n              return;\n            }\n            if( module.is.top() ) {\n              $module\n                .css('bottom', '')\n                .css('top', -scroll)\n              ;\n            }\n            if( module.is.bottom() ) {\n              $module\n                .css('top', '')\n                .css('bottom', scroll)\n              ;\n            }\n          },\n          size: function() {\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\n            }\n          }\n        },\n\n        is: {\n          standardScroll: function() {\n            return ($scroll[0] == window);\n          },\n          top: function() {\n            return $module.hasClass(className.top);\n          },\n          bottom: function() {\n            return $module.hasClass(className.bottom);\n          },\n          initialPosition: function() {\n            return (!module.is.fixed() && !module.is.bound());\n          },\n          hidden: function() {\n            return (!$module.is(':visible'));\n          },\n          bound: function() {\n            return $module.hasClass(className.bound);\n          },\n          fixed: function() {\n            return $module.hasClass(className.fixed);\n          }\n        },\n\n        stick: function(scroll) {\n          var\n            cachedPosition = scroll || $scroll.scrollTop(),\n            cache          = module.cache,\n            fits           = cache.fits,\n            sameHeight     = cache.sameHeight,\n            element        = cache.element,\n            scrollContext  = cache.scrollContext,\n            context        = cache.context,\n            offset         = (module.is.bottom() && settings.pushing)\n              ? settings.bottomOffset\n              : settings.offset,\n            scroll         = {\n              top    : cachedPosition + offset,\n              bottom : cachedPosition + offset + scrollContext.height\n            },\n            direction      = module.get.direction(scroll.top),\n            elementScroll  = (fits)\n              ? 0\n              : module.get.elementScroll(scroll.top),\n\n            // shorthand\n            doesntFit      = !fits,\n            elementVisible = (element.height !== 0)\n          ;\n          if(elementVisible && !sameHeight) {\n\n            if( module.is.initialPosition() ) {\n              if(scroll.top >= context.bottom) {\n                module.debug('Initial element position is bottom of container');\n                module.bindBottom();\n              }\n              else if(scroll.top > element.top) {\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Initial element position is bottom of container');\n                  module.bindBottom();\n                }\n                else {\n                  module.debug('Initial element position is fixed');\n                  module.fixTop();\n                }\n              }\n\n            }\n            else if( module.is.fixed() ) {\n\n              // currently fixed top\n              if( module.is.top() ) {\n                if( scroll.top <= element.top ) {\n                  module.debug('Fixed element reached top of container');\n                  module.setInitialPosition();\n                }\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\n                  module.debug('Fixed element reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n              }\n\n              // currently fixed bottom\n              else if(module.is.bottom() ) {\n\n                // top edge\n                if( (scroll.bottom - element.height) <= element.top) {\n                  module.debug('Bottom fixed rail has reached top of container');\n                  module.setInitialPosition();\n                }\n                // bottom edge\n                else if(scroll.bottom >= context.bottom) {\n                  module.debug('Bottom fixed rail has reached bottom of container');\n                  module.bindBottom();\n                }\n                // scroll element if larger than screen\n                else if(doesntFit) {\n                  module.set.scroll(elementScroll);\n                  module.save.lastScroll(scroll.top);\n                  module.save.elementScroll(elementScroll);\n                }\n\n              }\n            }\n            else if( module.is.bottom() ) {\n              if( scroll.top <= element.top ) {\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\n                module.setInitialPosition();\n              }\n              else {\n                if(settings.pushing) {\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\n                    module.debug('Fixing bottom attached element to bottom of browser.');\n                    module.fixBottom();\n                  }\n                }\n                else {\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\n                    module.debug('Fixing bottom attached element to top of browser.');\n                    module.fixTop();\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        bindTop: function() {\n          module.debug('Binding element to top of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : '',\n              marginBottom : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.bottom)\n            .addClass(className.bound)\n            .addClass(className.top)\n          ;\n          settings.onTop.call(element);\n          settings.onUnstick.call(element);\n        },\n        bindBottom: function() {\n          module.debug('Binding element to bottom of parent container');\n          module.remove.offset();\n          $module\n            .css({\n              left         : '',\n              top          : ''\n            })\n            .removeClass(className.fixed)\n            .removeClass(className.top)\n            .addClass(className.bound)\n            .addClass(className.bottom)\n          ;\n          settings.onBottom.call(element);\n          settings.onUnstick.call(element);\n        },\n\n        setInitialPosition: function() {\n          module.debug('Returning to initial position');\n          module.unfix();\n          module.unbind();\n        },\n\n\n        fixTop: function() {\n          module.debug('Fixing element to top of page');\n          if(settings.setSize) {\n            module.set.size();\n          }\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.bottom)\n            .addClass(className.fixed)\n            .addClass(className.top)\n          ;\n          settings.onStick.call(element);\n        },\n\n        fixBottom: function() {\n          module.debug('Sticking element to bottom of page');\n          if(settings.setSize) {\n            module.set.size();\n          }\n          module.set.minimumSize();\n          module.set.offset();\n          $module\n            .css({\n              left         : module.cache.element.left,\n              bottom       : '',\n              marginBottom : ''\n            })\n            .removeClass(className.bound)\n            .removeClass(className.top)\n            .addClass(className.fixed)\n            .addClass(className.bottom)\n          ;\n          settings.onStick.call(element);\n        },\n\n        unbind: function() {\n          if( module.is.bound() ) {\n            module.debug('Removing container bound position on element');\n            module.remove.offset();\n            $module\n              .removeClass(className.bound)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n          }\n        },\n\n        unfix: function() {\n          if( module.is.fixed() ) {\n            module.debug('Removing fixed position on element');\n            module.remove.minimumSize();\n            module.remove.offset();\n            $module\n              .removeClass(className.fixed)\n              .removeClass(className.top)\n              .removeClass(className.bottom)\n            ;\n            settings.onUnstick.call(element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting elements position');\n          module.unbind();\n          module.unfix();\n          module.resetCSS();\n          module.remove.offset();\n          module.remove.lastScroll();\n        },\n\n        resetCSS: function() {\n          $module\n            .css({\n              width  : '',\n              height : ''\n            })\n          ;\n          $container\n            .css({\n              height: ''\n            })\n          ;\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 0);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sticky.settings = {\n\n  name           : 'Sticky',\n  namespace      : 'sticky',\n\n  silent         : false,\n  debug          : false,\n  verbose        : true,\n  performance    : true,\n\n  // whether to stick in the opposite direction on scroll up\n  pushing        : false,\n\n  context        : false,\n  container      : false,\n\n  // Context to watch scroll events\n  scrollContext  : window,\n\n  // Offset to adjust scroll\n  offset         : 0,\n\n  // Offset to adjust scroll when attached to bottom of screen\n  bottomOffset   : 0,\n\n  // will only set container height if difference between context and container is larger than this number\n  jitter         : 5,\n\n  // set width of sticky element when it is fixed to page (used to make sure 100% width is maintained if no fixed size set)\n  setSize        : true,\n\n  // Whether to automatically observe changes with Mutation Observers\n  observeChanges : false,\n\n  // Called when position is recalculated\n  onReposition   : function(){},\n\n  // Called on each scroll\n  onScroll       : function(){},\n\n  // Called when element is stuck to viewport\n  onStick        : function(){},\n\n  // Called when element is unstuck from viewport\n  onUnstick      : function(){},\n\n  // Called when element reaches top of context\n  onTop          : function(){},\n\n  // Called when element reaches bottom of context\n  onBottom       : function(){},\n\n  error         : {\n    container      : 'Sticky element must be inside a relative container',\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\n    method         : 'The method you called is not defined.',\n    invalidContext : 'Context specified does not exist',\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\n  },\n\n  className : {\n    bound     : 'bound',\n    fixed     : 'fixed',\n    supported : 'native',\n    top       : 'top',\n    bottom    : 'bottom'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Tab\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.tab = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n\n    moduleSelector  = $allModules.selector || '',\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    initializedHistory = false,\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\n          : $.extend({}, $.fn.tab.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + settings.namespace,\n        moduleNamespace = 'module-' + settings.namespace,\n\n        $module         = $(this),\n        $context,\n        $tabs,\n\n        cache           = {},\n        firstLoad       = true,\n        recursionDepth  = 0,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        activeTabPath,\n        parameterArray,\n        module,\n\n        historyEvent\n\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing tab menu item', $module);\n          module.fix.callbacks();\n          module.determineTabs();\n\n          module.debug('Determining tabs', settings.context, $tabs);\n          // set up automatic routing\n          if(settings.auto) {\n            module.set.auto();\n          }\n          module.bind.events();\n\n          if(settings.history && !initializedHistory) {\n            module.initializeHistory();\n            initializedHistory = true;\n          }\n\n          module.instantiate();\n        },\n\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying tabs', $module);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            // if using $.tab don't add events\n            if( !$.isWindow( element ) ) {\n              module.debug('Attaching tab activation events to element', $module);\n              $module\n                .on('click' + eventNamespace, module.event.click)\n              ;\n            }\n          }\n        },\n\n        determineTabs: function() {\n          var\n            $reference\n          ;\n\n          // determine tab context\n          if(settings.context === 'parent') {\n            if($module.closest(selector.ui).length > 0) {\n              $reference = $module.closest(selector.ui);\n              module.verbose('Using closest UI element as parent', $reference);\n            }\n            else {\n              $reference = $module;\n            }\n            $context = $reference.parent();\n            module.verbose('Determined parent element for creating context', $context);\n          }\n          else if(settings.context) {\n            $context = $(settings.context);\n            module.verbose('Using selector for tab context', settings.context, $context);\n          }\n          else {\n            $context = $('body');\n          }\n          // find tabs\n          if(settings.childrenOnly) {\n            $tabs = $context.children(selector.tabs);\n            module.debug('Searching tab context children for tabs', $context, $tabs);\n          }\n          else {\n            $tabs = $context.find(selector.tabs);\n            module.debug('Searching tab context for tabs', $context, $tabs);\n          }\n        },\n\n        fix: {\n          callbacks: function() {\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\n              if(parameters.onTabLoad) {\n                parameters.onLoad = parameters.onTabLoad;\n                delete parameters.onTabLoad;\n                module.error(error.legacyLoad, parameters.onLoad);\n              }\n              if(parameters.onTabInit) {\n                parameters.onFirstLoad = parameters.onTabInit;\n                delete parameters.onTabInit;\n                module.error(error.legacyInit, parameters.onFirstLoad);\n              }\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\n            }\n          }\n        },\n\n        initializeHistory: function() {\n          module.debug('Initializing page state');\n          if( $.address === undefined ) {\n            module.error(error.state);\n            return false;\n          }\n          else {\n            if(settings.historyType == 'state') {\n              module.debug('Using HTML5 to manage state');\n              if(settings.path !== false) {\n                $.address\n                  .history(true)\n                  .state(settings.path)\n                ;\n              }\n              else {\n                module.error(error.path);\n                return false;\n              }\n            }\n            $.address\n              .bind('change', module.event.history.change)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              tabPath = $(this).data(metadata.tab)\n            ;\n            if(tabPath !== undefined) {\n              if(settings.history) {\n                module.verbose('Updating page state', event);\n                $.address.value(tabPath);\n              }\n              else {\n                module.verbose('Changing tab', event);\n                module.changeTab(tabPath);\n              }\n              event.preventDefault();\n            }\n            else {\n              module.debug('No tab specified');\n            }\n          },\n          history: {\n            change: function(event) {\n              var\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n                pageTitle = settings.templates.determineTitle(tabPath) || false\n              ;\n              module.performance.display();\n              module.debug('History change event', tabPath, event);\n              historyEvent = event;\n              if(tabPath !== undefined) {\n                module.changeTab(tabPath);\n              }\n              if(pageTitle) {\n                $.address.title(pageTitle);\n              }\n            }\n          }\n        },\n\n        refresh: function() {\n          if(activeTabPath) {\n            module.debug('Refreshing tab', activeTabPath);\n            module.changeTab(activeTabPath);\n          }\n        },\n\n        cache: {\n\n          read: function(cacheKey) {\n            return (cacheKey !== undefined)\n              ? cache[cacheKey]\n              : false\n            ;\n          },\n          add: function(cacheKey, content) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Adding cached content for', cacheKey);\n            cache[cacheKey] = content;\n          },\n          remove: function(cacheKey) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Removing cached content for', cacheKey);\n            delete cache[cacheKey];\n          }\n        },\n\n        set: {\n          auto: function() {\n            var\n              url = (typeof settings.path == 'string')\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\n                : '/{$tab}'\n            ;\n            module.verbose('Setting up automatic tab retrieval from server', url);\n            if($.isPlainObject(settings.apiSettings)) {\n              settings.apiSettings.url = url;\n            }\n            else {\n              settings.apiSettings = {\n                url: url\n              };\n            }\n          },\n          loading: function(tabPath) {\n            var\n              $tab      = module.get.tabElement(tabPath),\n              isLoading = $tab.hasClass(className.loading)\n            ;\n            if(!isLoading) {\n              module.verbose('Setting loading state for', $tab);\n              $tab\n                .addClass(className.loading)\n                .siblings($tabs)\n                  .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onRequest.call($tab[0], tabPath);\n              }\n            }\n          },\n          state: function(state) {\n            $.address.value(state);\n          }\n        },\n\n        changeTab: function(tabPath) {\n          var\n            pushStateAvailable = (window.history && window.history.pushState),\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n            // only add default path if not remote content\n            pathArray = (remoteContent && !shouldIgnoreLoad)\n              ? module.utilities.pathToArray(tabPath)\n              : module.get.defaultPathArray(tabPath)\n          ;\n          tabPath = module.utilities.arrayToPath(pathArray);\n          $.each(pathArray, function(index, tab) {\n            var\n              currentPathArray   = pathArray.slice(0, index + 1),\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\n\n              isTab              = module.is.tab(currentPath),\n              isLastIndex        = (index + 1 == pathArray.length),\n\n              $tab               = module.get.tabElement(currentPath),\n              $anchor,\n              nextPathArray,\n              nextPath,\n              isLastTab\n            ;\n            module.verbose('Looking for tab', tab);\n            if(isTab) {\n              module.verbose('Tab was found', tab);\n              // scope up\n              activeTabPath  = currentPath;\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\n              if(isLastIndex) {\n                isLastTab = true;\n              }\n              else {\n                nextPathArray = pathArray.slice(0, index + 2);\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\n                isLastTab     = ( !module.is.tab(nextPath) );\n                if(isLastTab) {\n                  module.verbose('Tab parameters found', nextPathArray);\n                }\n              }\n              if(isLastTab && remoteContent) {\n                if(!shouldIgnoreLoad) {\n                  module.activate.navigation(currentPath);\n                  module.fetch.content(currentPath, tabPath);\n                }\n                else {\n                  module.debug('Ignoring remote content on first tab load', currentPath);\n                  firstLoad = false;\n                  module.cache.add(tabPath, $tab.html());\n                  module.activate.all(currentPath);\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                return false;\n              }\n              else {\n                module.debug('Opened local tab', currentPath);\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n              }\n\n            }\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\n              // look for in page anchor\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\n              $tab        = module.get.tabElement(currentPath);\n              // if anchor exists use parent tab\n              if($anchor && $anchor.length > 0 && currentPath) {\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\n                if( !$tab.hasClass(className.active) ) {\n                  setTimeout(function() {\n                    module.scrollTo($anchor);\n                  }, 0);\n                }\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                return false;\n              }\n            }\n            else {\n              module.error(error.missingTab, $module, $context, currentPath);\n              return false;\n            }\n          });\n        },\n\n        scrollTo: function($element) {\n          var\n            scrollOffset = ($element && $element.length > 0)\n              ? $element.offset().top\n              : false\n          ;\n          if(scrollOffset !== false) {\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\n            $(document).scrollTop(scrollOffset);\n          }\n        },\n\n        update: {\n          content: function(tabPath, html, evaluateScripts) {\n            var\n              $tab = module.get.tabElement(tabPath),\n              tab  = $tab[0]\n            ;\n            evaluateScripts = (evaluateScripts !== undefined)\n              ? evaluateScripts\n              : settings.evaluateScripts\n            ;\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\n              $tab\n                .empty()\n                .append($(html).clone(true))\n              ;\n            }\n            else {\n              if(evaluateScripts) {\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\n                $tab.html(html);\n              }\n              else {\n                module.debug('Updating HTML', tabPath, html);\n                tab.innerHTML = html;\n              }\n            }\n          }\n        },\n\n        fetch: {\n\n          content: function(tabPath, fullTabPath) {\n            var\n              $tab        = module.get.tabElement(tabPath),\n              apiSettings = {\n                dataType         : 'html',\n                encodeParameters : false,\n                on               : 'now',\n                cache            : settings.alwaysRefresh,\n                headers          : {\n                  'X-Remote': true\n                },\n                onSuccess : function(response) {\n                  if(settings.cacheType == 'response') {\n                    module.cache.add(fullTabPath, response);\n                  }\n                  module.update.content(tabPath, response);\n                  if(tabPath == activeTabPath) {\n                    module.debug('Content loaded', tabPath);\n                    module.activate.tab(tabPath);\n                  }\n                  else {\n                    module.debug('Content loaded in background', tabPath);\n                  }\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\n                  if(settings.loadOnce) {\n                    module.cache.add(fullTabPath, true);\n                  }\n                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\n                    setTimeout(function() {\n                      var\n                        $clone = $tab.children().clone(true)\n                      ;\n                      $clone = $clone.not('script');\n                      module.cache.add(fullTabPath, $clone);\n                    }, 0);\n                  }\n                  else {\n                    module.cache.add(fullTabPath, $tab.html());\n                  }\n                },\n                urlData: {\n                  tab: fullTabPath\n                }\n              },\n              request         = $tab.api('get request') || false,\n              existingRequest = ( request && request.state() === 'pending' ),\n              requestSettings,\n              cachedContent\n            ;\n\n            fullTabPath   = fullTabPath || tabPath;\n            cachedContent = module.cache.read(fullTabPath);\n\n\n            if(settings.cache && cachedContent) {\n              module.activate.tab(tabPath);\n              module.debug('Adding cached content', fullTabPath);\n              if(!settings.loadOnce) {\n                if(settings.evaluateScripts == 'once') {\n                  module.update.content(tabPath, cachedContent, false);\n                }\n                else {\n                  module.update.content(tabPath, cachedContent);\n                }\n              }\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n            }\n            else if(existingRequest) {\n              module.set.loading(tabPath);\n              module.debug('Content is already loading', fullTabPath);\n            }\n            else if($.api !== undefined) {\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\n              module.set.loading(tabPath);\n              $tab.api(requestSettings);\n            }\n            else {\n              module.error(error.api);\n            }\n          }\n        },\n\n        activate: {\n          all: function(tabPath) {\n            module.activate.tab(tabPath);\n            module.activate.navigation(tabPath);\n          },\n          tab: function(tabPath) {\n            var\n              $tab          = module.get.tabElement(tabPath),\n              $deactiveTabs = (settings.deactivate == 'siblings')\n                ? $tab.siblings($tabs)\n                : $tabs.not($tab),\n              isActive      = $tab.hasClass(className.active)\n            ;\n            module.verbose('Showing tab content for', $tab);\n            if(!isActive) {\n              $tab\n                .addClass(className.active)\n              ;\n              $deactiveTabs\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onVisible.call($tab[0], tabPath);\n              }\n            }\n          },\n          navigation: function(tabPath) {\n            var\n              $navigation         = module.get.navElement(tabPath),\n              $deactiveNavigation = (settings.deactivate == 'siblings')\n                ? $navigation.siblings($allModules)\n                : $allModules.not($navigation),\n              isActive    = $navigation.hasClass(className.active)\n            ;\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\n            if(!isActive) {\n              $navigation\n                .addClass(className.active)\n              ;\n              $deactiveNavigation\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n            }\n          }\n        },\n\n        deactivate: {\n          all: function() {\n            module.deactivate.navigation();\n            module.deactivate.tabs();\n          },\n          navigation: function() {\n            $allModules\n              .removeClass(className.active)\n            ;\n          },\n          tabs: function() {\n            $tabs\n              .removeClass(className.active + ' ' + className.loading)\n            ;\n          }\n        },\n\n        is: {\n          tab: function(tabName) {\n            return (tabName !== undefined)\n              ? ( module.get.tabElement(tabName).length > 0 )\n              : false\n            ;\n          }\n        },\n\n        get: {\n          initialPath: function() {\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n          },\n          path: function() {\n            return $.address.value();\n          },\n          // adds default tabs to tab path\n          defaultPathArray: function(tabPath) {\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n          },\n          defaultPath: function(tabPath) {\n            var\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n              defaultTab  = $defaultNav.data(metadata.tab) || false\n            ;\n            if( defaultTab ) {\n              module.debug('Found default tab', defaultTab);\n              if(recursionDepth < settings.maxDepth) {\n                recursionDepth++;\n                return module.get.defaultPath(defaultTab);\n              }\n              module.error(error.recursion);\n            }\n            else {\n              module.debug('No default tabs found for', tabPath, $tabs);\n            }\n            recursionDepth = 0;\n            return tabPath;\n          },\n          navElement: function(tabPath) {\n            tabPath = tabPath || activeTabPath;\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n          },\n          tabElement: function(tabPath) {\n            var\n              $fullPathTab,\n              $simplePathTab,\n              tabPathArray,\n              lastTab\n            ;\n            tabPath        = tabPath || activeTabPath;\n            tabPathArray   = module.utilities.pathToArray(tabPath);\n            lastTab        = module.utilities.last(tabPathArray);\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n            return ($fullPathTab.length > 0)\n              ? $fullPathTab\n              : $simplePathTab\n            ;\n          },\n          tab: function() {\n            return activeTabPath;\n          }\n        },\n\n        utilities: {\n          filterArray: function(keepArray, removeArray) {\n            return $.grep(keepArray, function(keepValue) {\n              return ( $.inArray(keepValue, removeArray) == -1);\n            });\n          },\n          last: function(array) {\n            return $.isArray(array)\n              ? array[ array.length - 1]\n              : false\n            ;\n          },\n          pathToArray: function(pathName) {\n            if(pathName === undefined) {\n              pathName = activeTabPath;\n            }\n            return typeof pathName == 'string'\n              ? pathName.split('/')\n              : [pathName]\n            ;\n          },\n          arrayToPath: function(pathArray) {\n            return $.isArray(pathArray)\n              ? pathArray.join('/')\n              : false\n            ;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n\n};\n\n// shortcut for tabbed content with no defined navigation\n$.tab = function() {\n  $(window).tab.apply(this, arguments);\n};\n\n$.fn.tab.settings = {\n\n  name            : 'Tab',\n  namespace       : 'tab',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\n  history         : false,      // use browser history\n  historyType     : 'hash',     // #/ or html5 state\n  path            : false,      // base path of url\n\n  context         : false,      // specify a context that tabs must appear inside\n  childrenOnly    : false,      // use only tabs that are children of context\n  maxDepth        : 25,         // max depth a tab can be nested\n\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\n\n  alwaysRefresh   : false,      // load tab content new every tab click\n  cache           : true,       // cache the content requests to pull locally\n  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\n  ignoreFirstLoad : false,      // don't load remote content on first load\n\n  apiSettings     : false,      // settings for api call\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\n\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\n\n  templates : {\n    determineTitle: function(tabArray) {} // returns page title for path\n  },\n\n  error: {\n    api        : 'You attempted to load content without API module',\n    method     : 'The method you called is not defined',\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\n    noContent  : 'The tab you specified is missing a content url.',\n    path       : 'History enabled, but no path was specified',\n    recursion  : 'Max recursive depth reached',\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\n  },\n\n  metadata : {\n    tab    : 'tab',\n    loaded : 'loaded',\n    promise: 'promise'\n  },\n\n  className   : {\n    loading : 'loading',\n    active  : 'active'\n  },\n\n  selector    : {\n    tabs : '.ui.tab',\n    ui   : '.ui'\n  }\n\n};\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Transition\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.transition = function() {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    moduleArguments = arguments,\n    query           = moduleArguments[0],\n    queryArguments  = [].slice.call(arguments, 1),\n    methodInvoked   = (typeof query === 'string'),\n\n    requestAnimationFrame = window.requestAnimationFrame\n      || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame\n      || window.msRequestAnimationFrame\n      || function(callback) { setTimeout(callback, 0); },\n\n    returnedValue\n  ;\n  $allModules\n    .each(function(index) {\n      var\n        $module  = $(this),\n        element  = this,\n\n        // set at run time\n        settings,\n        instance,\n\n        error,\n        className,\n        metadata,\n        animationEnd,\n        animationName,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n\n          // get full settings\n          settings        = module.get.settings.apply(element, moduleArguments);\n\n          // shorthand\n          className       = settings.className;\n          error           = settings.error;\n          metadata        = settings.metadata;\n\n          // define namespace\n          eventNamespace  = '.' + settings.namespace;\n          moduleNamespace = 'module-' + settings.namespace;\n          instance        = $module.data(moduleNamespace) || module;\n\n          // get vendor specific events\n          animationEnd    = module.get.animationEndEvent();\n\n          if(methodInvoked) {\n            methodInvoked = module.invoke(query);\n          }\n\n          // method not invoked, lets run an animation\n          if(methodInvoked === false) {\n            module.verbose('Converted arguments into settings object', settings);\n            if(settings.interval) {\n              module.delay(settings.animate);\n            }\n            else  {\n              module.animate();\n            }\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing display type on next animation');\n          delete module.displayType;\n        },\n\n        forceRepaint: function() {\n          module.verbose('Forcing element repaint');\n          var\n            $parentElement = $module.parent(),\n            $nextElement = $module.next()\n          ;\n          if($nextElement.length === 0) {\n            $module.detach().appendTo($parentElement);\n          }\n          else {\n            $module.detach().insertBefore($nextElement);\n          }\n        },\n\n        repaint: function() {\n          module.verbose('Repainting element');\n          var\n            fakeAssignment = element.offsetWidth\n          ;\n        },\n\n        delay: function(interval) {\n          var\n            direction = module.get.animationDirection(),\n            shouldReverse,\n            delay\n          ;\n          if(!direction) {\n            direction = module.can.transition()\n              ? module.get.direction()\n              : 'static'\n            ;\n          }\n          interval = (interval !== undefined)\n            ? interval\n            : settings.interval\n          ;\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\n          delay = (shouldReverse || settings.reverse == true)\n            ? ($allModules.length - index) * settings.interval\n            : index * settings.interval\n          ;\n          module.debug('Delaying animation by', delay);\n          setTimeout(module.animate, delay);\n        },\n\n        animate: function(overrideSettings) {\n          settings = overrideSettings || settings;\n          if(!module.is.supported()) {\n            module.error(error.support);\n            return false;\n          }\n          module.debug('Preparing animation', settings.animation);\n          if(module.is.animating()) {\n            if(settings.queue) {\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\n              }\n              else {\n                module.queue(settings.animation);\n              }\n              return false;\n            }\n            else if(!settings.allowRepeats && module.is.occurring()) {\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\n              return false;\n            }\n            else {\n              module.debug('New animation started, completing previous early', settings.animation);\n              instance.complete();\n            }\n          }\n          if( module.can.animate() ) {\n            module.set.animating(settings.animation);\n          }\n          else {\n            module.error(error.noAnimation, settings.animation, element);\n          }\n        },\n\n        reset: function() {\n          module.debug('Resetting animation to beginning conditions');\n          module.remove.animationCallbacks();\n          module.restore.conditions();\n          module.remove.animating();\n        },\n\n        queue: function(animation) {\n          module.debug('Queueing animation of', animation);\n          module.queuing = true;\n          $module\n            .one(animationEnd + '.queue' + eventNamespace, function() {\n              module.queuing = false;\n              module.repaint();\n              module.animate.apply(this, settings);\n            })\n          ;\n        },\n\n        complete: function (event) {\n          module.debug('Animation complete', settings.animation);\n          module.remove.completeCallback();\n          module.remove.failSafe();\n          if(!module.is.looping()) {\n            if( module.is.outward() ) {\n              module.verbose('Animation is outward, hiding element');\n              module.restore.conditions();\n              module.hide();\n            }\n            else if( module.is.inward() ) {\n              module.verbose('Animation is outward, showing element');\n              module.restore.conditions();\n              module.show();\n            }\n            else {\n              module.verbose('Static animation completed');\n              module.restore.conditions();\n              settings.onComplete.call(element);\n            }\n          }\n        },\n\n        force: {\n          visible: function() {\n            var\n              style          = $module.attr('style'),\n              userStyle      = module.get.userStyle(),\n              displayType    = module.get.displayType(),\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== displayType) {\n              module.verbose('Overriding default display to show element', displayType);\n              $module\n                .attr('style', overrideStyle)\n              ;\n            }\n            else if(emptyStyle) {\n              $module.removeAttr('style');\n            }\n          },\n          hidden: function() {\n            var\n              style          = $module.attr('style'),\n              currentDisplay = $module.css('display'),\n              emptyStyle     = (style === undefined || style === '')\n            ;\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\n              module.verbose('Overriding default display to hide element');\n              $module\n                .css('display', 'none')\n              ;\n            }\n            else if(emptyStyle) {\n              $module\n                .removeAttr('style')\n              ;\n            }\n          }\n        },\n\n        has: {\n          direction: function(animation) {\n            var\n              hasDirection = false\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              $.each(animation, function(index, word){\n                if(word === className.inward || word === className.outward) {\n                  hasDirection = true;\n                }\n              });\n            }\n            return hasDirection;\n          },\n          inlineDisplay: function() {\n            var\n              style = $module.attr('style') || ''\n            ;\n            return $.isArray(style.match(/display.*?;/, ''));\n          }\n        },\n\n        set: {\n          animating: function(animation) {\n            var\n              animationClass,\n              direction\n            ;\n            // remove previous callbacks\n            module.remove.completeCallback();\n\n            // determine exact animation\n            animation      = animation || settings.animation;\n            animationClass = module.get.animationClass(animation);\n\n            // save animation class in cache to restore class names\n            module.save.animation(animationClass);\n\n            // override display if necessary so animation appears visibly\n            module.force.visible();\n\n            module.remove.hidden();\n            module.remove.direction();\n\n            module.start.animation(animationClass);\n\n          },\n          duration: function(animationName, duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            if(duration || duration === 0) {\n              module.verbose('Setting animation duration', duration);\n              $module\n                .css({\n                  'animation-duration':  duration\n                })\n              ;\n            }\n          },\n          direction: function(direction) {\n            direction = direction || module.get.direction();\n            if(direction == className.inward) {\n              module.set.inward();\n            }\n            else {\n              module.set.outward();\n            }\n          },\n          looping: function() {\n            module.debug('Transition set to loop');\n            $module\n              .addClass(className.looping)\n            ;\n          },\n          hidden: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.hidden)\n            ;\n          },\n          inward: function() {\n            module.debug('Setting direction to inward');\n            $module\n              .removeClass(className.outward)\n              .addClass(className.inward)\n            ;\n          },\n          outward: function() {\n            module.debug('Setting direction to outward');\n            $module\n              .removeClass(className.inward)\n              .addClass(className.outward)\n            ;\n          },\n          visible: function() {\n            $module\n              .addClass(className.transition)\n              .addClass(className.visible)\n            ;\n          }\n        },\n\n        start: {\n          animation: function(animationClass) {\n            animationClass = animationClass || module.get.animationClass();\n            module.debug('Starting tween', animationClass);\n            $module\n              .addClass(animationClass)\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\n            ;\n            if(settings.useFailSafe) {\n              module.add.failSafe();\n            }\n            module.set.duration(settings.duration);\n            settings.onStart.call(element);\n          }\n        },\n\n        save: {\n          animation: function(animation) {\n            if(!module.cache) {\n              module.cache = {};\n            }\n            module.cache.animation = animation;\n          },\n          displayType: function(displayType) {\n            if(displayType !== 'none') {\n              $module.data(metadata.displayType, displayType);\n            }\n          },\n          transitionExists: function(animation, exists) {\n            $.fn.transition.exists[animation] = exists;\n            module.verbose('Saving existence of transition', animation, exists);\n          }\n        },\n\n        restore: {\n          conditions: function() {\n            var\n              animation = module.get.currentAnimation()\n            ;\n            if(animation) {\n              $module\n                .removeClass(animation)\n              ;\n              module.verbose('Removing animation class', module.cache);\n            }\n            module.remove.duration();\n          }\n        },\n\n        add: {\n          failSafe: function() {\n            var\n              duration = module.get.duration()\n            ;\n            module.timer = setTimeout(function() {\n              $module.triggerHandler(animationEnd);\n            }, duration + settings.failSafeDelay);\n            module.verbose('Adding fail safe timer', module.timer);\n          }\n        },\n\n        remove: {\n          animating: function() {\n            $module.removeClass(className.animating);\n          },\n          animationCallbacks: function() {\n            module.remove.queueCallback();\n            module.remove.completeCallback();\n          },\n          queueCallback: function() {\n            $module.off('.queue' + eventNamespace);\n          },\n          completeCallback: function() {\n            $module.off('.complete' + eventNamespace);\n          },\n          display: function() {\n            $module.css('display', '');\n          },\n          direction: function() {\n            $module\n              .removeClass(className.inward)\n              .removeClass(className.outward)\n            ;\n          },\n          duration: function() {\n            $module\n              .css('animation-duration', '')\n            ;\n          },\n          failSafe: function() {\n            module.verbose('Removing fail safe timer', module.timer);\n            if(module.timer) {\n              clearTimeout(module.timer);\n            }\n          },\n          hidden: function() {\n            $module.removeClass(className.hidden);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          },\n          looping: function() {\n            module.debug('Transitions are no longer looping');\n            if( module.is.looping() ) {\n              module.reset();\n              $module\n                .removeClass(className.looping)\n              ;\n            }\n          },\n          transition: function() {\n            $module\n              .removeClass(className.visible)\n              .removeClass(className.hidden)\n            ;\n          }\n        },\n        get: {\n          settings: function(animation, duration, onComplete) {\n            // single settings object\n            if(typeof animation == 'object') {\n              return $.extend(true, {}, $.fn.transition.settings, animation);\n            }\n            // all arguments provided\n            else if(typeof onComplete == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : onComplete,\n                duration   : duration\n              });\n            }\n            // only duration provided\n            else if(typeof duration == 'string' || typeof duration == 'number') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation,\n                duration  : duration\n              });\n            }\n            // duration is actually settings object\n            else if(typeof duration == 'object') {\n              return $.extend({}, $.fn.transition.settings, duration, {\n                animation : animation\n              });\n            }\n            // duration is actually callback\n            else if(typeof duration == 'function') {\n              return $.extend({}, $.fn.transition.settings, {\n                animation  : animation,\n                onComplete : duration\n              });\n            }\n            // only animation provided\n            else {\n              return $.extend({}, $.fn.transition.settings, {\n                animation : animation\n              });\n            }\n          },\n          animationClass: function(animation) {\n            var\n              animationClass = animation || settings.animation,\n              directionClass = (module.can.transition() && !module.has.direction())\n                ? module.get.direction() + ' '\n                : ''\n            ;\n            return className.animating + ' '\n              + className.transition + ' '\n              + directionClass\n              + animationClass\n            ;\n          },\n          currentAnimation: function() {\n            return (module.cache && module.cache.animation !== undefined)\n              ? module.cache.animation\n              : false\n            ;\n          },\n          currentDirection: function() {\n            return module.is.inward()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          direction: function() {\n            return module.is.hidden() || !module.is.visible()\n              ? className.inward\n              : className.outward\n            ;\n          },\n          animationDirection: function(animation) {\n            var\n              direction\n            ;\n            animation = animation || settings.animation;\n            if(typeof animation === 'string') {\n              animation = animation.split(' ');\n              // search animation name for out/in class\n              $.each(animation, function(index, word){\n                if(word === className.inward) {\n                  direction = className.inward;\n                }\n                else if(word === className.outward) {\n                  direction = className.outward;\n                }\n              });\n            }\n            // return found direction\n            if(direction) {\n              return direction;\n            }\n            return false;\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            if(duration === false) {\n              duration = $module.css('animation-duration') || 0;\n            }\n            return (typeof duration === 'string')\n              ? (duration.indexOf('ms') > -1)\n                ? parseFloat(duration)\n                : parseFloat(duration) * 1000\n              : duration\n            ;\n          },\n          displayType: function(shouldDetermine) {\n            shouldDetermine = (shouldDetermine !== undefined)\n              ? shouldDetermine\n              : true\n            ;\n            if(settings.displayType) {\n              return settings.displayType;\n            }\n            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\n              // create fake element to determine display state\n              module.can.transition(true);\n            }\n            return $module.data(metadata.displayType);\n          },\n          userStyle: function(style) {\n            style = style || $module.attr('style') || '';\n            return style.replace(/display.*?;/, '');\n          },\n          transitionExists: function(animation) {\n            return $.fn.transition.exists[animation];\n          },\n          animationStartEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationstart',\n                'OAnimation'      :'oAnimationStart',\n                'MozAnimation'    :'mozAnimationStart',\n                'WebkitAnimation' :'webkitAnimationStart'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          },\n          animationEndEvent: function() {\n            var\n              element     = document.createElement('div'),\n              animations  = {\n                'animation'       :'animationend',\n                'OAnimation'      :'oAnimationEnd',\n                'MozAnimation'    :'mozAnimationEnd',\n                'WebkitAnimation' :'webkitAnimationEnd'\n              },\n              animation\n            ;\n            for(animation in animations){\n              if( element.style[animation] !== undefined ){\n                return animations[animation];\n              }\n            }\n            return false;\n          }\n\n        },\n\n        can: {\n          transition: function(forced) {\n            var\n              animation         = settings.animation,\n              transitionExists  = module.get.transitionExists(animation),\n              displayType       = module.get.displayType(false),\n              elementClass,\n              tagName,\n              $clone,\n              currentAnimation,\n              inAnimation,\n              directionExists\n            ;\n            if( transitionExists === undefined || forced) {\n              module.verbose('Determining whether animation exists');\n              elementClass = $module.attr('class');\n              tagName      = $module.prop('tagName');\n\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\n              currentAnimation = $clone\n                .addClass(animation)\n                .removeClass(className.inward)\n                .removeClass(className.outward)\n                .addClass(className.animating)\n                .addClass(className.transition)\n                .css('animationName')\n              ;\n              inAnimation = $clone\n                .addClass(className.inward)\n                .css('animationName')\n              ;\n              if(!displayType) {\n                displayType = $clone\n                  .attr('class', elementClass)\n                  .removeAttr('style')\n                  .removeClass(className.hidden)\n                  .removeClass(className.visible)\n                  .show()\n                  .css('display')\n                ;\n                module.verbose('Determining final display state', displayType);\n                module.save.displayType(displayType);\n              }\n\n              $clone.remove();\n              if(currentAnimation != inAnimation) {\n                module.debug('Direction exists for animation', animation);\n                directionExists = true;\n              }\n              else if(currentAnimation == 'none' || !currentAnimation) {\n                module.debug('No animation defined in css', animation);\n                return;\n              }\n              else {\n                module.debug('Static animation found', animation, displayType);\n                directionExists = false;\n              }\n              module.save.transitionExists(animation, directionExists);\n            }\n            return (transitionExists !== undefined)\n              ? transitionExists\n              : directionExists\n            ;\n          },\n          animate: function() {\n            // can transition does not return a value if animation does not exist\n            return (module.can.transition() !== undefined);\n          }\n        },\n\n        is: {\n          animating: function() {\n            return $module.hasClass(className.animating);\n          },\n          inward: function() {\n            return $module.hasClass(className.inward);\n          },\n          outward: function() {\n            return $module.hasClass(className.outward);\n          },\n          looping: function() {\n            return $module.hasClass(className.looping);\n          },\n          occurring: function(animation) {\n            animation = animation || settings.animation;\n            animation = '.' + animation.replace(' ', '.');\n            return ( $module.filter(animation).length > 0 );\n          },\n          visible: function() {\n            return $module.is(':visible');\n          },\n          hidden: function() {\n            return $module.css('visibility') === 'hidden';\n          },\n          supported: function() {\n            return(animationEnd !== false);\n          }\n        },\n\n        hide: function() {\n          module.verbose('Hiding element');\n          if( module.is.animating() ) {\n            module.reset();\n          }\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\n          module.remove.display();\n          module.remove.visible();\n          module.set.hidden();\n          module.force.hidden();\n          settings.onHide.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        show: function(display) {\n          module.verbose('Showing element', display);\n          module.remove.hidden();\n          module.set.visible();\n          module.force.visible();\n          settings.onShow.call(element);\n          settings.onComplete.call(element);\n          // module.repaint();\n        },\n\n        toggle: function() {\n          if( module.is.visible() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        stop: function() {\n          module.debug('Stopping current animation');\n          $module.triggerHandler(animationEnd);\n        },\n\n        stopAll: function() {\n          module.debug('Stopping all animation');\n          module.remove.queueCallback();\n          $module.triggerHandler(animationEnd);\n        },\n\n        clear: {\n          queue: function() {\n            module.debug('Clearing animation queue');\n            module.remove.queueCallback();\n          }\n        },\n\n        enable: function() {\n          module.verbose('Starting animation');\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          module.debug('Stopping animation');\n          $module.addClass(className.disabled);\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        // modified for transition to return invoke success\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return (found !== undefined)\n            ? found\n            : false\n          ;\n        }\n      };\n      module.initialize();\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n// Records if CSS transition is available\n$.fn.transition.exists = {};\n\n$.fn.transition.settings = {\n\n  // module info\n  name          : 'Transition',\n\n  // hide all output from this component regardless of other settings\n  silent        : false,\n\n  // debug content outputted to console\n  debug         : false,\n\n  // verbose debug output\n  verbose       : false,\n\n  // performance data output\n  performance   : true,\n\n  // event namespace\n  namespace     : 'transition',\n\n  // delay between animations in group\n  interval      : 0,\n\n  // whether group animations should be reversed\n  reverse       : 'auto',\n\n  // animation callback event\n  onStart       : function() {},\n  onComplete    : function() {},\n  onShow        : function() {},\n  onHide        : function() {},\n\n  // whether timeout should be used to ensure callback fires in cases animationend does not\n  useFailSafe   : true,\n\n  // delay in ms for fail safe\n  failSafeDelay : 100,\n\n  // whether EXACT animation can occur twice in a row\n  allowRepeats  : false,\n\n  // Override final display type on visible\n  displayType   : false,\n\n  // animation duration\n  animation     : 'fade',\n  duration      : false,\n\n  // new animations will occur after previous ones\n  queue         : true,\n\n  metadata : {\n    displayType: 'display'\n  },\n\n  className   : {\n    animating  : 'animating',\n    disabled   : 'disabled',\n    hidden     : 'hidden',\n    inward     : 'in',\n    loading    : 'loading',\n    looping    : 'looping',\n    outward    : 'out',\n    transition : 'transition',\n    visible    : 'visible'\n  },\n\n  // possible errors\n  error: {\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\n    method      : 'The method you called is not defined',\n    support     : 'This browser does not support CSS animations'\n  }\n\n};\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - API\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nvar\n  window = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.api = $.fn.api = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n    moduleSelector = $allModules.selector || '',\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\n          : $.extend({}, $.fn.api.settings),\n\n        // internal aliases\n        namespace       = settings.namespace,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n        className       = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // element that creates request\n        $module         = $(this),\n        $form           = $module.closest(selector.form),\n\n        // context used for state\n        $context        = (settings.stateContext)\n          ? $(settings.stateContext)\n          : $module,\n\n        // request details\n        ajaxSettings,\n        requestSettings,\n        url,\n        data,\n        requestStartTime,\n\n        // standard module\n        element         = this,\n        context         = $context[0],\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          if(!methodInvoked) {\n            module.bind.events();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            var\n              triggerEvent = module.get.event()\n            ;\n            if( triggerEvent ) {\n              module.verbose('Attaching API events to element', triggerEvent);\n              $module\n                .on(triggerEvent + eventNamespace, module.event.trigger)\n              ;\n            }\n            else if(settings.on == 'now') {\n              module.debug('Querying API endpoint immediately');\n              module.query();\n            }\n          }\n        },\n\n        decode: {\n          json: function(response) {\n            if(response !== undefined && typeof response == 'string') {\n              try {\n               response = JSON.parse(response);\n              }\n              catch(e) {\n                // isnt json string\n              }\n            }\n            return response;\n          }\n        },\n\n        read: {\n          cachedResponse: function(url) {\n            var\n              response\n            ;\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            response = sessionStorage.getItem(url);\n            module.debug('Using cached response', url, response);\n            response = module.decode.json(response);\n            return response;\n          }\n        },\n        write: {\n          cachedResponse: function(url, response) {\n            if(response && response === '') {\n              module.debug('Response empty, not caching', response);\n              return;\n            }\n            if(window.Storage === undefined) {\n              module.error(error.noStorage);\n              return;\n            }\n            if( $.isPlainObject(response) ) {\n              response = JSON.stringify(response);\n            }\n            sessionStorage.setItem(url, response);\n            module.verbose('Storing cached response for url', url, response);\n          }\n        },\n\n        query: function() {\n\n          if(module.is.disabled()) {\n            module.debug('Element is disabled API request aborted');\n            return;\n          }\n\n          if(module.is.loading()) {\n            if(settings.interruptRequests) {\n              module.debug('Interrupting previous request');\n              module.abort();\n            }\n            else {\n              module.debug('Cancelling request, previous request is still pending');\n              return;\n            }\n          }\n\n          // pass element metadata to url (value, text)\n          if(settings.defaultData) {\n            $.extend(true, settings.urlData, module.get.defaultData());\n          }\n\n          // Add form content\n          if(settings.serializeForm) {\n            settings.data = module.add.formData(settings.data);\n          }\n\n          // call beforesend and get any settings changes\n          requestSettings = module.get.settings();\n\n          // check if before send cancelled request\n          if(requestSettings === false) {\n            module.cancelled = true;\n            module.error(error.beforeSend);\n            return;\n          }\n          else {\n            module.cancelled = false;\n          }\n\n          // get url\n          url = module.get.templatedURL();\n\n          if(!url && !module.is.mocked()) {\n            module.error(error.missingURL);\n            return;\n          }\n\n          // replace variables\n          url = module.add.urlData( url );\n          // missing url parameters\n          if( !url && !module.is.mocked()) {\n            return;\n          }\n\n          requestSettings.url = settings.base + url;\n\n          // look for jQuery ajax parameters in settings\n          ajaxSettings = $.extend(true, {}, settings, {\n            type       : settings.method || settings.type,\n            data       : data,\n            url        : settings.base + url,\n            beforeSend : settings.beforeXHR,\n            success    : function() {},\n            failure    : function() {},\n            complete   : function() {}\n          });\n\n          module.debug('Querying URL', ajaxSettings.url);\n          module.verbose('Using AJAX settings', ajaxSettings);\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\n            module.debug('Response returned from local cache');\n            module.request = module.create.request();\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\n            return;\n          }\n\n          if( !settings.throttle ) {\n            module.debug('Sending request', data, ajaxSettings.method);\n            module.send.request();\n          }\n          else {\n            if(!settings.throttleFirstRequest && !module.timer) {\n              module.debug('Sending request', data, ajaxSettings.method);\n              module.send.request();\n              module.timer = setTimeout(function(){}, settings.throttle);\n            }\n            else {\n              module.debug('Throttling request', settings.throttle);\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                if(module.timer) {\n                  delete module.timer;\n                }\n                module.debug('Sending throttled request', data, ajaxSettings.method);\n                module.send.request();\n              }, settings.throttle);\n            }\n          }\n\n        },\n\n        should: {\n          removeError: function() {\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\n          }\n        },\n\n        is: {\n          disabled: function() {\n            return ($module.filter(selector.disabled).length > 0);\n          },\n          expectingJSON: function() {\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\n          },\n          form: function() {\n            return $module.is('form') || $context.is('form');\n          },\n          mocked: function() {\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          loading: function() {\n            return (module.request)\n              ? (module.request.state() == 'pending')\n              : false\n            ;\n          },\n          abortedRequest: function(xhr) {\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\n              module.verbose('XHR request determined to be aborted');\n              return true;\n            }\n            else {\n              module.verbose('XHR request was not aborted');\n              return false;\n            }\n          },\n          validResponse: function(response) {\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\n              return true;\n            }\n            module.debug('Checking JSON returned success', settings.successTest, response);\n            if( settings.successTest(response) ) {\n              module.debug('Response passed success test', response);\n              return true;\n            }\n            else {\n              module.debug('Response failed success test', response);\n              return false;\n            }\n          }\n        },\n\n        was: {\n          cancelled: function() {\n            return (module.cancelled || false);\n          },\n          succesful: function() {\n            return (module.request && module.request.state() == 'resolved');\n          },\n          failure: function() {\n            return (module.request && module.request.state() == 'rejected');\n          },\n          complete: function() {\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\n          }\n        },\n\n        add: {\n          urlData: function(url, urlData) {\n            var\n              requiredVariables,\n              optionalVariables\n            ;\n            if(url) {\n              requiredVariables = url.match(settings.regExp.required);\n              optionalVariables = url.match(settings.regExp.optional);\n              urlData           = urlData || settings.urlData;\n              if(requiredVariables) {\n                module.debug('Looking for required URL variables', requiredVariables);\n                $.each(requiredVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(2, templatedString.length - 3)\n                      : templatedString.substr(1, templatedString.length - 2),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // remove value\n                  if(value === undefined) {\n                    module.error(error.requiredParameter, variable, url);\n                    url = false;\n                    return false;\n                  }\n                  else {\n                    module.verbose('Found required variable', variable, value);\n                    value = (settings.encodeParameters)\n                      ? module.get.urlEncodedValue(value)\n                      : value\n                    ;\n                    url = url.replace(templatedString, value);\n                  }\n                });\n              }\n              if(optionalVariables) {\n                module.debug('Looking for optional URL variables', requiredVariables);\n                $.each(optionalVariables, function(index, templatedString) {\n                  var\n                    // allow legacy {/$var} style\n                    variable = (templatedString.indexOf('$') !== -1)\n                      ? templatedString.substr(3, templatedString.length - 4)\n                      : templatedString.substr(2, templatedString.length - 3),\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\n                      ? urlData[variable]\n                      : ($module.data(variable) !== undefined)\n                        ? $module.data(variable)\n                        : ($context.data(variable) !== undefined)\n                          ? $context.data(variable)\n                          : urlData[variable]\n                  ;\n                  // optional replacement\n                  if(value !== undefined) {\n                    module.verbose('Optional variable Found', variable, value);\n                    url = url.replace(templatedString, value);\n                  }\n                  else {\n                    module.verbose('Optional variable not found', variable);\n                    // remove preceding slash if set\n                    if(url.indexOf('/' + templatedString) !== -1) {\n                      url = url.replace('/' + templatedString, '');\n                    }\n                    else {\n                      url = url.replace(templatedString, '');\n                    }\n                  }\n                });\n              }\n            }\n            return url;\n          },\n          formData: function(data) {\n            var\n              canSerialize = ($.fn.serializeObject !== undefined),\n              formData     = (canSerialize)\n                ? $form.serializeObject()\n                : $form.serialize(),\n              hasOtherData\n            ;\n            data         = data || settings.data;\n            hasOtherData = $.isPlainObject(data);\n\n            if(hasOtherData) {\n              if(canSerialize) {\n                module.debug('Extending existing data with form data', data, formData);\n                data = $.extend(true, {}, data, formData);\n              }\n              else {\n                module.error(error.missingSerialize);\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\n                data = formData;\n              }\n            }\n            else {\n              module.debug('Adding form data', formData);\n              data = formData;\n            }\n            return data;\n          }\n        },\n\n        send: {\n          request: function() {\n            module.set.loading();\n            module.request = module.create.request();\n            if( module.is.mocked() ) {\n              module.mockedXHR = module.create.mockedXHR();\n            }\n            else {\n              module.xhr = module.create.xhr();\n            }\n            settings.onRequest.call(context, module.request, module.xhr);\n          }\n        },\n\n        event: {\n          trigger: function(event) {\n            module.query();\n            if(event.type == 'submit' || event.type == 'click') {\n              event.preventDefault();\n            }\n          },\n          xhr: {\n            always: function() {\n              // nothing special\n            },\n            done: function(response, textStatus, xhr) {\n              var\n                context            = this,\n                elapsedTime        = (new Date().getTime() - requestStartTime),\n                timeLeft           = (settings.loadingDuration - elapsedTime),\n                translatedResponse = ( $.isFunction(settings.onResponse) )\n                  ? module.is.expectingJSON()\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\n                    : settings.onResponse.call(context, response)\n                  : false\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(translatedResponse) {\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\n                response = translatedResponse;\n              }\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.validResponse(response) ) {\n                  module.request.resolveWith(context, [response, xhr]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'invalid']);\n                }\n              }, timeLeft);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                context     = this,\n                elapsedTime = (new Date().getTime() - requestStartTime),\n                timeLeft    = (settings.loadingDuration - elapsedTime)\n              ;\n              timeLeft = (timeLeft > 0)\n                ? timeLeft\n                : 0\n              ;\n              if(timeLeft > 0) {\n                module.debug('Response completed early delaying state change by', timeLeft);\n              }\n              setTimeout(function() {\n                if( module.is.abortedRequest(xhr) ) {\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\n                }\n                else {\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\n                }\n              }, timeLeft);\n            }\n          },\n          request: {\n            done: function(response, xhr) {\n              module.debug('Successful API Response', response);\n              if(settings.cache === 'local' && url) {\n                module.write.cachedResponse(url, response);\n                module.debug('Saving server response locally', module.cache);\n              }\n              settings.onSuccess.call(context, response, $module, xhr);\n            },\n            complete: function(firstParameter, secondParameter) {\n              var\n                xhr,\n                response\n              ;\n              // have to guess callback parameters based on request success\n              if( module.was.succesful() ) {\n                response = firstParameter;\n                xhr      = secondParameter;\n              }\n              else {\n                xhr      = firstParameter;\n                response = module.get.responseFromXHR(xhr);\n              }\n              module.remove.loading();\n              settings.onComplete.call(context, response, $module, xhr);\n            },\n            fail: function(xhr, status, httpMessage) {\n              var\n                // pull response from xhr if available\n                response     = module.get.responseFromXHR(xhr),\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\n              ;\n              if(status == 'aborted') {\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\n                settings.onAbort.call(context, status, $module, xhr);\n                return true;\n              }\n              else if(status == 'invalid') {\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\n              }\n              else if(status == 'error') {\n                if(xhr !== undefined) {\n                  module.debug('XHR produced a server error', status, httpMessage);\n                  // make sure we have an error to display to console\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\n                  }\n                  settings.onError.call(context, errorMessage, $module, xhr);\n                }\n              }\n\n              if(settings.errorDuration && status !== 'aborted') {\n                module.debug('Adding error state');\n                module.set.error();\n                if( module.should.removeError() ) {\n                  setTimeout(module.remove.error, settings.errorDuration);\n                }\n              }\n              module.debug('API Request failed', errorMessage, xhr);\n              settings.onFailure.call(context, response, $module, xhr);\n            }\n          }\n        },\n\n        create: {\n\n          request: function() {\n            // api request promise\n            return $.Deferred()\n              .always(module.event.request.complete)\n              .done(module.event.request.done)\n              .fail(module.event.request.fail)\n            ;\n          },\n\n          mockedXHR: function () {\n            var\n              // xhr does not simulate these properties of xhr but must return them\n              textStatus     = false,\n              status         = false,\n              httpMessage    = false,\n              responder      = settings.mockResponse      || settings.response,\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\n              asyncCallback,\n              response,\n              mockedXHR\n            ;\n\n            mockedXHR = $.Deferred()\n              .always(module.event.xhr.complete)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n\n            if(responder) {\n              if( $.isFunction(responder) ) {\n                module.debug('Using specified synchronous callback', responder);\n                response = responder.call(context, requestSettings);\n              }\n              else {\n                module.debug('Using settings specified response', responder);\n                response = responder;\n              }\n              // simulating response\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n            }\n            else if( $.isFunction(asyncResponder) ) {\n              asyncCallback = function(response) {\n                module.debug('Async callback returned response', response);\n\n                if(response) {\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\n                }\n                else {\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\n                }\n              };\n              module.debug('Using specified async response callback', asyncResponder);\n              asyncResponder.call(context, requestSettings, asyncCallback);\n            }\n            return mockedXHR;\n          },\n\n          xhr: function() {\n            var\n              xhr\n            ;\n            // ajax request promise\n            xhr = $.ajax(ajaxSettings)\n              .always(module.event.xhr.always)\n              .done(module.event.xhr.done)\n              .fail(module.event.xhr.fail)\n            ;\n            module.verbose('Created server request', xhr, ajaxSettings);\n            return xhr;\n          }\n        },\n\n        set: {\n          error: function() {\n            module.verbose('Adding error state to element', $context);\n            $context.addClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Adding loading state to element', $context);\n            $context.addClass(className.loading);\n            requestStartTime = new Date().getTime();\n          }\n        },\n\n        remove: {\n          error: function() {\n            module.verbose('Removing error state from element', $context);\n            $context.removeClass(className.error);\n          },\n          loading: function() {\n            module.verbose('Removing loading state from element', $context);\n            $context.removeClass(className.loading);\n          }\n        },\n\n        get: {\n          responseFromXHR: function(xhr) {\n            return $.isPlainObject(xhr)\n              ? (module.is.expectingJSON())\n                ? module.decode.json(xhr.responseText)\n                : xhr.responseText\n              : false\n            ;\n          },\n          errorFromRequest: function(response, status, httpMessage) {\n            return ($.isPlainObject(response) && response.error !== undefined)\n              ? response.error // use json error message\n              : (settings.error[status] !== undefined) // use server error message\n                ? settings.error[status]\n                : httpMessage\n            ;\n          },\n          request: function() {\n            return module.request || false;\n          },\n          xhr: function() {\n            return module.xhr || false;\n          },\n          settings: function() {\n            var\n              runSettings\n            ;\n            runSettings = settings.beforeSend.call(context, settings);\n            if(runSettings) {\n              if(runSettings.success !== undefined) {\n                module.debug('Legacy success callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.success);\n                runSettings.onSuccess = runSettings.success;\n              }\n              if(runSettings.failure !== undefined) {\n                module.debug('Legacy failure callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.failure);\n                runSettings.onFailure = runSettings.failure;\n              }\n              if(runSettings.complete !== undefined) {\n                module.debug('Legacy complete callback detected', runSettings);\n                module.error(error.legacyParameters, runSettings.complete);\n                runSettings.onComplete = runSettings.complete;\n              }\n            }\n            if(runSettings === undefined) {\n              module.error(error.noReturnedValue);\n            }\n            if(runSettings === false) {\n              return runSettings;\n            }\n            return (runSettings !== undefined)\n              ? $.extend(true, {}, runSettings)\n              : $.extend(true, {}, settings)\n            ;\n          },\n          urlEncodedValue: function(value) {\n            var\n              decodedValue   = window.decodeURIComponent(value),\n              encodedValue   = window.encodeURIComponent(value),\n              alreadyEncoded = (decodedValue !== value)\n            ;\n            if(alreadyEncoded) {\n              module.debug('URL value is already encoded, avoiding double encoding', value);\n              return value;\n            }\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\n            return encodedValue;\n          },\n          defaultData: function() {\n            var\n              data = {}\n            ;\n            if( !$.isWindow(element) ) {\n              if( module.is.input() ) {\n                data.value = $module.val();\n              }\n              else if( module.is.form() ) {\n\n              }\n              else {\n                data.text = $module.text();\n              }\n            }\n            return data;\n          },\n          event: function() {\n            if( $.isWindow(element) || settings.on == 'now' ) {\n              module.debug('API called without element, no events attached');\n              return false;\n            }\n            else if(settings.on == 'auto') {\n              if( $module.is('input') ) {\n                return (element.oninput !== undefined)\n                  ? 'input'\n                  : (element.onpropertychange !== undefined)\n                    ? 'propertychange'\n                    : 'keyup'\n                ;\n              }\n              else if( $module.is('form') ) {\n                return 'submit';\n              }\n              else {\n                return 'click';\n              }\n            }\n            else {\n              return settings.on;\n            }\n          },\n          templatedURL: function(action) {\n            action = action || $module.data(metadata.action) || settings.action || false;\n            url    = $module.data(metadata.url) || settings.url || false;\n            if(url) {\n              module.debug('Using specified url', url);\n              return url;\n            }\n            if(action) {\n              module.debug('Looking up url for action', action, settings.api);\n              if(settings.api[action] === undefined && !module.is.mocked()) {\n                module.error(error.missingAction, settings.action, settings.api);\n                return;\n              }\n              url = settings.api[action];\n            }\n            else if( module.is.form() ) {\n              url = $module.attr('action') || $context.attr('action') || false;\n              module.debug('No url or action specified, defaulting to form action', url);\n            }\n            return url;\n          }\n        },\n\n        abort: function() {\n          var\n            xhr = module.get.xhr()\n          ;\n          if( xhr && xhr.state() !== 'resolved') {\n            module.debug('Cancelling API request');\n            xhr.abort();\n          }\n        },\n\n        // reset state\n        reset: function() {\n          module.remove.error();\n          module.remove.loading();\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                //'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.api.settings = {\n\n  name              : 'API',\n  namespace         : 'api',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  // object containing all templates endpoints\n  api               : {},\n\n  // whether to cache responses\n  cache             : true,\n\n  // whether new requests should abort previous requests\n  interruptRequests : true,\n\n  // event binding\n  on                : 'auto',\n\n  // context for applying state classes\n  stateContext      : false,\n\n  // duration for loading state\n  loadingDuration   : 0,\n\n  // whether to hide errors after a period of time\n  hideError         : 'auto',\n\n  // duration for error state\n  errorDuration     : 2000,\n\n  // whether parameters should be encoded with encodeURIComponent\n  encodeParameters  : true,\n\n  // API action to use\n  action            : false,\n\n  // templated URL to use\n  url               : false,\n\n  // base URL to apply to all endpoints\n  base              : '',\n\n  // data that will\n  urlData           : {},\n\n  // whether to add default data to url data\n  defaultData          : true,\n\n  // whether to serialize closest form\n  serializeForm        : false,\n\n  // how long to wait before request should occur\n  throttle             : 0,\n\n  // whether to throttle first request or only repeated\n  throttleFirstRequest : true,\n\n  // standard ajax settings\n  method            : 'get',\n  data              : {},\n  dataType          : 'json',\n\n  // mock response\n  mockResponse      : false,\n  mockResponseAsync : false,\n\n  // aliases for mock\n  response          : false,\n  responseAsync     : false,\n\n  // callbacks before request\n  beforeSend  : function(settings) { return settings; },\n  beforeXHR   : function(xhr) {},\n  onRequest   : function(promise, xhr) {},\n\n  // after request\n  onResponse  : false, // function(response) { },\n\n  // response was successful, if JSON passed validation\n  onSuccess   : function(response, $module) {},\n\n  // request finished without aborting\n  onComplete  : function(response, $module) {},\n\n  // failed JSON success test\n  onFailure   : function(response, $module) {},\n\n  // server error\n  onError     : function(errorMessage, $module) {},\n\n  // request aborted\n  onAbort     : function(errorMessage, $module) {},\n\n  successTest : false,\n\n  // errors\n  error : {\n    beforeSend        : 'The before send function has aborted the request',\n    error             : 'There was an error with your request',\n    exitConditions    : 'API Request Aborted. Exit conditions met',\n    JSONParse         : 'JSON could not be parsed during error handling',\n    legacyParameters  : 'You are using legacy API success callback names',\n    method            : 'The method you called is not defined',\n    missingAction     : 'API action used but no url was defined',\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\n    missingURL        : 'No URL specified for api event',\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\n    noStorage         : 'Caching responses locally requires session storage',\n    parseError        : 'There was an error parsing your request',\n    requiredParameter : 'Missing a required URL parameter: ',\n    statusMessage     : 'Server gave an error: ',\n    timeout           : 'Your request timed out'\n  },\n\n  regExp  : {\n    required : /\\{\\$*[A-z0-9]+\\}/g,\n    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\n  },\n\n  className: {\n    loading : 'loading',\n    error   : 'error'\n  },\n\n  selector: {\n    disabled : '.disabled',\n    form      : 'form'\n  },\n\n  metadata: {\n    action  : 'action',\n    url     : 'url'\n  }\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - State\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.state = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    hasTouch        = ('ontouchstart' in document.documentElement),\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\n          : $.extend({}, $.fn.state.settings),\n\n        error           = settings.error,\n        metadata        = settings.metadata,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        states          = settings.states,\n        text            = settings.text,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n\n          // allow module to guess desired state based on element\n          if(settings.automatic) {\n            module.add.defaults();\n          }\n\n          // bind events with delegated events\n          if(settings.context && moduleSelector !== '') {\n            $(settings.context)\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          else {\n            $module\n              .on('mouseenter' + eventNamespace, module.change.text)\n              .on('mouseleave' + eventNamespace, module.reset.text)\n              .on('click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $module = $(element);\n        },\n\n        add: {\n          defaults: function() {\n            var\n              userStates = parameters && $.isPlainObject(parameters.states)\n                ? parameters.states\n                : {}\n            ;\n            $.each(settings.defaults, function(type, typeStates) {\n              if( module.is[type] !== undefined && module.is[type]() ) {\n                module.verbose('Adding default states', type, element);\n                $.extend(settings.states, typeStates, userStates);\n              }\n            });\n          }\n        },\n\n        is: {\n\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          loading: function() {\n            return $module.hasClass(className.loading);\n          },\n          inactive: function() {\n            return !( $module.hasClass(className.active) );\n          },\n          state: function(state) {\n            if(className[state] === undefined) {\n              return false;\n            }\n            return $module.hasClass( className[state] );\n          },\n\n          enabled: function() {\n            return !( $module.is(settings.filter.active) );\n          },\n          disabled: function() {\n            return ( $module.is(settings.filter.active) );\n          },\n          textEnabled: function() {\n            return !( $module.is(settings.filter.text) );\n          },\n\n          // definitions for automatic type detection\n          button: function() {\n            return $module.is('.button:not(a, .submit)');\n          },\n          input: function() {\n            return $module.is('input');\n          },\n          progress: function() {\n            return $module.is('.ui.progress');\n          }\n        },\n\n        allow: function(state) {\n          module.debug('Now allowing state', state);\n          states[state] = true;\n        },\n        disallow: function(state) {\n          module.debug('No longer allowing', state);\n          states[state] = false;\n        },\n\n        allows: function(state) {\n          return states[state] || false;\n        },\n\n        enable: function() {\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function() {\n          $module.addClass(className.disabled);\n        },\n\n        setState: function(state) {\n          if(module.allows(state)) {\n            $module.addClass( className[state] );\n          }\n        },\n\n        removeState: function(state) {\n          if(module.allows(state)) {\n            $module.removeClass( className[state] );\n          }\n        },\n\n        toggle: {\n          state: function() {\n            var\n              apiRequest,\n              requestCancelled\n            ;\n            if( module.allows('active') && module.is.enabled() ) {\n              module.refresh();\n              if($.fn.api !== undefined) {\n                apiRequest       = $module.api('get request');\n                requestCancelled = $module.api('was cancelled');\n                if( requestCancelled ) {\n                  module.debug('API Request cancelled by beforesend');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                else if(apiRequest) {\n                  module.listenTo(apiRequest);\n                  return;\n                }\n              }\n              module.change.state();\n            }\n          }\n        },\n\n        listenTo: function(apiRequest) {\n          module.debug('API request detected, waiting for state signal', apiRequest);\n          if(apiRequest) {\n            if(text.loading) {\n              module.update.text(text.loading);\n            }\n            $.when(apiRequest)\n              .then(function() {\n                if(apiRequest.state() == 'resolved') {\n                  module.debug('API request succeeded');\n                  settings.activateTest   = function(){ return true; };\n                  settings.deactivateTest = function(){ return true; };\n                }\n                else {\n                  module.debug('API request failed');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                module.change.state();\n              })\n            ;\n          }\n        },\n\n        // checks whether active/inactive state can be given\n        change: {\n\n          state: function() {\n            module.debug('Determining state change direction');\n            // inactive to active change\n            if( module.is.inactive() ) {\n              module.activate();\n            }\n            else {\n              module.deactivate();\n            }\n            if(settings.sync) {\n              module.sync();\n            }\n            settings.onChange.call(element);\n          },\n\n          text: function() {\n            if( module.is.textEnabled() ) {\n              if(module.is.disabled() ) {\n                module.verbose('Changing text to disabled text', text.hover);\n                module.update.text(text.disabled);\n              }\n              else if( module.is.active() ) {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.deactivate) {\n                  module.verbose('Changing text to deactivating text', text.deactivate);\n                  module.update.text(text.deactivate);\n                }\n              }\n              else {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.activate){\n                  module.verbose('Changing text to activating text', text.activate);\n                  module.update.text(text.activate);\n                }\n              }\n            }\n          }\n\n        },\n\n        activate: function() {\n          if( settings.activateTest.call(element) ) {\n            module.debug('Setting state to active');\n            $module\n              .addClass(className.active)\n            ;\n            module.update.text(text.active);\n            settings.onActivate.call(element);\n          }\n        },\n\n        deactivate: function() {\n          if( settings.deactivateTest.call(element) ) {\n            module.debug('Setting state to inactive');\n            $module\n              .removeClass(className.active)\n            ;\n            module.update.text(text.inactive);\n            settings.onDeactivate.call(element);\n          }\n        },\n\n        sync: function() {\n          module.verbose('Syncing other buttons to current state');\n          if( module.is.active() ) {\n            $allModules\n              .not($module)\n                .state('activate');\n          }\n          else {\n            $allModules\n              .not($module)\n                .state('deactivate')\n            ;\n          }\n        },\n\n        get: {\n          text: function() {\n            return (settings.selector.text)\n              ? $module.find(settings.selector.text).text()\n              : $module.html()\n            ;\n          },\n          textFor: function(state) {\n            return text[state] || false;\n          }\n        },\n\n        flash: {\n          text: function(text, duration, callback) {\n            var\n              previousText = module.get.text()\n            ;\n            module.debug('Flashing text message', text, duration);\n            text     = text     || settings.text.flash;\n            duration = duration || settings.flashDuration;\n            callback = callback || function() {};\n            module.update.text(text);\n            setTimeout(function(){\n              module.update.text(previousText);\n              callback.call(element);\n            }, duration);\n          }\n        },\n\n        reset: {\n          // on mouseout sets text to previous value\n          text: function() {\n            var\n              activeText   = text.active   || $module.data(metadata.storedText),\n              inactiveText = text.inactive || $module.data(metadata.storedText)\n            ;\n            if( module.is.textEnabled() ) {\n              if( module.is.active() && activeText) {\n                module.verbose('Resetting active text', activeText);\n                module.update.text(activeText);\n              }\n              else if(inactiveText) {\n                module.verbose('Resetting inactive text', activeText);\n                module.update.text(inactiveText);\n              }\n            }\n          }\n        },\n\n        update: {\n          text: function(text) {\n            var\n              currentText = module.get.text()\n            ;\n            if(text && text !== currentText) {\n              module.debug('Updating text', text);\n              if(settings.selector.text) {\n                $module\n                  .data(metadata.storedText, text)\n                  .find(settings.selector.text)\n                    .text(text)\n                ;\n              }\n              else {\n                $module\n                  .data(metadata.storedText, text)\n                  .html(text)\n                ;\n              }\n            }\n            else {\n              module.debug('Text is already set, ignoring update', text);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.state.settings = {\n\n  // module info\n  name           : 'State',\n\n  // debug output\n  debug          : false,\n\n  // verbose debug output\n  verbose        : false,\n\n  // namespace for events\n  namespace      : 'state',\n\n  // debug data includes performance\n  performance    : true,\n\n  // callback occurs on state change\n  onActivate     : function() {},\n  onDeactivate   : function() {},\n  onChange       : function() {},\n\n  // state test functions\n  activateTest   : function() { return true; },\n  deactivateTest : function() { return true; },\n\n  // whether to automatically map default states\n  automatic      : true,\n\n  // activate / deactivate changes all elements instantiated at same time\n  sync           : false,\n\n  // default flash text duration, used for temporarily changing text of an element\n  flashDuration  : 1000,\n\n  // selector filter\n  filter     : {\n    text   : '.loading, .disabled',\n    active : '.disabled'\n  },\n\n  context    : false,\n\n  // error\n  error: {\n    beforeSend : 'The before send function has cancelled state change',\n    method     : 'The method you called is not defined.'\n  },\n\n  // metadata\n  metadata: {\n    promise    : 'promise',\n    storedText : 'stored-text'\n  },\n\n  // change class on state\n  className: {\n    active   : 'active',\n    disabled : 'disabled',\n    error    : 'error',\n    loading  : 'loading',\n    success  : 'success',\n    warning  : 'warning'\n  },\n\n  selector: {\n    // selector for text node\n    text: false\n  },\n\n  defaults : {\n    input: {\n      disabled : true,\n      loading  : true,\n      active   : true\n    },\n    button: {\n      disabled : true,\n      loading  : true,\n      active   : true,\n    },\n    progress: {\n      active   : true,\n      success  : true,\n      warning  : true,\n      error    : true\n    }\n  },\n\n  states     : {\n    active   : true,\n    disabled : true,\n    error    : true,\n    loading  : true,\n    success  : true,\n    warning  : true\n  },\n\n  text     : {\n    disabled   : false,\n    flash      : false,\n    hover      : false,\n    active     : false,\n    inactive   : false,\n    activate   : false,\n    deactivate : false\n  }\n\n};\n\n\n\n})( jQuery, window, document );\n\n/*!\n * # Semantic UI 2.2.11 - Visibility\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.visibility = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue,\n\n    moduleCount    = $allModules.length,\n    loadedCount    = 0\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\n          : $.extend({}, $.fn.visibility.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n        metadata        = settings.metadata,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $window         = $(window),\n\n        $module         = $(this),\n        $context        = $(settings.context),\n\n        $placeholder,\n\n        selector        = $module.selector || '',\n        instance        = $module.data(moduleNamespace),\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); },\n\n        element         = this,\n        disabled        = false,\n\n        contextObserver,\n        observer,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing', settings);\n\n          module.setup.cache();\n\n          if( module.should.trackChanges() ) {\n\n            if(settings.type == 'image') {\n              module.setup.image();\n            }\n            if(settings.type == 'fixed') {\n              module.setup.fixed();\n            }\n\n            if(settings.observeChanges) {\n              module.observeChanges();\n            }\n            module.bind.events();\n          }\n\n          module.save.position();\n          if( !module.is.visible() ) {\n            module.error(error.visible, $module);\n          }\n\n          if(settings.initialCheck) {\n            module.checkVisibility();\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.debug('Storing instance', module);\n          $module\n            .data(moduleNamespace, module)\n          ;\n          instance = module;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module');\n          if(observer) {\n            observer.disconnect();\n          }\n          if(contextObserver) {\n            contextObserver.disconnect();\n          }\n          $window\n            .off('load'   + eventNamespace, module.event.load)\n            .off('resize' + eventNamespace, module.event.resize)\n          ;\n          $context\n            .off('scroll'       + eventNamespace, module.event.scroll)\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\n          ;\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n            module.remove.placeholder();\n          }\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        observeChanges: function() {\n          if('MutationObserver' in window) {\n            contextObserver = new MutationObserver(module.event.contextChanged);\n            observer        = new MutationObserver(module.event.changed);\n            contextObserver.observe(document, {\n              childList : true,\n              subtree   : true\n            });\n            observer.observe(element, {\n              childList : true,\n              subtree   : true\n            });\n            module.debug('Setting up mutation observer', observer);\n          }\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding visibility events to scroll and resize');\n            if(settings.refreshOnLoad) {\n              $window\n                .on('load'   + eventNamespace, module.event.load)\n              ;\n            }\n            $window\n              .on('resize' + eventNamespace, module.event.resize)\n            ;\n            // pub/sub pattern\n            $context\n              .off('scroll'      + eventNamespace)\n              .on('scroll'       + eventNamespace, module.event.scroll)\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\n            ;\n          }\n        },\n\n        event: {\n          changed: function(mutations) {\n            module.verbose('DOM tree modified, updating visibility calculations');\n            module.timer = setTimeout(function() {\n              module.verbose('DOM tree modified, updating sticky menu');\n              module.refresh();\n            }, 100);\n          },\n          contextChanged: function(mutations) {\n            [].forEach.call(mutations, function(mutation) {\n              if(mutation.removedNodes) {\n                [].forEach.call(mutation.removedNodes, function(node) {\n                  if(node == element || $(node).find(element).length > 0) {\n                    module.debug('Element removed from DOM, tearing down events');\n                    module.destroy();\n                  }\n                });\n              }\n            });\n          },\n          resize: function() {\n            module.debug('Window resized');\n            if(settings.refreshOnResize) {\n              requestAnimationFrame(module.refresh);\n            }\n          },\n          load: function() {\n            module.debug('Page finished loading');\n            requestAnimationFrame(module.refresh);\n          },\n          // publishes scrollchange event on one scroll\n          scroll: function() {\n            if(settings.throttle) {\n              clearTimeout(module.timer);\n              module.timer = setTimeout(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              }, settings.throttle);\n            }\n            else {\n              requestAnimationFrame(function() {\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\n              });\n            }\n          },\n          // subscribes to scrollchange\n          scrollchange: function(event, scrollPosition) {\n            module.checkVisibility(scrollPosition);\n          },\n        },\n\n        precache: function(images, callback) {\n          if (!(images instanceof Array)) {\n            images = [images];\n          }\n          var\n            imagesLength  = images.length,\n            loadedCounter = 0,\n            cache         = [],\n            cacheImage    = document.createElement('img'),\n            handleLoad    = function() {\n              loadedCounter++;\n              if (loadedCounter >= images.length) {\n                if ($.isFunction(callback)) {\n                  callback();\n                }\n              }\n            }\n          ;\n          while (imagesLength--) {\n            cacheImage         = document.createElement('img');\n            cacheImage.onload  = handleLoad;\n            cacheImage.onerror = handleLoad;\n            cacheImage.src     = images[imagesLength];\n            cache.push(cacheImage);\n          }\n        },\n\n        enableCallbacks: function() {\n          module.debug('Allowing callbacks to occur');\n          disabled = false;\n        },\n\n        disableCallbacks: function() {\n          module.debug('Disabling all callbacks temporarily');\n          disabled = true;\n        },\n\n        should: {\n          trackChanges: function() {\n            if(methodInvoked) {\n              module.debug('One time query, no need to bind events');\n              return false;\n            }\n            module.debug('Callbacks being attached');\n            return true;\n          }\n        },\n\n        setup: {\n          cache: function() {\n            module.cache = {\n              occurred : {},\n              screen   : {},\n              element  : {},\n            };\n          },\n          image: function() {\n            var\n              src = $module.data(metadata.src)\n            ;\n            if(src) {\n              module.verbose('Lazy loading image', src);\n              settings.once           = true;\n              settings.observeChanges = false;\n\n              // show when top visible\n              settings.onOnScreen = function() {\n                module.debug('Image on screen', element);\n                module.precache(src, function() {\n                  module.set.image(src, function() {\n                    loadedCount++;\n                    if(loadedCount == moduleCount) {\n                      settings.onAllLoaded.call(this);\n                    }\n                    settings.onLoad.call(this);\n                  });\n                });\n              };\n            }\n          },\n          fixed: function() {\n            module.debug('Setting up fixed');\n            settings.once           = false;\n            settings.observeChanges = false;\n            settings.initialCheck   = true;\n            settings.refreshOnLoad  = true;\n            if(!parameters.transition) {\n              settings.transition = false;\n            }\n            module.create.placeholder();\n            module.debug('Added placeholder', $placeholder);\n            settings.onTopPassed = function() {\n              module.debug('Element passed, adding fixed position', $module);\n              module.show.placeholder();\n              module.set.fixed();\n              if(settings.transition) {\n                if($.fn.transition !== undefined) {\n                  $module.transition(settings.transition, settings.duration);\n                }\n              }\n            };\n            settings.onTopPassedReverse = function() {\n              module.debug('Element returned to position, removing fixed', $module);\n              module.hide.placeholder();\n              module.remove.fixed();\n            };\n          }\n        },\n\n        create: {\n          placeholder: function() {\n            module.verbose('Creating fixed position placeholder');\n            $placeholder = $module\n              .clone(false)\n              .css('display', 'none')\n              .addClass(className.placeholder)\n              .insertAfter($module)\n            ;\n          }\n        },\n\n        show: {\n          placeholder: function() {\n            module.verbose('Showing placeholder');\n            $placeholder\n              .css('display', 'block')\n              .css('visibility', 'hidden')\n            ;\n          }\n        },\n        hide: {\n          placeholder: function() {\n            module.verbose('Hiding placeholder');\n            $placeholder\n              .css('display', 'none')\n              .css('visibility', '')\n            ;\n          }\n        },\n\n        set: {\n          fixed: function() {\n            module.verbose('Setting element to fixed position');\n            $module\n              .addClass(className.fixed)\n              .css({\n                position : 'fixed',\n                top      : settings.offset + 'px',\n                left     : 'auto',\n                zIndex   : settings.zIndex\n              })\n            ;\n            settings.onFixed.call(element);\n          },\n          image: function(src, callback) {\n            $module\n              .attr('src', src)\n            ;\n            if(settings.transition) {\n              if( $.fn.transition !== undefined) {\n                if($module.hasClass(className.visible)) {\n                  module.debug('Transition already occurred on this image, skipping animation');\n                  return;\n                }\n                $module.transition(settings.transition, settings.duration, callback);\n              }\n              else {\n                $module.fadeIn(settings.duration, callback);\n              }\n            }\n            else {\n              $module.show();\n            }\n          }\n        },\n\n        is: {\n          onScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.onScreen;\n          },\n          offScreen: function() {\n            var\n              calculations   = module.get.elementCalculations()\n            ;\n            return calculations.offScreen;\n          },\n          visible: function() {\n            if(module.cache && module.cache.element) {\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\n            }\n            return false;\n          },\n          verticallyScrollableContext: function() {\n            var\n              overflowY = ($context.get(0) !== window)\n                ? $context.css('overflow-y')\n                : false\n            ;\n            return (overflowY == 'auto' || overflowY == 'scroll');\n          },\n          horizontallyScrollableContext: function() {\n            var\n              overflowX = ($context.get(0) !== window)\n                ? $context.css('overflow-x')\n                : false\n            ;\n            return (overflowX == 'auto' || overflowX == 'scroll');\n          }\n        },\n\n        refresh: function() {\n          module.debug('Refreshing constants (width/height)');\n          if(settings.type == 'fixed') {\n            module.resetFixed();\n          }\n          module.reset();\n          module.save.position();\n          if(settings.checkOnRefresh) {\n            module.checkVisibility();\n          }\n          settings.onRefresh.call(element);\n        },\n\n        resetFixed: function () {\n          module.remove.fixed();\n          module.remove.occurred();\n        },\n\n        reset: function() {\n          module.verbose('Resetting all cached values');\n          if( $.isPlainObject(module.cache) ) {\n            module.cache.screen = {};\n            module.cache.element = {};\n          }\n        },\n\n        checkVisibility: function(scroll) {\n          module.verbose('Checking visibility of element', module.cache.element);\n\n          if( !disabled && module.is.visible() ) {\n\n            // save scroll position\n            module.save.scroll(scroll);\n\n            // update calculations derived from scroll\n            module.save.calculations();\n\n            // percentage\n            module.passed();\n\n            // reverse (must be first)\n            module.passingReverse();\n            module.topVisibleReverse();\n            module.bottomVisibleReverse();\n            module.topPassedReverse();\n            module.bottomPassedReverse();\n\n            // one time\n            module.onScreen();\n            module.offScreen();\n            module.passing();\n            module.topVisible();\n            module.bottomVisible();\n            module.topPassed();\n            module.bottomPassed();\n\n            // on update callback\n            if(settings.onUpdate) {\n              settings.onUpdate.call(element, module.get.elementCalculations());\n            }\n          }\n        },\n\n        passed: function(amount, newCallback) {\n          var\n            calculations   = module.get.elementCalculations(),\n            amountInPixels\n          ;\n          // assign callback\n          if(amount && newCallback) {\n            settings.onPassed[amount] = newCallback;\n          }\n          else if(amount !== undefined) {\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\n          }\n          else if(calculations.passing) {\n            $.each(settings.onPassed, function(amount, callback) {\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\n                module.execute(callback, amount);\n              }\n              else if(!settings.once) {\n                module.remove.occurred(callback);\n              }\n            });\n          }\n        },\n\n        onScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOnScreen,\n            callbackName = 'onScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for onScreen', newCallback);\n            settings.onOnScreen = newCallback;\n          }\n          if(calculations.onScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOnScreen;\n          }\n        },\n\n        offScreen: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onOffScreen,\n            callbackName = 'offScreen'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for offScreen', newCallback);\n            settings.onOffScreen = newCallback;\n          }\n          if(calculations.offScreen) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.onOffScreen;\n          }\n        },\n\n        passing: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassing,\n            callbackName = 'passing'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing', newCallback);\n            settings.onPassing = newCallback;\n          }\n          if(calculations.passing) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return calculations.passing;\n          }\n        },\n\n\n        topVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisible,\n            callbackName = 'topVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible', newCallback);\n            settings.onTopVisible = newCallback;\n          }\n          if(calculations.topVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topVisible;\n          }\n        },\n\n        bottomVisible: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisible,\n            callbackName = 'bottomVisible'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible', newCallback);\n            settings.onBottomVisible = newCallback;\n          }\n          if(calculations.bottomVisible) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomVisible;\n          }\n        },\n\n        topPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassed,\n            callbackName = 'topPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed', newCallback);\n            settings.onTopPassed = newCallback;\n          }\n          if(calculations.topPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.topPassed;\n          }\n        },\n\n        bottomPassed: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassed,\n            callbackName = 'bottomPassed'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed', newCallback);\n            settings.onBottomPassed = newCallback;\n          }\n          if(calculations.bottomPassed) {\n            module.execute(callback, callbackName);\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return calculations.bottomPassed;\n          }\n        },\n\n        passingReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onPassingReverse,\n            callbackName = 'passingReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for passing reverse', newCallback);\n            settings.onPassingReverse = newCallback;\n          }\n          if(!calculations.passing) {\n            if(module.get.occurred('passing')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback !== undefined) {\n            return !calculations.passing;\n          }\n        },\n\n\n        topVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopVisibleReverse,\n            callbackName = 'topVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top visible reverse', newCallback);\n            settings.onTopVisibleReverse = newCallback;\n          }\n          if(!calculations.topVisible) {\n            if(module.get.occurred('topVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.topVisible;\n          }\n        },\n\n        bottomVisibleReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomVisibleReverse,\n            callbackName = 'bottomVisibleReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom visible reverse', newCallback);\n            settings.onBottomVisibleReverse = newCallback;\n          }\n          if(!calculations.bottomVisible) {\n            if(module.get.occurred('bottomVisible')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomVisible;\n          }\n        },\n\n        topPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onTopPassedReverse,\n            callbackName = 'topPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for top passed reverse', newCallback);\n            settings.onTopPassedReverse = newCallback;\n          }\n          if(!calculations.topPassed) {\n            if(module.get.occurred('topPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.onTopPassed;\n          }\n        },\n\n        bottomPassedReverse: function(newCallback) {\n          var\n            calculations = module.get.elementCalculations(),\n            callback     = newCallback || settings.onBottomPassedReverse,\n            callbackName = 'bottomPassedReverse'\n          ;\n          if(newCallback) {\n            module.debug('Adding callback for bottom passed reverse', newCallback);\n            settings.onBottomPassedReverse = newCallback;\n          }\n          if(!calculations.bottomPassed) {\n            if(module.get.occurred('bottomPassed')) {\n              module.execute(callback, callbackName);\n            }\n          }\n          else if(!settings.once) {\n            module.remove.occurred(callbackName);\n          }\n          if(newCallback === undefined) {\n            return !calculations.bottomPassed;\n          }\n        },\n\n        execute: function(callback, callbackName) {\n          var\n            calculations = module.get.elementCalculations(),\n            screen       = module.get.screenCalculations()\n          ;\n          callback = callback || false;\n          if(callback) {\n            if(settings.continuous) {\n              module.debug('Callback being called continuously', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n            else if(!module.get.occurred(callbackName)) {\n              module.debug('Conditions met', callbackName, calculations);\n              callback.call(element, calculations, screen);\n            }\n          }\n          module.save.occurred(callbackName);\n        },\n\n        remove: {\n          fixed: function() {\n            module.debug('Removing fixed position');\n            $module\n              .removeClass(className.fixed)\n              .css({\n                position : '',\n                top      : '',\n                left     : '',\n                zIndex   : ''\n              })\n            ;\n            settings.onUnfixed.call(element);\n          },\n          placeholder: function() {\n            module.debug('Removing placeholder content');\n            if($placeholder) {\n              $placeholder.remove();\n            }\n          },\n          occurred: function(callback) {\n            if(callback) {\n              var\n                occurred = module.cache.occurred\n              ;\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\n                module.debug('Callback can now be called again', callback);\n                module.cache.occurred[callback] = false;\n              }\n            }\n            else {\n              module.cache.occurred = {};\n            }\n          }\n        },\n\n        save: {\n          calculations: function() {\n            module.verbose('Saving all calculations necessary to determine positioning');\n            module.save.direction();\n            module.save.screenCalculations();\n            module.save.elementCalculations();\n          },\n          occurred: function(callback) {\n            if(callback) {\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\n                module.verbose('Saving callback occurred', callback);\n                module.cache.occurred[callback] = true;\n              }\n            }\n          },\n          scroll: function(scrollPosition) {\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\n            module.cache.scroll = scrollPosition;\n          },\n          direction: function() {\n            var\n              scroll     = module.get.scroll(),\n              lastScroll = module.get.lastScroll(),\n              direction\n            ;\n            if(scroll > lastScroll && lastScroll) {\n              direction = 'down';\n            }\n            else if(scroll < lastScroll && lastScroll) {\n              direction = 'up';\n            }\n            else {\n              direction = 'static';\n            }\n            module.cache.direction = direction;\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            var\n              element = module.cache.element,\n              screen  = module.get.screenSize()\n            ;\n            module.verbose('Saving element position');\n            // (quicker than $.extend)\n            element.fits          = (element.height < screen.height);\n            element.offset        = $module.offset();\n            element.width         = $module.outerWidth();\n            element.height        = $module.outerHeight();\n            // compensate for scroll in context\n            if(module.is.verticallyScrollableContext()) {\n              element.offset.top += $context.scrollTop() - $context.offset().top;\n            }\n            if(module.is.horizontallyScrollableContext()) {\n              element.offset.left += $context.scrollLeft - $context.offset().left;\n            }\n            // store\n            module.cache.element = element;\n            return element;\n          },\n          elementCalculations: function() {\n            var\n              screen     = module.get.screenCalculations(),\n              element    = module.get.elementPosition()\n            ;\n            // offset\n            if(settings.includeMargin) {\n              element.margin        = {};\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\n              element.top    = element.offset.top - element.margin.top;\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\n            }\n            else {\n              element.top    = element.offset.top;\n              element.bottom = element.offset.top + element.height;\n            }\n\n            // visibility\n            element.topPassed        = (screen.top >= element.top);\n            element.bottomPassed     = (screen.top >= element.bottom);\n            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\n            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\n            element.pixelsPassed     = 0;\n            element.percentagePassed = 0;\n\n            // meta calculations\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\n            element.passing   = (element.topPassed && !element.bottomPassed);\n            element.offScreen = (!element.onScreen);\n\n            // passing calculations\n            if(element.passing) {\n              element.pixelsPassed     = (screen.top - element.top);\n              element.percentagePassed = (screen.top - element.top) / element.height;\n            }\n            module.cache.element = element;\n            module.verbose('Updated element calculations', element);\n            return element;\n          },\n          screenCalculations: function() {\n            var\n              scroll = module.get.scroll()\n            ;\n            module.save.direction();\n            module.cache.screen.top    = scroll;\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            module.verbose('Saving window position');\n            module.cache.screen = {\n              height: $context.height()\n            };\n          },\n          position: function() {\n            module.save.screenSize();\n            module.save.elementPosition();\n          }\n        },\n\n        get: {\n          pixelsPassed: function(amount) {\n            var\n              element = module.get.elementCalculations()\n            ;\n            if(amount.search('%') > -1) {\n              return ( element.height * (parseInt(amount, 10) / 100) );\n            }\n            return parseInt(amount, 10);\n          },\n          occurred: function(callback) {\n            return (module.cache.occurred !== undefined)\n              ? module.cache.occurred[callback] || false\n              : false\n            ;\n          },\n          direction: function() {\n            if(module.cache.direction === undefined) {\n              module.save.direction();\n            }\n            return module.cache.direction;\n          },\n          elementPosition: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementPosition();\n            }\n            return module.cache.element;\n          },\n          elementCalculations: function() {\n            if(module.cache.element === undefined) {\n              module.save.elementCalculations();\n            }\n            return module.cache.element;\n          },\n          screenCalculations: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenCalculations();\n            }\n            return module.cache.screen;\n          },\n          screenSize: function() {\n            if(module.cache.screen === undefined) {\n              module.save.screenSize();\n            }\n            return module.cache.screen;\n          },\n          scroll: function() {\n            if(module.cache.scroll === undefined) {\n              module.save.scroll();\n            }\n            return module.cache.scroll;\n          },\n          lastScroll: function() {\n            if(module.cache.screen === undefined) {\n              module.debug('First scroll event, no last scroll could be found');\n              return false;\n            }\n            return module.cache.screen.top;\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        instance.save.scroll();\n        instance.save.calculations();\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.visibility.settings = {\n\n  name                   : 'Visibility',\n  namespace              : 'visibility',\n\n  debug                  : false,\n  verbose                : false,\n  performance            : true,\n\n  // whether to use mutation observers to follow changes\n  observeChanges         : true,\n\n  // check position immediately on init\n  initialCheck           : true,\n\n  // whether to refresh calculations after all page images load\n  refreshOnLoad          : true,\n\n  // whether to refresh calculations after page resize event\n  refreshOnResize        : true,\n\n  // should call callbacks on refresh event (resize, etc)\n  checkOnRefresh         : true,\n\n  // callback should only occur one time\n  once                   : true,\n\n  // callback should fire continuously whe evaluates to true\n  continuous             : false,\n\n  // offset to use with scroll top\n  offset                 : 0,\n\n  // whether to include margin in elements position\n  includeMargin          : false,\n\n  // scroll context for visibility checks\n  context                : window,\n\n  // visibility check delay in ms (defaults to animationFrame)\n  throttle               : false,\n\n  // special visibility type (image, fixed)\n  type                   : false,\n\n  // z-index to use with visibility 'fixed'\n  zIndex                 : '10',\n\n  // image only animation settings\n  transition             : 'fade in',\n  duration               : 1000,\n\n  // array of callbacks for percentage\n  onPassed               : {},\n\n  // standard callbacks\n  onOnScreen             : false,\n  onOffScreen            : false,\n  onPassing              : false,\n  onTopVisible           : false,\n  onBottomVisible        : false,\n  onTopPassed            : false,\n  onBottomPassed         : false,\n\n  // reverse callbacks\n  onPassingReverse       : false,\n  onTopVisibleReverse    : false,\n  onBottomVisibleReverse : false,\n  onTopPassedReverse     : false,\n  onBottomPassedReverse  : false,\n\n  // special callbacks for image\n  onLoad                 : function() {},\n  onAllLoaded            : function() {},\n\n  // special callbacks for fixed position\n  onFixed                : function() {},\n  onUnfixed              : function() {},\n\n  // utility callbacks\n  onUpdate               : false, // disabled by default for performance\n  onRefresh              : function(){},\n\n  metadata : {\n    src: 'src'\n  },\n\n  className: {\n    fixed       : 'fixed',\n    placeholder : 'placeholder',\n    visible     : 'visible'\n  },\n\n  error : {\n    method  : 'The method you called is not defined.',\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\n  }\n\n};\n\n})( jQuery, window, document );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./semantic/dist/semantic.js\n// module id = 34\n// module chunks = 1","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport '../semantic/dist/semantic.css'\r\nimport semantic from 'semantic-ui'\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  template: '<App/>',\r\n  components: { App }\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\r\n  <div id=\"app\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// App.vue?256e5707","<template>\r\n  <div class=\"ui container\">\r\n    <h2>Yammerer</h2>\r\n    <div class=\"ui centered grid\">\r\n      <div class=\"ten wide column\">\r\n        <div class=\"ui threaded comments\">\r\n  \r\n          <div class=\"ui text menu\">\r\n            <dropdown :items=\"userList\" :selected.sync=\"selectedUser\" />\r\n            <div class=\"right menu\">\r\n              <div class=\"item\">\r\n                <div class=\"ui icon button\" v-on:click.stop=\"toggleMessageForm()\">\r\n                  <i v-if=\"!showMessageForm\" class=\"plus icon\"></i>\r\n                  <i v-else class=\"remove icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"ui divider\"></div>\r\n  \r\n          <transition name=\"fade\">\r\n            <form v-if=\"showMessageForm\" class=\"ui reply form\" id=\"messageForm\">\r\n              <div class=\"field\">\r\n                <textarea v-model=\"newMessageContent\" name=\"newMessageContent\"></textarea>\r\n              </div>\r\n              <div class=\"ui primary labeled icon button\" v-on:click.stop=\"addMessage()\">\r\n                <i class=\"icon edit\"></i> Add Message\r\n              </div>\r\n              <div class=\"ui button\" v-on:click.stop=\"toggleMessageForm()\">\r\n                Cancel\r\n              </div>\r\n              <div class=\"ui divider hidden\"></div>\r\n            </form>\r\n          </transition>\r\n  \r\n          <message v-for=\"(message, index) in messages\" :model=\"message\" :reply-as=\"selectedUser\" :key=\"message.id\" v-on:remove=\"removeChild(index)\"></message>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport helpers from '../helpers'\r\nimport Dropdown from './Dropdown'\r\nimport Message from './Message'\r\nimport messageStore from '../data'\r\nimport $ from 'jquery'\r\nconst users = helpers.getRandonUserList();\r\nexport default {\r\n  name: 'channel',\r\n  data: function () {\r\n    return {\r\n      messages: messageStore.reactive.messages,\r\n      showMessageForm: false,\r\n      newMessageContent: '',\r\n      userList: users,\r\n      selectedUser: users[0]\r\n    }\r\n  },\r\n  beforeCreate: function () {\r\n    if (!messageStore.hasMessages()) {\r\n      // If empty, prime the message store\r\n      messageStore.setMessages([{\r\n        author: users[0].username,\r\n        avatar: users[0].avatar,\r\n        content: 'Gidday maaate!!',\r\n        likers: [],\r\n        time: '2017-5-28 17:49:24',\r\n        replies: []\r\n      }]);\r\n    }\r\n    // Load messages into reactive memory\r\n    messageStore.loadMessages();\r\n  },\r\n  // methods are evaluated every time they're invoked\r\n  methods: {\r\n    addMessage: function () {\r\n      // Form validation with semantic UI\r\n      let messageForm = $('#messageForm');\r\n      messageForm.form({\r\n        inline: true,\r\n        fields: {\r\n          newMessageContent: {\r\n            identifier: 'newMessageContent', // <-- binds to id, name or data-validate\r\n            rules: [{\r\n              type: 'empty',\r\n              prompt: 'Please enter your message'\r\n            }]\r\n          }\r\n        }\r\n      });\r\n      messageForm.form('validate form');\r\n\r\n      if (messageForm.form('is valid')) {\r\n        // Add a message to the beginning of array, pass in the authoring details.\r\n        this.messages.unshift(helpers.getNewMessage(this.selectedUser, this.newMessageContent));\r\n        this.toggleMessageForm();\r\n        messageStore.saveState();\r\n      }\r\n    },\r\n    toggleMessageForm: function () {\r\n      this.showMessageForm = !this.showMessageForm;\r\n      this.newMessageContent = '';\r\n    },\r\n    removeChild: function (index) {\r\n      this.messages.splice(index, 1);\r\n      messageStore.saveState();\r\n    }\r\n  },\r\n  components: {\r\n    'message': Message,\r\n    'dropdown': Dropdown\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\n.fade-enter-active\r\n/*, .fade-leave-active*/\r\n\r\n{\r\n  transition: opacity .5s\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to\r\n/* .fade-leave-active in <2.1.8 */\r\n\r\n{\r\n  opacity: 0\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Channel.vue?81bf67dc","<template>\r\n  <div class=\"ui fluid selection dropdown\">\r\n    <input type=\"hidden\" name=\"user\">\r\n    <i class=\"dropdown icon\"></i>\r\n    <div class=\"default text\">Select User</div>\r\n    <div class=\"menu\">\r\n      <div :key=\"item.username\" v-for=\"(item, index) in items\" :data-value=\"item.username\" class=\"item\">\r\n        <img class=\"ui mini avatar image\" :src=\"item.avatar\"> {{item.username}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: 'dropdown',\r\n  props: {\r\n    items: Array,\r\n    selected: Object\r\n  },\r\n  mounted: function () {\r\n    let that = this;\r\n    $(this.$el).dropdown({\r\n      onChange: (value, text, $choice) => {\r\n        that.$emit('update:selected', that.items.filter((item) => item.username === value)[0])\r\n      }\r\n    })\r\n    .dropdown('set selected', this.selected.username)\r\n  },\r\n  beforeDestroy: function () {\r\n    $(this.$el).dropdown('destroy')\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Dropdown.vue?69640c0c","<template>\r\n  <div class=\"comment\">\r\n    <a class=\"avatar\">\r\n      <!-- bind a html property to a computed value -->\r\n      <img v-bind:src=\"model.avatar\">\r\n    </a>\r\n    <div class=\"content\">\r\n      <a class=\"author\">{{model.author}}</a>\r\n      <div class=\"metadata\">\r\n        <span class=\"date\">{{model.time}}</span>\r\n        <div class=\"rating\">\r\n          <i class=\"thumbs up icon\"></i>\r\n          {{model.likers.length}} likes \r\n        </div>\r\n      </div>\r\n      <div class=\"text\">\r\n        {{model.content}}\r\n      </div>\r\n      <div class=\"actions\">\r\n        <a v-if=\"!showReplyForm\" v-on:click.stop=\"toggleReplyForm()\" class=\"reply\">Reply</a>\r\n        <a v-else                v-on:click.stop=\"toggleReplyForm()\" class=\"reply\">Cancel</a>\r\n        <a v-if=\"liked\" v-on:click.stop=\"removeLike()\" class=\"like active\">You like this</a>\r\n        <a v-else-if=\"!currentUserOwnsComment\" v-on:click.stop=\"addLike()\" class=\"like\">Like</a>\r\n        <a v-if=\"currentUserOwnsComment\" v-on:click.stop=\"remove()\" class=\"like\">Delete</a>\r\n      </div>\r\n    </div>\r\n    <!-- conditional rendering with v-if -->\r\n    <div v-if=\"hasReplies()\" class=\"comments\">\r\n      <message v-for=\"(message, index) in model.replies\" \r\n                :model=\"message\" \r\n                :reply-as=\"replyAs\"\r\n                :key=\"message.id\"\r\n                v-on:remove=\"removeChild(index)\"></message>\r\n    </div>\r\n    <transition name=\"fade\">\r\n      <form v-if=\"showReplyForm\" class=\"ui reply form\" v-bind:id=\"replyFormIdentifier\">\r\n        <div class=\"field\">\r\n          <textarea v-model=\"replyContent\" class=\"ui focus\" name=\"replyContent\"></textarea>\r\n        </div>\r\n        <div class=\"ui primary labeled icon button\" v-on:click.stop=\"addReply()\">\r\n          <i class=\"icon edit\"></i> Add Reply\r\n        </div>\r\n        <div class=\"ui button\" v-on:click.stop=\"toggleReplyForm()\">\r\n          Cancel \r\n        </div>\r\n      </form>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport helpers from '../helpers'\r\nimport messageStore from '../data'\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: 'message',\r\n  props: {\r\n    replyAs: Object,\r\n    model: Object\r\n  },\r\n  data () {\r\n    return {\r\n      showReplyForm: false,\r\n      replyContent: ''\r\n    }\r\n  },\r\n  computed: {\r\n    replyFormIdentifier: function () {\r\n      return helpers.guid();\r\n    },\r\n    liked: function () {\r\n      return this.model.likers.includes(this.replyAs.username)\r\n    },\r\n    currentUserOwnsComment: function () {\r\n      // ensure the current user is the owner of the message\r\n      // (obviously buggy, fix this with proper user management)\r\n      if (this.replyAs.username === this.model.author) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    remove: function () {\r\n      if (!this.currentUserOwnsComment) { return; }\r\n      /* eslint-disable no-undef */\r\n      this.$emit('remove');  // emit an event which the parent will recieve.\r\n      messageStore.saveState();\r\n    },\r\n    hasReplies: function () {\r\n      // short cicuit evaluation\r\n      return this.model.hasOwnProperty('replies') && this.model.replies.length > 0;\r\n    },\r\n    addLike: function () {\r\n      this.model.likers.push(this.replyAs.username);\r\n      messageStore.saveState();\r\n    },\r\n    removeLike: function () {\r\n      this.model.likers.splice(this.model.likers.indexOf(this.replyAs.username), 1);\r\n      messageStore.saveState();\r\n    },\r\n    toggleReplyForm: function () {\r\n      this.showReplyForm = !this.showReplyForm;\r\n      this.replyContent = '';\r\n    },\r\n    addReply: function () {\r\n      // Form validation with semantic UI\r\n      let replyForm = $('#' + this.replyFormIdentifier);\r\n      replyForm.form({\r\n        inline: true,\r\n        fields: {\r\n          replyContent: {\r\n            identifier: 'replyContent', // <-- binds to id, name or data-validate\r\n            rules: [{\r\n              type: 'empty',\r\n              prompt: 'Please enter your reply'\r\n            }]\r\n          }\r\n        }\r\n      });\r\n      replyForm.form('validate form');\r\n\r\n      if (replyForm.form('is valid')) {\r\n        // Add a reply, pass in the authoring details.\r\n        this.model.replies.push(helpers.getNewMessage(this.replyAs, this.replyContent));\r\n        this.toggleReplyForm();\r\n        messageStore.saveState();\r\n      }\r\n    },\r\n    removeChild: function (index) {\r\n      this.model.replies.splice(index, 1);\r\n      messageStore.saveState();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Message.vue?376c7f04","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-4b5dc3c4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Channel.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Channel.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4b5dc3c4\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Channel.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Channel.vue\n// module id = 73\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-354542f4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Dropdown.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Dropdown.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-354542f4\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Dropdown.vue\"),\n  /* scopeId */\n  \"data-v-354542f4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Dropdown.vue\n// module id = 74\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-d42101bc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Message.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Message.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d42101bc\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Message.vue\"),\n  /* scopeId */\n  \"data-v-d42101bc\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Message.vue\n// module id = 75\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui fluid selection dropdown\"\n  }, [_c('input', {\n    attrs: {\n      \"type\": \"hidden\",\n      \"name\": \"user\"\n    }\n  }), _vm._v(\" \"), _c('i', {\n    staticClass: \"dropdown icon\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"default text\"\n  }, [_vm._v(\"Select User\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"menu\"\n  }, _vm._l((_vm.items), function(item, index) {\n    return _c('div', {\n      key: item.username,\n      staticClass: \"item\",\n      attrs: {\n        \"data-value\": item.username\n      }\n    }, [_c('img', {\n      staticClass: \"ui mini avatar image\",\n      attrs: {\n        \"src\": item.avatar\n      }\n    }), _vm._v(\" \" + _vm._s(item.username) + \"\\n    \")])\n  }))])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-354542f4\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dropdown.vue\n// module id = 76\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui container\"\n  }, [_c('h2', [_vm._v(\"Yammerer\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui centered grid\"\n  }, [_c('div', {\n    staticClass: \"ten wide column\"\n  }, [_c('div', {\n    staticClass: \"ui threaded comments\"\n  }, [_c('div', {\n    staticClass: \"ui text menu\"\n  }, [_c('dropdown', {\n    attrs: {\n      \"items\": _vm.userList,\n      \"selected\": _vm.selectedUser\n    },\n    on: {\n      \"update:selected\": function($event) {\n        _vm.selectedUser = $event\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"right menu\"\n  }, [_c('div', {\n    staticClass: \"item\"\n  }, [_c('div', {\n    staticClass: \"ui icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [(!_vm.showMessageForm) ? _c('i', {\n    staticClass: \"plus icon\"\n  }) : _c('i', {\n    staticClass: \"remove icon\"\n  })])])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showMessageForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": \"messageForm\"\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.newMessageContent),\n      expression: \"newMessageContent\"\n    }],\n    attrs: {\n      \"name\": \"newMessageContent\"\n    },\n    domProps: {\n      \"value\": (_vm.newMessageContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.newMessageContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addMessage()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Message\\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [_vm._v(\"\\n              Cancel\\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider hidden\"\n  })]) : _vm._e()]), _vm._v(\" \"), _vm._l((_vm.messages), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.selectedUser\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })], 2)])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4b5dc3c4\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Channel.vue\n// module id = 77\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('router-view')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-cad49406\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 78\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"comment\"\n  }, [_c('a', {\n    staticClass: \"avatar\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.model.avatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('a', {\n    staticClass: \"author\"\n  }, [_vm._v(_vm._s(_vm.model.author))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"metadata\"\n  }, [_c('span', {\n    staticClass: \"date\"\n  }, [_vm._v(_vm._s(_vm.model.time))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('i', {\n    staticClass: \"thumbs up icon\"\n  }), _vm._v(\"\\n        \" + _vm._s(_vm.model.likers.length) + \" likes \\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm.model.content) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.showReplyForm) ? _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Reply\")]) : _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Cancel\")]), _vm._v(\" \"), (_vm.liked) ? _c('a', {\n    staticClass: \"like active\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.removeLike()\n      }\n    }\n  }, [_vm._v(\"You like this\")]) : (!_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addLike()\n      }\n    }\n  }, [_vm._v(\"Like\")]) : _vm._e(), _vm._v(\" \"), (_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.remove()\n      }\n    }\n  }, [_vm._v(\"Delete\")]) : _vm._e()])]), _vm._v(\" \"), (_vm.hasReplies()) ? _c('div', {\n    staticClass: \"comments\"\n  }, _vm._l((_vm.model.replies), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.replyAs\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })) : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showReplyForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": _vm.replyFormIdentifier\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.replyContent),\n      expression: \"replyContent\"\n    }],\n    staticClass: \"ui focus\",\n    attrs: {\n      \"name\": \"replyContent\"\n    },\n    domProps: {\n      \"value\": (_vm.replyContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.replyContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addReply()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Reply\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"\\n        Cancel \\n      \")])]) : _vm._e()])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-d42101bc\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Message.vue\n// module id = 79\n// module chunks = 1"],"sourceRoot":""}