{"version":3,"sources":["webpack:///static/js/app.231eb470fe484311fc63.js","webpack:///./src/data/index.js","webpack:///./src/helpers/index.js","webpack:///./src/router/index.js","webpack:///./src/App.vue?fc6a","webpack:///./semantic/dist/semantic.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///Channel.vue","webpack:///Message.vue","webpack:///./src/components/Channel.vue?3b34","webpack:///./src/components/Message.vue","webpack:///./src/components/Message.vue?fc58","webpack:///./src/components/Channel.vue?170d","webpack:///./src/App.vue?a083"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","reactive","messages","hasMessages","localStorage","getItem","saveState","this","setMessages","loadMessages","parsedMessages","JSON","parse","newMessages","setItem","getNewMessage","author","avatar","content","likes","replies","time","Date","toLocaleString","getRandomUserName","adjectives","nouns","Math","floor","random","length","getRandomAvatarUrl","avatars","guid","s4","toString","substring","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__components_Channel__","__WEBPACK_IMPORTED_MODULE_2__components_Channel___default","use","routes","path","name","component","a","exports","Component","jQuery","$","window","document","undefined","site","fn","parameters","returnedValue","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","settings","isPlainObject","extend","namespace","error","moduleNamespace","$document","$module","element","instance","data","initialize","instantiate","verbose","normalize","fix","console","requestAnimationFrame","debug","log","disable","group","groupEnd","groupCollapsed","markTimeline","consoleClear","clear","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","moduleExists","enabled","modules","enabledModules","each","index","push","disabled","disabledModules","change","setting","value","modifyExisting","$existingModules","newSettings","enable","cache","info","warn","destroy","removeData","internal","Function","prototype","bind","apply","message","currentTime","executionTime","previousTime","Element","Name","Arguments","Execution Time","clearTimeout","timer","display","title","totalTime","table","invoke","passedArguments","context","maxDepth","found","response","object","split","depth","camelCaseValue","charAt","toUpperCase","method","isFunction","isArray","siteNamespace","namespaceStub","config","sections","section","utilities","expr","createPseudo","dataName","elem","i","match","self","form","$allModules","moduleSelector","selector","legacyParameters","$field","$group","$message","$prompt","$submit","$clear","$reset","validation","metadata","className","regExp","eventNamespace","formErrors","keyHeldDown","get","bindEvents","set","defaults","removeEvents","refresh","find","field","prompt","submit","reset","attachEvents","action","on","event","preventDefault","validate","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","hasClass","removeClass","remove","dropdown","val","isErrored","determine","isValid","allValid","fieldName","bracketedRule","rule","bracket","empty","blank","trim","valid","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","validationRules","revalidate","delay","ancillaryValue","ruleName","replace","createElement","oninput","onpropertychange","$label","ancillary","text","unspecifiedRule","requiresValue","search","requiresName","identifier","eq","unspecifiedField","ruleKeys","keys","Object","isLegacySettings","rules","oldSyntax","fields","string","filter","$fields","add","fieldValidation","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","String","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","duration","fadeIn","fadeOut","success","isEmptyObject","$multipleField","fieldExists","ignoreCallbacks","onSuccess","stopImmediatePropagation","onFailure","showErrors","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","ruleFunction","noRule","silent","htmlID","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","test","RegExp","regExpParts","range","min","max","parts","intRegExp","toLowerCase","notValue","contains","containsExactly","requiredLength","matchingValue","cardNumber","cardTypes","unionPay","cards","visa","pattern","amex","mastercard","discover","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","accordion","observer","$title","$content","events","observeChanges","MutationObserver","mutations","observe","childList","subtree","trigger","click","toggle","$activeTitle","$activeContent","next","isAnimating","animating","isActive","active","isOpen","isOpening","collapsible","close","open","onOpening","exclusive","closeOthers","stop","animateChildren","animation","queue","useFailSafe","animate","opacity","resetOpacity","slideDown","easing","onOpen","onChange","isClosing","onClosing","slideUp","onClose","$openTitles","$nestedTitles","$openContents","$parentTitles","parents","prev","$activeAccordion","activeSelector","activeContent","closeNested","css","attr","removeAttr","easeOutQuad","x","t","b","c","d","initialLoad","shortcutPressed","create","tabbable","hide","setup","unbind","show","reference","indeterminate","check","uncheck","hidden","notFound","$target","target","link","focus","space","should","allowCheck","onChecked","allowUncheck","unchecked","onUnchecked","allowIndeterminate","onIndeterminate","determinate","allowDeterminate","onDeterminate","onEnable","onEnabled","onDisable","onDisabled","radios","otherRadios","forceCallbacks","beforeChecked","beforeUnchecked","beforeIndeterminate","beforeDeterminate","fireOnInit","can","readOnly","uncheckable","uncheckOthers","createEvent","inputElement","initEvent","dispatchEvent","prevAll","detach","insertAfter","$radios","dimmer","$dimmer","$dimmable","clickEvent","documentElement","preinitialize","dimmerName","variation","dimmable","page","pageDimmer","closable","addContent","template","dimmed","onShow","onHide","useCSS","onStart","onComplete","width","height","fadeTo","color","colorArray","isRGB","isRGBA","join","hasTouch","elementIndex","pageLostFocus","willRefocus","elementNamespace","id","selectObserver","menuObserver","$context","$text","$search","$sizer","sizer","$icon","icon","$combo","$menu","menu","$item","item","activated","itemActivated","internalChange","alreadySetup","layout","refreshData","save","restore","selected","disconnect","select","mutation","substr","userChoice","$userChoices","$userChoice","userValues","addition","variables","addResult","hideAdditions","userLabels","minCharacters","firstUnfiltered","selectedItem","unselectable","nextAvailable","$selected","$nextAvailable","nextAll","$prevAvailable","api","apiSettings","urlData","returnedObject","insertBefore","searchSelection","allowTab","selectValues","selection","missingMultiple","prependTo","$firstModules","$lastModules","refreshSelectors","refreshItems","clearData","defaultText","placeholderText","remote","queryRemote","maxSelections","allResultsFiltered","allFiltered","intent","menuSearch","focusSearch","visible","hideOthers","hideMenu","hideSubMenus","$subMenus","touchEvents","keyboardEvents","inputEvents","mouseEvents","single","mouseenter","mousedown","mouseup","mouseleave","touch","searchTerm","afterFiltered","filterActive","onNoResults","allowAdditions","noResults","userSuggestion","focusedOnSearch","useLabels","useAPI","filterRemoteData","filterItems","noAPI","errorDuration","throttle","onError","serverError","remoteValues","escapedTerm","beginsWithRegExp","$choice","choiceText","fullTextSearch","exactSearch","fuzzySearch","choiceValue","filteredItem","filtered","term","termLength","queryLength","characterIndex","nextCharacterIndex","queryCharacter","charCodeAt","skipHandler","forceSelection","$currentlySelected","$activeItem","$selectedItem","showOnFocus","activeElement","activeLabel","$labels","$activeLabels","$nextActive","$prevActive","$range","nextUntil","prevUntil","shiftKey","toggleClass","onLabelSelect","activeLabels","toggleBehavior","bubbledLabelClick","bubbledIconClick","eventOnElement","stopPropagation","eventInModule","$addedNode","addedNodes","$removedNode","removedNodes","$changedNodes","isUserAddition","isMessage","$subMenu","$otherMenus","siblings","hasSubMenu","itemTimer","skipRefocus","isBubbledEvent","allowCategorySelection","userAddition","scrollPosition","selectAction","pressedKey","inObject","$activeLabel","labelIndex","labelCount","hasActiveLabel","hasMultipleActive","isFirstLabel","isLastLabel","isSearch","isFocusedOnSearch","isFocused","focused","caretAtStart","caretPosition","leftArrow","siblingLabel","end","last","rightArrow","first","deleteKey","backspace","$nextItem","$visibleItems","addBack","$parentMenu","inVisibleMenu","hasSelectedItem","selectedIsSelectable","delimiterPressed","delimiter","isAdditionWithoutMenu","upArrow","selectOnKeydown","downArrow","pageUp","scrollPage","pageDown","selectedLetter","fromCharCode","inDocument","inModule","inVisibleDOM","body","notOnLabel","notInMenu","nothing","activate","hideAndClear","combo","searchWidth","ceil","selectionCount","upward","grep","uniqueArray","array","rangeLength","selectionStart","createRange","moveStart","isEmptyMultiselect","selectInput","read","remoteData","preserveHTML","clone","menuIcon","$option","placeholder","sortSelect","sort","activeItem","itemWithAdditions","$items","$userItems","strict","shouldSearch","optionText","optionValue","labels","saveRemoteData","Storage","noStorage","sessionStorage","clearValue","direction","isWithinRange","$nextSelectedItem","$currentItem","menuHeight","outerHeight","currentScroll","scrollTop","itemHeight","itemsPerPage","newScroll","$selectableItem","isSearchMultiple","searchValue","hasSearchValue","valueIsSet","glyphWidth","loading","partialSearch","forceScroll","hasActive","offset","itemOffset","menuOffset","menuScroll","abovePage","belowPage","position","top","searchText","letter","alreadySelectedLetter","firstLetter","$nextValue","onScreen","escapedValue","hasInput","currentValue","stringValue","allowReselection","extendSelect","exactly","selectedText","selectedValue","isFiltered","isUserValue","shouldAnimate","count","$next","onLabelCreate","$addition","$existingItem","alreadyHasValue","hasUserSuggestion","hasCount","hasMaxCount","hasTerm","addedValue","addedText","newValue","onAdd","removedValue","removedText","$removedItem","arrayValue","onRemove","$removedLabel","userValue","onLabelRemove","items","$normalResults","calculations","$currentMenu","canOpenDownward","verticallyScrollableContext","above","below","needle","property","selectMutation","selectChanged","overflowY","start","noTransition","multipleValues","isUnparsable","hasQuotes","quote","keepOnScreen","$selectedLabels","option","maybeText","maybeDisabled","choice","embed","sources","$placeholder","$embed","autoplay","createAndShow","createPlaceholder","generate","createEmbed","onCreate","changeEmbed","source","showPlaceholder","onReset","onDisplay","onPlaceholderDisplay","matchedSource","domain","encode","urlString","encodeURIComponent","iframe","noURL","extraParameters","onEmbed","video","hd","brandedUI","youtube","autohide","hq","jsapi","modestbranding","vimeo","byline","portrait","src","image","onPause","onPlay","onStop","modal","$window","$body","$allModals","$otherModals","$focusedElement","elementEventNamespace","$close","ignoreRepeatedEvents","refreshModals","defaultSettings","dimmerSettings","inverted","detachable","undetached","blurring","scrolling","cacheSizes","screenHeight","$toggle","approve","deny","resize","onApprove","onDeny","isInModal","isInDOM","clickaway","allowMultiple","hideAll","debounce","keyboard","showModal","hideModal","showDimmer","others","onVisible","autofocus","keepDimmed","hideDimmer","onHidden","$visibleModals","bodyStyle","modalHeight","pageHeight","contextHeight","fit","padding","modernBrowser","ActiveXObject","$inputs","$autofocus","marginTop","nag","dismiss","displayTime","storageMethod","storage","persist","storageOptions","options","expires","cookie","noCookieStorage","storedValue","removeItem","removeCookie","bottom","fixed","speed","popup","$popup","$offsetParent","documentObserver","$scrollContext","scrollContext","$boundary","boundary","searchDepth","triedPositions","openedWithTouch","createID","exists","preserve","documentChanged","offsetParent","movePopup","reposition","removePopup","hideTimer","showTimer","touchstart","forEach","node","hideGracefully","inPopup","activator","hoverable","conditions","supports","svg","SVGGraphicsElement","popupOffset","screen","targetElement","isWindow","targetPosition","screenPosition","left","scroll","scrollLeft","outerWidth","margin","setFluidWidth","fluid","container","getComputedStyle","getPropertyValue","rtl","right","startEvent","scrollEvent","endEvent","distanceFromBoundary","parentNode","$node","is2D","isStatic","isHTML","positions","top left","top center","top right","bottom left","bottom center","bottom right","left center","right center","nextPosition","verticalPosition","horizontalPosition","opposite","adjacent","center","backup","adjacentsAvailable","oppositeTried","adjacentTried","prefer","distanceAway","positioning","maxSearchDepth","lastResort","invalidPosition","offstage","cannotPlace","attempts","onUnplaceable","fluidWidth","hideOnScroll","distance","jitter","addTouchEvents","badChars","shouldEscape","&","<",">","\"","'","`","escapedChar","chr","progress","transitionEnd","$bar","bar","$progress","transitionEvent","clearInterval","interval","state","nextValue","update","complete","percent","progressPoll","total","failSafeTimer","triggerHandler","failSafeDelay","increment","incrementValue","startValue","randomValue","normalizedValue","decrement","decrementValue","templateText","displayPercent","updateInterval","numericValue","transitions","OTransition","MozTransition","WebkitTransition","style","barWidth","totalWidth","minDisplay","precision","round","toNextValue","warning","tooHigh","tooLow","transition-duration","limitValues","labelInterval","animationCallback","setInterval","framerate","barLabel","autoSuccess","ratio","showActivity","onLabelUpdate","onActive","onWarning","totalValue","percentComplete","nonNumeric","variable","rating","interactive","initialRating","maxRating","$activeIcon","currentRating","clearable","clearRating","ratingIndex","onRate","slent","noMaximum","$searchButton","searchButton","$results","$result","result","$category","category","disabledBubbled","resultsDismissed","searchFields","refreshResults","automatic","handleKeyboard","searchDelay","searchOnFocus","minimumCharacters","showResults","cancel","hideResults","hideDelay","resultsClicked","inMessage","$link","href","onSelect","location","newIndex","$activeResult","currentIndex","resultSize","hasActiveResult","buttonPressed","buttonFocus","displayMessage","onAbort","lookupFields","firstResult","addResults","inject","local","onSearchQuery","searchHTML","generateResults","write","fuzzyResults","searchExp","matchRegExp","beginsWith","notResult","notFuzzyResult","searchFullText","merge","resultIndex","categoryIndex","letterID","resultID","$selectedResult","onResultsAdd","selectFirstResult","onResultsOpen","onResultsClose","isProperObject","isProperArray","maxResults","noTemplate","showNoResults","onResults","displayField","logging","noEndpoint","categories","categoryName","categoryResults","description","price","actionText","actionURL","standard","shape","$activeSide","$nextSide","$sides","sides","$side","side","nextIndex","defaultSide","repaint","offsetWidth","propertyObject","beforeChange","-webkit-transition-duration","-moz-transition-duration","-ms-transition-duration","-o-transition-duration","currentStageSize","stageSize","$clone","newWidth","newHeight","nextSide","flip","up","allowRepeats","transform","stage","down","over","behind","back","translate","y","z","box","origin","sidebar","$html","$head","$style","$sidebars","$fixed","$pusher","pusher","ios","delaySetup","clickedInPusher","clickedContext","containScroll","offsetHeight","scrollHeight","scrollLock","inlineCSS","isRTL","ie","refreshSidebars","omitted","wrapAll","movedSidebar","pushable","overlay","othersActive","pushPage","pullPage","othersAnimating","othersVisible","$otherSidebars","sidebarCount","callbackCount","dim","$transition","scrollToTop","dimPage","returnScroll","mobile","scrollBack","scrollTo","pushed","mobileTransition","defaultTransition","computer","isIE11","isIE","userAgent","navigator","isIOS","isMobileChrome","mobileChrome","closed","vertical","sticky","$container","$scroll","determineContainer","determineContext","checkErrors","load","scrollchange","changed","invalidContext","elementSize","stick","onScroll","hardRefresh","onReposition","supported","lastScroll","elementScroll","standardScroll","fits","containerSize","size","scrollChange","currentElementScroll","abs","delta","maxScroll","possibleScroll","tagName","minimumSize","setProperty","initialPosition","bound","cachedPosition","pushing","bottomOffset","doesntFit","bindBottom","fixTop","setInitialPosition","fixBottom","bindTop","marginBottom","onTop","onUnstick","onBottom","unfix","onStick","resetCSS","tab","initializedHistory","$tabs","activeTabPath","parameterArray","historyEvent","firstLoad","recursionDepth","callbacks","determineTabs","auto","history","initializeHistory","$reference","ui","childrenOnly","tabs","onTabLoad","onTabInit","onLoad","legacyLoad","onFirstLoad","legacyInit","address","historyType","tabPath","changeTab","pathNames","initialPath","pageTitle","determineTitle","cacheKey","$tab","tabElement","onRequest","pushStateAvailable","pushState","shouldIgnoreLoad","ignoreFirstLoad","remoteContent","pathArray","pathToArray","defaultPathArray","arrayToPath","$anchor","nextPathArray","nextPath","isLastTab","currentPathArray","currentPath","isTab","isLastIndex","filterArray","all","navigation","fetch","missingTab","scrollOffset","evaluateScripts","cacheType","append","innerHTML","fullTabPath","requestSettings","cachedContent","dataType","encodeParameters","alwaysRefresh","headers","X-Remote","loadOnce","request","existingRequest","$deactiveTabs","deactivate","$navigation","navElement","$deactiveNavigation","tabName","defaultPath","$defaultNav","defaultTab","recursion","$fullPathTab","$simplePathTab","tabPathArray","lastTab","keepArray","removeArray","keepValue","pathName","tabArray","noContent","loaded","promise","moduleArguments","animationEnd","animationEndEvent","displayType","forceRepaint","$parentElement","$nextElement","shouldReverse","animationDirection","reverse","outward","overrideSettings","support","occurring","queuing","noAnimation","animationCallbacks","completeCallback","failSafe","looping","inward","force","userStyle","overrideStyle","currentDisplay","emptyStyle","hasDirection","word","inlineDisplay","animationClass","animationName","animation-duration","transitionExists","currentAnimation","queueCallback","directionClass","currentDirection","parseFloat","shouldDetermine","animationStartEvent","animations","OAnimation","MozAnimation","WebkitAnimation","forced","elementClass","inAnimation","directionExists","stopAll","repeated","ajaxSettings","requestStartTime","$form","stateContext","triggerEvent","decode","json","e","cachedResponse","stringify","interruptRequests","abort","defaultData","serializeForm","formData","cancelled","beforeSend","templatedURL","mocked","missingURL","base","beforeXHR","failure","resolveWith","throttleFirstRequest","send","removeError","hideError","expectingJSON","mockResponse","mockResponseAsync","responseAsync","abortedRequest","xhr","readyState","validResponse","successTest","was","succesful","requiredVariables","optionalVariables","required","templatedString","requiredParameter","urlEncodedValue","hasOtherData","canSerialize","serializeObject","serialize","missingSerialize","mockedXHR","always","done","textStatus","elapsedTime","timeLeft","loadingDuration","translatedResponse","onResponse","rejectWith","fail","status","httpMessage","firstParameter","secondParameter","responseFromXHR","errorMessage","errorFromRequest","statusMessage","Deferred","asyncCallback","responder","asyncResponder","responseText","ajax","runSettings","noReturnedValue","decodedValue","decodeURIComponent","encodedValue","missingAction","exitConditions","JSONParse","parseError","timeout","states","userStates","typeStates","inactive","textEnabled","button","allow","disallow","allows","setState","removeState","apiRequest","activateTest","deactivateTest","listenTo","when","then","sync","hover","onActivate","onDeactivate","textFor","flash","previousText","flashDuration","activeText","storedText","inactiveText","currentText","visibility","moduleCount","loadedCount","contextObserver","trackChanges","initialCheck","checkVisibility","resetFixed","contextChanged","refreshOnLoad","refreshOnResize","precache","images","Array","imagesLength","loadedCounter","cacheImage","handleLoad","onload","onerror","enableCallbacks","disableCallbacks","occurred","once","onOnScreen","onAllLoaded","onTopPassed","onTopPassedReverse","zIndex","onFixed","elementCalculations","offScreen","horizontallyScrollableContext","overflowX","checkOnRefresh","onRefresh","passed","passingReverse","topVisibleReverse","bottomVisibleReverse","topPassedReverse","bottomPassedReverse","passing","topVisible","bottomVisible","topPassed","bottomPassed","onUpdate","amount","newCallback","onPassed","pixelsPassed","execute","onOffScreen","onPassing","onTopVisible","onBottomVisible","onBottomPassed","onPassingReverse","onTopVisibleReverse","onBottomVisibleReverse","onBottomPassedReverse","callbackName","screenCalculations","continuous","onUnfixed","elementPosition","screenSize","includeMargin","percentagePassed","defineProperty","__WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__","__WEBPACK_IMPORTED_MODULE_1_semantic_ui__","__WEBPACK_IMPORTED_MODULE_2_vue__","__WEBPACK_IMPORTED_MODULE_3__App__","__WEBPACK_IMPORTED_MODULE_3__App___default","__WEBPACK_IMPORTED_MODULE_4__router__","productionTip","el","router","components","App","__WEBPACK_IMPORTED_MODULE_0__helpers__","__WEBPACK_IMPORTED_MODULE_1__Message__","__WEBPACK_IMPORTED_MODULE_1__Message___default","__WEBPACK_IMPORTED_MODULE_2__data__","__WEBPACK_IMPORTED_MODULE_3_jquery__","__WEBPACK_IMPORTED_MODULE_3_jquery___default","showMessageForm","newMessageContent","computed","autoGeneratedUserName","autoSelectedAvatar","beforeCreate","methods","addMessage","messageForm","unshift","toggleMessageForm","removeChild","splice","__WEBPACK_IMPORTED_MODULE_1__data__","__WEBPACK_IMPORTED_MODULE_2_jquery__","__WEBPACK_IMPORTED_MODULE_2_jquery___default","props","replyAs","replyAsAvatar","model","liked","showReplyForm","replyContent","replyFormIdentifier","currentUserOwnsComment","$emit","hasReplies","hasOwnProperty","addLike","removeLike","toggleReplyForm","addReply","replyForm","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","$event","_e","_l","reply-as","reply-as-avatar","directives","rawName","expression","domProps","composing","staticRenderFns"],"mappings":"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","file":"static/js/app.231eb470fe484311fc63.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    reactive: {\n        messages: []\n    },\n    hasMessages: function hasMessages() {\n        if (localStorage.getItem('messages') === null) {\n            return false;\n        }\n        return true;\n    },\n    saveState: function saveState() {\n        this.setMessages(this.reactive.messages);\n    },\n    loadMessages: function loadMessages() {\n        var parsedMessages = JSON.parse(localStorage.getItem('messages'));\n        this.reactive.messages = parsedMessages;\n    },\n    setMessages: function setMessages(newMessages) {\n        localStorage.setItem('messages', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(newMessages));\n    }\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  getNewMessage: function getNewMessage(author, avatar, content) {\n    return {\n      author: author,\n      avatar: avatar,\n      content: content,\n      likes: 0,\n      replies: [],\n      time: new Date().toLocaleString()\n    };\n  },\n  getRandomUserName: function getRandomUserName() {\n    var adjectives = ['Noisy', 'Agreeable', 'Calm', 'Eager', 'Happy', 'Jolly', 'Kind', 'Nice', 'Relieved', 'Crazy', 'Victorious', 'Witty', 'Zealous'];\n    var nouns = ['Cat', 'Dog', 'Mouse', 'Horse', 'Giraffe', 'Robin', 'Sparrow', 'Goat', 'Duck', 'Gull', 'Owl', 'Trout'];\n    return adjectives[Math.floor(Math.random() * adjectives.length)] + ' ' + nouns[Math.floor(Math.random() * nouns.length)];\n  },\n  getRandomAvatarUrl: function getRandomAvatarUrl() {\n    var avatars = ['https://semantic-ui.com/images/avatar/small/elliot.jpg', 'https://semantic-ui.com/images/avatar/small/jenny.jpg', 'https://semantic-ui.com/images/avatar/small/joe.jpg', 'https://semantic-ui.com/images/avatar/small/matt.jpg', 'https://semantic-ui.com/images/avatar/small/helen.jpg', 'https://semantic-ui.com/images/avatar/small/justen.jpg', 'https://semantic-ui.com/images/avatar/small/laura.jpg'];\n    return avatars[Math.floor(Math.random() * avatars.length)];\n  },\n  guid: function guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Channel__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Channel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_Channel__);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]({\n  routes: [{ path: '/', name: 'Channel', component: __WEBPACK_IMPORTED_MODULE_2__components_Channel___default.a }]\n}));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(18)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(10),\n  /* template */\n  __webpack_require__(23),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) { /*\n * # Semantic UI - 2.2.10\n * https://github.com/Semantic-Org/Semantic-UI\n * http://www.semantic-ui.com/\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\r\n * # Semantic UI 2.2.10 - Site\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n$.site = $.fn.site = function(parameters) {\r\n  var\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    settings        = ( $.isPlainObject(parameters) )\r\n      ? $.extend(true, {}, $.site.settings, parameters)\r\n      : $.extend({}, $.site.settings),\r\n\r\n    namespace       = settings.namespace,\r\n    error           = settings.error,\r\n\r\n    eventNamespace  = '.' + namespace,\r\n    moduleNamespace = 'module-' + namespace,\r\n\r\n    $document       = $(document),\r\n    $module         = $document,\r\n    element         = this,\r\n    instance        = $module.data(moduleNamespace),\r\n\r\n    module,\r\n    returnedValue\r\n  ;\r\n  module = {\r\n\r\n    initialize: function() {\r\n      module.instantiate();\r\n    },\r\n\r\n    instantiate: function() {\r\n      module.verbose('Storing instance of site', module);\r\n      instance = module;\r\n      $module\r\n        .data(moduleNamespace, module)\r\n      ;\r\n    },\r\n\r\n    normalize: function() {\r\n      module.fix.console();\r\n      module.fix.requestAnimationFrame();\r\n    },\r\n\r\n    fix: {\r\n      console: function() {\r\n        module.debug('Normalizing window.console');\r\n        if (console === undefined || console.log === undefined) {\r\n          module.verbose('Console not available, normalizing events');\r\n          module.disable.console();\r\n        }\r\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\r\n          module.verbose('Console group not available, normalizing events');\r\n          window.console.group = function() {};\r\n          window.console.groupEnd = function() {};\r\n          window.console.groupCollapsed = function() {};\r\n        }\r\n        if (typeof console.markTimeline == 'undefined') {\r\n          module.verbose('Mark timeline not available, normalizing events');\r\n          window.console.markTimeline = function() {};\r\n        }\r\n      },\r\n      consoleClear: function() {\r\n        module.debug('Disabling programmatic console clearing');\r\n        window.console.clear = function() {};\r\n      },\r\n      requestAnimationFrame: function() {\r\n        module.debug('Normalizing requestAnimationFrame');\r\n        if(window.requestAnimationFrame === undefined) {\r\n          module.debug('RequestAnimationFrame not available, normalizing event');\r\n          window.requestAnimationFrame = window.requestAnimationFrame\r\n            || window.mozRequestAnimationFrame\r\n            || window.webkitRequestAnimationFrame\r\n            || window.msRequestAnimationFrame\r\n            || function(callback) { setTimeout(callback, 0); }\r\n          ;\r\n        }\r\n      }\r\n    },\r\n\r\n    moduleExists: function(name) {\r\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\r\n    },\r\n\r\n    enabled: {\r\n      modules: function(modules) {\r\n        var\r\n          enabledModules = []\r\n        ;\r\n        modules = modules || settings.modules;\r\n        $.each(modules, function(index, name) {\r\n          if(module.moduleExists(name)) {\r\n            enabledModules.push(name);\r\n          }\r\n        });\r\n        return enabledModules;\r\n      }\r\n    },\r\n\r\n    disabled: {\r\n      modules: function(modules) {\r\n        var\r\n          disabledModules = []\r\n        ;\r\n        modules = modules || settings.modules;\r\n        $.each(modules, function(index, name) {\r\n          if(!module.moduleExists(name)) {\r\n            disabledModules.push(name);\r\n          }\r\n        });\r\n        return disabledModules;\r\n      }\r\n    },\r\n\r\n    change: {\r\n      setting: function(setting, value, modules, modifyExisting) {\r\n        modules = (typeof modules === 'string')\r\n          ? (modules === 'all')\r\n            ? settings.modules\r\n            : [modules]\r\n          : modules || settings.modules\r\n        ;\r\n        modifyExisting = (modifyExisting !== undefined)\r\n          ? modifyExisting\r\n          : true\r\n        ;\r\n        $.each(modules, function(index, name) {\r\n          var\r\n            namespace = (module.moduleExists(name))\r\n              ? $.fn[name].settings.namespace || false\r\n              : true,\r\n            $existingModules\r\n          ;\r\n          if(module.moduleExists(name)) {\r\n            module.verbose('Changing default setting', setting, value, name);\r\n            $.fn[name].settings[setting] = value;\r\n            if(modifyExisting && namespace) {\r\n              $existingModules = $(':data(module-' + namespace + ')');\r\n              if($existingModules.length > 0) {\r\n                module.verbose('Modifying existing settings', $existingModules);\r\n                $existingModules[name]('setting', setting, value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      },\r\n      settings: function(newSettings, modules, modifyExisting) {\r\n        modules = (typeof modules === 'string')\r\n          ? [modules]\r\n          : modules || settings.modules\r\n        ;\r\n        modifyExisting = (modifyExisting !== undefined)\r\n          ? modifyExisting\r\n          : true\r\n        ;\r\n        $.each(modules, function(index, name) {\r\n          var\r\n            $existingModules\r\n          ;\r\n          if(module.moduleExists(name)) {\r\n            module.verbose('Changing default setting', newSettings, name);\r\n            $.extend(true, $.fn[name].settings, newSettings);\r\n            if(modifyExisting && namespace) {\r\n              $existingModules = $(':data(module-' + namespace + ')');\r\n              if($existingModules.length > 0) {\r\n                module.verbose('Modifying existing settings', $existingModules);\r\n                $existingModules[name]('setting', newSettings);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    enable: {\r\n      console: function() {\r\n        module.console(true);\r\n      },\r\n      debug: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Enabling debug for modules', modules);\r\n        module.change.setting('debug', true, modules, modifyExisting);\r\n      },\r\n      verbose: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Enabling verbose debug for modules', modules);\r\n        module.change.setting('verbose', true, modules, modifyExisting);\r\n      }\r\n    },\r\n    disable: {\r\n      console: function() {\r\n        module.console(false);\r\n      },\r\n      debug: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Disabling debug for modules', modules);\r\n        module.change.setting('debug', false, modules, modifyExisting);\r\n      },\r\n      verbose: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Disabling verbose debug for modules', modules);\r\n        module.change.setting('verbose', false, modules, modifyExisting);\r\n      }\r\n    },\r\n\r\n    console: function(enable) {\r\n      if(enable) {\r\n        if(instance.cache.console === undefined) {\r\n          module.error(error.console);\r\n          return;\r\n        }\r\n        module.debug('Restoring console function');\r\n        window.console = instance.cache.console;\r\n      }\r\n      else {\r\n        module.debug('Disabling console function');\r\n        instance.cache.console = window.console;\r\n        window.console = {\r\n          clear          : function(){},\r\n          error          : function(){},\r\n          group          : function(){},\r\n          groupCollapsed : function(){},\r\n          groupEnd       : function(){},\r\n          info           : function(){},\r\n          log            : function(){},\r\n          markTimeline   : function(){},\r\n          warn           : function(){}\r\n        };\r\n      }\r\n    },\r\n\r\n    destroy: function() {\r\n      module.verbose('Destroying previous site for', $module);\r\n      $module\r\n        .removeData(moduleNamespace)\r\n      ;\r\n    },\r\n\r\n    cache: {},\r\n\r\n    setting: function(name, value) {\r\n      if( $.isPlainObject(name) ) {\r\n        $.extend(true, settings, name);\r\n      }\r\n      else if(value !== undefined) {\r\n        settings[name] = value;\r\n      }\r\n      else {\r\n        return settings[name];\r\n      }\r\n    },\r\n    internal: function(name, value) {\r\n      if( $.isPlainObject(name) ) {\r\n        $.extend(true, module, name);\r\n      }\r\n      else if(value !== undefined) {\r\n        module[name] = value;\r\n      }\r\n      else {\r\n        return module[name];\r\n      }\r\n    },\r\n    debug: function() {\r\n      if(settings.debug) {\r\n        if(settings.performance) {\r\n          module.performance.log(arguments);\r\n        }\r\n        else {\r\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n          module.debug.apply(console, arguments);\r\n        }\r\n      }\r\n    },\r\n    verbose: function() {\r\n      if(settings.verbose && settings.debug) {\r\n        if(settings.performance) {\r\n          module.performance.log(arguments);\r\n        }\r\n        else {\r\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n          module.verbose.apply(console, arguments);\r\n        }\r\n      }\r\n    },\r\n    error: function() {\r\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n      module.error.apply(console, arguments);\r\n    },\r\n    performance: {\r\n      log: function(message) {\r\n        var\r\n          currentTime,\r\n          executionTime,\r\n          previousTime\r\n        ;\r\n        if(settings.performance) {\r\n          currentTime   = new Date().getTime();\r\n          previousTime  = time || currentTime;\r\n          executionTime = currentTime - previousTime;\r\n          time          = currentTime;\r\n          performance.push({\r\n            'Element'        : element,\r\n            'Name'           : message[0],\r\n            'Arguments'      : [].slice.call(message, 1) || '',\r\n            'Execution Time' : executionTime\r\n          });\r\n        }\r\n        clearTimeout(module.performance.timer);\r\n        module.performance.timer = setTimeout(module.performance.display, 500);\r\n      },\r\n      display: function() {\r\n        var\r\n          title = settings.name + ':',\r\n          totalTime = 0\r\n        ;\r\n        time = false;\r\n        clearTimeout(module.performance.timer);\r\n        $.each(performance, function(index, data) {\r\n          totalTime += data['Execution Time'];\r\n        });\r\n        title += ' ' + totalTime + 'ms';\r\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n          console.groupCollapsed(title);\r\n          if(console.table) {\r\n            console.table(performance);\r\n          }\r\n          else {\r\n            $.each(performance, function(index, data) {\r\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n            });\r\n          }\r\n          console.groupEnd();\r\n        }\r\n        performance = [];\r\n      }\r\n    },\r\n    invoke: function(query, passedArguments, context) {\r\n      var\r\n        object = instance,\r\n        maxDepth,\r\n        found,\r\n        response\r\n      ;\r\n      passedArguments = passedArguments || queryArguments;\r\n      context         = element         || context;\r\n      if(typeof query == 'string' && object !== undefined) {\r\n        query    = query.split(/[\\. ]/);\r\n        maxDepth = query.length - 1;\r\n        $.each(query, function(depth, value) {\r\n          var camelCaseValue = (depth != maxDepth)\r\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n            : query\r\n          ;\r\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n            object = object[camelCaseValue];\r\n          }\r\n          else if( object[camelCaseValue] !== undefined ) {\r\n            found = object[camelCaseValue];\r\n            return false;\r\n          }\r\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n            object = object[value];\r\n          }\r\n          else if( object[value] !== undefined ) {\r\n            found = object[value];\r\n            return false;\r\n          }\r\n          else {\r\n            module.error(error.method, query);\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n      if ( $.isFunction( found ) ) {\r\n        response = found.apply(context, passedArguments);\r\n      }\r\n      else if(found !== undefined) {\r\n        response = found;\r\n      }\r\n      if($.isArray(returnedValue)) {\r\n        returnedValue.push(response);\r\n      }\r\n      else if(returnedValue !== undefined) {\r\n        returnedValue = [returnedValue, response];\r\n      }\r\n      else if(response !== undefined) {\r\n        returnedValue = response;\r\n      }\r\n      return found;\r\n    }\r\n  };\r\n\r\n  if(methodInvoked) {\r\n    if(instance === undefined) {\r\n      module.initialize();\r\n    }\r\n    module.invoke(query);\r\n  }\r\n  else {\r\n    if(instance !== undefined) {\r\n      module.destroy();\r\n    }\r\n    module.initialize();\r\n  }\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.site.settings = {\r\n\r\n  name        : 'Site',\r\n  namespace   : 'site',\r\n\r\n  error : {\r\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\r\n    method : 'The method you called is not defined.'\r\n  },\r\n\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  modules: [\r\n    'accordion',\r\n    'api',\r\n    'checkbox',\r\n    'dimmer',\r\n    'dropdown',\r\n    'embed',\r\n    'form',\r\n    'modal',\r\n    'nag',\r\n    'popup',\r\n    'rating',\r\n    'shape',\r\n    'sidebar',\r\n    'state',\r\n    'sticky',\r\n    'tab',\r\n    'transition',\r\n    'visit',\r\n    'visibility'\r\n  ],\r\n\r\n  siteNamespace   : 'site',\r\n  namespaceStub   : {\r\n    cache     : {},\r\n    config    : {},\r\n    sections  : {},\r\n    section   : {},\r\n    utilities : {}\r\n  }\r\n\r\n};\r\n\r\n// allows for selection of elements with data attributes\r\n$.extend($.expr[ \":\" ], {\r\n  data: ($.expr.createPseudo)\r\n    ? $.expr.createPseudo(function(dataName) {\r\n        return function(elem) {\r\n          return !!$.data(elem, dataName);\r\n        };\r\n      })\r\n    : function(elem, i, match) {\r\n      // support: jQuery < 1.8\r\n      return !!$.data(elem, match[ 3 ]);\r\n    }\r\n});\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Form Validation\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.form = function(parameters) {\r\n  var\r\n    $allModules      = $(this),\r\n    moduleSelector   = $allModules.selector || '',\r\n\r\n    time             = new Date().getTime(),\r\n    performance      = [],\r\n\r\n    query            = arguments[0],\r\n    legacyParameters = arguments[1],\r\n    methodInvoked    = (typeof query == 'string'),\r\n    queryArguments   = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        $module     = $(this),\r\n        element     = this,\r\n\r\n        formErrors  = [],\r\n        keyHeldDown = false,\r\n\r\n        // set at run-time\r\n        $field,\r\n        $group,\r\n        $message,\r\n        $prompt,\r\n        $submit,\r\n        $clear,\r\n        $reset,\r\n\r\n        settings,\r\n        validation,\r\n\r\n        metadata,\r\n        selector,\r\n        className,\r\n        regExp,\r\n        error,\r\n\r\n        namespace,\r\n        moduleNamespace,\r\n        eventNamespace,\r\n\r\n        instance,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n\r\n          // settings grabbed at run time\r\n          module.get.settings();\r\n          if(methodInvoked) {\r\n            if(instance === undefined) {\r\n              module.instantiate();\r\n            }\r\n            module.invoke(query);\r\n          }\r\n          else {\r\n            if(instance !== undefined) {\r\n              instance.invoke('destroy');\r\n            }\r\n            module.verbose('Initializing form validation', $module, settings);\r\n            module.bindEvents();\r\n            module.set.defaults();\r\n            module.instantiate();\r\n          }\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', instance);\r\n          module.removeEvents();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $field      = $module.find(selector.field);\r\n          $group      = $module.find(selector.group);\r\n          $message    = $module.find(selector.message);\r\n          $prompt     = $module.find(selector.prompt);\r\n\r\n          $submit     = $module.find(selector.submit);\r\n          $clear      = $module.find(selector.clear);\r\n          $reset      = $module.find(selector.reset);\r\n        },\r\n\r\n        submit: function() {\r\n          module.verbose('Submitting form', $module);\r\n          $module\r\n            .submit()\r\n          ;\r\n        },\r\n\r\n        attachEvents: function(selector, action) {\r\n          action = action || 'submit';\r\n          $(selector)\r\n            .on('click' + eventNamespace, function(event) {\r\n              module[action]();\r\n              event.preventDefault();\r\n            })\r\n          ;\r\n        },\r\n\r\n        bindEvents: function() {\r\n          module.verbose('Attaching form events');\r\n          $module\r\n            .on('submit' + eventNamespace, module.validate.form)\r\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\r\n            .on('click'  + eventNamespace, selector.submit, module.submit)\r\n            .on('click'  + eventNamespace, selector.reset, module.reset)\r\n            .on('click'  + eventNamespace, selector.clear, module.clear)\r\n          ;\r\n          if(settings.keyboardShortcuts) {\r\n            $module\r\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\r\n            ;\r\n          }\r\n          $field\r\n            .each(function() {\r\n              var\r\n                $input     = $(this),\r\n                type       = $input.prop('type'),\r\n                inputEvent = module.get.changeEvent(type, $input)\r\n              ;\r\n              $(this)\r\n                .on(inputEvent + eventNamespace, module.event.field.change)\r\n              ;\r\n            })\r\n          ;\r\n        },\r\n\r\n        clear: function() {\r\n          $field\r\n            .each(function () {\r\n              var\r\n                $field       = $(this),\r\n                $element     = $field.parent(),\r\n                $fieldGroup  = $field.closest($group),\r\n                $prompt      = $fieldGroup.find(selector.prompt),\r\n                defaultValue = $field.data(metadata.defaultValue) || '',\r\n                isCheckbox   = $element.is(selector.uiCheckbox),\r\n                isDropdown   = $element.is(selector.uiDropdown),\r\n                isErrored    = $fieldGroup.hasClass(className.error)\r\n              ;\r\n              if(isErrored) {\r\n                module.verbose('Resetting error on field', $fieldGroup);\r\n                $fieldGroup.removeClass(className.error);\r\n                $prompt.remove();\r\n              }\r\n              if(isDropdown) {\r\n                module.verbose('Resetting dropdown value', $element, defaultValue);\r\n                $element.dropdown('clear');\r\n              }\r\n              else if(isCheckbox) {\r\n                $field.prop('checked', false);\r\n              }\r\n              else {\r\n                module.verbose('Resetting field value', $field, defaultValue);\r\n                $field.val('');\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        reset: function() {\r\n          $field\r\n            .each(function () {\r\n              var\r\n                $field       = $(this),\r\n                $element     = $field.parent(),\r\n                $fieldGroup  = $field.closest($group),\r\n                $prompt      = $fieldGroup.find(selector.prompt),\r\n                defaultValue = $field.data(metadata.defaultValue),\r\n                isCheckbox   = $element.is(selector.uiCheckbox),\r\n                isDropdown   = $element.is(selector.uiDropdown),\r\n                isErrored    = $fieldGroup.hasClass(className.error)\r\n              ;\r\n              if(defaultValue === undefined) {\r\n                return;\r\n              }\r\n              if(isErrored) {\r\n                module.verbose('Resetting error on field', $fieldGroup);\r\n                $fieldGroup.removeClass(className.error);\r\n                $prompt.remove();\r\n              }\r\n              if(isDropdown) {\r\n                module.verbose('Resetting dropdown value', $element, defaultValue);\r\n                $element.dropdown('restore defaults');\r\n              }\r\n              else if(isCheckbox) {\r\n                module.verbose('Resetting checkbox value', $element, defaultValue);\r\n                $field.prop('checked', defaultValue);\r\n              }\r\n              else {\r\n                module.verbose('Resetting field value', $field, defaultValue);\r\n                $field.val(defaultValue);\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        determine: {\r\n          isValid: function() {\r\n            var\r\n              allValid = true\r\n            ;\r\n            $.each(validation, function(fieldName, field) {\r\n              if( !( module.validate.field(field, fieldName, true) ) ) {\r\n                allValid = false;\r\n              }\r\n            });\r\n            return allValid;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          bracketedRule: function(rule) {\r\n            return (rule.type && rule.type.match(settings.regExp.bracket));\r\n          },\r\n          empty: function($field) {\r\n            if(!$field || $field.length === 0) {\r\n              return true;\r\n            }\r\n            else if($field.is('input[type=\"checkbox\"]')) {\r\n              return !$field.is(':checked');\r\n            }\r\n            else {\r\n              return module.is.blank($field);\r\n            }\r\n          },\r\n          blank: function($field) {\r\n            return $.trim($field.val()) === '';\r\n          },\r\n          valid: function(field) {\r\n            var\r\n              allValid = true\r\n            ;\r\n            if(field) {\r\n              module.verbose('Checking if field is valid', field);\r\n              return module.validate.field(validation[field], field, false);\r\n            }\r\n            else {\r\n              module.verbose('Checking if form is valid');\r\n              $.each(validation, function(fieldName, field) {\r\n                if( !module.is.valid(fieldName) ) {\r\n                  allValid = false;\r\n                }\r\n              });\r\n              return allValid;\r\n            }\r\n          }\r\n        },\r\n\r\n        removeEvents: function() {\r\n          $module\r\n            .off(eventNamespace)\r\n          ;\r\n          $field\r\n            .off(eventNamespace)\r\n          ;\r\n          $submit\r\n            .off(eventNamespace)\r\n          ;\r\n          $field\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        event: {\r\n          field: {\r\n            keydown: function(event) {\r\n              var\r\n                $field       = $(this),\r\n                key          = event.which,\r\n                isInput      = $field.is(selector.input),\r\n                isCheckbox   = $field.is(selector.checkbox),\r\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\r\n                keyCode      = {\r\n                  enter  : 13,\r\n                  escape : 27\r\n                }\r\n              ;\r\n              if( key == keyCode.escape) {\r\n                module.verbose('Escape key pressed blurring field');\r\n                $field\r\n                  .blur()\r\n                ;\r\n              }\r\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\r\n                if(!keyHeldDown) {\r\n                  $field\r\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\r\n                  ;\r\n                  module.submit();\r\n                  module.debug('Enter pressed on input submitting form');\r\n                }\r\n                keyHeldDown = true;\r\n              }\r\n            },\r\n            keyup: function() {\r\n              keyHeldDown = false;\r\n            },\r\n            blur: function(event) {\r\n              var\r\n                $field          = $(this),\r\n                $fieldGroup     = $field.closest($group),\r\n                validationRules = module.get.validation($field)\r\n              ;\r\n              if( $fieldGroup.hasClass(className.error) ) {\r\n                module.debug('Revalidating field', $field, validationRules);\r\n                if(validationRules) {\r\n                  module.validate.field( validationRules );\r\n                }\r\n              }\r\n              else if(settings.on == 'blur' || settings.on == 'change') {\r\n                if(validationRules) {\r\n                  module.validate.field( validationRules );\r\n                }\r\n              }\r\n            },\r\n            change: function(event) {\r\n              var\r\n                $field      = $(this),\r\n                $fieldGroup = $field.closest($group),\r\n                validationRules = module.get.validation($field)\r\n              ;\r\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\r\n                clearTimeout(module.timer);\r\n                module.timer = setTimeout(function() {\r\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\r\n                  module.validate.field( validationRules );\r\n                }, settings.delay);\r\n              }\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n          ancillaryValue: function(rule) {\r\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\r\n              return false;\r\n            }\r\n            return (rule.value !== undefined)\r\n              ? rule.value\r\n              : rule.type.match(settings.regExp.bracket)[1] + ''\r\n            ;\r\n          },\r\n          ruleName: function(rule) {\r\n            if( module.is.bracketedRule(rule) ) {\r\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\r\n            }\r\n            return rule.type;\r\n          },\r\n          changeEvent: function(type, $input) {\r\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\r\n              return 'change';\r\n            }\r\n            else {\r\n              return module.get.inputEvent();\r\n            }\r\n          },\r\n          inputEvent: function() {\r\n            return (document.createElement('input').oninput !== undefined)\r\n              ? 'input'\r\n              : (document.createElement('input').onpropertychange !== undefined)\r\n                ? 'propertychange'\r\n                : 'keyup'\r\n            ;\r\n          },\r\n          prompt: function(rule, field) {\r\n            var\r\n              ruleName      = module.get.ruleName(rule),\r\n              ancillary     = module.get.ancillaryValue(rule),\r\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\r\n              requiresValue = (prompt.search('{value}') !== -1),\r\n              requiresName  = (prompt.search('{name}') !== -1),\r\n              $label,\r\n              $field,\r\n              name\r\n            ;\r\n            if(requiresName || requiresValue) {\r\n              $field = module.get.field(field.identifier);\r\n            }\r\n            if(requiresValue) {\r\n              prompt = prompt.replace('{value}', $field.val());\r\n            }\r\n            if(requiresName) {\r\n              $label = $field.closest(selector.group).find('label').eq(0);\r\n              name = ($label.length == 1)\r\n                ? $label.text()\r\n                : $field.prop('placeholder') || settings.text.unspecifiedField\r\n              ;\r\n              prompt = prompt.replace('{name}', name);\r\n            }\r\n            prompt = prompt.replace('{identifier}', field.identifier);\r\n            prompt = prompt.replace('{ruleValue}', ancillary);\r\n            if(!rule.prompt) {\r\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\r\n            }\r\n            return prompt;\r\n          },\r\n          settings: function() {\r\n            if($.isPlainObject(parameters)) {\r\n              var\r\n                keys     = Object.keys(parameters),\r\n                isLegacySettings = (keys.length > 0)\r\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\r\n                  : false,\r\n                ruleKeys\r\n              ;\r\n              if(isLegacySettings) {\r\n                // 1.x (ducktyped)\r\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\r\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\r\n                module.error(settings.error.oldSyntax, element);\r\n                module.verbose('Extending settings from legacy parameters', validation, settings);\r\n              }\r\n              else {\r\n                // 2.x\r\n                if(parameters.fields) {\r\n                  ruleKeys = Object.keys(parameters.fields);\r\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\r\n                    $.each(parameters.fields, function(name, rules) {\r\n                      if(typeof rules == 'string') {\r\n                        rules = [rules];\r\n                      }\r\n                      parameters.fields[name] = {\r\n                        rules: []\r\n                      };\r\n                      $.each(rules, function(index, rule) {\r\n                        parameters.fields[name].rules.push({ type: rule });\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\r\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\r\n                module.verbose('Extending settings', validation, settings);\r\n              }\r\n            }\r\n            else {\r\n              settings   = $.fn.form.settings;\r\n              validation = $.fn.form.settings.defaults;\r\n              module.verbose('Using default form validation', validation, settings);\r\n            }\r\n\r\n            // shorthand\r\n            namespace       = settings.namespace;\r\n            metadata        = settings.metadata;\r\n            selector        = settings.selector;\r\n            className       = settings.className;\r\n            regExp          = settings.regExp;\r\n            error           = settings.error;\r\n            moduleNamespace = 'module-' + namespace;\r\n            eventNamespace  = '.' + namespace;\r\n\r\n            // grab instance\r\n            instance = $module.data(moduleNamespace);\r\n\r\n            // refresh selector cache\r\n            module.refresh();\r\n          },\r\n          field: function(identifier) {\r\n            module.verbose('Finding field with identifier', identifier);\r\n            identifier = module.escape.string(identifier);\r\n            if($field.filter('#' + identifier).length > 0 ) {\r\n              return $field.filter('#' + identifier);\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\r\n              return $field.filter('[name=\"' + identifier +'\"]');\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n              return $field.filter('[name=\"' + identifier +'[]\"]');\r\n            }\r\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\r\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\r\n            }\r\n            return $('<input/>');\r\n          },\r\n          fields: function(fields) {\r\n            var\r\n              $fields = $()\r\n            ;\r\n            $.each(fields, function(index, name) {\r\n              $fields = $fields.add( module.get.field(name) );\r\n            });\r\n            return $fields;\r\n          },\r\n          validation: function($field) {\r\n            var\r\n              fieldValidation,\r\n              identifier\r\n            ;\r\n            if(!validation) {\r\n              return false;\r\n            }\r\n            $.each(validation, function(fieldName, field) {\r\n              identifier = field.identifier || fieldName;\r\n              if( module.get.field(identifier)[0] == $field[0] ) {\r\n                field.identifier = identifier;\r\n                fieldValidation = field;\r\n              }\r\n            });\r\n            return fieldValidation || false;\r\n          },\r\n          value: function (field) {\r\n            var\r\n              fields = [],\r\n              results\r\n            ;\r\n            fields.push(field);\r\n            results = module.get.values.call(element, fields);\r\n            return results[field];\r\n          },\r\n          values: function (fields) {\r\n            var\r\n              $fields = $.isArray(fields)\r\n                ? module.get.fields(fields)\r\n                : $field,\r\n              values = {}\r\n            ;\r\n            $fields.each(function(index, field) {\r\n              var\r\n                $field     = $(field),\r\n                type       = $field.prop('type'),\r\n                name       = $field.prop('name'),\r\n                value      = $field.val(),\r\n                isCheckbox = $field.is(selector.checkbox),\r\n                isRadio    = $field.is(selector.radio),\r\n                isMultiple = (name.indexOf('[]') !== -1),\r\n                isChecked  = (isCheckbox)\r\n                  ? $field.is(':checked')\r\n                  : false\r\n              ;\r\n              if(name) {\r\n                if(isMultiple) {\r\n                  name = name.replace('[]', '');\r\n                  if(!values[name]) {\r\n                    values[name] = [];\r\n                  }\r\n                  if(isCheckbox) {\r\n                    if(isChecked) {\r\n                      values[name].push(value || true);\r\n                    }\r\n                    else {\r\n                      values[name].push(false);\r\n                    }\r\n                  }\r\n                  else {\r\n                    values[name].push(value);\r\n                  }\r\n                }\r\n                else {\r\n                  if(isRadio) {\r\n                    if(isChecked) {\r\n                      values[name] = value;\r\n                    }\r\n                  }\r\n                  else if(isCheckbox) {\r\n                    if(isChecked) {\r\n                      values[name] = value || true;\r\n                    }\r\n                    else {\r\n                      values[name] = false;\r\n                    }\r\n                  }\r\n                  else {\r\n                    values[name] = value;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            return values;\r\n          }\r\n        },\r\n\r\n        has: {\r\n\r\n          field: function(identifier) {\r\n            module.verbose('Checking for existence of a field with identifier', identifier);\r\n            identifier = module.escape.string(identifier);\r\n            if(typeof identifier !== 'string') {\r\n              module.error(error.identifier, identifier);\r\n            }\r\n            if($field.filter('#' + identifier).length > 0 ) {\r\n              return true;\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\r\n              return true;\r\n            }\r\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }\r\n\r\n        },\r\n\r\n        escape: {\r\n          string: function(text) {\r\n            text =  String(text);\r\n            return text.replace(regExp.escape, '\\\\$&');\r\n          }\r\n        },\r\n\r\n        add: {\r\n          prompt: function(identifier, errors) {\r\n            var\r\n              $field       = module.get.field(identifier),\r\n              $fieldGroup  = $field.closest($group),\r\n              $prompt      = $fieldGroup.children(selector.prompt),\r\n              promptExists = ($prompt.length !== 0)\r\n            ;\r\n            errors = (typeof errors == 'string')\r\n              ? [errors]\r\n              : errors\r\n            ;\r\n            module.verbose('Adding field error state', identifier);\r\n            $fieldGroup\r\n              .addClass(className.error)\r\n            ;\r\n            if(settings.inline) {\r\n              if(!promptExists) {\r\n                $prompt = settings.templates.prompt(errors);\r\n                $prompt\r\n                  .appendTo($fieldGroup)\r\n                ;\r\n              }\r\n              $prompt\r\n                .html(errors[0])\r\n              ;\r\n              if(!promptExists) {\r\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                  module.verbose('Displaying error with css transition', settings.transition);\r\n                  $prompt.transition(settings.transition + ' in', settings.duration);\r\n                }\r\n                else {\r\n                  module.verbose('Displaying error with fallback javascript animation');\r\n                  $prompt\r\n                    .fadeIn(settings.duration)\r\n                  ;\r\n                }\r\n              }\r\n              else {\r\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\r\n              }\r\n            }\r\n          },\r\n          errors: function(errors) {\r\n            module.debug('Adding form error messages', errors);\r\n            module.set.error();\r\n            $message\r\n              .html( settings.templates.error(errors) )\r\n            ;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          prompt: function(identifier) {\r\n            var\r\n              $field      = module.get.field(identifier),\r\n              $fieldGroup = $field.closest($group),\r\n              $prompt     = $fieldGroup.children(selector.prompt)\r\n            ;\r\n            $fieldGroup\r\n              .removeClass(className.error)\r\n            ;\r\n            if(settings.inline && $prompt.is(':visible')) {\r\n              module.verbose('Removing prompt for field', identifier);\r\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\r\n                  $prompt.remove();\r\n                });\r\n              }\r\n              else {\r\n                $prompt\r\n                  .fadeOut(settings.duration, function(){\r\n                    $prompt.remove();\r\n                  })\r\n                ;\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        set: {\r\n          success: function() {\r\n            $module\r\n              .removeClass(className.error)\r\n              .addClass(className.success)\r\n            ;\r\n          },\r\n          defaults: function () {\r\n            $field\r\n              .each(function () {\r\n                var\r\n                  $field     = $(this),\r\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\r\n                  value      = (isCheckbox)\r\n                    ? $field.is(':checked')\r\n                    : $field.val()\r\n                ;\r\n                $field.data(metadata.defaultValue, value);\r\n              })\r\n            ;\r\n          },\r\n          error: function() {\r\n            $module\r\n              .removeClass(className.success)\r\n              .addClass(className.error)\r\n            ;\r\n          },\r\n          value: function (field, value) {\r\n            var\r\n              fields = {}\r\n            ;\r\n            fields[field] = value;\r\n            return module.set.values.call(element, fields);\r\n          },\r\n          values: function (fields) {\r\n            if($.isEmptyObject(fields)) {\r\n              return;\r\n            }\r\n            $.each(fields, function(key, value) {\r\n              var\r\n                $field      = module.get.field(key),\r\n                $element    = $field.parent(),\r\n                isMultiple  = $.isArray(value),\r\n                isCheckbox  = $element.is(selector.uiCheckbox),\r\n                isDropdown  = $element.is(selector.uiDropdown),\r\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\r\n                fieldExists = ($field.length > 0),\r\n                $multipleField\r\n              ;\r\n              if(fieldExists) {\r\n                if(isMultiple && isCheckbox) {\r\n                  module.verbose('Selecting multiple', value, $field);\r\n                  $element.checkbox('uncheck');\r\n                  $.each(value, function(index, value) {\r\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\r\n                    $element       = $multipleField.parent();\r\n                    if($multipleField.length > 0) {\r\n                      $element.checkbox('check');\r\n                    }\r\n                  });\r\n                }\r\n                else if(isRadio) {\r\n                  module.verbose('Selecting radio value', value, $field);\r\n                  $field.filter('[value=\"' + value + '\"]')\r\n                    .parent(selector.uiCheckbox)\r\n                      .checkbox('check')\r\n                  ;\r\n                }\r\n                else if(isCheckbox) {\r\n                  module.verbose('Setting checkbox value', value, $element);\r\n                  if(value === true) {\r\n                    $element.checkbox('check');\r\n                  }\r\n                  else {\r\n                    $element.checkbox('uncheck');\r\n                  }\r\n                }\r\n                else if(isDropdown) {\r\n                  module.verbose('Setting dropdown value', value, $element);\r\n                  $element.dropdown('set selected', value);\r\n                }\r\n                else {\r\n                  module.verbose('Setting field value', value, $field);\r\n                  $field.val(value);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        validate: {\r\n\r\n          form: function(event, ignoreCallbacks) {\r\n            var\r\n              values = module.get.values(),\r\n              apiRequest\r\n            ;\r\n\r\n            // input keydown event will fire submit repeatedly by browser default\r\n            if(keyHeldDown) {\r\n              return false;\r\n            }\r\n\r\n            // reset errors\r\n            formErrors = [];\r\n            if( module.determine.isValid() ) {\r\n              module.debug('Form has no validation errors, submitting');\r\n              module.set.success();\r\n              if(ignoreCallbacks !== true) {\r\n                return settings.onSuccess.call(element, event, values);\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Form has errors');\r\n              module.set.error();\r\n              if(!settings.inline) {\r\n                module.add.errors(formErrors);\r\n              }\r\n              // prevent ajax submit\r\n              if($module.data('moduleApi') !== undefined) {\r\n                event.stopImmediatePropagation();\r\n              }\r\n              if(ignoreCallbacks !== true) {\r\n                return settings.onFailure.call(element, formErrors, values);\r\n              }\r\n            }\r\n          },\r\n\r\n          // takes a validation object and returns whether field passes validation\r\n          field: function(field, fieldName, showErrors) {\r\n            showErrors = (showErrors !== undefined)\r\n              ? showErrors\r\n              : true\r\n            ;\r\n            if(typeof field == 'string') {\r\n              module.verbose('Validating field', field);\r\n              fieldName = field;\r\n              field = validation[field];\r\n            }\r\n            var\r\n              identifier    = field.identifier || fieldName,\r\n              $field        = module.get.field(identifier),\r\n              $dependsField = (field.depends)\r\n                ? module.get.field(field.depends)\r\n                : false,\r\n              fieldValid  = true,\r\n              fieldErrors = []\r\n            ;\r\n            if(!field.identifier) {\r\n              module.debug('Using field name as identifier', identifier);\r\n              field.identifier = identifier;\r\n            }\r\n            if($field.prop('disabled')) {\r\n              module.debug('Field is disabled. Skipping', identifier);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.optional && module.is.blank($field)){\r\n              module.debug('Field is optional and blank. Skipping', identifier);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.depends && module.is.empty($dependsField)) {\r\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.rules !== undefined) {\r\n              $.each(field.rules, function(index, rule) {\r\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\r\n                  module.debug('Field is invalid', identifier, rule.type);\r\n                  fieldErrors.push(module.get.prompt(rule, field));\r\n                  fieldValid = false;\r\n                }\r\n              });\r\n            }\r\n            if(fieldValid) {\r\n              if(showErrors) {\r\n                module.remove.prompt(identifier, fieldErrors);\r\n                settings.onValid.call($field);\r\n              }\r\n            }\r\n            else {\r\n              if(showErrors) {\r\n                formErrors = formErrors.concat(fieldErrors);\r\n                module.add.prompt(identifier, fieldErrors);\r\n                settings.onInvalid.call($field, fieldErrors);\r\n              }\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n\r\n          // takes validation rule and returns whether field passes rule\r\n          rule: function(field, rule) {\r\n            var\r\n              $field       = module.get.field(field.identifier),\r\n              type         = rule.type,\r\n              value        = $field.val(),\r\n              isValid      = true,\r\n              ancillary    = module.get.ancillaryValue(rule),\r\n              ruleName     = module.get.ruleName(rule),\r\n              ruleFunction = settings.rules[ruleName]\r\n            ;\r\n            if( !$.isFunction(ruleFunction) ) {\r\n              module.error(error.noRule, ruleName);\r\n              return;\r\n            }\r\n            // cast to string avoiding encoding special values\r\n            value = (value === undefined || value === '' || value === null)\r\n              ? ''\r\n              : $.trim(value + '')\r\n            ;\r\n            return ruleFunction.call($field, value, ancillary);\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      module.initialize();\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.form.settings = {\r\n\r\n  name              : 'Form',\r\n  namespace         : 'form',\r\n\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  fields            : false,\r\n\r\n  keyboardShortcuts : true,\r\n  on                : 'submit',\r\n  inline            : false,\r\n\r\n  delay             : 200,\r\n  revalidate        : true,\r\n\r\n  transition        : 'scale',\r\n  duration          : 200,\r\n\r\n  onValid           : function() {},\r\n  onInvalid         : function() {},\r\n  onSuccess         : function() { return true; },\r\n  onFailure         : function() { return false; },\r\n\r\n  metadata : {\r\n    defaultValue : 'default',\r\n    validate     : 'validate'\r\n  },\r\n\r\n  regExp: {\r\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\r\n    bracket : /\\[(.*)\\]/i,\r\n    decimal : /^\\d+\\.?\\d*$/,\r\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\r\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n    flags   : /^\\/(.*)\\/(.*)?/,\r\n    integer : /^\\-?\\d+$/,\r\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\r\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\r\n  },\r\n\r\n  text: {\r\n    unspecifiedRule  : 'Please enter a valid value',\r\n    unspecifiedField : 'This field'\r\n  },\r\n\r\n  prompt: {\r\n    empty                : '{name} must have a value',\r\n    checked              : '{name} must be checked',\r\n    email                : '{name} must be a valid e-mail',\r\n    url                  : '{name} must be a valid url',\r\n    regExp               : '{name} is not formatted correctly',\r\n    integer              : '{name} must be an integer',\r\n    decimal              : '{name} must be a decimal number',\r\n    number               : '{name} must be set to a number',\r\n    is                   : '{name} must be \"{ruleValue}\"',\r\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\r\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\r\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\r\n    contain              : '{name} cannot contain \"{ruleValue}\"',\r\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\r\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\r\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\r\n    minLength            : '{name} must be at least {ruleValue} characters',\r\n    length               : '{name} must be at least {ruleValue} characters',\r\n    exactLength          : '{name} must be exactly {ruleValue} characters',\r\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\r\n    match                : '{name} must match {ruleValue} field',\r\n    different            : '{name} must have a different value than {ruleValue} field',\r\n    creditCard           : '{name} must be a valid credit card number',\r\n    minCount             : '{name} must have at least {ruleValue} choices',\r\n    exactCount           : '{name} must have exactly {ruleValue} choices',\r\n    maxCount             : '{name} must have {ruleValue} or less choices'\r\n  },\r\n\r\n  selector : {\r\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\r\n    clear      : '.clear',\r\n    field      : 'input, textarea, select',\r\n    group      : '.field',\r\n    input      : 'input',\r\n    message    : '.error.message',\r\n    prompt     : '.prompt.label',\r\n    radio      : 'input[type=\"radio\"]',\r\n    reset      : '.reset:not([type=\"reset\"])',\r\n    submit     : '.submit:not([type=\"submit\"])',\r\n    uiCheckbox : '.ui.checkbox',\r\n    uiDropdown : '.ui.dropdown'\r\n  },\r\n\r\n  className : {\r\n    error   : 'error',\r\n    label   : 'ui prompt label',\r\n    pressed : 'down',\r\n    success : 'success'\r\n  },\r\n\r\n  error: {\r\n    identifier : 'You must specify a string identifier for each field',\r\n    method     : 'The method you called is not defined.',\r\n    noRule     : 'There is no rule matching the one you specified',\r\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\r\n  },\r\n\r\n  templates: {\r\n\r\n    // template that produces error message\r\n    error: function(errors) {\r\n      var\r\n        html = '<ul class=\"list\">'\r\n      ;\r\n      $.each(errors, function(index, value) {\r\n        html += '<li>' + value + '</li>';\r\n      });\r\n      html += '</ul>';\r\n      return $(html);\r\n    },\r\n\r\n    // template that produces label\r\n    prompt: function(errors) {\r\n      return $('<div/>')\r\n        .addClass('ui basic red pointing prompt label')\r\n        .html(errors[0])\r\n      ;\r\n    }\r\n  },\r\n\r\n  rules: {\r\n\r\n    // is not empty or blank string\r\n    empty: function(value) {\r\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\r\n    },\r\n\r\n    // checkbox checked\r\n    checked: function() {\r\n      return ($(this).filter(':checked').length > 0);\r\n    },\r\n\r\n    // is most likely an email\r\n    email: function(value){\r\n      return $.fn.form.settings.regExp.email.test(value);\r\n    },\r\n\r\n    // value is most likely url\r\n    url: function(value) {\r\n      return $.fn.form.settings.regExp.url.test(value);\r\n    },\r\n\r\n    // matches specified regExp\r\n    regExp: function(value, regExp) {\r\n      if(regExp instanceof RegExp) {\r\n        return value.match(regExp);\r\n      }\r\n      var\r\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\r\n        flags\r\n      ;\r\n      // regular expression specified as /baz/gi (flags)\r\n      if(regExpParts) {\r\n        regExp = (regExpParts.length >= 2)\r\n          ? regExpParts[1]\r\n          : regExp\r\n        ;\r\n        flags = (regExpParts.length >= 3)\r\n          ? regExpParts[2]\r\n          : ''\r\n        ;\r\n      }\r\n      return value.match( new RegExp(regExp, flags) );\r\n    },\r\n\r\n    // is valid integer or matches range\r\n    integer: function(value, range) {\r\n      var\r\n        intRegExp = $.fn.form.settings.regExp.integer,\r\n        min,\r\n        max,\r\n        parts\r\n      ;\r\n      if( !range || ['', '..'].indexOf(range) !== -1) {\r\n        // do nothing\r\n      }\r\n      else if(range.indexOf('..') == -1) {\r\n        if(intRegExp.test(range)) {\r\n          min = max = range - 0;\r\n        }\r\n      }\r\n      else {\r\n        parts = range.split('..', 2);\r\n        if(intRegExp.test(parts[0])) {\r\n          min = parts[0] - 0;\r\n        }\r\n        if(intRegExp.test(parts[1])) {\r\n          max = parts[1] - 0;\r\n        }\r\n      }\r\n      return (\r\n        intRegExp.test(value) &&\r\n        (min === undefined || value >= min) &&\r\n        (max === undefined || value <= max)\r\n      );\r\n    },\r\n\r\n    // is valid number (with decimal)\r\n    decimal: function(value) {\r\n      return $.fn.form.settings.regExp.decimal.test(value);\r\n    },\r\n\r\n    // is valid number\r\n    number: function(value) {\r\n      return $.fn.form.settings.regExp.number.test(value);\r\n    },\r\n\r\n    // is value (case insensitive)\r\n    is: function(value, text) {\r\n      text = (typeof text == 'string')\r\n        ? text.toLowerCase()\r\n        : text\r\n      ;\r\n      value = (typeof value == 'string')\r\n        ? value.toLowerCase()\r\n        : value\r\n      ;\r\n      return (value == text);\r\n    },\r\n\r\n    // is value\r\n    isExactly: function(value, text) {\r\n      return (value == text);\r\n    },\r\n\r\n    // value is not another value (case insensitive)\r\n    not: function(value, notValue) {\r\n      value = (typeof value == 'string')\r\n        ? value.toLowerCase()\r\n        : value\r\n      ;\r\n      notValue = (typeof notValue == 'string')\r\n        ? notValue.toLowerCase()\r\n        : notValue\r\n      ;\r\n      return (value != notValue);\r\n    },\r\n\r\n    // value is not another value (case sensitive)\r\n    notExactly: function(value, notValue) {\r\n      return (value != notValue);\r\n    },\r\n\r\n    // value contains text (insensitive)\r\n    contains: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text, 'i') ) !== -1);\r\n    },\r\n\r\n    // value contains text (case sensitive)\r\n    containsExactly: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text) ) !== -1);\r\n    },\r\n\r\n    // value contains text (insensitive)\r\n    doesntContain: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text, 'i') ) === -1);\r\n    },\r\n\r\n    // value contains text (case sensitive)\r\n    doesntContainExactly: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text) ) === -1);\r\n    },\r\n\r\n    // is at least string length\r\n    minLength: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length >= requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\r\n    length: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length >= requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // is exactly length\r\n    exactLength: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length == requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // is less than length\r\n    maxLength: function(value, maxLength) {\r\n      return (value !== undefined)\r\n        ? (value.length <= maxLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // matches another field\r\n    match: function(value, identifier) {\r\n      var\r\n        $form = $(this),\r\n        matchingValue\r\n      ;\r\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\r\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\r\n      }\r\n      else if($('#' + identifier).length > 0) {\r\n        matchingValue = $('#' + identifier).val();\r\n      }\r\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\r\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\r\n      }\r\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\r\n      }\r\n      return (matchingValue !== undefined)\r\n        ? ( value.toString() == matchingValue.toString() )\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // different than another field\r\n    different: function(value, identifier) {\r\n      // use either id or name of field\r\n      var\r\n        $form = $(this),\r\n        matchingValue\r\n      ;\r\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\r\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\r\n      }\r\n      else if($('#' + identifier).length > 0) {\r\n        matchingValue = $('#' + identifier).val();\r\n      }\r\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\r\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\r\n      }\r\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\r\n      }\r\n      return (matchingValue !== undefined)\r\n        ? ( value.toString() !== matchingValue.toString() )\r\n        : false\r\n      ;\r\n    },\r\n\r\n    creditCard: function(cardNumber, cardTypes) {\r\n      var\r\n        cards = {\r\n          visa: {\r\n            pattern : /^4/,\r\n            length  : [16]\r\n          },\r\n          amex: {\r\n            pattern : /^3[47]/,\r\n            length  : [15]\r\n          },\r\n          mastercard: {\r\n            pattern : /^5[1-5]/,\r\n            length  : [16]\r\n          },\r\n          discover: {\r\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\r\n            length  : [16]\r\n          },\r\n          unionPay: {\r\n            pattern : /^(62|88)/,\r\n            length  : [16, 17, 18, 19]\r\n          },\r\n          jcb: {\r\n            pattern : /^35(2[89]|[3-8][0-9])/,\r\n            length  : [16]\r\n          },\r\n          maestro: {\r\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\r\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\r\n          },\r\n          dinersClub: {\r\n            pattern : /^(30[0-5]|^36)/,\r\n            length  : [14]\r\n          },\r\n          laser: {\r\n            pattern : /^(6304|670[69]|6771)/,\r\n            length  : [16, 17, 18, 19]\r\n          },\r\n          visaElectron: {\r\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\r\n            length  : [16]\r\n          }\r\n        },\r\n        valid         = {},\r\n        validCard     = false,\r\n        requiredTypes = (typeof cardTypes == 'string')\r\n          ? cardTypes.split(',')\r\n          : false,\r\n        unionPay,\r\n        validation\r\n      ;\r\n\r\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\r\n        return;\r\n      }\r\n\r\n      // allow dashes in card\r\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\r\n\r\n      // verify card types\r\n      if(requiredTypes) {\r\n        $.each(requiredTypes, function(index, type){\r\n          // verify each card type\r\n          validation = cards[type];\r\n          if(validation) {\r\n            valid = {\r\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\r\n              pattern : (cardNumber.search(validation.pattern) !== -1)\r\n            };\r\n            if(valid.length && valid.pattern) {\r\n              validCard = true;\r\n            }\r\n          }\r\n        });\r\n\r\n        if(!validCard) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // skip luhn for UnionPay\r\n      unionPay = {\r\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\r\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\r\n      };\r\n      if(unionPay.number && unionPay.pattern) {\r\n        return true;\r\n      }\r\n\r\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\r\n      var\r\n        length        = cardNumber.length,\r\n        multiple      = 0,\r\n        producedValue = [\r\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\r\n        ],\r\n        sum           = 0\r\n      ;\r\n      while (length--) {\r\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\r\n        multiple ^= 1;\r\n      }\r\n      return (sum % 10 === 0 && sum > 0);\r\n    },\r\n\r\n    minCount: function(value, minCount) {\r\n      if(minCount == 0) {\r\n        return true;\r\n      }\r\n      if(minCount == 1) {\r\n        return (value !== '');\r\n      }\r\n      return (value.split(',').length >= minCount);\r\n    },\r\n\r\n    exactCount: function(value, exactCount) {\r\n      if(exactCount == 0) {\r\n        return (value === '');\r\n      }\r\n      if(exactCount == 1) {\r\n        return (value !== '' && value.search(',') === -1);\r\n      }\r\n      return (value.split(',').length == exactCount);\r\n    },\r\n\r\n    maxCount: function(value, maxCount) {\r\n      if(maxCount == 0) {\r\n        return false;\r\n      }\r\n      if(maxCount == 1) {\r\n        return (value.search(',') === -1);\r\n      }\r\n      return (value.split(',').length <= maxCount);\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Accordion\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.accordion = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\r\n          : $.extend({}, $.fn.accordion.settings),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n        moduleSelector  = $allModules.selector || '',\r\n\r\n        $module  = $(this),\r\n        $title   = $module.find(selector.title),\r\n        $content = $module.find(selector.content),\r\n\r\n        element  = this,\r\n        instance = $module.data(moduleNamespace),\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing', $module);\r\n          module.bind.events();\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying previous instance', $module);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          $title   = $module.find(selector.title);\r\n          $content = $module.find(selector.content);\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, updating selector cache');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.debug('Binding delegated events');\r\n            $module\r\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function() {\r\n            module.toggle.call(this);\r\n          }\r\n        },\r\n\r\n        toggle: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating = $activeContent.hasClass(className.animating),\r\n            isActive    = $activeContent.hasClass(className.active),\r\n            isOpen      = (isActive && !isAnimating),\r\n            isOpening   = (!isActive && isAnimating)\r\n          ;\r\n          module.debug('Toggling visibility of content', $activeTitle);\r\n          if(isOpen || isOpening) {\r\n            if(settings.collapsible) {\r\n              module.close.call($activeTitle);\r\n            }\r\n            else {\r\n              module.debug('Cannot close accordion content collapsing is disabled');\r\n            }\r\n          }\r\n          else {\r\n            module.open.call($activeTitle);\r\n          }\r\n        },\r\n\r\n        open: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating = $activeContent.hasClass(className.animating),\r\n            isActive    = $activeContent.hasClass(className.active),\r\n            isOpen      = (isActive || isAnimating)\r\n          ;\r\n          if(isOpen) {\r\n            module.debug('Accordion already open, skipping', $activeContent);\r\n            return;\r\n          }\r\n          module.debug('Opening accordion content', $activeTitle);\r\n          settings.onOpening.call($activeContent);\r\n          if(settings.exclusive) {\r\n            module.closeOthers.call($activeTitle);\r\n          }\r\n          $activeTitle\r\n            .addClass(className.active)\r\n          ;\r\n          $activeContent\r\n            .stop(true, true)\r\n            .addClass(className.animating)\r\n          ;\r\n          if(settings.animateChildren) {\r\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n              $activeContent\r\n                .children()\r\n                  .transition({\r\n                    animation   : 'fade in',\r\n                    queue       : false,\r\n                    useFailSafe : true,\r\n                    debug       : settings.debug,\r\n                    verbose     : settings.verbose,\r\n                    duration    : settings.duration\r\n                  })\r\n              ;\r\n            }\r\n            else {\r\n              $activeContent\r\n                .children()\r\n                  .stop(true, true)\r\n                  .animate({\r\n                    opacity: 1\r\n                  }, settings.duration, module.resetOpacity)\r\n              ;\r\n            }\r\n          }\r\n          $activeContent\r\n            .slideDown(settings.duration, settings.easing, function() {\r\n              $activeContent\r\n                .removeClass(className.animating)\r\n                .addClass(className.active)\r\n              ;\r\n              module.reset.display.call(this);\r\n              settings.onOpen.call(this);\r\n              settings.onChange.call(this);\r\n            })\r\n          ;\r\n        },\r\n\r\n        close: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating    = $activeContent.hasClass(className.animating),\r\n            isActive       = $activeContent.hasClass(className.active),\r\n            isOpening      = (!isActive && isAnimating),\r\n            isClosing      = (isActive && isAnimating)\r\n          ;\r\n          if((isActive || isOpening) && !isClosing) {\r\n            module.debug('Closing accordion content', $activeContent);\r\n            settings.onClosing.call($activeContent);\r\n            $activeTitle\r\n              .removeClass(className.active)\r\n            ;\r\n            $activeContent\r\n              .stop(true, true)\r\n              .addClass(className.animating)\r\n            ;\r\n            if(settings.animateChildren) {\r\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $activeContent\r\n                  .children()\r\n                    .transition({\r\n                      animation   : 'fade out',\r\n                      queue       : false,\r\n                      useFailSafe : true,\r\n                      debug       : settings.debug,\r\n                      verbose     : settings.verbose,\r\n                      duration    : settings.duration\r\n                    })\r\n                ;\r\n              }\r\n              else {\r\n                $activeContent\r\n                  .children()\r\n                    .stop(true, true)\r\n                    .animate({\r\n                      opacity: 0\r\n                    }, settings.duration, module.resetOpacity)\r\n                ;\r\n              }\r\n            }\r\n            $activeContent\r\n              .slideUp(settings.duration, settings.easing, function() {\r\n                $activeContent\r\n                  .removeClass(className.animating)\r\n                  .removeClass(className.active)\r\n                ;\r\n                module.reset.display.call(this);\r\n                settings.onClose.call(this);\r\n                settings.onChange.call(this);\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        closeOthers: function(index) {\r\n          var\r\n            $activeTitle = (index !== undefined)\r\n              ? $title.eq(index)\r\n              : $(this).closest(selector.title),\r\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\r\n            $activeAccordion = $activeTitle.closest(selector.accordion),\r\n            activeSelector   = selector.title + '.' + className.active + ':visible',\r\n            activeContent    = selector.content + '.' + className.active + ':visible',\r\n            $openTitles,\r\n            $nestedTitles,\r\n            $openContents\r\n          ;\r\n          if(settings.closeNested) {\r\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\r\n            $openContents = $openTitles.next($content);\r\n          }\r\n          else {\r\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\r\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\r\n            $openTitles   = $openTitles.not($nestedTitles);\r\n            $openContents = $openTitles.next($content);\r\n          }\r\n          if( ($openTitles.length > 0) ) {\r\n            module.debug('Exclusive enabled, closing other content', $openTitles);\r\n            $openTitles\r\n              .removeClass(className.active)\r\n            ;\r\n            $openContents\r\n              .removeClass(className.animating)\r\n              .stop(true, true)\r\n            ;\r\n            if(settings.animateChildren) {\r\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $openContents\r\n                  .children()\r\n                    .transition({\r\n                      animation   : 'fade out',\r\n                      useFailSafe : true,\r\n                      debug       : settings.debug,\r\n                      verbose     : settings.verbose,\r\n                      duration    : settings.duration\r\n                    })\r\n                ;\r\n              }\r\n              else {\r\n                $openContents\r\n                  .children()\r\n                    .stop(true, true)\r\n                    .animate({\r\n                      opacity: 0\r\n                    }, settings.duration, module.resetOpacity)\r\n                ;\r\n              }\r\n            }\r\n            $openContents\r\n              .slideUp(settings.duration , settings.easing, function() {\r\n                $(this).removeClass(className.active);\r\n                module.reset.display.call(this);\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        reset: {\r\n\r\n          display: function() {\r\n            module.verbose('Removing inline display from element', this);\r\n            $(this).css('display', '');\r\n            if( $(this).attr('style') === '') {\r\n              $(this)\r\n                .attr('style', '')\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          },\r\n\r\n          opacity: function() {\r\n            module.verbose('Removing inline opacity from element', this);\r\n            $(this).css('opacity', '');\r\n            if( $(this).attr('style') === '') {\r\n              $(this)\r\n                .attr('style', '')\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          },\r\n\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          module.debug('Changing internal', name, value);\r\n          if(value !== undefined) {\r\n            if( $.isPlainObject(name) ) {\r\n              $.extend(true, module, name);\r\n            }\r\n            else {\r\n              module[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.accordion.settings = {\r\n\r\n  name            : 'Accordion',\r\n  namespace       : 'accordion',\r\n\r\n  silent          : false,\r\n  debug           : false,\r\n  verbose         : false,\r\n  performance     : true,\r\n\r\n  on              : 'click', // event on title that opens accordion\r\n\r\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\r\n\r\n  exclusive       : true,  // whether a single accordion content panel should be open at once\r\n  collapsible     : true,  // whether accordion content can be closed\r\n  closeNested     : false, // whether nested content should be closed when a panel is closed\r\n  animateChildren : true,  // whether children opacity should be animated\r\n\r\n  duration        : 350, // duration of animation\r\n  easing          : 'easeOutQuad', // easing equation for animation\r\n\r\n\r\n  onOpening       : function(){}, // callback before open animation\r\n  onOpen          : function(){}, // callback after open animation\r\n  onClosing       : function(){}, // callback before closing animation\r\n  onClose         : function(){}, // callback after closing animation\r\n  onChange        : function(){}, // callback after closing or opening animation\r\n\r\n  error: {\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  className   : {\r\n    active    : 'active',\r\n    animating : 'animating'\r\n  },\r\n\r\n  selector    : {\r\n    accordion : '.accordion',\r\n    title     : '.title',\r\n    trigger   : '.title',\r\n    content   : '.content'\r\n  }\r\n\r\n};\r\n\r\n// Adds easing\r\n$.extend( $.easing, {\r\n  easeOutQuad: function (x, t, b, c, d) {\r\n    return -c *(t/=d)*(t-2) + b;\r\n  }\r\n});\r\n\r\n})( jQuery, window, document );\r\n\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Checkbox\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.checkbox = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $label          = $(this).children(selector.label),\r\n        $input          = $(this).children(selector.input),\r\n        input           = $input[0],\r\n\r\n        initialLoad     = false,\r\n        shortcutPressed = false,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        observer,\r\n        element         = this,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing checkbox', settings);\r\n\r\n          module.create.label();\r\n          module.bind.events();\r\n\r\n          module.set.tabbable();\r\n          module.hide.input();\r\n\r\n          module.observeChanges();\r\n          module.instantiate();\r\n          module.setup();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying module');\r\n          module.unbind.events();\r\n          module.show.input();\r\n          $module.removeData(moduleNamespace);\r\n        },\r\n\r\n        fix: {\r\n          reference: function() {\r\n            if( $module.is(selector.input) ) {\r\n              module.debug('Behavior called on <input> adjusting invoked element');\r\n              $module = $module.closest(selector.checkbox);\r\n              module.refresh();\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: function() {\r\n          module.set.initialLoad();\r\n          if( module.is.indeterminate() ) {\r\n            module.debug('Initial value is indeterminate');\r\n            module.indeterminate();\r\n          }\r\n          else if( module.is.checked() ) {\r\n            module.debug('Initial value is checked');\r\n            module.check();\r\n          }\r\n          else {\r\n            module.debug('Initial value is unchecked');\r\n            module.uncheck();\r\n          }\r\n          module.remove.initialLoad();\r\n        },\r\n\r\n        refresh: function() {\r\n          $label = $module.children(selector.label);\r\n          $input = $module.children(selector.input);\r\n          input  = $input[0];\r\n        },\r\n\r\n        hide: {\r\n          input: function() {\r\n            module.verbose('Modifying <input> z-index to be unselectable');\r\n            $input.addClass(className.hidden);\r\n          }\r\n        },\r\n        show: {\r\n          input: function() {\r\n            module.verbose('Modifying <input> z-index to be selectable');\r\n            $input.removeClass(className.hidden);\r\n          }\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, updating selector cache');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $element = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($element.length > 0) {\r\n            module.debug('Attaching checkbox events to element', selector, event);\r\n            $element\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            var\r\n              $target = $(event.target)\r\n            ;\r\n            if( $target.is(selector.input) ) {\r\n              module.verbose('Using default check action on initialized checkbox');\r\n              return;\r\n            }\r\n            if( $target.is(selector.link) ) {\r\n              module.debug('Clicking link inside checkbox, skipping toggle');\r\n              return;\r\n            }\r\n            module.toggle();\r\n            $input.focus();\r\n            event.preventDefault();\r\n          },\r\n          keydown: function(event) {\r\n            var\r\n              key     = event.which,\r\n              keyCode = {\r\n                enter  : 13,\r\n                space  : 32,\r\n                escape : 27\r\n              }\r\n            ;\r\n            if(key == keyCode.escape) {\r\n              module.verbose('Escape key pressed blurring field');\r\n              $input.blur();\r\n              shortcutPressed = true;\r\n            }\r\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\r\n              module.verbose('Enter/space key pressed, toggling checkbox');\r\n              module.toggle();\r\n              shortcutPressed = true;\r\n            }\r\n            else {\r\n              shortcutPressed = false;\r\n            }\r\n          },\r\n          keyup: function(event) {\r\n            if(shortcutPressed) {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n        },\r\n\r\n        check: function() {\r\n          if( !module.should.allowCheck() ) {\r\n            return;\r\n          }\r\n          module.debug('Checking checkbox', $input);\r\n          module.set.checked();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onChecked.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        uncheck: function() {\r\n          if( !module.should.allowUncheck() ) {\r\n            return;\r\n          }\r\n          module.debug('Unchecking checkbox');\r\n          module.set.unchecked();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onUnchecked.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        indeterminate: function() {\r\n          if( module.should.allowIndeterminate() ) {\r\n            module.debug('Checkbox is already indeterminate');\r\n            return;\r\n          }\r\n          module.debug('Making checkbox indeterminate');\r\n          module.set.indeterminate();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onIndeterminate.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        determinate: function() {\r\n          if( module.should.allowDeterminate() ) {\r\n            module.debug('Checkbox is already determinate');\r\n            return;\r\n          }\r\n          module.debug('Making checkbox determinate');\r\n          module.set.determinate();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onDeterminate.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          if( module.is.enabled() ) {\r\n            module.debug('Checkbox is already enabled');\r\n            return;\r\n          }\r\n          module.debug('Enabling checkbox');\r\n          module.set.enabled();\r\n          settings.onEnable.call(input);\r\n          // preserve legacy callbacks\r\n          settings.onEnabled.call(input);\r\n        },\r\n\r\n        disable: function() {\r\n          if( module.is.disabled() ) {\r\n            module.debug('Checkbox is already disabled');\r\n            return;\r\n          }\r\n          module.debug('Disabling checkbox');\r\n          module.set.disabled();\r\n          settings.onDisable.call(input);\r\n          // preserve legacy callbacks\r\n          settings.onDisabled.call(input);\r\n        },\r\n\r\n        get: {\r\n          radios: function() {\r\n            var\r\n              name = module.get.name()\r\n            ;\r\n            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\r\n          },\r\n          otherRadios: function() {\r\n            return module.get.radios().not($module);\r\n          },\r\n          name: function() {\r\n            return $input.attr('name');\r\n          }\r\n        },\r\n\r\n        is: {\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          },\r\n          radio: function() {\r\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\r\n          },\r\n          indeterminate: function() {\r\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\r\n          },\r\n          checked: function() {\r\n            return $input.prop('checked') !== undefined && $input.prop('checked');\r\n          },\r\n          disabled: function() {\r\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\r\n          },\r\n          enabled: function() {\r\n            return !module.is.disabled();\r\n          },\r\n          determinate: function() {\r\n            return !module.is.indeterminate();\r\n          },\r\n          unchecked: function() {\r\n            return !module.is.checked();\r\n          }\r\n        },\r\n\r\n        should: {\r\n          allowCheck: function() {\r\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow check, checkbox is already checked');\r\n              return false;\r\n            }\r\n            if(settings.beforeChecked.apply(input) === false) {\r\n              module.debug('Should not allow check, beforeChecked cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowUncheck: function() {\r\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\r\n              return false;\r\n            }\r\n            if(settings.beforeUnchecked.apply(input) === false) {\r\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowIndeterminate: function() {\r\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\r\n              return false;\r\n            }\r\n            if(settings.beforeIndeterminate.apply(input) === false) {\r\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowDeterminate: function() {\r\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow determinate, checkbox is already determinate');\r\n              return false;\r\n            }\r\n            if(settings.beforeDeterminate.apply(input) === false) {\r\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          forceCallbacks: function() {\r\n            return (module.is.initialLoad() && settings.fireOnInit);\r\n          },\r\n          ignoreCallbacks: function() {\r\n            return (initialLoad && !settings.fireOnInit);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          change: function() {\r\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\r\n          },\r\n          uncheck: function() {\r\n            return (typeof settings.uncheckable === 'boolean')\r\n              ? settings.uncheckable\r\n              : !module.is.radio()\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          initialLoad: function() {\r\n            initialLoad = true;\r\n          },\r\n          checked: function() {\r\n            module.verbose('Setting class to checked');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n              .addClass(className.checked)\r\n            ;\r\n            if( module.is.radio() ) {\r\n              module.uncheckOthers();\r\n            }\r\n            if(!module.is.indeterminate() && module.is.checked()) {\r\n              module.debug('Input is already checked, skipping input property change');\r\n              return;\r\n            }\r\n            module.verbose('Setting state to checked', input);\r\n            $input\r\n              .prop('indeterminate', false)\r\n              .prop('checked', true)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          unchecked: function() {\r\n            module.verbose('Removing checked class');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n              .removeClass(className.checked)\r\n            ;\r\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\r\n              module.debug('Input is already unchecked');\r\n              return;\r\n            }\r\n            module.debug('Setting state to unchecked');\r\n            $input\r\n              .prop('indeterminate', false)\r\n              .prop('checked', false)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          indeterminate: function() {\r\n            module.verbose('Setting class to indeterminate');\r\n            $module\r\n              .addClass(className.indeterminate)\r\n            ;\r\n            if( module.is.indeterminate() ) {\r\n              module.debug('Input is already indeterminate, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to indeterminate');\r\n            $input\r\n              .prop('indeterminate', true)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          determinate: function() {\r\n            module.verbose('Removing indeterminate class');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n            ;\r\n            if( module.is.determinate() ) {\r\n              module.debug('Input is already determinate, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to determinate');\r\n            $input\r\n              .prop('indeterminate', false)\r\n            ;\r\n          },\r\n          disabled: function() {\r\n            module.verbose('Setting class to disabled');\r\n            $module\r\n              .addClass(className.disabled)\r\n            ;\r\n            if( module.is.disabled() ) {\r\n              module.debug('Input is already disabled, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to disabled');\r\n            $input\r\n              .prop('disabled', 'disabled')\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          enabled: function() {\r\n            module.verbose('Removing disabled class');\r\n            $module.removeClass(className.disabled);\r\n            if( module.is.enabled() ) {\r\n              module.debug('Input is already enabled, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to enabled');\r\n            $input\r\n              .prop('disabled', false)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          tabbable: function() {\r\n            module.verbose('Adding tabindex to checkbox');\r\n            if( $input.attr('tabindex') === undefined) {\r\n              $input.attr('tabindex', 0);\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          }\r\n        },\r\n\r\n        trigger: {\r\n          change: function() {\r\n            var\r\n              events       = document.createEvent('HTMLEvents'),\r\n              inputElement = $input[0]\r\n            ;\r\n            if(inputElement) {\r\n              module.verbose('Triggering native change event');\r\n              events.initEvent('change', true, false);\r\n              inputElement.dispatchEvent(events);\r\n            }\r\n          }\r\n        },\r\n\r\n\r\n        create: {\r\n          label: function() {\r\n            if($input.prevAll(selector.label).length > 0) {\r\n              $input.prev(selector.label).detach().insertAfter($input);\r\n              module.debug('Moving existing label', $label);\r\n            }\r\n            else if( !module.has.label() ) {\r\n              $label = $('<label>').insertAfter($input);\r\n              module.debug('Creating label', $label);\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          label: function() {\r\n            return ($label.length > 0);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Attaching checkbox events');\r\n            $module\r\n              .on('click'   + eventNamespace, module.event.click)\r\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\r\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            module.debug('Removing events');\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        uncheckOthers: function() {\r\n          var\r\n            $radios = module.get.otherRadios()\r\n          ;\r\n          module.debug('Unchecking other radios', $radios);\r\n          $radios.removeClass(className.checked);\r\n        },\r\n\r\n        toggle: function() {\r\n          if( !module.can.change() ) {\r\n            if(!module.is.radio()) {\r\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\r\n            }\r\n            return;\r\n          }\r\n          if( module.is.indeterminate() || module.is.unchecked() ) {\r\n            module.debug('Currently unchecked');\r\n            module.check();\r\n          }\r\n          else if( module.is.checked() && module.can.uncheck() ) {\r\n            module.debug('Currently checked');\r\n            module.uncheck();\r\n          }\r\n        },\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.checkbox.settings = {\r\n\r\n  name                : 'Checkbox',\r\n  namespace           : 'checkbox',\r\n\r\n  silent              : false,\r\n  debug               : false,\r\n  verbose             : true,\r\n  performance         : true,\r\n\r\n  // delegated event context\r\n  uncheckable         : 'auto',\r\n  fireOnInit          : false,\r\n\r\n  onChange            : function(){},\r\n\r\n  beforeChecked       : function(){},\r\n  beforeUnchecked     : function(){},\r\n  beforeDeterminate   : function(){},\r\n  beforeIndeterminate : function(){},\r\n\r\n  onChecked           : function(){},\r\n  onUnchecked         : function(){},\r\n\r\n  onDeterminate       : function() {},\r\n  onIndeterminate     : function() {},\r\n\r\n  onEnable            : function(){},\r\n  onDisable           : function(){},\r\n\r\n  // preserve misspelled callbacks (will be removed in 3.0)\r\n  onEnabled           : function(){},\r\n  onDisabled          : function(){},\r\n\r\n  className       : {\r\n    checked       : 'checked',\r\n    indeterminate : 'indeterminate',\r\n    disabled      : 'disabled',\r\n    hidden        : 'hidden',\r\n    radio         : 'radio',\r\n    readOnly      : 'read-only'\r\n  },\r\n\r\n  error     : {\r\n    method       : 'The method you called is not defined'\r\n  },\r\n\r\n  selector : {\r\n    checkbox : '.ui.checkbox',\r\n    label    : 'label, .box',\r\n    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\r\n    link     : 'a[href]'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Dimmer\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.dimmer = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\r\n          : $.extend({}, $.fn.dimmer.settings),\r\n\r\n        selector        = settings.selector,\r\n        namespace       = settings.namespace,\r\n        className       = settings.className,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n        moduleSelector  = $allModules.selector || '',\r\n\r\n        clickEvent      = ('ontouchstart' in document.documentElement)\r\n          ? 'touchstart'\r\n          : 'click',\r\n\r\n        $module = $(this),\r\n        $dimmer,\r\n        $dimmable,\r\n\r\n        element   = this,\r\n        instance  = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        preinitialize: function() {\r\n          if( module.is.dimmer() ) {\r\n\r\n            $dimmable = $module.parent();\r\n            $dimmer   = $module;\r\n          }\r\n          else {\r\n            $dimmable = $module;\r\n            if( module.has.dimmer() ) {\r\n              if(settings.dimmerName) {\r\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\r\n              }\r\n              else {\r\n                $dimmer = $dimmable.find(selector.dimmer);\r\n              }\r\n            }\r\n            else {\r\n              $dimmer = module.create();\r\n            }\r\n            module.set.variation();\r\n          }\r\n        },\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing dimmer', settings);\r\n\r\n          module.bind.events();\r\n          module.set.dimmable();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', $dimmer);\r\n          module.unbind.events();\r\n          module.remove.variation();\r\n          $dimmable\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if(settings.on == 'hover') {\r\n              $dimmable\r\n                .on('mouseenter' + eventNamespace, module.show)\r\n                .on('mouseleave' + eventNamespace, module.hide)\r\n              ;\r\n            }\r\n            else if(settings.on == 'click') {\r\n              $dimmable\r\n                .on(clickEvent + eventNamespace, module.toggle)\r\n              ;\r\n            }\r\n            if( module.is.page() ) {\r\n              module.debug('Setting as a page dimmer', $dimmable);\r\n              module.set.pageDimmer();\r\n            }\r\n\r\n            if( module.is.closable() ) {\r\n              module.verbose('Adding dimmer close event', $dimmer);\r\n              $dimmable\r\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            $module\r\n              .removeData(moduleNamespace)\r\n            ;\r\n            $dimmable\r\n              .off(eventNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            module.verbose('Determining if event occured on dimmer', event);\r\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\r\n              module.hide();\r\n              event.stopImmediatePropagation();\r\n            }\r\n          }\r\n        },\r\n\r\n        addContent: function(element) {\r\n          var\r\n            $content = $(element)\r\n          ;\r\n          module.debug('Add content to dimmer', $content);\r\n          if($content.parent()[0] !== $dimmer[0]) {\r\n            $content.detach().appendTo($dimmer);\r\n          }\r\n        },\r\n\r\n        create: function() {\r\n          var\r\n            $element = $( settings.template.dimmer() )\r\n          ;\r\n          if(settings.dimmerName) {\r\n            module.debug('Creating named dimmer', settings.dimmerName);\r\n            $element.addClass(settings.dimmerName);\r\n          }\r\n          $element\r\n            .appendTo($dimmable)\r\n          ;\r\n          return $element;\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.debug('Showing dimmer', $dimmer, settings);\r\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\r\n            module.animate.show(callback);\r\n            settings.onShow.call(element);\r\n            settings.onChange.call(element);\r\n          }\r\n          else {\r\n            module.debug('Dimmer is already shown or disabled');\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.dimmed() || module.is.animating() ) {\r\n            module.debug('Hiding dimmer', $dimmer);\r\n            module.animate.hide(callback);\r\n            settings.onHide.call(element);\r\n            settings.onChange.call(element);\r\n          }\r\n          else {\r\n            module.debug('Dimmer is not visible');\r\n          }\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Toggling dimmer visibility', $dimmer);\r\n          if( !module.is.dimmed() ) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        animate: {\r\n          show: function(callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\r\n              if(settings.opacity !== 'auto') {\r\n                module.set.opacity();\r\n              }\r\n              $dimmer\r\n                .transition({\r\n                  animation   : settings.transition + ' in',\r\n                  queue       : false,\r\n                  duration    : module.get.duration(),\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    module.set.dimmed();\r\n                  },\r\n                  onComplete  : function() {\r\n                    module.set.active();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Showing dimmer animation with javascript');\r\n              module.set.dimmed();\r\n              if(settings.opacity == 'auto') {\r\n                settings.opacity = 0.8;\r\n              }\r\n              $dimmer\r\n                .stop()\r\n                .css({\r\n                  opacity : 0,\r\n                  width   : '100%',\r\n                  height  : '100%'\r\n                })\r\n                .fadeTo(module.get.duration(), settings.opacity, function() {\r\n                  $dimmer.removeAttr('style');\r\n                  module.set.active();\r\n                  callback();\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          hide: function(callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\r\n              module.verbose('Hiding dimmer with css');\r\n              $dimmer\r\n                .transition({\r\n                  animation   : settings.transition + ' out',\r\n                  queue       : false,\r\n                  duration    : module.get.duration(),\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    module.remove.dimmed();\r\n                  },\r\n                  onComplete  : function() {\r\n                    module.remove.active();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Hiding dimmer with javascript');\r\n              module.remove.dimmed();\r\n              $dimmer\r\n                .stop()\r\n                .fadeOut(module.get.duration(), function() {\r\n                  module.remove.active();\r\n                  $dimmer.removeAttr('style');\r\n                  callback();\r\n                })\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        get: {\r\n          dimmer: function() {\r\n            return $dimmer;\r\n          },\r\n          duration: function() {\r\n            if(typeof settings.duration == 'object') {\r\n              if( module.is.active() ) {\r\n                return settings.duration.hide;\r\n              }\r\n              else {\r\n                return settings.duration.show;\r\n              }\r\n            }\r\n            return settings.duration;\r\n          }\r\n        },\r\n\r\n        has: {\r\n          dimmer: function() {\r\n            if(settings.dimmerName) {\r\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\r\n            }\r\n            else {\r\n              return ( $module.find(selector.dimmer).length > 0 );\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $dimmer.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\r\n          },\r\n          closable: function() {\r\n            if(settings.closable == 'auto') {\r\n              if(settings.on == 'hover') {\r\n                return false;\r\n              }\r\n              return true;\r\n            }\r\n            return settings.closable;\r\n          },\r\n          dimmer: function() {\r\n            return $module.hasClass(className.dimmer);\r\n          },\r\n          dimmable: function() {\r\n            return $module.hasClass(className.dimmable);\r\n          },\r\n          dimmed: function() {\r\n            return $dimmable.hasClass(className.dimmed);\r\n          },\r\n          disabled: function() {\r\n            return $dimmable.hasClass(className.disabled);\r\n          },\r\n          enabled: function() {\r\n            return !module.is.disabled();\r\n          },\r\n          page: function () {\r\n            return $dimmable.is('body');\r\n          },\r\n          pageDimmer: function() {\r\n            return $dimmer.hasClass(className.pageDimmer);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          show: function() {\r\n            return !$dimmer.hasClass(className.disabled);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          opacity: function(opacity) {\r\n            var\r\n              color      = $dimmer.css('background-color'),\r\n              colorArray = color.split(','),\r\n              isRGB      = (colorArray && colorArray.length == 3),\r\n              isRGBA     = (colorArray && colorArray.length == 4)\r\n            ;\r\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\r\n            if(isRGB || isRGBA) {\r\n              colorArray[3] = opacity + ')';\r\n              color         = colorArray.join(',');\r\n            }\r\n            else {\r\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\r\n            }\r\n            module.debug('Setting opacity to', opacity);\r\n            $dimmer.css('background-color', color);\r\n          },\r\n          active: function() {\r\n            $dimmer.addClass(className.active);\r\n          },\r\n          dimmable: function() {\r\n            $dimmable.addClass(className.dimmable);\r\n          },\r\n          dimmed: function() {\r\n            $dimmable.addClass(className.dimmed);\r\n          },\r\n          pageDimmer: function() {\r\n            $dimmer.addClass(className.pageDimmer);\r\n          },\r\n          disabled: function() {\r\n            $dimmer.addClass(className.disabled);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || settings.variation;\r\n            if(variation) {\r\n              $dimmer.addClass(variation);\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $dimmer\r\n              .removeClass(className.active)\r\n            ;\r\n          },\r\n          dimmed: function() {\r\n            $dimmable.removeClass(className.dimmed);\r\n          },\r\n          disabled: function() {\r\n            $dimmer.removeClass(className.disabled);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || settings.variation;\r\n            if(variation) {\r\n              $dimmer.removeClass(variation);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      module.preinitialize();\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.dimmer.settings = {\r\n\r\n  name        : 'Dimmer',\r\n  namespace   : 'dimmer',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  // name to distinguish between multiple dimmers in context\r\n  dimmerName  : false,\r\n\r\n  // whether to add a variation type\r\n  variation   : false,\r\n\r\n  // whether to bind close events\r\n  closable    : 'auto',\r\n\r\n  // whether to use css animations\r\n  useCSS      : true,\r\n\r\n  // css animation to use\r\n  transition  : 'fade',\r\n\r\n  // event to bind to\r\n  on          : false,\r\n\r\n  // overriding opacity value\r\n  opacity     : 'auto',\r\n\r\n  // transition durations\r\n  duration    : {\r\n    show : 500,\r\n    hide : 500\r\n  },\r\n\r\n  onChange    : function(){},\r\n  onShow      : function(){},\r\n  onHide      : function(){},\r\n\r\n  error   : {\r\n    method   : 'The method you called is not defined.'\r\n  },\r\n\r\n  className : {\r\n    active     : 'active',\r\n    animating  : 'animating',\r\n    dimmable   : 'dimmable',\r\n    dimmed     : 'dimmed',\r\n    dimmer     : 'dimmer',\r\n    disabled   : 'disabled',\r\n    hide       : 'hide',\r\n    pageDimmer : 'page',\r\n    show       : 'show'\r\n  },\r\n\r\n  selector: {\r\n    dimmer   : '> .ui.dimmer',\r\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\r\n  },\r\n\r\n  template: {\r\n    dimmer: function() {\r\n     return $('<div />').attr('class', 'ui dimmer');\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Dropdown\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.dropdown = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $document      = $(document),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    hasTouch       = ('ontouchstart' in document.documentElement),\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function(elementIndex) {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\r\n          : $.extend({}, $.fn.dropdown.settings),\r\n\r\n        className       = settings.className,\r\n        message         = settings.message,\r\n        fields          = settings.fields,\r\n        keys            = settings.keys,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        regExp          = settings.regExp,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        templates       = settings.templates,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n        $text           = $module.find(selector.text),\r\n        $search         = $module.find(selector.search),\r\n        $sizer          = $module.find(selector.sizer),\r\n        $input          = $module.find(selector.input),\r\n        $icon           = $module.find(selector.icon),\r\n\r\n        $combo = ($module.prev().find(selector.text).length > 0)\r\n          ? $module.prev().find(selector.text)\r\n          : $module.prev(),\r\n\r\n        $menu           = $module.children(selector.menu),\r\n        $item           = $menu.find(selector.item),\r\n\r\n        activated       = false,\r\n        itemActivated   = false,\r\n        internalChange  = false,\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        initialLoad,\r\n        pageLostFocus,\r\n        willRefocus,\r\n        elementNamespace,\r\n        id,\r\n        selectObserver,\r\n        menuObserver,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing dropdown', settings);\r\n\r\n          if( module.is.alreadySetup() ) {\r\n            module.setup.reference();\r\n          }\r\n          else {\r\n            module.setup.layout();\r\n            module.refreshData();\r\n\r\n            module.save.defaults();\r\n            module.restore.selected();\r\n\r\n            module.create.id();\r\n            module.bind.events();\r\n\r\n            module.observeChanges();\r\n            module.instantiate();\r\n          }\r\n\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of dropdown', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous dropdown', $module);\r\n          module.remove.tabbable();\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n          $menu\r\n            .off(eventNamespace)\r\n          ;\r\n          $document\r\n            .off(elementNamespace)\r\n          ;\r\n          module.disconnect.menuObserver();\r\n          module.disconnect.selectObserver();\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            selectObserver = new MutationObserver(module.event.select.mutation);\r\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\r\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\r\n            module.observe.select();\r\n            module.observe.menu();\r\n          }\r\n        },\r\n\r\n        disconnect: {\r\n          menuObserver: function() {\r\n            if(menuObserver) {\r\n              menuObserver.disconnect();\r\n            }\r\n          },\r\n          selectObserver: function() {\r\n            if(selectObserver) {\r\n              selectObserver.disconnect();\r\n            }\r\n          }\r\n        },\r\n        observe: {\r\n          select: function() {\r\n            if(module.has.input()) {\r\n              selectObserver.observe($input[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          },\r\n          menu: function() {\r\n            if(module.has.menu()) {\r\n              menuObserver.observe($menu[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        create: {\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\r\n            elementNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          },\r\n          userChoice: function(values) {\r\n            var\r\n              $userChoices,\r\n              $userChoice,\r\n              isUserValue,\r\n              html\r\n            ;\r\n            values = values || module.get.userValues();\r\n            if(!values) {\r\n              return false;\r\n            }\r\n            values = $.isArray(values)\r\n              ? values\r\n              : [values]\r\n            ;\r\n            $.each(values, function(index, value) {\r\n              if(module.get.item(value) === false) {\r\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\r\n                $userChoice  = $('<div />')\r\n                  .html(html)\r\n                  .attr('data-' + metadata.value, value)\r\n                  .attr('data-' + metadata.text, value)\r\n                  .addClass(className.addition)\r\n                  .addClass(className.item)\r\n                ;\r\n                if(settings.hideAdditions) {\r\n                  $userChoice.addClass(className.hidden);\r\n                }\r\n                $userChoices = ($userChoices === undefined)\r\n                  ? $userChoice\r\n                  : $userChoices.add($userChoice)\r\n                ;\r\n                module.verbose('Creating user choices for value', value, $userChoice);\r\n              }\r\n            });\r\n            return $userChoices;\r\n          },\r\n          userLabels: function(value) {\r\n            var\r\n              userValues = module.get.userValues()\r\n            ;\r\n            if(userValues) {\r\n              module.debug('Adding user labels', userValues);\r\n              $.each(userValues, function(index, value) {\r\n                module.verbose('Adding custom user value');\r\n                module.add.label(value, value);\r\n              });\r\n            }\r\n          },\r\n          menu: function() {\r\n            $menu = $('<div />')\r\n              .addClass(className.menu)\r\n              .appendTo($module)\r\n            ;\r\n          },\r\n          sizer: function() {\r\n            $sizer = $('<span />')\r\n              .addClass(className.sizer)\r\n              .insertAfter($search)\r\n            ;\r\n          }\r\n        },\r\n\r\n        search: function(query) {\r\n          query = (query !== undefined)\r\n            ? query\r\n            : module.get.query()\r\n          ;\r\n          module.verbose('Searching for query', query);\r\n          if(module.has.minCharacters(query)) {\r\n            module.filter(query);\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        select: {\r\n          firstUnfiltered: function() {\r\n            module.verbose('Selecting first non-filtered element');\r\n            module.remove.selectedItem();\r\n            $item\r\n              .not(selector.unselectable)\r\n              .not(selector.addition + selector.hidden)\r\n                .eq(0)\r\n                .addClass(className.selected)\r\n            ;\r\n          },\r\n          nextAvailable: function($selected) {\r\n            $selected = $selected.eq(0);\r\n            var\r\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\r\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\r\n              hasNext        = ($nextAvailable.length > 0)\r\n            ;\r\n            if(hasNext) {\r\n              module.verbose('Moving selection to', $nextAvailable);\r\n              $nextAvailable.addClass(className.selected);\r\n            }\r\n            else {\r\n              module.verbose('Moving selection to', $prevAvailable);\r\n              $prevAvailable.addClass(className.selected);\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          api: function() {\r\n            var\r\n              apiSettings = {\r\n                debug   : settings.debug,\r\n                urlData : {\r\n                  value : module.get.value(),\r\n                  query : module.get.query()\r\n                },\r\n                on    : false\r\n              }\r\n            ;\r\n            module.verbose('First request, initializing API');\r\n            $module\r\n              .api(apiSettings)\r\n            ;\r\n          },\r\n          layout: function() {\r\n            if( $module.is('select') ) {\r\n              module.setup.select();\r\n              module.setup.returnedObject();\r\n            }\r\n            if( !module.has.menu() ) {\r\n              module.create.menu();\r\n            }\r\n            if( module.is.search() && !module.has.search() ) {\r\n              module.verbose('Adding search input');\r\n              $search = $('<input />')\r\n                .addClass(className.search)\r\n                .prop('autocomplete', 'off')\r\n                .insertBefore($text)\r\n              ;\r\n            }\r\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\r\n              module.create.sizer();\r\n            }\r\n            if(settings.allowTab) {\r\n              module.set.tabbable();\r\n            }\r\n          },\r\n          select: function() {\r\n            var\r\n              selectValues  = module.get.selectValues()\r\n            ;\r\n            module.debug('Dropdown initialized on a select', selectValues);\r\n            if( $module.is('select') ) {\r\n              $input = $module;\r\n            }\r\n            // see if select is placed correctly already\r\n            if($input.parent(selector.dropdown).length > 0) {\r\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\r\n              $module = $input.closest(selector.dropdown);\r\n              if( !module.has.menu() ) {\r\n                module.create.menu();\r\n              }\r\n              $menu = $module.children(selector.menu);\r\n              module.setup.menu(selectValues);\r\n            }\r\n            else {\r\n              module.debug('Creating entire dropdown from select');\r\n              $module = $('<div />')\r\n                .attr('class', $input.attr('class') )\r\n                .addClass(className.selection)\r\n                .addClass(className.dropdown)\r\n                .html( templates.dropdown(selectValues) )\r\n                .insertBefore($input)\r\n              ;\r\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\r\n                module.error(error.missingMultiple);\r\n                $input.prop('multiple', true);\r\n              }\r\n              if($input.is('[multiple]')) {\r\n                module.set.multiple();\r\n              }\r\n              if ($input.prop('disabled')) {\r\n                module.debug('Disabling dropdown');\r\n                $module.addClass(className.disabled);\r\n              }\r\n              $input\r\n                .removeAttr('class')\r\n                .detach()\r\n                .prependTo($module)\r\n              ;\r\n            }\r\n            module.refresh();\r\n          },\r\n          menu: function(values) {\r\n            $menu.html( templates.menu(values, fields));\r\n            $item = $menu.find(selector.item);\r\n          },\r\n          reference: function() {\r\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\r\n            // replace module reference\r\n            $module = $module.parent(selector.dropdown);\r\n            module.refresh();\r\n            module.setup.returnedObject();\r\n            // invoke method in context of current instance\r\n            if(methodInvoked) {\r\n              instance = module;\r\n              module.invoke(query);\r\n            }\r\n          },\r\n          returnedObject: function() {\r\n            var\r\n              $firstModules = $allModules.slice(0, elementIndex),\r\n              $lastModules = $allModules.slice(elementIndex + 1)\r\n            ;\r\n            // adjust all modules to use correct reference\r\n            $allModules = $firstModules.add($module).add($lastModules);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.refreshSelectors();\r\n          module.refreshData();\r\n        },\r\n\r\n        refreshItems: function() {\r\n          $item = $menu.find(selector.item);\r\n        },\r\n\r\n        refreshSelectors: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $text   = $module.find(selector.text);\r\n          $search = $module.find(selector.search);\r\n          $input  = $module.find(selector.input);\r\n          $icon   = $module.find(selector.icon);\r\n          $combo  = ($module.prev().find(selector.text).length > 0)\r\n            ? $module.prev().find(selector.text)\r\n            : $module.prev()\r\n          ;\r\n          $menu    = $module.children(selector.menu);\r\n          $item    = $menu.find(selector.item);\r\n        },\r\n\r\n        refreshData: function() {\r\n          module.verbose('Refreshing cached metadata');\r\n          $item\r\n            .removeData(metadata.text)\r\n            .removeData(metadata.value)\r\n          ;\r\n        },\r\n\r\n        clearData: function() {\r\n          module.verbose('Clearing metadata');\r\n          $item\r\n            .removeData(metadata.text)\r\n            .removeData(metadata.value)\r\n          ;\r\n          $module\r\n            .removeData(metadata.defaultText)\r\n            .removeData(metadata.defaultValue)\r\n            .removeData(metadata.placeholderText)\r\n          ;\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Toggling menu visibility');\r\n          if( !module.is.active() ) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(!module.can.show() && module.is.remote()) {\r\n            module.debug('No API results retrieved, searching before show');\r\n            module.queryRemote(module.get.query(), module.show);\r\n          }\r\n          if( module.can.show() && !module.is.active() ) {\r\n            module.debug('Showing dropdown');\r\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\r\n              module.remove.message();\r\n            }\r\n            if(module.is.allFiltered()) {\r\n              return true;\r\n            }\r\n            if(settings.onShow.call(element) !== false) {\r\n              module.animate.show(function() {\r\n                if( module.can.click() ) {\r\n                  module.bind.intent();\r\n                }\r\n                if(module.has.menuSearch()) {\r\n                  module.focusSearch();\r\n                }\r\n                module.set.visible();\r\n                callback.call(element);\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.active() ) {\r\n            module.debug('Hiding dropdown');\r\n            if(settings.onHide.call(element) !== false) {\r\n              module.animate.hide(function() {\r\n                module.remove.visible();\r\n                callback.call(element);\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        hideOthers: function() {\r\n          module.verbose('Finding other dropdowns to hide');\r\n          $allModules\r\n            .not($module)\r\n              .has(selector.menu + '.' + className.visible)\r\n                .dropdown('hide')\r\n          ;\r\n        },\r\n\r\n        hideMenu: function() {\r\n          module.verbose('Hiding menu  instantaneously');\r\n          module.remove.active();\r\n          module.remove.visible();\r\n          $menu.transition('hide');\r\n        },\r\n\r\n        hideSubMenus: function() {\r\n          var\r\n            $subMenus = $menu.children(selector.item).find(selector.menu)\r\n          ;\r\n          module.verbose('Hiding sub menus', $subMenus);\r\n          $subMenus.transition('hide');\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if(hasTouch) {\r\n              module.bind.touchEvents();\r\n            }\r\n            module.bind.keyboardEvents();\r\n            module.bind.inputEvents();\r\n            module.bind.mouseEvents();\r\n          },\r\n          touchEvents: function() {\r\n            module.debug('Touch device detected binding additional touch events');\r\n            if( module.is.searchSelection() ) {\r\n              // do nothing special yet\r\n            }\r\n            else if( module.is.single() ) {\r\n              $module\r\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\r\n              ;\r\n            }\r\n            $menu\r\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\r\n            ;\r\n          },\r\n          keyboardEvents: function() {\r\n            module.verbose('Binding keyboard events');\r\n            $module\r\n              .on('keydown' + eventNamespace, module.event.keydown)\r\n            ;\r\n            if( module.has.search() ) {\r\n              $module\r\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\r\n              ;\r\n            }\r\n            if( module.is.multiple() ) {\r\n              $document\r\n                .on('keydown' + elementNamespace, module.event.document.keydown)\r\n              ;\r\n            }\r\n          },\r\n          inputEvents: function() {\r\n            module.verbose('Binding input change events');\r\n            $module\r\n              .on('change' + eventNamespace, selector.input, module.event.change)\r\n            ;\r\n          },\r\n          mouseEvents: function() {\r\n            module.verbose('Binding mouse events');\r\n            if(module.is.multiple()) {\r\n              $module\r\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\r\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\r\n              ;\r\n            }\r\n            if( module.is.searchSelection() ) {\r\n              $module\r\n                .on('mousedown' + eventNamespace, module.event.mousedown)\r\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\r\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\r\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\r\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\r\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\r\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\r\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\r\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\r\n              ;\r\n              if(module.is.multiple()) {\r\n                $module\r\n                  .on('click' + eventNamespace, module.event.click)\r\n                ;\r\n              }\r\n            }\r\n            else {\r\n              if(settings.on == 'click') {\r\n                $module\r\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\r\n                  .on('click' + eventNamespace, module.event.test.toggle)\r\n                ;\r\n              }\r\n              else if(settings.on == 'hover') {\r\n                $module\r\n                  .on('mouseenter' + eventNamespace, module.delay.show)\r\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .on(settings.on + eventNamespace, module.toggle)\r\n                ;\r\n              }\r\n              $module\r\n                .on('mousedown' + eventNamespace, module.event.mousedown)\r\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\r\n                .on('focus'     + eventNamespace, module.event.focus)\r\n              ;\r\n              if(module.has.menuSearch() ) {\r\n                $module\r\n                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .on('blur' + eventNamespace, module.event.blur)\r\n                ;\r\n              }\r\n            }\r\n            $menu\r\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\r\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\r\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\r\n            ;\r\n          },\r\n          intent: function() {\r\n            module.verbose('Binding hide intent event to document');\r\n            if(hasTouch) {\r\n              $document\r\n                .on('touchstart' + elementNamespace, module.event.test.touch)\r\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\r\n              ;\r\n            }\r\n            $document\r\n              .on('click' + elementNamespace, module.event.test.hide)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          intent: function() {\r\n            module.verbose('Removing hide intent event from document');\r\n            if(hasTouch) {\r\n              $document\r\n                .off('touchstart' + elementNamespace)\r\n                .off('touchmove' + elementNamespace)\r\n              ;\r\n            }\r\n            $document\r\n              .off('click' + elementNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        filter: function(query) {\r\n          var\r\n            searchTerm = (query !== undefined)\r\n              ? query\r\n              : module.get.query(),\r\n            afterFiltered = function() {\r\n              if(module.is.multiple()) {\r\n                module.filterActive();\r\n              }\r\n              module.select.firstUnfiltered();\r\n              if( module.has.allResultsFiltered() ) {\r\n                if( settings.onNoResults.call(element, searchTerm) ) {\r\n                  if(settings.allowAdditions) {\r\n                    if(settings.hideAdditions) {\r\n                      module.verbose('User addition with no menu, setting empty style');\r\n                      module.set.empty();\r\n                      module.hideMenu();\r\n                    }\r\n                  }\r\n                  else {\r\n                    module.verbose('All items filtered, showing message', searchTerm);\r\n                    module.add.message(message.noResults);\r\n                  }\r\n                }\r\n                else {\r\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\r\n                  module.hideMenu();\r\n                }\r\n              }\r\n              else {\r\n                module.remove.empty();\r\n                module.remove.message();\r\n              }\r\n              if(settings.allowAdditions) {\r\n                module.add.userSuggestion(query);\r\n              }\r\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\r\n                module.show();\r\n              }\r\n            }\r\n          ;\r\n          if(settings.useLabels && module.has.maxSelections()) {\r\n            return;\r\n          }\r\n          if(settings.apiSettings) {\r\n            if( module.can.useAPI() ) {\r\n              module.queryRemote(searchTerm, function() {\r\n                if(settings.filterRemoteData) {\r\n                  module.filterItems(searchTerm);\r\n                }\r\n                afterFiltered();\r\n              });\r\n            }\r\n            else {\r\n              module.error(error.noAPI);\r\n            }\r\n          }\r\n          else {\r\n            module.filterItems(searchTerm);\r\n            afterFiltered();\r\n          }\r\n        },\r\n\r\n        queryRemote: function(query, callback) {\r\n          var\r\n            apiSettings = {\r\n              errorDuration : false,\r\n              cache         : 'local',\r\n              throttle      : settings.throttle,\r\n              urlData       : {\r\n                query: query\r\n              },\r\n              onError: function() {\r\n                module.add.message(message.serverError);\r\n                callback();\r\n              },\r\n              onFailure: function() {\r\n                module.add.message(message.serverError);\r\n                callback();\r\n              },\r\n              onSuccess : function(response) {\r\n                module.remove.message();\r\n                module.setup.menu({\r\n                  values: response[fields.remoteValues]\r\n                });\r\n                callback();\r\n              }\r\n            }\r\n          ;\r\n          if( !$module.api('get request') ) {\r\n            module.setup.api();\r\n          }\r\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\r\n          $module\r\n            .api('setting', apiSettings)\r\n            .api('query')\r\n          ;\r\n        },\r\n\r\n        filterItems: function(query) {\r\n          var\r\n            searchTerm = (query !== undefined)\r\n              ? query\r\n              : module.get.query(),\r\n            results          =  null,\r\n            escapedTerm      = module.escape.string(searchTerm),\r\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\r\n          ;\r\n          // avoid loop if we're matching nothing\r\n          if( module.has.query() ) {\r\n            results = [];\r\n\r\n            module.verbose('Searching for matching values', searchTerm);\r\n            $item\r\n              .each(function(){\r\n                var\r\n                  $choice = $(this),\r\n                  text,\r\n                  value\r\n                ;\r\n                if(settings.match == 'both' || settings.match == 'text') {\r\n                  text = String(module.get.choiceText($choice, false));\r\n                  if(text.search(beginsWithRegExp) !== -1) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                }\r\n                if(settings.match == 'both' || settings.match == 'value') {\r\n                  value = String(module.get.choiceValue($choice, text));\r\n                  if(value.search(beginsWithRegExp) !== -1) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                }\r\n              })\r\n            ;\r\n          }\r\n          module.debug('Showing only matched items', searchTerm);\r\n          module.remove.filteredItem();\r\n          if(results) {\r\n            $item\r\n              .not(results)\r\n              .addClass(className.filtered)\r\n            ;\r\n          }\r\n        },\r\n\r\n        fuzzySearch: function(query, term) {\r\n          var\r\n            termLength  = term.length,\r\n            queryLength = query.length\r\n          ;\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(queryLength > termLength) {\r\n            return false;\r\n          }\r\n          if(queryLength === termLength) {\r\n            return (query === term);\r\n          }\r\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\r\n            var\r\n              queryCharacter = query.charCodeAt(characterIndex)\r\n            ;\r\n            while(nextCharacterIndex < termLength) {\r\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\r\n                continue search;\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n        exactSearch: function (query, term) {\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(term.indexOf(query) > -1) {\r\n             return true;\r\n          }\r\n          return false;\r\n        },\r\n        filterActive: function() {\r\n          if(settings.useLabels) {\r\n            $item.filter('.' + className.active)\r\n              .addClass(className.filtered)\r\n            ;\r\n          }\r\n        },\r\n\r\n        focusSearch: function(skipHandler) {\r\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\r\n            if(skipHandler) {\r\n              $module.off('focus' + eventNamespace, selector.search);\r\n              $search.focus();\r\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\r\n            }\r\n            else {\r\n              $search.focus();\r\n            }\r\n          }\r\n        },\r\n\r\n        forceSelection: function() {\r\n          var\r\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\r\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\r\n            $selectedItem      = ($currentlySelected.length > 0)\r\n              ? $currentlySelected\r\n              : $activeItem,\r\n            hasSelected = ($selectedItem.length > 0)\r\n          ;\r\n          if(hasSelected && !module.is.multiple()) {\r\n            module.debug('Forcing partial selection to selected item', $selectedItem);\r\n            module.event.item.click.call($selectedItem, {}, true);\r\n            return;\r\n          }\r\n          else {\r\n            if(settings.allowAdditions) {\r\n              module.set.selected(module.get.query());\r\n              module.remove.searchTerm();\r\n            }\r\n            else {\r\n              module.remove.searchTerm();\r\n            }\r\n          }\r\n        },\r\n\r\n        event: {\r\n          change: function() {\r\n            if(!internalChange) {\r\n              module.debug('Input changed, updating selection');\r\n              module.set.selected();\r\n            }\r\n          },\r\n          focus: function() {\r\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\r\n              module.show();\r\n            }\r\n          },\r\n          blur: function(event) {\r\n            pageLostFocus = (document.activeElement === this);\r\n            if(!activated && !pageLostFocus) {\r\n              module.remove.activeLabel();\r\n              module.hide();\r\n            }\r\n          },\r\n          mousedown: function() {\r\n            if(module.is.searchSelection()) {\r\n              // prevent menu hiding on immediate re-focus\r\n              willRefocus = true;\r\n            }\r\n            else {\r\n              // prevents focus callback from occurring on mousedown\r\n              activated = true;\r\n            }\r\n          },\r\n          mouseup: function() {\r\n            if(module.is.searchSelection()) {\r\n              // prevent menu hiding on immediate re-focus\r\n              willRefocus = false;\r\n            }\r\n            else {\r\n              activated = false;\r\n            }\r\n          },\r\n          click: function(event) {\r\n            var\r\n              $target = $(event.target)\r\n            ;\r\n            // focus search\r\n            if($target.is($module)) {\r\n              if(!module.is.focusedOnSearch()) {\r\n                module.focusSearch();\r\n              }\r\n              else {\r\n                module.show();\r\n              }\r\n            }\r\n          },\r\n          search: {\r\n            focus: function() {\r\n              activated = true;\r\n              if(module.is.multiple()) {\r\n                module.remove.activeLabel();\r\n              }\r\n              if(settings.showOnFocus) {\r\n                module.search();\r\n              }\r\n            },\r\n            blur: function(event) {\r\n              pageLostFocus = (document.activeElement === this);\r\n              if(module.is.searchSelection() && !willRefocus) {\r\n                if(!itemActivated && !pageLostFocus) {\r\n                  if(settings.forceSelection) {\r\n                    module.forceSelection();\r\n                  }\r\n                  module.hide();\r\n                }\r\n              }\r\n              willRefocus = false;\r\n            }\r\n          },\r\n          icon: {\r\n            click: function(event) {\r\n              module.toggle();\r\n            }\r\n          },\r\n          text: {\r\n            focus: function(event) {\r\n              activated = true;\r\n              module.focusSearch();\r\n            }\r\n          },\r\n          input: function(event) {\r\n            if(module.is.multiple() || module.is.searchSelection()) {\r\n              module.set.filtered();\r\n            }\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.search, settings.delay.search);\r\n          },\r\n          label: {\r\n            click: function(event) {\r\n              var\r\n                $label        = $(this),\r\n                $labels       = $module.find(selector.label),\r\n                $activeLabels = $labels.filter('.' + className.active),\r\n                $nextActive   = $label.nextAll('.' + className.active),\r\n                $prevActive   = $label.prevAll('.' + className.active),\r\n                $range = ($nextActive.length > 0)\r\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\r\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\r\n              ;\r\n              if(event.shiftKey) {\r\n                $activeLabels.removeClass(className.active);\r\n                $range.addClass(className.active);\r\n              }\r\n              else if(event.ctrlKey) {\r\n                $label.toggleClass(className.active);\r\n              }\r\n              else {\r\n                $activeLabels.removeClass(className.active);\r\n                $label.addClass(className.active);\r\n              }\r\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\r\n            }\r\n          },\r\n          remove: {\r\n            click: function() {\r\n              var\r\n                $label = $(this).parent()\r\n              ;\r\n              if( $label.hasClass(className.active) ) {\r\n                // remove all selected labels\r\n                module.remove.activeLabels();\r\n              }\r\n              else {\r\n                // remove this label only\r\n                module.remove.activeLabels( $label );\r\n              }\r\n            }\r\n          },\r\n          test: {\r\n            toggle: function(event) {\r\n              var\r\n                toggleBehavior = (module.is.multiple())\r\n                  ? module.show\r\n                  : module.toggle\r\n              ;\r\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\r\n                return;\r\n              }\r\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\r\n                event.preventDefault();\r\n              }\r\n            },\r\n            touch: function(event) {\r\n              module.determine.eventOnElement(event, function() {\r\n                if(event.type == 'touchstart') {\r\n                  module.timer = setTimeout(function() {\r\n                    module.hide();\r\n                  }, settings.delay.touch);\r\n                }\r\n                else if(event.type == 'touchmove') {\r\n                  clearTimeout(module.timer);\r\n                }\r\n              });\r\n              event.stopPropagation();\r\n            },\r\n            hide: function(event) {\r\n              module.determine.eventInModule(event, module.hide);\r\n            }\r\n          },\r\n          select: {\r\n            mutation: function(mutations) {\r\n              module.debug('<select> modified, recreating menu');\r\n              module.setup.select();\r\n            }\r\n          },\r\n          menu: {\r\n            mutation: function(mutations) {\r\n              var\r\n                mutation   = mutations[0],\r\n                $addedNode = mutation.addedNodes\r\n                  ? $(mutation.addedNodes[0])\r\n                  : $(false),\r\n                $removedNode = mutation.removedNodes\r\n                  ? $(mutation.removedNodes[0])\r\n                  : $(false),\r\n                $changedNodes  = $addedNode.add($removedNode),\r\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\r\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\r\n              ;\r\n              if(isUserAddition || isMessage) {\r\n                module.debug('Updating item selector cache');\r\n                module.refreshItems();\r\n              }\r\n              else {\r\n                module.debug('Menu modified, updating selector cache');\r\n                module.refresh();\r\n              }\r\n            },\r\n            mousedown: function() {\r\n              itemActivated = true;\r\n            },\r\n            mouseup: function() {\r\n              itemActivated = false;\r\n            }\r\n          },\r\n          item: {\r\n            mouseenter: function(event) {\r\n              var\r\n                $target        = $(event.target),\r\n                $item          = $(this),\r\n                $subMenu       = $item.children(selector.menu),\r\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\r\n                hasSubMenu     = ($subMenu.length > 0),\r\n                isBubbledEvent = ($subMenu.find($target).length > 0)\r\n              ;\r\n              if( !isBubbledEvent && hasSubMenu ) {\r\n                clearTimeout(module.itemTimer);\r\n                module.itemTimer = setTimeout(function() {\r\n                  module.verbose('Showing sub-menu', $subMenu);\r\n                  $.each($otherMenus, function() {\r\n                    module.animate.hide(false, $(this));\r\n                  });\r\n                  module.animate.show(false, $subMenu);\r\n                }, settings.delay.show);\r\n                event.preventDefault();\r\n              }\r\n            },\r\n            mouseleave: function(event) {\r\n              var\r\n                $subMenu = $(this).children(selector.menu)\r\n              ;\r\n              if($subMenu.length > 0) {\r\n                clearTimeout(module.itemTimer);\r\n                module.itemTimer = setTimeout(function() {\r\n                  module.verbose('Hiding sub-menu', $subMenu);\r\n                  module.animate.hide(false, $subMenu);\r\n                }, settings.delay.hide);\r\n              }\r\n            },\r\n            click: function (event, skipRefocus) {\r\n              var\r\n                $choice        = $(this),\r\n                $target        = (event)\r\n                  ? $(event.target)\r\n                  : $(''),\r\n                $subMenu       = $choice.find(selector.menu),\r\n                text           = module.get.choiceText($choice),\r\n                value          = module.get.choiceValue($choice, text),\r\n                hasSubMenu     = ($subMenu.length > 0),\r\n                isBubbledEvent = ($subMenu.find($target).length > 0)\r\n              ;\r\n              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\r\n              if(module.has.menuSearch()) {\r\n                $(document.activeElement).blur();\r\n              }\r\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\r\n                if(module.is.searchSelection()) {\r\n                  if(settings.allowAdditions) {\r\n                    module.remove.userAddition();\r\n                  }\r\n                  module.remove.searchTerm();\r\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\r\n                    module.focusSearch(true);\r\n                  }\r\n                }\r\n                if(!settings.useLabels) {\r\n                  module.remove.filteredItem();\r\n                  module.set.scrollPosition($choice);\r\n                }\r\n                module.determine.selectAction.call(this, text, value);\r\n              }\r\n            }\r\n          },\r\n\r\n          document: {\r\n            // label selection should occur even when element has no focus\r\n            keydown: function(event) {\r\n              var\r\n                pressedKey    = event.which,\r\n                isShortcutKey = module.is.inObject(pressedKey, keys)\r\n              ;\r\n              if(isShortcutKey) {\r\n                var\r\n                  $label            = $module.find(selector.label),\r\n                  $activeLabel      = $label.filter('.' + className.active),\r\n                  activeValue       = $activeLabel.data(metadata.value),\r\n                  labelIndex        = $label.index($activeLabel),\r\n                  labelCount        = $label.length,\r\n                  hasActiveLabel    = ($activeLabel.length > 0),\r\n                  hasMultipleActive = ($activeLabel.length > 1),\r\n                  isFirstLabel      = (labelIndex === 0),\r\n                  isLastLabel       = (labelIndex + 1 == labelCount),\r\n                  isSearch          = module.is.searchSelection(),\r\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\r\n                  isFocused         = module.is.focused(),\r\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\r\n                  $nextLabel\r\n                ;\r\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\r\n                  return;\r\n                }\r\n\r\n                if(pressedKey == keys.leftArrow) {\r\n                  // activate previous label\r\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\r\n                    module.verbose('Selecting previous label');\r\n                    $label.last().addClass(className.active);\r\n                  }\r\n                  else if(hasActiveLabel) {\r\n                    if(!event.shiftKey) {\r\n                      module.verbose('Selecting previous label');\r\n                      $label.removeClass(className.active);\r\n                    }\r\n                    else {\r\n                      module.verbose('Adding previous label to selection');\r\n                    }\r\n                    if(isFirstLabel && !hasMultipleActive) {\r\n                      $activeLabel.addClass(className.active);\r\n                    }\r\n                    else {\r\n                      $activeLabel.prev(selector.siblingLabel)\r\n                        .addClass(className.active)\r\n                        .end()\r\n                      ;\r\n                    }\r\n                    event.preventDefault();\r\n                  }\r\n                }\r\n                else if(pressedKey == keys.rightArrow) {\r\n                  // activate first label\r\n                  if(isFocused && !hasActiveLabel) {\r\n                    $label.first().addClass(className.active);\r\n                  }\r\n                  // activate next label\r\n                  if(hasActiveLabel) {\r\n                    if(!event.shiftKey) {\r\n                      module.verbose('Selecting next label');\r\n                      $label.removeClass(className.active);\r\n                    }\r\n                    else {\r\n                      module.verbose('Adding next label to selection');\r\n                    }\r\n                    if(isLastLabel) {\r\n                      if(isSearch) {\r\n                        if(!isFocusedOnSearch) {\r\n                          module.focusSearch();\r\n                        }\r\n                        else {\r\n                          $label.removeClass(className.active);\r\n                        }\r\n                      }\r\n                      else if(hasMultipleActive) {\r\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\r\n                      }\r\n                      else {\r\n                        $activeLabel.addClass(className.active);\r\n                      }\r\n                    }\r\n                    else {\r\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\r\n                    }\r\n                    event.preventDefault();\r\n                  }\r\n                }\r\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\r\n                  if(hasActiveLabel) {\r\n                    module.verbose('Removing active labels');\r\n                    if(isLastLabel) {\r\n                      if(isSearch && !isFocusedOnSearch) {\r\n                        module.focusSearch();\r\n                      }\r\n                    }\r\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\r\n                    module.remove.activeLabels($activeLabel);\r\n                    event.preventDefault();\r\n                  }\r\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\r\n                    module.verbose('Removing last label on input backspace');\r\n                    $activeLabel = $label.last().addClass(className.active);\r\n                    module.remove.activeLabels($activeLabel);\r\n                  }\r\n                }\r\n                else {\r\n                  $activeLabel.removeClass(className.active);\r\n                }\r\n              }\r\n            }\r\n          },\r\n\r\n          keydown: function(event) {\r\n            var\r\n              pressedKey    = event.which,\r\n              isShortcutKey = module.is.inObject(pressedKey, keys)\r\n            ;\r\n            if(isShortcutKey) {\r\n              var\r\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\r\n                $activeItem        = $menu.children('.' + className.active).eq(0),\r\n                $selectedItem      = ($currentlySelected.length > 0)\r\n                  ? $currentlySelected\r\n                  : $activeItem,\r\n                $visibleItems = ($selectedItem.length > 0)\r\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\r\n                  : $menu.children(':not(.' + className.filtered +')'),\r\n                $subMenu              = $selectedItem.children(selector.menu),\r\n                $parentMenu           = $selectedItem.closest(selector.menu),\r\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\r\n                hasSubMenu            = ($subMenu.length> 0),\r\n                hasSelectedItem       = ($selectedItem.length > 0),\r\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\r\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\r\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\r\n                $nextItem,\r\n                isSubMenuItem,\r\n                newIndex\r\n              ;\r\n              // allow selection with menu closed\r\n              if(isAdditionWithoutMenu) {\r\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\r\n                module.event.item.click.call($selectedItem, event);\r\n                if(module.is.searchSelection()) {\r\n                  module.remove.searchTerm();\r\n                }\r\n              }\r\n\r\n              // visible menu keyboard shortcuts\r\n              if( module.is.visible() ) {\r\n\r\n                // enter (select or open sub-menu)\r\n                if(pressedKey == keys.enter || delimiterPressed) {\r\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\r\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\r\n                    pressedKey = keys.rightArrow;\r\n                  }\r\n                  else if(selectedIsSelectable) {\r\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\r\n                    module.event.item.click.call($selectedItem, event);\r\n                    if(module.is.searchSelection()) {\r\n                      module.remove.searchTerm();\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // sub-menu actions\r\n                if(hasSelectedItem) {\r\n\r\n                  if(pressedKey == keys.leftArrow) {\r\n\r\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\r\n\r\n                    if(isSubMenuItem) {\r\n                      module.verbose('Left key pressed, closing sub-menu');\r\n                      module.animate.hide(false, $parentMenu);\r\n                      $selectedItem\r\n                        .removeClass(className.selected)\r\n                      ;\r\n                      $parentMenu\r\n                        .closest(selector.item)\r\n                          .addClass(className.selected)\r\n                      ;\r\n                      event.preventDefault();\r\n                    }\r\n                  }\r\n\r\n                  // right arrow (show sub-menu)\r\n                  if(pressedKey == keys.rightArrow) {\r\n                    if(hasSubMenu) {\r\n                      module.verbose('Right key pressed, opening sub-menu');\r\n                      module.animate.show(false, $subMenu);\r\n                      $selectedItem\r\n                        .removeClass(className.selected)\r\n                      ;\r\n                      $subMenu\r\n                        .find(selector.item).eq(0)\r\n                          .addClass(className.selected)\r\n                      ;\r\n                      event.preventDefault();\r\n                    }\r\n                  }\r\n                }\r\n\r\n                // up arrow (traverse menu up)\r\n                if(pressedKey == keys.upArrow) {\r\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\r\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\r\n                    : $item.eq(0)\r\n                  ;\r\n                  if($visibleItems.index( $nextItem ) < 0) {\r\n                    module.verbose('Up key pressed but reached top of current menu');\r\n                    event.preventDefault();\r\n                    return;\r\n                  }\r\n                  else {\r\n                    module.verbose('Up key pressed, changing active item');\r\n                    $selectedItem\r\n                      .removeClass(className.selected)\r\n                    ;\r\n                    $nextItem\r\n                      .addClass(className.selected)\r\n                    ;\r\n                    module.set.scrollPosition($nextItem);\r\n                    if(settings.selectOnKeydown && module.is.single()) {\r\n                      module.set.selectedItem($nextItem);\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // down arrow (traverse menu down)\r\n                if(pressedKey == keys.downArrow) {\r\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\r\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\r\n                    : $item.eq(0)\r\n                  ;\r\n                  if($nextItem.length === 0) {\r\n                    module.verbose('Down key pressed but reached bottom of current menu');\r\n                    event.preventDefault();\r\n                    return;\r\n                  }\r\n                  else {\r\n                    module.verbose('Down key pressed, changing active item');\r\n                    $item\r\n                      .removeClass(className.selected)\r\n                    ;\r\n                    $nextItem\r\n                      .addClass(className.selected)\r\n                    ;\r\n                    module.set.scrollPosition($nextItem);\r\n                    if(settings.selectOnKeydown && module.is.single()) {\r\n                      module.set.selectedItem($nextItem);\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // page down (show next page)\r\n                if(pressedKey == keys.pageUp) {\r\n                  module.scrollPage('up');\r\n                  event.preventDefault();\r\n                }\r\n                if(pressedKey == keys.pageDown) {\r\n                  module.scrollPage('down');\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // escape (close menu)\r\n                if(pressedKey == keys.escape) {\r\n                  module.verbose('Escape key pressed, closing dropdown');\r\n                  module.hide();\r\n                }\r\n\r\n              }\r\n              else {\r\n                // delimiter key\r\n                if(delimiterPressed) {\r\n                  event.preventDefault();\r\n                }\r\n                // down arrow (open menu)\r\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\r\n                  module.verbose('Down key pressed, showing dropdown');\r\n                  module.select.firstUnfiltered();\r\n                  module.show();\r\n                  event.preventDefault();\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if( !module.has.search() ) {\r\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        trigger: {\r\n          change: function() {\r\n            var\r\n              events       = document.createEvent('HTMLEvents'),\r\n              inputElement = $input[0]\r\n            ;\r\n            if(inputElement) {\r\n              module.verbose('Triggering native change event');\r\n              events.initEvent('change', true, false);\r\n              inputElement.dispatchEvent(events);\r\n            }\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          selectAction: function(text, value) {\r\n            module.verbose('Determining action', settings.action);\r\n            if( $.isFunction( module.action[settings.action] ) ) {\r\n              module.verbose('Triggering preset action', settings.action, text, value);\r\n              module.action[ settings.action ].call(element, text, value, this);\r\n            }\r\n            else if( $.isFunction(settings.action) ) {\r\n              module.verbose('Triggering user action', settings.action, text, value);\r\n              settings.action.call(element, text, value, this);\r\n            }\r\n            else {\r\n              module.error(error.action, settings.action);\r\n            }\r\n          },\r\n          eventInModule: function(event, callback) {\r\n            var\r\n              $target    = $(event.target),\r\n              inDocument = ($target.closest(document.documentElement).length > 0),\r\n              inModule   = ($target.closest($module).length > 0)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(inDocument && !inModule) {\r\n              module.verbose('Triggering event', callback);\r\n              callback();\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Event occurred in dropdown, canceling callback');\r\n              return false;\r\n            }\r\n          },\r\n          eventOnElement: function(event, callback) {\r\n            var\r\n              $target      = $(event.target),\r\n              $label       = $target.closest(selector.siblingLabel),\r\n              inVisibleDOM = document.body.contains(event.target),\r\n              notOnLabel   = ($module.find($label).length === 0),\r\n              notInMenu    = ($target.closest($menu).length === 0)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(inVisibleDOM && notOnLabel && notInMenu) {\r\n              module.verbose('Triggering event', callback);\r\n              callback();\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Event occurred in dropdown menu, canceling callback');\r\n              return false;\r\n            }\r\n          }\r\n        },\r\n\r\n        action: {\r\n\r\n          nothing: function() {},\r\n\r\n          activate: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            if( module.can.activate( $(element) ) ) {\r\n              module.set.selected(value, $(element));\r\n              if(module.is.multiple() && !module.is.allFiltered()) {\r\n                return;\r\n              }\r\n              else {\r\n                module.hideAndClear();\r\n              }\r\n            }\r\n          },\r\n\r\n          select: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            if( module.can.activate( $(element) ) ) {\r\n              module.set.value(value, $(element));\r\n              if(module.is.multiple() && !module.is.allFiltered()) {\r\n                return;\r\n              }\r\n              else {\r\n                module.hideAndClear();\r\n              }\r\n            }\r\n          },\r\n\r\n          combo: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            module.set.selected(value, $(element));\r\n            module.hideAndClear();\r\n          },\r\n\r\n          hide: function(text, value, element) {\r\n            module.set.value(value, text);\r\n            module.hideAndClear();\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return id;\r\n          },\r\n          defaultText: function() {\r\n            return $module.data(metadata.defaultText);\r\n          },\r\n          defaultValue: function() {\r\n            return $module.data(metadata.defaultValue);\r\n          },\r\n          placeholderText: function() {\r\n            return $module.data(metadata.placeholderText) || '';\r\n          },\r\n          text: function() {\r\n            return $text.text();\r\n          },\r\n          query: function() {\r\n            return $.trim($search.val());\r\n          },\r\n          searchWidth: function(value) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : $search.val()\r\n            ;\r\n            $sizer.text(value);\r\n            // prevent rounding issues\r\n            return Math.ceil( $sizer.width() + 1);\r\n          },\r\n          selectionCount: function() {\r\n            var\r\n              values = module.get.values(),\r\n              count\r\n            ;\r\n            count = ( module.is.multiple() )\r\n              ? $.isArray(values)\r\n                ? values.length\r\n                : 0\r\n              : (module.get.value() !== '')\r\n                ? 1\r\n                : 0\r\n            ;\r\n            return count;\r\n          },\r\n          transition: function($subMenu) {\r\n            return (settings.transition == 'auto')\r\n              ? module.is.upward($subMenu)\r\n                ? 'slide up'\r\n                : 'slide down'\r\n              : settings.transition\r\n            ;\r\n          },\r\n          userValues: function() {\r\n            var\r\n              values = module.get.values()\r\n            ;\r\n            if(!values) {\r\n              return false;\r\n            }\r\n            values = $.isArray(values)\r\n              ? values\r\n              : [values]\r\n            ;\r\n            return $.grep(values, function(value) {\r\n              return (module.get.item(value) === false);\r\n            });\r\n          },\r\n          uniqueArray: function(array) {\r\n            return $.grep(array, function (value, index) {\r\n                return $.inArray(value, array) === index;\r\n            });\r\n          },\r\n          caretPosition: function() {\r\n            var\r\n              input = $search.get(0),\r\n              range,\r\n              rangeLength\r\n            ;\r\n            if('selectionStart' in input) {\r\n              return input.selectionStart;\r\n            }\r\n            else if (document.selection) {\r\n              input.focus();\r\n              range       = document.selection.createRange();\r\n              rangeLength = range.text.length;\r\n              range.moveStart('character', -input.value.length);\r\n              return range.text.length - rangeLength;\r\n            }\r\n          },\r\n          value: function() {\r\n            var\r\n              value = ($input.length > 0)\r\n                ? $input.val()\r\n                : $module.data(metadata.value),\r\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\r\n            ;\r\n            // prevents placeholder element from being selected when multiple\r\n            return (value === undefined || isEmptyMultiselect)\r\n              ? ''\r\n              : value\r\n            ;\r\n          },\r\n          values: function() {\r\n            var\r\n              value = module.get.value()\r\n            ;\r\n            if(value === '') {\r\n              return '';\r\n            }\r\n            return ( !module.has.selectInput() && module.is.multiple() )\r\n              ? (typeof value == 'string') // delimited string\r\n                ? value.split(settings.delimiter)\r\n                : ''\r\n              : value\r\n            ;\r\n          },\r\n          remoteValues: function() {\r\n            var\r\n              values = module.get.values(),\r\n              remoteValues = false\r\n            ;\r\n            if(values) {\r\n              if(typeof values == 'string') {\r\n                values = [values];\r\n              }\r\n              $.each(values, function(index, value) {\r\n                var\r\n                  name = module.read.remoteData(value)\r\n                ;\r\n                module.verbose('Restoring value from session data', name, value);\r\n                if(name) {\r\n                  if(!remoteValues) {\r\n                    remoteValues = {};\r\n                  }\r\n                  remoteValues[value] = name;\r\n                }\r\n              });\r\n            }\r\n            return remoteValues;\r\n          },\r\n          choiceText: function($choice, preserveHTML) {\r\n            preserveHTML = (preserveHTML !== undefined)\r\n              ? preserveHTML\r\n              : settings.preserveHTML\r\n            ;\r\n            if($choice) {\r\n              if($choice.find(selector.menu).length > 0) {\r\n                module.verbose('Retrieving text of element with sub-menu');\r\n                $choice = $choice.clone();\r\n                $choice.find(selector.menu).remove();\r\n                $choice.find(selector.menuIcon).remove();\r\n              }\r\n              return ($choice.data(metadata.text) !== undefined)\r\n                ? $choice.data(metadata.text)\r\n                : (preserveHTML)\r\n                  ? $.trim($choice.html())\r\n                  : $.trim($choice.text())\r\n              ;\r\n            }\r\n          },\r\n          choiceValue: function($choice, choiceText) {\r\n            choiceText = choiceText || module.get.choiceText($choice);\r\n            if(!$choice) {\r\n              return false;\r\n            }\r\n            return ($choice.data(metadata.value) !== undefined)\r\n              ? String( $choice.data(metadata.value) )\r\n              : (typeof choiceText === 'string')\r\n                ? $.trim(choiceText.toLowerCase())\r\n                : String(choiceText)\r\n            ;\r\n          },\r\n          inputEvent: function() {\r\n            var\r\n              input = $search[0]\r\n            ;\r\n            if(input) {\r\n              return (input.oninput !== undefined)\r\n                ? 'input'\r\n                : (input.onpropertychange !== undefined)\r\n                  ? 'propertychange'\r\n                  : 'keyup'\r\n              ;\r\n            }\r\n            return false;\r\n          },\r\n          selectValues: function() {\r\n            var\r\n              select = {}\r\n            ;\r\n            select.values = [];\r\n            $module\r\n              .find('option')\r\n                .each(function() {\r\n                  var\r\n                    $option  = $(this),\r\n                    name     = $option.html(),\r\n                    disabled = $option.attr('disabled'),\r\n                    value    = ( $option.attr('value') !== undefined )\r\n                      ? $option.attr('value')\r\n                      : name\r\n                  ;\r\n                  if(settings.placeholder === 'auto' && value === '') {\r\n                    select.placeholder = name;\r\n                  }\r\n                  else {\r\n                    select.values.push({\r\n                      name     : name,\r\n                      value    : value,\r\n                      disabled : disabled\r\n                    });\r\n                  }\r\n                })\r\n            ;\r\n            if(settings.placeholder && settings.placeholder !== 'auto') {\r\n              module.debug('Setting placeholder value to', settings.placeholder);\r\n              select.placeholder = settings.placeholder;\r\n            }\r\n            if(settings.sortSelect) {\r\n              select.values.sort(function(a, b) {\r\n                return (a.name > b.name)\r\n                  ? 1\r\n                  : -1\r\n                ;\r\n              });\r\n              module.debug('Retrieved and sorted values from select', select);\r\n            }\r\n            else {\r\n              module.debug('Retrieved values from select', select);\r\n            }\r\n            return select;\r\n          },\r\n          activeItem: function() {\r\n            return $item.filter('.'  + className.active);\r\n          },\r\n          selectedItem: function() {\r\n            var\r\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\r\n            ;\r\n            return ($selectedItem.length > 0)\r\n              ? $selectedItem\r\n              : $item.eq(0)\r\n            ;\r\n          },\r\n          itemWithAdditions: function(value) {\r\n            var\r\n              $items       = module.get.item(value),\r\n              $userItems   = module.create.userChoice(value),\r\n              hasUserItems = ($userItems && $userItems.length > 0)\r\n            ;\r\n            if(hasUserItems) {\r\n              $items = ($items.length > 0)\r\n                ? $items.add($userItems)\r\n                : $userItems\r\n              ;\r\n            }\r\n            return $items;\r\n          },\r\n          item: function(value, strict) {\r\n            var\r\n              $selectedItem = false,\r\n              shouldSearch,\r\n              isMultiple\r\n            ;\r\n            value = (value !== undefined)\r\n              ? value\r\n              : ( module.get.values() !== undefined)\r\n                ? module.get.values()\r\n                : module.get.text()\r\n            ;\r\n            shouldSearch = (isMultiple)\r\n              ? (value.length > 0)\r\n              : (value !== undefined && value !== null)\r\n            ;\r\n            isMultiple = (module.is.multiple() && $.isArray(value));\r\n            strict     = (value === '' || value === 0)\r\n              ? true\r\n              : strict || false\r\n            ;\r\n            if(shouldSearch) {\r\n              $item\r\n                .each(function() {\r\n                  var\r\n                    $choice       = $(this),\r\n                    optionText    = module.get.choiceText($choice),\r\n                    optionValue   = module.get.choiceValue($choice, optionText)\r\n                  ;\r\n                  // safe early exit\r\n                  if(optionValue === null || optionValue === undefined) {\r\n                    return;\r\n                  }\r\n                  if(isMultiple) {\r\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\r\n                      $selectedItem = ($selectedItem)\r\n                        ? $selectedItem.add($choice)\r\n                        : $choice\r\n                      ;\r\n                    }\r\n                  }\r\n                  else if(strict) {\r\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\r\n                    if( optionValue === value || optionText === value) {\r\n                      $selectedItem = $choice;\r\n                      return true;\r\n                    }\r\n                  }\r\n                  else {\r\n                    if( String(optionValue) == String(value) || optionText == value) {\r\n                      module.verbose('Found select item by value', optionValue, value);\r\n                      $selectedItem = $choice;\r\n                      return true;\r\n                    }\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            return $selectedItem;\r\n          }\r\n        },\r\n\r\n        check: {\r\n          maxSelections: function(selectionCount) {\r\n            if(settings.maxSelections) {\r\n              selectionCount = (selectionCount !== undefined)\r\n                ? selectionCount\r\n                : module.get.selectionCount()\r\n              ;\r\n              if(selectionCount >= settings.maxSelections) {\r\n                module.debug('Maximum selection count reached');\r\n                if(settings.useLabels) {\r\n                  $item.addClass(className.filtered);\r\n                  module.add.message(message.maxSelections);\r\n                }\r\n                return true;\r\n              }\r\n              else {\r\n                module.verbose('No longer at maximum selection count');\r\n                module.remove.message();\r\n                module.remove.filteredItem();\r\n                if(module.is.searchSelection()) {\r\n                  module.filterItems();\r\n                }\r\n                return false;\r\n              }\r\n            }\r\n            return true;\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          defaults: function() {\r\n            module.clear();\r\n            module.restore.defaultText();\r\n            module.restore.defaultValue();\r\n          },\r\n          defaultText: function() {\r\n            var\r\n              defaultText     = module.get.defaultText(),\r\n              placeholderText = module.get.placeholderText\r\n            ;\r\n            if(defaultText === placeholderText) {\r\n              module.debug('Restoring default placeholder text', defaultText);\r\n              module.set.placeholderText(defaultText);\r\n            }\r\n            else {\r\n              module.debug('Restoring default text', defaultText);\r\n              module.set.text(defaultText);\r\n            }\r\n          },\r\n          placeholderText: function() {\r\n            module.set.placeholderText();\r\n          },\r\n          defaultValue: function() {\r\n            var\r\n              defaultValue = module.get.defaultValue()\r\n            ;\r\n            if(defaultValue !== undefined) {\r\n              module.debug('Restoring default value', defaultValue);\r\n              if(defaultValue !== '') {\r\n                module.set.value(defaultValue);\r\n                module.set.selected();\r\n              }\r\n              else {\r\n                module.remove.activeItem();\r\n                module.remove.selectedItem();\r\n              }\r\n            }\r\n          },\r\n          labels: function() {\r\n            if(settings.allowAdditions) {\r\n              if(!settings.useLabels) {\r\n                module.error(error.labels);\r\n                settings.useLabels = true;\r\n              }\r\n              module.debug('Restoring selected values');\r\n              module.create.userLabels();\r\n            }\r\n            module.check.maxSelections();\r\n          },\r\n          selected: function() {\r\n            module.restore.values();\r\n            if(module.is.multiple()) {\r\n              module.debug('Restoring previously selected values and labels');\r\n              module.restore.labels();\r\n            }\r\n            else {\r\n              module.debug('Restoring previously selected values');\r\n            }\r\n          },\r\n          values: function() {\r\n            // prevents callbacks from occurring on initial load\r\n            module.set.initialLoad();\r\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\r\n              module.restore.remoteValues();\r\n            }\r\n            else {\r\n              module.set.selected();\r\n            }\r\n            module.remove.initialLoad();\r\n          },\r\n          remoteValues: function() {\r\n            var\r\n              values = module.get.remoteValues()\r\n            ;\r\n            module.debug('Recreating selected from session data', values);\r\n            if(values) {\r\n              if( module.is.single() ) {\r\n                $.each(values, function(value, name) {\r\n                  module.set.text(name);\r\n                });\r\n              }\r\n              else {\r\n                $.each(values, function(value, name) {\r\n                  module.add.label(value, name);\r\n                });\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        read: {\r\n          remoteData: function(value) {\r\n            var\r\n              name\r\n            ;\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            name = sessionStorage.getItem(value);\r\n            return (name !== undefined)\r\n              ? name\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          defaults: function() {\r\n            module.save.defaultText();\r\n            module.save.placeholderText();\r\n            module.save.defaultValue();\r\n          },\r\n          defaultValue: function() {\r\n            var\r\n              value = module.get.value()\r\n            ;\r\n            module.verbose('Saving default value as', value);\r\n            $module.data(metadata.defaultValue, value);\r\n          },\r\n          defaultText: function() {\r\n            var\r\n              text = module.get.text()\r\n            ;\r\n            module.verbose('Saving default text as', text);\r\n            $module.data(metadata.defaultText, text);\r\n          },\r\n          placeholderText: function() {\r\n            var\r\n              text\r\n            ;\r\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\r\n              text = module.get.text();\r\n              module.verbose('Saving placeholder text as', text);\r\n              $module.data(metadata.placeholderText, text);\r\n            }\r\n          },\r\n          remoteData: function(name, value) {\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            module.verbose('Saving remote data to session storage', value, name);\r\n            sessionStorage.setItem(value, name);\r\n          }\r\n        },\r\n\r\n        clear: function() {\r\n          if(module.is.multiple() && settings.useLabels) {\r\n            module.remove.labels();\r\n          }\r\n          else {\r\n            module.remove.activeItem();\r\n            module.remove.selectedItem();\r\n          }\r\n          module.set.placeholderText();\r\n          module.clearValue();\r\n        },\r\n\r\n        clearValue: function() {\r\n          module.set.value('');\r\n        },\r\n\r\n        scrollPage: function(direction, $selectedItem) {\r\n          var\r\n            $currentItem  = $selectedItem || module.get.selectedItem(),\r\n            $menu         = $currentItem.closest(selector.menu),\r\n            menuHeight    = $menu.outerHeight(),\r\n            currentScroll = $menu.scrollTop(),\r\n            itemHeight    = $item.eq(0).outerHeight(),\r\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\r\n            maxScroll     = $menu.prop('scrollHeight'),\r\n            newScroll     = (direction == 'up')\r\n              ? currentScroll - (itemHeight * itemsPerPage)\r\n              : currentScroll + (itemHeight * itemsPerPage),\r\n            $selectableItem = $item.not(selector.unselectable),\r\n            isWithinRange,\r\n            $nextSelectedItem,\r\n            elementIndex\r\n          ;\r\n          elementIndex      = (direction == 'up')\r\n            ? $selectableItem.index($currentItem) - itemsPerPage\r\n            : $selectableItem.index($currentItem) + itemsPerPage\r\n          ;\r\n          isWithinRange = (direction == 'up')\r\n            ? (elementIndex >= 0)\r\n            : (elementIndex < $selectableItem.length)\r\n          ;\r\n          $nextSelectedItem = (isWithinRange)\r\n            ? $selectableItem.eq(elementIndex)\r\n            : (direction == 'up')\r\n              ? $selectableItem.first()\r\n              : $selectableItem.last()\r\n          ;\r\n          if($nextSelectedItem.length > 0) {\r\n            module.debug('Scrolling page', direction, $nextSelectedItem);\r\n            $currentItem\r\n              .removeClass(className.selected)\r\n            ;\r\n            $nextSelectedItem\r\n              .addClass(className.selected)\r\n            ;\r\n            if(settings.selectOnKeydown && module.is.single()) {\r\n              module.set.selectedItem($nextSelectedItem);\r\n            }\r\n            $menu\r\n              .scrollTop(newScroll)\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          filtered: function() {\r\n            var\r\n              isMultiple       = module.is.multiple(),\r\n              isSearch         = module.is.searchSelection(),\r\n              isSearchMultiple = (isMultiple && isSearch),\r\n              searchValue      = (isSearch)\r\n                ? module.get.query()\r\n                : '',\r\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\r\n              searchWidth      = module.get.searchWidth(),\r\n              valueIsSet       = searchValue !== ''\r\n            ;\r\n            if(isMultiple && hasSearchValue) {\r\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\r\n              $search.css('width', searchWidth);\r\n            }\r\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\r\n              module.verbose('Hiding placeholder text');\r\n              $text.addClass(className.filtered);\r\n            }\r\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\r\n              module.verbose('Showing placeholder text');\r\n              $text.removeClass(className.filtered);\r\n            }\r\n          },\r\n          empty: function() {\r\n            $module.addClass(className.empty);\r\n          },\r\n          loading: function() {\r\n            $module.addClass(className.loading);\r\n          },\r\n          placeholderText: function(text) {\r\n            text = text || module.get.placeholderText();\r\n            module.debug('Setting placeholder text', text);\r\n            module.set.text(text);\r\n            $text.addClass(className.placeholder);\r\n          },\r\n          tabbable: function() {\r\n            if( module.is.searchSelection() ) {\r\n              module.debug('Added tabindex to searchable dropdown');\r\n              $search\r\n                .val('')\r\n                .attr('tabindex', 0)\r\n              ;\r\n              $menu\r\n                .attr('tabindex', -1)\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Added tabindex to dropdown');\r\n              if( $module.attr('tabindex') === undefined) {\r\n                $module\r\n                  .attr('tabindex', 0)\r\n                ;\r\n                $menu\r\n                  .attr('tabindex', -1)\r\n                ;\r\n              }\r\n            }\r\n          },\r\n          initialLoad: function() {\r\n            module.verbose('Setting initial load');\r\n            initialLoad = true;\r\n          },\r\n          activeItem: function($item) {\r\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\r\n              $item.addClass(className.filtered);\r\n            }\r\n            else {\r\n              $item.addClass(className.active);\r\n            }\r\n          },\r\n          partialSearch: function(text) {\r\n            var\r\n              length = module.get.query().length\r\n            ;\r\n            $search.val( text.substr(0 , length));\r\n          },\r\n          scrollPosition: function($item, forceScroll) {\r\n            var\r\n              edgeTolerance = 5,\r\n              $menu,\r\n              hasActive,\r\n              offset,\r\n              itemHeight,\r\n              itemOffset,\r\n              menuOffset,\r\n              menuScroll,\r\n              menuHeight,\r\n              abovePage,\r\n              belowPage\r\n            ;\r\n\r\n            $item       = $item || module.get.selectedItem();\r\n            $menu       = $item.closest(selector.menu);\r\n            hasActive   = ($item && $item.length > 0);\r\n            forceScroll = (forceScroll !== undefined)\r\n              ? forceScroll\r\n              : false\r\n            ;\r\n            if($item && $menu.length > 0 && hasActive) {\r\n              itemOffset = $item.position().top;\r\n\r\n              $menu.addClass(className.loading);\r\n              menuScroll = $menu.scrollTop();\r\n              menuOffset = $menu.offset().top;\r\n              itemOffset = $item.offset().top;\r\n              offset     = menuScroll - menuOffset + itemOffset;\r\n              if(!forceScroll) {\r\n                menuHeight = $menu.height();\r\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\r\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\r\n              }\r\n              module.debug('Scrolling to active item', offset);\r\n              if(forceScroll || abovePage || belowPage) {\r\n                $menu.scrollTop(offset);\r\n              }\r\n              $menu.removeClass(className.loading);\r\n            }\r\n          },\r\n          text: function(text) {\r\n            if(settings.action !== 'select') {\r\n              if(settings.action == 'combo') {\r\n                module.debug('Changing combo button text', text, $combo);\r\n                if(settings.preserveHTML) {\r\n                  $combo.html(text);\r\n                }\r\n                else {\r\n                  $combo.text(text);\r\n                }\r\n              }\r\n              else {\r\n                if(text !== module.get.placeholderText()) {\r\n                  $text.removeClass(className.placeholder);\r\n                }\r\n                module.debug('Changing text', text, $text);\r\n                $text\r\n                  .removeClass(className.filtered)\r\n                ;\r\n                if(settings.preserveHTML) {\r\n                  $text.html(text);\r\n                }\r\n                else {\r\n                  $text.text(text);\r\n                }\r\n              }\r\n            }\r\n          },\r\n          selectedItem: function($item) {\r\n            var\r\n              value      = module.get.choiceValue($item),\r\n              searchText = module.get.choiceText($item, false),\r\n              text       = module.get.choiceText($item, true)\r\n            ;\r\n            module.debug('Setting user selection to item', $item);\r\n            module.remove.activeItem();\r\n            module.set.partialSearch(searchText);\r\n            module.set.activeItem($item);\r\n            module.set.selected(value, $item);\r\n            module.set.text(text);\r\n          },\r\n          selectedLetter: function(letter) {\r\n            var\r\n              $selectedItem         = $item.filter('.' + className.selected),\r\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\r\n              $nextValue            = false,\r\n              $nextItem\r\n            ;\r\n            // check next of same letter\r\n            if(alreadySelectedLetter) {\r\n              $nextItem = $selectedItem.nextAll($item).eq(0);\r\n              if( module.has.firstLetter($nextItem, letter) ) {\r\n                $nextValue  = $nextItem;\r\n              }\r\n            }\r\n            // check all values\r\n            if(!$nextValue) {\r\n              $item\r\n                .each(function(){\r\n                  if(module.has.firstLetter($(this), letter)) {\r\n                    $nextValue = $(this);\r\n                    return false;\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            // set next value\r\n            if($nextValue) {\r\n              module.verbose('Scrolling to next value with letter', letter);\r\n              module.set.scrollPosition($nextValue);\r\n              $selectedItem.removeClass(className.selected);\r\n              $nextValue.addClass(className.selected);\r\n              if(settings.selectOnKeydown && module.is.single()) {\r\n                module.set.selectedItem($nextValue);\r\n              }\r\n            }\r\n          },\r\n          direction: function($menu) {\r\n            if(settings.direction == 'auto') {\r\n              if(module.is.onScreen($menu)) {\r\n                module.remove.upward($menu);\r\n              }\r\n              else {\r\n                module.set.upward($menu);\r\n              }\r\n            }\r\n            else if(settings.direction == 'upward') {\r\n              module.set.upward($menu);\r\n            }\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            $element.addClass(className.upward);\r\n          },\r\n          value: function(value, text, $selected) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              hasInput     = ($input.length > 0),\r\n              isAddition   = !module.has.value(value),\r\n              currentValue = module.get.values(),\r\n              stringValue  = (value !== undefined)\r\n                ? String(value)\r\n                : value,\r\n              newValue\r\n            ;\r\n            if(hasInput) {\r\n              if(!settings.allowReselection && stringValue == currentValue) {\r\n                module.verbose('Skipping value update already same value', value, currentValue);\r\n                if(!module.is.initialLoad()) {\r\n                  return;\r\n                }\r\n              }\r\n\r\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\r\n                module.debug('Adding user option', value);\r\n                module.add.optionValue(value);\r\n              }\r\n              module.debug('Updating input value', escapedValue, currentValue);\r\n              internalChange = true;\r\n              $input\r\n                .val(escapedValue)\r\n              ;\r\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n                module.debug('Input native change event ignored on initial load');\r\n              }\r\n              else {\r\n                module.trigger.change();\r\n              }\r\n              internalChange = false;\r\n            }\r\n            else {\r\n              module.verbose('Storing value in metadata', escapedValue, $input);\r\n              if(escapedValue !== currentValue) {\r\n                $module.data(metadata.value, stringValue);\r\n              }\r\n            }\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('No callback on initial load', settings.onChange);\r\n            }\r\n            else {\r\n              settings.onChange.call(element, value, text, $selected);\r\n            }\r\n          },\r\n          active: function() {\r\n            $module\r\n              .addClass(className.active)\r\n            ;\r\n          },\r\n          multiple: function() {\r\n            $module.addClass(className.multiple);\r\n          },\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          },\r\n          exactly: function(value, $selectedItem) {\r\n            module.debug('Setting selected to exact values');\r\n            module.clear();\r\n            module.set.selected(value, $selectedItem);\r\n          },\r\n          selected: function(value, $selectedItem) {\r\n            var\r\n              isMultiple = module.is.multiple(),\r\n              $userSelectedItem\r\n            ;\r\n            $selectedItem = (settings.allowAdditions)\r\n              ? $selectedItem || module.get.itemWithAdditions(value)\r\n              : $selectedItem || module.get.item(value)\r\n            ;\r\n            if(!$selectedItem) {\r\n              return;\r\n            }\r\n            module.debug('Setting selected menu item to', $selectedItem);\r\n            if(module.is.multiple()) {\r\n              module.remove.searchWidth();\r\n            }\r\n            if(module.is.single()) {\r\n              module.remove.activeItem();\r\n              module.remove.selectedItem();\r\n            }\r\n            else if(settings.useLabels) {\r\n              module.remove.selectedItem();\r\n            }\r\n            // select each item\r\n            $selectedItem\r\n              .each(function() {\r\n                var\r\n                  $selected      = $(this),\r\n                  selectedText   = module.get.choiceText($selected),\r\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\r\n\r\n                  isFiltered     = $selected.hasClass(className.filtered),\r\n                  isActive       = $selected.hasClass(className.active),\r\n                  isUserValue    = $selected.hasClass(className.addition),\r\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\r\n                ;\r\n                if(isMultiple) {\r\n                  if(!isActive || isUserValue) {\r\n                    if(settings.apiSettings && settings.saveRemoteData) {\r\n                      module.save.remoteData(selectedText, selectedValue);\r\n                    }\r\n                    if(settings.useLabels) {\r\n                      module.add.value(selectedValue, selectedText, $selected);\r\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\r\n                      module.set.activeItem($selected);\r\n                      module.filterActive();\r\n                      module.select.nextAvailable($selectedItem);\r\n                    }\r\n                    else {\r\n                      module.add.value(selectedValue, selectedText, $selected);\r\n                      module.set.text(module.add.variables(message.count));\r\n                      module.set.activeItem($selected);\r\n                    }\r\n                  }\r\n                  else if(!isFiltered) {\r\n                    module.debug('Selected active value, removing label');\r\n                    module.remove.selected(selectedValue);\r\n                  }\r\n                }\r\n                else {\r\n                  if(settings.apiSettings && settings.saveRemoteData) {\r\n                    module.save.remoteData(selectedText, selectedValue);\r\n                  }\r\n                  module.set.text(selectedText);\r\n                  module.set.value(selectedValue, selectedText, $selected);\r\n                  $selected\r\n                    .addClass(className.active)\r\n                    .addClass(className.selected)\r\n                  ;\r\n                }\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        add: {\r\n          label: function(value, text, shouldAnimate) {\r\n            var\r\n              $next  = module.is.searchSelection()\r\n                ? $search\r\n                : $text,\r\n              escapedValue = module.escape.value(value),\r\n              $label\r\n            ;\r\n            $label =  $('<a />')\r\n              .addClass(className.label)\r\n              .attr('data-' + metadata.value, escapedValue)\r\n              .html(templates.label(escapedValue, text))\r\n            ;\r\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\r\n\r\n            if(module.has.label(value)) {\r\n              module.debug('Label already exists, skipping', escapedValue);\r\n              return;\r\n            }\r\n            if(settings.label.variation) {\r\n              $label.addClass(settings.label.variation);\r\n            }\r\n            if(shouldAnimate === true) {\r\n              module.debug('Animating in label', $label);\r\n              $label\r\n                .addClass(className.hidden)\r\n                .insertBefore($next)\r\n                .transition(settings.label.transition, settings.label.duration)\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Adding selection label', $label);\r\n              $label\r\n                .insertBefore($next)\r\n              ;\r\n            }\r\n          },\r\n          message: function(message) {\r\n            var\r\n              $message = $menu.children(selector.message),\r\n              html     = settings.templates.message(module.add.variables(message))\r\n            ;\r\n            if($message.length > 0) {\r\n              $message\r\n                .html(html)\r\n              ;\r\n            }\r\n            else {\r\n              $message = $('<div/>')\r\n                .html(html)\r\n                .addClass(className.message)\r\n                .appendTo($menu)\r\n              ;\r\n            }\r\n          },\r\n          optionValue: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\r\n              hasOption    = ($option.length > 0)\r\n            ;\r\n            if(hasOption) {\r\n              return;\r\n            }\r\n            // temporarily disconnect observer\r\n            module.disconnect.selectObserver();\r\n            if( module.is.single() ) {\r\n              module.verbose('Removing previous user addition');\r\n              $input.find('option.' + className.addition).remove();\r\n            }\r\n            $('<option/>')\r\n              .prop('value', escapedValue)\r\n              .addClass(className.addition)\r\n              .html(value)\r\n              .appendTo($input)\r\n            ;\r\n            module.verbose('Adding user addition as an <option>', value);\r\n            module.observe.select();\r\n          },\r\n          userSuggestion: function(value) {\r\n            var\r\n              $addition         = $menu.children(selector.addition),\r\n              $existingItem     = module.get.item(value),\r\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\r\n              hasUserSuggestion = $addition.length > 0,\r\n              html\r\n            ;\r\n            if(settings.useLabels && module.has.maxSelections()) {\r\n              return;\r\n            }\r\n            if(value === '' || alreadyHasValue) {\r\n              $addition.remove();\r\n              return;\r\n            }\r\n            if(hasUserSuggestion) {\r\n              $addition\r\n                .data(metadata.value, value)\r\n                .data(metadata.text, value)\r\n                .attr('data-' + metadata.value, value)\r\n                .attr('data-' + metadata.text, value)\r\n                .removeClass(className.filtered)\r\n              ;\r\n              if(!settings.hideAdditions) {\r\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\r\n                $addition\r\n                  .html(html)\r\n                ;\r\n              }\r\n              module.verbose('Replacing user suggestion with new value', $addition);\r\n            }\r\n            else {\r\n              $addition = module.create.userChoice(value);\r\n              $addition\r\n                .prependTo($menu)\r\n              ;\r\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\r\n            }\r\n            if(!settings.hideAdditions || module.is.allFiltered()) {\r\n              $addition\r\n                .addClass(className.selected)\r\n                .siblings()\r\n                .removeClass(className.selected)\r\n              ;\r\n            }\r\n            module.refreshItems();\r\n          },\r\n          variables: function(message, term) {\r\n            var\r\n              hasCount    = (message.search('{count}') !== -1),\r\n              hasMaxCount = (message.search('{maxCount}') !== -1),\r\n              hasTerm     = (message.search('{term}') !== -1),\r\n              values,\r\n              count,\r\n              query\r\n            ;\r\n            module.verbose('Adding templated variables to message', message);\r\n            if(hasCount) {\r\n              count  = module.get.selectionCount();\r\n              message = message.replace('{count}', count);\r\n            }\r\n            if(hasMaxCount) {\r\n              count  = module.get.selectionCount();\r\n              message = message.replace('{maxCount}', settings.maxSelections);\r\n            }\r\n            if(hasTerm) {\r\n              query   = term || module.get.query();\r\n              message = message.replace('{term}', query);\r\n            }\r\n            return message;\r\n          },\r\n          value: function(addedValue, addedText, $selectedItem) {\r\n            var\r\n              currentValue = module.get.values(),\r\n              newValue\r\n            ;\r\n            if(addedValue === '') {\r\n              module.debug('Cannot select blank values from multiselect');\r\n              return;\r\n            }\r\n            // extend current array\r\n            if($.isArray(currentValue)) {\r\n              newValue = currentValue.concat([addedValue]);\r\n              newValue = module.get.uniqueArray(newValue);\r\n            }\r\n            else {\r\n              newValue = [addedValue];\r\n            }\r\n            // add values\r\n            if( module.has.selectInput() ) {\r\n              if(module.can.extendSelect()) {\r\n                module.debug('Adding value to select', addedValue, newValue, $input);\r\n                module.add.optionValue(addedValue);\r\n              }\r\n            }\r\n            else {\r\n              newValue = newValue.join(settings.delimiter);\r\n              module.debug('Setting hidden input to delimited value', newValue, $input);\r\n            }\r\n\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\r\n            }\r\n            else {\r\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\r\n            }\r\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\r\n            module.check.maxSelections();\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          activeLabel: function() {\r\n            $module.find(selector.label).removeClass(className.active);\r\n          },\r\n          empty: function() {\r\n            $module.removeClass(className.empty);\r\n          },\r\n          loading: function() {\r\n            $module.removeClass(className.loading);\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            $element.removeClass(className.upward);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          activeItem: function() {\r\n            $item.removeClass(className.active);\r\n          },\r\n          filteredItem: function() {\r\n            if(settings.useLabels && module.has.maxSelections() ) {\r\n              return;\r\n            }\r\n            if(settings.useLabels && module.is.multiple()) {\r\n              $item.not('.' + className.active).removeClass(className.filtered);\r\n            }\r\n            else {\r\n              $item.removeClass(className.filtered);\r\n            }\r\n            module.remove.empty();\r\n          },\r\n          optionValue: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\r\n              hasOption    = ($option.length > 0)\r\n            ;\r\n            if(!hasOption || !$option.hasClass(className.addition)) {\r\n              return;\r\n            }\r\n            // temporarily disconnect observer\r\n            if(selectObserver) {\r\n              selectObserver.disconnect();\r\n              module.verbose('Temporarily disconnecting mutation observer');\r\n            }\r\n            $option.remove();\r\n            module.verbose('Removing user addition as an <option>', escapedValue);\r\n            if(selectObserver) {\r\n              selectObserver.observe($input[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          },\r\n          message: function() {\r\n            $menu.children(selector.message).remove();\r\n          },\r\n          searchWidth: function() {\r\n            $search.css('width', '');\r\n          },\r\n          searchTerm: function() {\r\n            module.verbose('Cleared search term');\r\n            $search.val('');\r\n            module.set.filtered();\r\n          },\r\n          userAddition: function() {\r\n            $item.filter(selector.addition).remove();\r\n          },\r\n          selected: function(value, $selectedItem) {\r\n            $selectedItem = (settings.allowAdditions)\r\n              ? $selectedItem || module.get.itemWithAdditions(value)\r\n              : $selectedItem || module.get.item(value)\r\n            ;\r\n\r\n            if(!$selectedItem) {\r\n              return false;\r\n            }\r\n\r\n            $selectedItem\r\n              .each(function() {\r\n                var\r\n                  $selected     = $(this),\r\n                  selectedText  = module.get.choiceText($selected),\r\n                  selectedValue = module.get.choiceValue($selected, selectedText)\r\n                ;\r\n                if(module.is.multiple()) {\r\n                  if(settings.useLabels) {\r\n                    module.remove.value(selectedValue, selectedText, $selected);\r\n                    module.remove.label(selectedValue);\r\n                  }\r\n                  else {\r\n                    module.remove.value(selectedValue, selectedText, $selected);\r\n                    if(module.get.selectionCount() === 0) {\r\n                      module.set.placeholderText();\r\n                    }\r\n                    else {\r\n                      module.set.text(module.add.variables(message.count));\r\n                    }\r\n                  }\r\n                }\r\n                else {\r\n                  module.remove.value(selectedValue, selectedText, $selected);\r\n                }\r\n                $selected\r\n                  .removeClass(className.filtered)\r\n                  .removeClass(className.active)\r\n                ;\r\n                if(settings.useLabels) {\r\n                  $selected.removeClass(className.selected);\r\n                }\r\n              })\r\n            ;\r\n          },\r\n          selectedItem: function() {\r\n            $item.removeClass(className.selected);\r\n          },\r\n          value: function(removedValue, removedText, $removedItem) {\r\n            var\r\n              values = module.get.values(),\r\n              newValue\r\n            ;\r\n            if( module.has.selectInput() ) {\r\n              module.verbose('Input is <select> removing selected option', removedValue);\r\n              newValue = module.remove.arrayValue(removedValue, values);\r\n              module.remove.optionValue(removedValue);\r\n            }\r\n            else {\r\n              module.verbose('Removing from delimited values', removedValue);\r\n              newValue = module.remove.arrayValue(removedValue, values);\r\n              newValue = newValue.join(settings.delimiter);\r\n            }\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('No callback on initial load', settings.onRemove);\r\n            }\r\n            else {\r\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\r\n            }\r\n            module.set.value(newValue, removedText, $removedItem);\r\n            module.check.maxSelections();\r\n          },\r\n          arrayValue: function(removedValue, values) {\r\n            if( !$.isArray(values) ) {\r\n              values = [values];\r\n            }\r\n            values = $.grep(values, function(value){\r\n              return (removedValue != value);\r\n            });\r\n            module.verbose('Removed value from delimited string', removedValue, values);\r\n            return values;\r\n          },\r\n          label: function(value, shouldAnimate) {\r\n            var\r\n              $labels       = $module.find(selector.label),\r\n              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\r\n            ;\r\n            module.verbose('Removing label', $removedLabel);\r\n            $removedLabel.remove();\r\n          },\r\n          activeLabels: function($activeLabels) {\r\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\r\n            module.verbose('Removing active label selections', $activeLabels);\r\n            module.remove.labels($activeLabels);\r\n          },\r\n          labels: function($labels) {\r\n            $labels = $labels || $module.find(selector.label);\r\n            module.verbose('Removing labels', $labels);\r\n            $labels\r\n              .each(function(){\r\n                var\r\n                  $label      = $(this),\r\n                  value       = $label.data(metadata.value),\r\n                  stringValue = (value !== undefined)\r\n                    ? String(value)\r\n                    : value,\r\n                  isUserValue = module.is.userValue(stringValue)\r\n                ;\r\n                if(settings.onLabelRemove.call($label, value) === false) {\r\n                  module.debug('Label remove callback cancelled removal');\r\n                  return;\r\n                }\r\n                module.remove.message();\r\n                if(isUserValue) {\r\n                  module.remove.value(stringValue);\r\n                  module.remove.label(stringValue);\r\n                }\r\n                else {\r\n                  // selected will also remove label\r\n                  module.remove.selected(stringValue);\r\n                }\r\n              })\r\n            ;\r\n          },\r\n          tabbable: function() {\r\n            if( module.is.searchSelection() ) {\r\n              module.debug('Searchable dropdown initialized');\r\n              $search\r\n                .removeAttr('tabindex')\r\n              ;\r\n              $menu\r\n                .removeAttr('tabindex')\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Simple selection dropdown initialized');\r\n              $module\r\n                .removeAttr('tabindex')\r\n              ;\r\n              $menu\r\n                .removeAttr('tabindex')\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          menuSearch: function() {\r\n            return (module.has.search() && $search.closest($menu).length > 0);\r\n          },\r\n          search: function() {\r\n            return ($search.length > 0);\r\n          },\r\n          sizer: function() {\r\n            return ($sizer.length > 0);\r\n          },\r\n          selectInput: function() {\r\n            return ( $input.is('select') );\r\n          },\r\n          minCharacters: function(searchTerm) {\r\n            if(settings.minCharacters) {\r\n              searchTerm = (searchTerm !== undefined)\r\n                ? String(searchTerm)\r\n                : String(module.get.query())\r\n              ;\r\n              return (searchTerm.length >= settings.minCharacters);\r\n            }\r\n            return true;\r\n          },\r\n          firstLetter: function($item, letter) {\r\n            var\r\n              text,\r\n              firstLetter\r\n            ;\r\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\r\n              return false;\r\n            }\r\n            text        = module.get.choiceText($item, false);\r\n            letter      = letter.toLowerCase();\r\n            firstLetter = String(text).charAt(0).toLowerCase();\r\n            return (letter == firstLetter);\r\n          },\r\n          input: function() {\r\n            return ($input.length > 0);\r\n          },\r\n          items: function() {\r\n            return ($item.length > 0);\r\n          },\r\n          menu: function() {\r\n            return ($menu.length > 0);\r\n          },\r\n          message: function() {\r\n            return ($menu.children(selector.message).length !== 0);\r\n          },\r\n          label: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $labels      = $module.find(selector.label)\r\n            ;\r\n            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\r\n          },\r\n          maxSelections: function() {\r\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\r\n          },\r\n          allResultsFiltered: function() {\r\n            var\r\n              $normalResults = $item.not(selector.addition)\r\n            ;\r\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\r\n          },\r\n          userSuggestion: function() {\r\n            return ($menu.children(selector.addition).length > 0);\r\n          },\r\n          query: function() {\r\n            return (module.get.query() !== '');\r\n          },\r\n          value: function(value) {\r\n            var\r\n              values   = module.get.values(),\r\n              hasValue = $.isArray(values)\r\n               ? values && ($.inArray(value, values) !== -1)\r\n               : (values == value)\r\n            ;\r\n            return (hasValue)\r\n              ? true\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          bubbledLabelClick: function(event) {\r\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\r\n          },\r\n          bubbledIconClick: function(event) {\r\n            return $(event.target).closest($icon).length > 0;\r\n          },\r\n          alreadySetup: function() {\r\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\r\n          },\r\n          animating: function($subMenu) {\r\n            return ($subMenu)\r\n              ? $subMenu.transition && $subMenu.transition('is animating')\r\n              : $menu.transition    && $menu.transition('is animating')\r\n            ;\r\n          },\r\n          disabled: function() {\r\n            return $module.hasClass(className.disabled);\r\n          },\r\n          focused: function() {\r\n            return (document.activeElement === $module[0]);\r\n          },\r\n          focusedOnSearch: function() {\r\n            return (document.activeElement === $search[0]);\r\n          },\r\n          allFiltered: function() {\r\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\r\n          },\r\n          hidden: function($subMenu) {\r\n            return !module.is.visible($subMenu);\r\n          },\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          },\r\n          onScreen: function($subMenu) {\r\n            var\r\n              $currentMenu   = $subMenu || $menu,\r\n              canOpenDownward = true,\r\n              onScreen = {},\r\n              calculations\r\n            ;\r\n            $currentMenu.addClass(className.loading);\r\n            calculations = {\r\n              context: {\r\n                scrollTop : $context.scrollTop(),\r\n                height    : $context.outerHeight()\r\n              },\r\n              menu : {\r\n                offset: $currentMenu.offset(),\r\n                height: $currentMenu.outerHeight()\r\n              }\r\n            };\r\n            if(module.is.verticallyScrollableContext()) {\r\n              calculations.menu.offset.top += calculations.context.scrollTop;\r\n            }\r\n            onScreen = {\r\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\r\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\r\n            };\r\n            if(onScreen.below) {\r\n              module.verbose('Dropdown can fit in context downward', onScreen);\r\n              canOpenDownward = true;\r\n            }\r\n            else if(!onScreen.below && !onScreen.above) {\r\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\r\n              canOpenDownward = true;\r\n            }\r\n            else {\r\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\r\n              canOpenDownward = false;\r\n            }\r\n            $currentMenu.removeClass(className.loading);\r\n            return canOpenDownward;\r\n          },\r\n          inObject: function(needle, object) {\r\n            var\r\n              found = false\r\n            ;\r\n            $.each(object, function(index, property) {\r\n              if(property == needle) {\r\n                found = true;\r\n                return true;\r\n              }\r\n            });\r\n            return found;\r\n          },\r\n          multiple: function() {\r\n            return $module.hasClass(className.multiple);\r\n          },\r\n          remote: function() {\r\n            return settings.apiSettings && module.can.useAPI();\r\n          },\r\n          single: function() {\r\n            return !module.is.multiple();\r\n          },\r\n          selectMutation: function(mutations) {\r\n            var\r\n              selectChanged = false\r\n            ;\r\n            $.each(mutations, function(index, mutation) {\r\n              if(mutation.target && $(mutation.target).is('select')) {\r\n                selectChanged = true;\r\n                return true;\r\n              }\r\n            });\r\n            return selectChanged;\r\n          },\r\n          search: function() {\r\n            return $module.hasClass(className.search);\r\n          },\r\n          searchSelection: function() {\r\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\r\n          },\r\n          selection: function() {\r\n            return $module.hasClass(className.selection);\r\n          },\r\n          userValue: function(value) {\r\n            return ($.inArray(value, module.get.userValues()) !== -1);\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            return $element.hasClass(className.upward);\r\n          },\r\n          visible: function($subMenu) {\r\n            return ($subMenu)\r\n              ? $subMenu.hasClass(className.visible)\r\n              : $menu.hasClass(className.visible)\r\n            ;\r\n          },\r\n          verticallyScrollableContext: function() {\r\n            var\r\n              overflowY = ($context.get(0) !== window)\r\n                ? $context.css('overflow-y')\r\n                : false\r\n            ;\r\n            return (overflowY == 'auto' || overflowY == 'scroll');\r\n          }\r\n        },\r\n\r\n        can: {\r\n          activate: function($item) {\r\n            if(settings.useLabels) {\r\n              return true;\r\n            }\r\n            if(!module.has.maxSelections()) {\r\n              return true;\r\n            }\r\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\r\n              return true;\r\n            }\r\n            return false;\r\n          },\r\n          click: function() {\r\n            return (hasTouch || settings.on == 'click');\r\n          },\r\n          extendSelect: function() {\r\n            return settings.allowAdditions || settings.apiSettings;\r\n          },\r\n          show: function() {\r\n            return !module.is.disabled() && (module.has.items() || module.has.message());\r\n          },\r\n          useAPI: function() {\r\n            return $.fn.api !== undefined;\r\n          }\r\n        },\r\n\r\n        animate: {\r\n          show: function(callback, $subMenu) {\r\n            var\r\n              $currentMenu = $subMenu || $menu,\r\n              start = ($subMenu)\r\n                ? function() {}\r\n                : function() {\r\n                  module.hideSubMenus();\r\n                  module.hideOthers();\r\n                  module.set.active();\r\n                },\r\n              transition\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            module.verbose('Doing menu show animation', $currentMenu);\r\n            module.set.direction($subMenu);\r\n            transition = module.get.transition($subMenu);\r\n            if( module.is.selection() ) {\r\n              module.set.scrollPosition(module.get.selectedItem(), true);\r\n            }\r\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\r\n              if(transition == 'none') {\r\n                start();\r\n                $currentMenu.transition('show');\r\n                callback.call(element);\r\n              }\r\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $currentMenu\r\n                  .transition({\r\n                    animation  : transition + ' in',\r\n                    debug      : settings.debug,\r\n                    verbose    : settings.verbose,\r\n                    duration   : settings.duration,\r\n                    queue      : true,\r\n                    onStart    : start,\r\n                    onComplete : function() {\r\n                      callback.call(element);\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.noTransition, transition);\r\n              }\r\n            }\r\n          },\r\n          hide: function(callback, $subMenu) {\r\n            var\r\n              $currentMenu = $subMenu || $menu,\r\n              duration = ($subMenu)\r\n                ? (settings.duration * 0.9)\r\n                : settings.duration,\r\n              start = ($subMenu)\r\n                ? function() {}\r\n                : function() {\r\n                  if( module.can.click() ) {\r\n                    module.unbind.intent();\r\n                  }\r\n                  module.remove.active();\r\n                },\r\n              transition = module.get.transition($subMenu)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\r\n              module.verbose('Doing menu hide animation', $currentMenu);\r\n\r\n              if(transition == 'none') {\r\n                start();\r\n                $currentMenu.transition('hide');\r\n                callback.call(element);\r\n              }\r\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $currentMenu\r\n                  .transition({\r\n                    animation  : transition + ' out',\r\n                    duration   : settings.duration,\r\n                    debug      : settings.debug,\r\n                    verbose    : settings.verbose,\r\n                    queue      : true,\r\n                    onStart    : start,\r\n                    onComplete : function() {\r\n                      if(settings.direction == 'auto') {\r\n                        module.remove.upward($subMenu);\r\n                      }\r\n                      callback.call(element);\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.transition);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        hideAndClear: function() {\r\n          module.remove.searchTerm();\r\n          if( module.has.maxSelections() ) {\r\n            return;\r\n          }\r\n          if(module.has.search()) {\r\n            module.hide(function() {\r\n              module.remove.filteredItem();\r\n            });\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        delay: {\r\n          show: function() {\r\n            module.verbose('Delaying show event to ensure user intent');\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.show, settings.delay.show);\r\n          },\r\n          hide: function() {\r\n            module.verbose('Delaying hide event to ensure user intent');\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.hide, settings.delay.hide);\r\n          }\r\n        },\r\n\r\n        escape: {\r\n          value: function(value) {\r\n            var\r\n              multipleValues = $.isArray(value),\r\n              stringValue    = (typeof value === 'string'),\r\n              isUnparsable   = (!stringValue && !multipleValues),\r\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\r\n              values         = []\r\n            ;\r\n            if(isUnparsable || !hasQuotes) {\r\n              return value;\r\n            }\r\n            module.debug('Encoding quote values for use in select', value);\r\n            if(multipleValues) {\r\n              $.each(value, function(index, value){\r\n                values.push(value.replace(regExp.quote, '&quot;'));\r\n              });\r\n              return values;\r\n            }\r\n            return value.replace(regExp.quote, '&quot;');\r\n          },\r\n          string: function(text) {\r\n            text =  String(text);\r\n            return text.replace(regExp.escape, '\\\\$&');\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : $allModules\r\n  ;\r\n};\r\n\r\n$.fn.dropdown.settings = {\r\n\r\n  silent                 : false,\r\n  debug                  : false,\r\n  verbose                : false,\r\n  performance            : true,\r\n\r\n  on                     : 'click',    // what event should show menu action on item selection\r\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\r\n\r\n\r\n  apiSettings            : false,\r\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\r\n  minCharacters          : 0,          // Minimum characters required to trigger API call\r\n\r\n  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\r\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\r\n\r\n  throttle               : 200,        // How long to wait after last user input to search remotely\r\n\r\n  context                : window,     // Context to use when determining if on screen\r\n  direction              : 'auto',     // Whether dropdown should always open in one direction\r\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\r\n\r\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\r\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\r\n\r\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\r\n  preserveHTML           : true,       // preserve html when selecting value\r\n  sortSelect             : false,      // sort selection on init\r\n\r\n  forceSelection         : true,       // force a choice on blur with search selection\r\n\r\n  allowAdditions         : false,      // whether multiple select should allow user added values\r\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\r\n\r\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\r\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\r\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\r\n\r\n  showOnFocus            : true,       // show menu on focus\r\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\r\n  allowTab               : true,       // add tabindex to element\r\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\r\n\r\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\r\n\r\n  transition             : 'auto',     // auto transition will slide down or up based on direction\r\n  duration               : 200,        // duration of transition\r\n\r\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\r\n\r\n  // label settings on multi-select\r\n  label: {\r\n    transition : 'scale',\r\n    duration   : 200,\r\n    variation  : false\r\n  },\r\n\r\n  // delay before event\r\n  delay : {\r\n    hide   : 300,\r\n    show   : 200,\r\n    search : 20,\r\n    touch  : 50\r\n  },\r\n\r\n  /* Callbacks */\r\n  onChange      : function(value, text, $selected){},\r\n  onAdd         : function(value, text, $selected){},\r\n  onRemove      : function(value, text, $selected){},\r\n\r\n  onLabelSelect : function($selectedLabels){},\r\n  onLabelCreate : function(value, text) { return $(this); },\r\n  onLabelRemove : function(value) { return true; },\r\n  onNoResults   : function(searchTerm) { return true; },\r\n  onShow        : function(){},\r\n  onHide        : function(){},\r\n\r\n  /* Component */\r\n  name           : 'Dropdown',\r\n  namespace      : 'dropdown',\r\n\r\n  message: {\r\n    addResult     : 'Add <b>{term}</b>',\r\n    count         : '{count} selected',\r\n    maxSelections : 'Max {maxCount} selections',\r\n    noResults     : 'No results found.',\r\n    serverError   : 'There was an error contacting the server'\r\n  },\r\n\r\n  error : {\r\n    action          : 'You called a dropdown action that was not defined',\r\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\r\n    labels          : 'Allowing user additions currently requires the use of labels.',\r\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\r\n    method          : 'The method you called is not defined.',\r\n    noAPI           : 'The API module is required to load resources remotely',\r\n    noStorage       : 'Saving remote data requires session storage',\r\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\r\n  },\r\n\r\n  regExp : {\r\n    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\r\n    quote    : /\"/g\r\n  },\r\n\r\n  metadata : {\r\n    defaultText     : 'defaultText',\r\n    defaultValue    : 'defaultValue',\r\n    placeholderText : 'placeholder',\r\n    text            : 'text',\r\n    value           : 'value'\r\n  },\r\n\r\n  // property names for remote query\r\n  fields: {\r\n    remoteValues : 'results',  // grouping for api results\r\n    values       : 'values',   // grouping for all dropdown values\r\n    disabled     : 'disabled', // whether value should be disabled\r\n    name         : 'name',     // displayed dropdown text\r\n    value        : 'value',    // actual dropdown value\r\n    text         : 'text'      // displayed text when selected\r\n  },\r\n\r\n  keys : {\r\n    backspace  : 8,\r\n    delimiter  : 188, // comma\r\n    deleteKey  : 46,\r\n    enter      : 13,\r\n    escape     : 27,\r\n    pageUp     : 33,\r\n    pageDown   : 34,\r\n    leftArrow  : 37,\r\n    upArrow    : 38,\r\n    rightArrow : 39,\r\n    downArrow  : 40\r\n  },\r\n\r\n  selector : {\r\n    addition     : '.addition',\r\n    dropdown     : '.ui.dropdown',\r\n    hidden       : '.hidden',\r\n    icon         : '> .dropdown.icon',\r\n    input        : '> input[type=\"hidden\"], > select',\r\n    item         : '.item',\r\n    label        : '> .label',\r\n    remove       : '> .label > .delete.icon',\r\n    siblingLabel : '.label',\r\n    menu         : '.menu',\r\n    message      : '.message',\r\n    menuIcon     : '.dropdown.icon',\r\n    search       : 'input.search, .menu > .search > input, .menu input.search',\r\n    sizer        : '> input.sizer',\r\n    text         : '> .text:not(.icon)',\r\n    unselectable : '.disabled, .filtered'\r\n  },\r\n\r\n  className : {\r\n    active      : 'active',\r\n    addition    : 'addition',\r\n    animating   : 'animating',\r\n    disabled    : 'disabled',\r\n    empty       : 'empty',\r\n    dropdown    : 'ui dropdown',\r\n    filtered    : 'filtered',\r\n    hidden      : 'hidden transition',\r\n    item        : 'item',\r\n    label       : 'ui label',\r\n    loading     : 'loading',\r\n    menu        : 'menu',\r\n    message     : 'message',\r\n    multiple    : 'multiple',\r\n    placeholder : 'default',\r\n    sizer       : 'sizer',\r\n    search      : 'search',\r\n    selected    : 'selected',\r\n    selection   : 'selection',\r\n    upward      : 'upward',\r\n    visible     : 'visible'\r\n  }\r\n\r\n};\r\n\r\n/* Templates */\r\n$.fn.dropdown.settings.templates = {\r\n\r\n  // generates dropdown from select values\r\n  dropdown: function(select) {\r\n    var\r\n      placeholder = select.placeholder || false,\r\n      values      = select.values || {},\r\n      html        = ''\r\n    ;\r\n    html +=  '<i class=\"dropdown icon\"></i>';\r\n    if(select.placeholder) {\r\n      html += '<div class=\"default text\">' + placeholder + '</div>';\r\n    }\r\n    else {\r\n      html += '<div class=\"text\"></div>';\r\n    }\r\n    html += '<div class=\"menu\">';\r\n    $.each(select.values, function(index, option) {\r\n      html += (option.disabled)\r\n        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\r\n        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\r\n      ;\r\n    });\r\n    html += '</div>';\r\n    return html;\r\n  },\r\n\r\n  // generates just menu from select\r\n  menu: function(response, fields) {\r\n    var\r\n      values = response[fields.values] || {},\r\n      html   = ''\r\n    ;\r\n    $.each(values, function(index, option) {\r\n      var\r\n        maybeText = (option[fields.text])\r\n          ? 'data-text=\"' + option[fields.text] + '\"'\r\n          : '',\r\n        maybeDisabled = (option[fields.disabled])\r\n          ? 'disabled '\r\n          : ''\r\n      ;\r\n      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\r\n      html +=   option[fields.name];\r\n      html += '</div>';\r\n    });\r\n    return html;\r\n  },\r\n\r\n  // generates label for multiselect\r\n  label: function(value, text) {\r\n    return text + '<i class=\"delete icon\"></i>';\r\n  },\r\n\r\n\r\n  // generates messages like \"No results\"\r\n  message: function(message) {\r\n    return message;\r\n  },\r\n\r\n  // generates user addition to selection menu\r\n  addition: function(choice) {\r\n    return choice;\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Embed\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.embed = function(parameters) {\r\n\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\r\n          : $.extend({}, $.fn.embed.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        sources         = settings.sources,\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        templates       = settings.templates,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $window         = $(window),\r\n        $module         = $(this),\r\n        $placeholder    = $module.find(selector.placeholder),\r\n        $icon           = $module.find(selector.icon),\r\n        $embed          = $module.find(selector.embed),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing embed');\r\n          module.determine.autoplay();\r\n          module.create();\r\n          module.bind.events();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance of embed');\r\n          module.reset();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $placeholder = $module.find(selector.placeholder);\r\n          $icon        = $module.find(selector.icon);\r\n          $embed       = $module.find(selector.embed);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if( module.has.placeholder() ) {\r\n              module.debug('Adding placeholder events');\r\n              $module\r\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\r\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        create: function() {\r\n          var\r\n            placeholder = module.get.placeholder()\r\n          ;\r\n          if(placeholder) {\r\n            module.createPlaceholder();\r\n          }\r\n          else {\r\n            module.createAndShow();\r\n          }\r\n        },\r\n\r\n        createPlaceholder: function(placeholder) {\r\n          var\r\n            icon  = module.get.icon(),\r\n            url   = module.get.url(),\r\n            embed = module.generate.embed(url)\r\n          ;\r\n          placeholder = placeholder || module.get.placeholder();\r\n          $module.html( templates.placeholder(placeholder, icon) );\r\n          module.debug('Creating placeholder for embed', placeholder, icon);\r\n        },\r\n\r\n        createEmbed: function(url) {\r\n          module.refresh();\r\n          url = url || module.get.url();\r\n          $embed = $('<div/>')\r\n            .addClass(className.embed)\r\n            .html( module.generate.embed(url) )\r\n            .appendTo($module)\r\n          ;\r\n          settings.onCreate.call(element, url);\r\n          module.debug('Creating embed object', $embed);\r\n        },\r\n\r\n        changeEmbed: function(url) {\r\n          $embed\r\n            .html( module.generate.embed(url) )\r\n          ;\r\n        },\r\n\r\n        createAndShow: function() {\r\n          module.createEmbed();\r\n          module.show();\r\n        },\r\n\r\n        // sets new embed\r\n        change: function(source, id, url) {\r\n          module.debug('Changing video to ', source, id, url);\r\n          $module\r\n            .data(metadata.source, source)\r\n            .data(metadata.id, id)\r\n          ;\r\n          if(url) {\r\n            $module.data(metadata.url, url);\r\n          }\r\n          else {\r\n            $module.removeData(metadata.url);\r\n          }\r\n          if(module.has.embed()) {\r\n            module.changeEmbed();\r\n          }\r\n          else {\r\n            module.create();\r\n          }\r\n        },\r\n\r\n        // clears embed\r\n        reset: function() {\r\n          module.debug('Clearing embed and showing placeholder');\r\n          module.remove.active();\r\n          module.remove.embed();\r\n          module.showPlaceholder();\r\n          settings.onReset.call(element);\r\n        },\r\n\r\n        // shows current embed\r\n        show: function() {\r\n          module.debug('Showing embed');\r\n          module.set.active();\r\n          settings.onDisplay.call(element);\r\n        },\r\n\r\n        hide: function() {\r\n          module.debug('Hiding embed');\r\n          module.showPlaceholder();\r\n        },\r\n\r\n        showPlaceholder: function() {\r\n          module.debug('Showing placeholder image');\r\n          module.remove.active();\r\n          settings.onPlaceholderDisplay.call(element);\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return settings.id || $module.data(metadata.id);\r\n          },\r\n          placeholder: function() {\r\n            return settings.placeholder || $module.data(metadata.placeholder);\r\n          },\r\n          icon: function() {\r\n            return (settings.icon)\r\n              ? settings.icon\r\n              : ($module.data(metadata.icon) !== undefined)\r\n                ? $module.data(metadata.icon)\r\n                : module.determine.icon()\r\n            ;\r\n          },\r\n          source: function(url) {\r\n            return (settings.source)\r\n              ? settings.source\r\n              : ($module.data(metadata.source) !== undefined)\r\n                ? $module.data(metadata.source)\r\n                : module.determine.source()\r\n            ;\r\n          },\r\n          type: function() {\r\n            var source = module.get.source();\r\n            return (sources[source] !== undefined)\r\n              ? sources[source].type\r\n              : false\r\n            ;\r\n          },\r\n          url: function() {\r\n            return (settings.url)\r\n              ? settings.url\r\n              : ($module.data(metadata.url) !== undefined)\r\n                ? $module.data(metadata.url)\r\n                : module.determine.url()\r\n            ;\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          autoplay: function() {\r\n            if(module.should.autoplay()) {\r\n              settings.autoplay = true;\r\n            }\r\n          },\r\n          source: function(url) {\r\n            var\r\n              matchedSource = false\r\n            ;\r\n            url = url || module.get.url();\r\n            if(url) {\r\n              $.each(sources, function(name, source) {\r\n                if(url.search(source.domain) !== -1) {\r\n                  matchedSource = name;\r\n                  return false;\r\n                }\r\n              });\r\n            }\r\n            return matchedSource;\r\n          },\r\n          icon: function() {\r\n            var\r\n              source = module.get.source()\r\n            ;\r\n            return (sources[source] !== undefined)\r\n              ? sources[source].icon\r\n              : false\r\n            ;\r\n          },\r\n          url: function() {\r\n            var\r\n              id     = settings.id     || $module.data(metadata.id),\r\n              source = settings.source || $module.data(metadata.source),\r\n              url\r\n            ;\r\n            url = (sources[source] !== undefined)\r\n              ? sources[source].url.replace('{id}', id)\r\n              : false\r\n            ;\r\n            if(url) {\r\n              $module.data(metadata.url, url);\r\n            }\r\n            return url;\r\n          }\r\n        },\r\n\r\n\r\n        set: {\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          embed: function() {\r\n            $embed.empty();\r\n          }\r\n        },\r\n\r\n        encode: {\r\n          parameters: function(parameters) {\r\n            var\r\n              urlString = [],\r\n              index\r\n            ;\r\n            for (index in parameters) {\r\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\r\n            }\r\n            return urlString.join('&amp;');\r\n          }\r\n        },\r\n\r\n        generate: {\r\n          embed: function(url) {\r\n            module.debug('Generating embed html');\r\n            var\r\n              source = module.get.source(),\r\n              html,\r\n              parameters\r\n            ;\r\n            url = module.get.url(url);\r\n            if(url) {\r\n              parameters = module.generate.parameters(source);\r\n              html       = templates.iframe(url, parameters);\r\n            }\r\n            else {\r\n              module.error(error.noURL, $module);\r\n            }\r\n            return html;\r\n          },\r\n          parameters: function(source, extraParameters) {\r\n            var\r\n              parameters = (sources[source] && sources[source].parameters !== undefined)\r\n                ? sources[source].parameters(settings)\r\n                : {}\r\n            ;\r\n            extraParameters = extraParameters || settings.parameters;\r\n            if(extraParameters) {\r\n              parameters = $.extend({}, parameters, extraParameters);\r\n            }\r\n            parameters = settings.onEmbed(parameters);\r\n            return module.encode.parameters(parameters);\r\n          }\r\n        },\r\n\r\n        has: {\r\n          embed: function() {\r\n            return ($embed.length > 0);\r\n          },\r\n          placeholder: function() {\r\n            return settings.placeholder || $module.data(metadata.placeholder);\r\n          }\r\n        },\r\n\r\n        should: {\r\n          autoplay: function() {\r\n            return (settings.autoplay === 'auto')\r\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\r\n              : settings.autoplay\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          video: function() {\r\n            return module.get.type() == 'video';\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.embed.settings = {\r\n\r\n  name        : 'Embed',\r\n  namespace   : 'embed',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  icon     : false,\r\n  source   : false,\r\n  url      : false,\r\n  id       : false,\r\n\r\n  // standard video settings\r\n  autoplay  : 'auto',\r\n  color     : '#444444',\r\n  hd        : true,\r\n  brandedUI : false,\r\n\r\n  // additional parameters to include with the embed\r\n  parameters: false,\r\n\r\n  onDisplay            : function() {},\r\n  onPlaceholderDisplay : function() {},\r\n  onReset              : function() {},\r\n  onCreate             : function(url) {},\r\n  onEmbed              : function(parameters) {\r\n    return parameters;\r\n  },\r\n\r\n  metadata    : {\r\n    id          : 'id',\r\n    icon        : 'icon',\r\n    placeholder : 'placeholder',\r\n    source      : 'source',\r\n    url         : 'url'\r\n  },\r\n\r\n  error : {\r\n    noURL  : 'No URL specified',\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  className : {\r\n    active : 'active',\r\n    embed  : 'embed'\r\n  },\r\n\r\n  selector : {\r\n    embed       : '.embed',\r\n    placeholder : '.placeholder',\r\n    icon        : '.icon'\r\n  },\r\n\r\n  sources: {\r\n    youtube: {\r\n      name   : 'youtube',\r\n      type   : 'video',\r\n      icon   : 'video play',\r\n      domain : 'youtube.com',\r\n      url    : '//www.youtube.com/embed/{id}',\r\n      parameters: function(settings) {\r\n        return {\r\n          autohide       : !settings.brandedUI,\r\n          autoplay       : settings.autoplay,\r\n          color          : settings.color || undefined,\r\n          hq             : settings.hd,\r\n          jsapi          : settings.api,\r\n          modestbranding : !settings.brandedUI\r\n        };\r\n      }\r\n    },\r\n    vimeo: {\r\n      name   : 'vimeo',\r\n      type   : 'video',\r\n      icon   : 'video play',\r\n      domain : 'vimeo.com',\r\n      url    : '//player.vimeo.com/video/{id}',\r\n      parameters: function(settings) {\r\n        return {\r\n          api      : settings.api,\r\n          autoplay : settings.autoplay,\r\n          byline   : settings.brandedUI,\r\n          color    : settings.color || undefined,\r\n          portrait : settings.brandedUI,\r\n          title    : settings.brandedUI\r\n        };\r\n      }\r\n    }\r\n  },\r\n\r\n  templates: {\r\n    iframe : function(url, parameters) {\r\n      var src = url;\r\n      if (parameters) {\r\n          src += '?' + parameters;\r\n      }\r\n      return ''\r\n        + '<iframe src=\"' + src + '\"'\r\n        + ' width=\"100%\" height=\"100%\"'\r\n        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\r\n      ;\r\n    },\r\n    placeholder : function(image, icon) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(icon) {\r\n        html += '<i class=\"' + icon + ' icon\"></i>';\r\n      }\r\n      if(image) {\r\n        html += '<img class=\"placeholder\" src=\"' + image + '\">';\r\n      }\r\n      return html;\r\n    }\r\n  },\r\n\r\n  // NOT YET IMPLEMENTED\r\n  api     : false,\r\n  onPause : function() {},\r\n  onPlay  : function() {},\r\n  onStop  : function() {}\r\n\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Modal\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.modal = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $window        = $(window),\r\n    $document      = $(document),\r\n    $body          = $('body'),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings    = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\r\n          : $.extend({}, $.fn.modal.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n        $close          = $module.find(selector.close),\r\n\r\n        $allModals,\r\n        $otherModals,\r\n        $focusedElement,\r\n        $dimmable,\r\n        $dimmer,\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        ignoreRepeatedEvents = false,\r\n\r\n        elementEventNamespace,\r\n        id,\r\n        observer,\r\n        module\r\n      ;\r\n      module  = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing dimmer', $context);\r\n\r\n          module.create.id();\r\n          module.create.dimmer();\r\n          module.refreshModals();\r\n\r\n          module.bind.events();\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of modal');\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        create: {\r\n          dimmer: function() {\r\n            var\r\n              defaultSettings = {\r\n                debug      : settings.debug,\r\n                dimmerName : 'modals',\r\n                duration   : {\r\n                  show     : settings.duration,\r\n                  hide     : settings.duration\r\n                }\r\n              },\r\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\r\n            ;\r\n            if(settings.inverted) {\r\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\r\n                ? dimmerSettings.variation + ' inverted'\r\n                : 'inverted'\r\n              ;\r\n            }\r\n            if($.fn.dimmer === undefined) {\r\n              module.error(error.dimmer);\r\n              return;\r\n            }\r\n            module.debug('Creating dimmer with settings', dimmerSettings);\r\n            $dimmable = $context.dimmer(dimmerSettings);\r\n            if(settings.detachable) {\r\n              module.verbose('Modal is detachable, moving content into dimmer');\r\n              $dimmable.dimmer('add content', $module);\r\n            }\r\n            else {\r\n              module.set.undetached();\r\n            }\r\n            if(settings.blurring) {\r\n              $dimmable.addClass(className.blurring);\r\n            }\r\n            $dimmer = $dimmable.dimmer('get dimmer');\r\n          },\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\r\n            elementEventNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          }\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous modal');\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n          $window.off(elementEventNamespace);\r\n          $dimmer.off(elementEventNamespace);\r\n          $close.off(eventNamespace);\r\n          $context.dimmer('destroy');\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, refreshing');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.remove.scrolling();\r\n          module.cacheSizes();\r\n          module.set.screenHeight();\r\n          module.set.type();\r\n          module.set.position();\r\n        },\r\n\r\n        refreshModals: function() {\r\n          $otherModals = $module.siblings(selector.modal);\r\n          $allModals   = $otherModals.add($module);\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $toggle = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($toggle.length > 0) {\r\n            module.debug('Attaching modal events to element', selector, event);\r\n            $toggle\r\n              .off(eventNamespace)\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound, selector);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Attaching events');\r\n            $module\r\n              .on('click' + eventNamespace, selector.close, module.event.close)\r\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\r\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\r\n            ;\r\n            $window\r\n              .on('resize' + elementEventNamespace, module.event.resize)\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return (Math.random().toString(16) + '000000000').substr(2,8);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          approve: function() {\r\n            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\r\n              module.verbose('Approve callback returned false cancelling hide');\r\n              return;\r\n            }\r\n            ignoreRepeatedEvents = true;\r\n            module.hide(function() {\r\n              ignoreRepeatedEvents = false;\r\n            });\r\n          },\r\n          deny: function() {\r\n            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\r\n              module.verbose('Deny callback returned false cancelling hide');\r\n              return;\r\n            }\r\n            ignoreRepeatedEvents = true;\r\n            module.hide(function() {\r\n              ignoreRepeatedEvents = false;\r\n            });\r\n          },\r\n          close: function() {\r\n            module.hide();\r\n          },\r\n          click: function(event) {\r\n            var\r\n              $target   = $(event.target),\r\n              isInModal = ($target.closest(selector.modal).length > 0),\r\n              isInDOM   = $.contains(document.documentElement, event.target)\r\n            ;\r\n            if(!isInModal && isInDOM) {\r\n              module.debug('Dimmer clicked, hiding all modals');\r\n              if( module.is.active() ) {\r\n                module.remove.clickaway();\r\n                if(settings.allowMultiple) {\r\n                  module.hide();\r\n                }\r\n                else {\r\n                  module.hideAll();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          debounce: function(method, delay) {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(method, delay);\r\n          },\r\n          keyboard: function(event) {\r\n            var\r\n              keyCode   = event.which,\r\n              escapeKey = 27\r\n            ;\r\n            if(keyCode == escapeKey) {\r\n              if(settings.closable) {\r\n                module.debug('Escape key pressed hiding modal');\r\n                module.hide();\r\n              }\r\n              else {\r\n                module.debug('Escape key pressed, but closable is set to false');\r\n              }\r\n              event.preventDefault();\r\n            }\r\n          },\r\n          resize: function() {\r\n            if( $dimmable.dimmer('is active') ) {\r\n              requestAnimationFrame(module.refresh);\r\n            }\r\n          }\r\n        },\r\n\r\n        toggle: function() {\r\n          if( module.is.active() || module.is.animating() ) {\r\n            module.hide();\r\n          }\r\n          else {\r\n            module.show();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.refreshModals();\r\n          module.showModal(callback);\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.refreshModals();\r\n          module.hideModal(callback);\r\n        },\r\n\r\n        showModal: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.animating() || !module.is.active() ) {\r\n\r\n            module.showDimmer();\r\n            module.cacheSizes();\r\n            module.set.position();\r\n            module.set.screenHeight();\r\n            module.set.type();\r\n            module.set.clickaway();\r\n\r\n            if( !settings.allowMultiple && module.others.active() ) {\r\n              module.hideOthers(module.showModal);\r\n            }\r\n            else {\r\n              settings.onShow.call(element);\r\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                module.debug('Showing modal with css animations');\r\n                $module\r\n                  .transition({\r\n                    debug       : settings.debug,\r\n                    animation   : settings.transition + ' in',\r\n                    queue       : settings.queue,\r\n                    duration    : settings.duration,\r\n                    useFailSafe : true,\r\n                    onComplete : function() {\r\n                      settings.onVisible.apply(element);\r\n                      if(settings.keyboardShortcuts) {\r\n                        module.add.keyboardShortcuts();\r\n                      }\r\n                      module.save.focus();\r\n                      module.set.active();\r\n                      if(settings.autofocus) {\r\n                        module.set.autofocus();\r\n                      }\r\n                      callback();\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.noTransition);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            module.debug('Modal is already visible');\r\n          }\r\n        },\r\n\r\n        hideModal: function(callback, keepDimmed) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.debug('Hiding modal');\r\n          if(settings.onHide.call(element, $(this)) === false) {\r\n            module.verbose('Hide callback returned false cancelling hide');\r\n            return;\r\n          }\r\n\r\n          if( module.is.animating() || module.is.active() ) {\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              module.remove.active();\r\n              $module\r\n                .transition({\r\n                  debug       : settings.debug,\r\n                  animation   : settings.transition + ' out',\r\n                  queue       : settings.queue,\r\n                  duration    : settings.duration,\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    if(!module.others.active() && !keepDimmed) {\r\n                      module.hideDimmer();\r\n                    }\r\n                    if(settings.keyboardShortcuts) {\r\n                      module.remove.keyboardShortcuts();\r\n                    }\r\n                  },\r\n                  onComplete : function() {\r\n                    settings.onHidden.call(element);\r\n                    module.restore.focus();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          }\r\n        },\r\n\r\n        showDimmer: function() {\r\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\r\n            module.debug('Showing dimmer');\r\n            $dimmable.dimmer('show');\r\n          }\r\n          else {\r\n            module.debug('Dimmer already visible');\r\n          }\r\n        },\r\n\r\n        hideDimmer: function() {\r\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\r\n            $dimmable.dimmer('hide', function() {\r\n              module.remove.clickaway();\r\n              module.remove.screenHeight();\r\n            });\r\n          }\r\n          else {\r\n            module.debug('Dimmer is not visible cannot hide');\r\n            return;\r\n          }\r\n        },\r\n\r\n        hideAll: function(callback) {\r\n          var\r\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( $visibleModals.length > 0 ) {\r\n            module.debug('Hiding all visible modals');\r\n            module.hideDimmer();\r\n            $visibleModals\r\n              .modal('hide modal', callback)\r\n            ;\r\n          }\r\n        },\r\n\r\n        hideOthers: function(callback) {\r\n          var\r\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( $visibleModals.length > 0 ) {\r\n            module.debug('Hiding other modals', $otherModals);\r\n            $visibleModals\r\n              .modal('hide modal', callback, true)\r\n            ;\r\n          }\r\n        },\r\n\r\n        others: {\r\n          active: function() {\r\n            return ($otherModals.filter('.' + className.active).length > 0);\r\n          },\r\n          animating: function() {\r\n            return ($otherModals.filter('.' + className.animating).length > 0);\r\n          }\r\n        },\r\n\r\n\r\n        add: {\r\n          keyboardShortcuts: function() {\r\n            module.verbose('Adding keyboard shortcuts');\r\n            $document\r\n              .on('keyup' + eventNamespace, module.event.keyboard)\r\n            ;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          focus: function() {\r\n            $focusedElement = $(document.activeElement).blur();\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          focus: function() {\r\n            if($focusedElement && $focusedElement.length > 0) {\r\n              $focusedElement.focus();\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          clickaway: function() {\r\n            if(settings.closable) {\r\n              $dimmer\r\n                .off('click' + elementEventNamespace)\r\n              ;\r\n            }\r\n          },\r\n          bodyStyle: function() {\r\n            if($body.attr('style') === '') {\r\n              module.verbose('Removing style attribute');\r\n              $body.removeAttr('style');\r\n            }\r\n          },\r\n          screenHeight: function() {\r\n            module.debug('Removing page height');\r\n            $body\r\n              .css('height', '')\r\n            ;\r\n          },\r\n          keyboardShortcuts: function() {\r\n            module.verbose('Removing keyboard shortcuts');\r\n            $document\r\n              .off('keyup' + eventNamespace)\r\n            ;\r\n          },\r\n          scrolling: function() {\r\n            $dimmable.removeClass(className.scrolling);\r\n            $module.removeClass(className.scrolling);\r\n          }\r\n        },\r\n\r\n        cacheSizes: function() {\r\n          var\r\n            modalHeight = $module.outerHeight()\r\n          ;\r\n          if(module.cache === undefined || modalHeight !== 0) {\r\n            module.cache = {\r\n              pageHeight    : $(document).outerHeight(),\r\n              height        : modalHeight + settings.offset,\r\n              contextHeight : (settings.context == 'body')\r\n                ? $(window).height()\r\n                : $dimmable.height()\r\n            };\r\n          }\r\n          module.debug('Caching modal and container sizes', module.cache);\r\n        },\r\n\r\n        can: {\r\n          fit: function() {\r\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return $module.transition('is supported')\r\n              ? $module.transition('is animating')\r\n              : $module.is(':visible')\r\n            ;\r\n          },\r\n          scrolling: function() {\r\n            return $dimmable.hasClass(className.scrolling);\r\n          },\r\n          modernBrowser: function() {\r\n            // appName for IE11 reports 'Netscape' can no longer use\r\n            return !(window.ActiveXObject || \"ActiveXObject\" in window);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          autofocus: function() {\r\n            var\r\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\r\n              $autofocus = $inputs.filter('[autofocus]'),\r\n              $input     = ($autofocus.length > 0)\r\n                ? $autofocus.first()\r\n                : $inputs.first()\r\n            ;\r\n            if($input.length > 0) {\r\n              $input.focus();\r\n            }\r\n          },\r\n          clickaway: function() {\r\n            if(settings.closable) {\r\n              $dimmer\r\n                .on('click' + elementEventNamespace, module.event.click)\r\n              ;\r\n            }\r\n          },\r\n          screenHeight: function() {\r\n            if( module.can.fit() ) {\r\n              $body.css('height', '');\r\n            }\r\n            else {\r\n              module.debug('Modal is taller than page content, resizing page height');\r\n              $body\r\n                .css('height', module.cache.height + (settings.padding * 2) )\r\n              ;\r\n            }\r\n          },\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          },\r\n          scrolling: function() {\r\n            $dimmable.addClass(className.scrolling);\r\n            $module.addClass(className.scrolling);\r\n          },\r\n          type: function() {\r\n            if(module.can.fit()) {\r\n              module.verbose('Modal fits on screen');\r\n              if(!module.others.active() && !module.others.animating()) {\r\n                module.remove.scrolling();\r\n              }\r\n            }\r\n            else {\r\n              module.verbose('Modal cannot fit on screen setting to scrolling');\r\n              module.set.scrolling();\r\n            }\r\n          },\r\n          position: function() {\r\n            module.verbose('Centering modal on page', module.cache);\r\n            if(module.can.fit()) {\r\n              $module\r\n                .css({\r\n                  top: '',\r\n                  marginTop: -(module.cache.height / 2)\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              $module\r\n                .css({\r\n                  marginTop : '',\r\n                  top       : $document.scrollTop()\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          undetached: function() {\r\n            $dimmable.addClass(className.undetached);\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.modal.settings = {\r\n\r\n  name           : 'Modal',\r\n  namespace      : 'modal',\r\n\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : false,\r\n  performance    : true,\r\n\r\n  observeChanges : false,\r\n\r\n  allowMultiple  : false,\r\n  detachable     : true,\r\n  closable       : true,\r\n  autofocus      : true,\r\n\r\n  inverted       : false,\r\n  blurring       : false,\r\n\r\n  dimmerSettings : {\r\n    closable : false,\r\n    useCSS   : true\r\n  },\r\n\r\n  // whether to use keyboard shortcuts\r\n  keyboardShortcuts: true,\r\n\r\n  context    : 'body',\r\n\r\n  queue      : false,\r\n  duration   : 500,\r\n  offset     : 0,\r\n  transition : 'scale',\r\n\r\n  // padding with edge of page\r\n  padding    : 50,\r\n\r\n  // called before show animation\r\n  onShow     : function(){},\r\n\r\n  // called after show animation\r\n  onVisible  : function(){},\r\n\r\n  // called before hide animation\r\n  onHide     : function(){ return true; },\r\n\r\n  // called after hide animation\r\n  onHidden   : function(){},\r\n\r\n  // called after approve selector match\r\n  onApprove  : function(){ return true; },\r\n\r\n  // called after deny selector match\r\n  onDeny     : function(){ return true; },\r\n\r\n  selector    : {\r\n    close    : '> .close',\r\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\r\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\r\n    modal    : '.ui.modal'\r\n  },\r\n  error : {\r\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\r\n    method    : 'The method you called is not defined.',\r\n    notFound  : 'The element you specified could not be found'\r\n  },\r\n  className : {\r\n    active     : 'active',\r\n    animating  : 'animating',\r\n    blurring   : 'blurring',\r\n    scrolling  : 'scrolling',\r\n    undetached : 'undetached'\r\n  }\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Nag\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.nag = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\r\n          : $.extend({}, $.fn.nag.settings),\r\n\r\n        className       = settings.className,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        namespace       = settings.namespace,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = namespace + '-module',\r\n\r\n        $module         = $(this),\r\n\r\n        $close          = $module.find(selector.close),\r\n        $context        = (settings.context)\r\n          ? $(settings.context)\r\n          : $('body'),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        moduleOffset,\r\n        moduleHeight,\r\n\r\n        contextWidth,\r\n        contextHeight,\r\n        contextOffset,\r\n\r\n        yOffset,\r\n        yPosition,\r\n\r\n        timer,\r\n        module,\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); }\r\n      ;\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing element');\r\n\r\n          $module\r\n            .on('click' + eventNamespace, selector.close, module.dismiss)\r\n            .data(moduleNamespace, module)\r\n          ;\r\n\r\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\r\n            $module\r\n              .detach()\r\n              .prependTo($context)\r\n            ;\r\n          }\r\n\r\n          if(settings.displayTime > 0) {\r\n            setTimeout(module.hide, settings.displayTime);\r\n          }\r\n          module.show();\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying instance');\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        show: function() {\r\n          if( module.should.show() && !$module.is(':visible') ) {\r\n            module.debug('Showing nag', settings.animation.show);\r\n            if(settings.animation.show == 'fade') {\r\n              $module\r\n                .fadeIn(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            else {\r\n              $module\r\n                .slideDown(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        hide: function() {\r\n          module.debug('Showing nag', settings.animation.hide);\r\n          if(settings.animation.show == 'fade') {\r\n            $module\r\n              .fadeIn(settings.duration, settings.easing)\r\n            ;\r\n          }\r\n          else {\r\n            $module\r\n              .slideUp(settings.duration, settings.easing)\r\n            ;\r\n          }\r\n        },\r\n\r\n        onHide: function() {\r\n          module.debug('Removing nag', settings.animation.hide);\r\n          $module.remove();\r\n          if (settings.onHide) {\r\n            settings.onHide();\r\n          }\r\n        },\r\n\r\n        dismiss: function(event) {\r\n          if(settings.storageMethod) {\r\n            module.storage.set(settings.key, settings.value);\r\n          }\r\n          module.hide();\r\n          event.stopImmediatePropagation();\r\n          event.preventDefault();\r\n        },\r\n\r\n        should: {\r\n          show: function() {\r\n            if(settings.persist) {\r\n              module.debug('Persistent nag is set, can show nag');\r\n              return true;\r\n            }\r\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\r\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\r\n              return true;\r\n            }\r\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\r\n            return false;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          storageOptions: function() {\r\n            var\r\n              options = {}\r\n            ;\r\n            if(settings.expires) {\r\n              options.expires = settings.expires;\r\n            }\r\n            if(settings.domain) {\r\n              options.domain = settings.domain;\r\n            }\r\n            if(settings.path) {\r\n              options.path = settings.path;\r\n            }\r\n            return options;\r\n          }\r\n        },\r\n\r\n        clear: function() {\r\n          module.storage.remove(settings.key);\r\n        },\r\n\r\n        storage: {\r\n          set: function(key, value) {\r\n            var\r\n              options = module.get.storageOptions()\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              window.localStorage.setItem(key, value);\r\n              module.debug('Value stored using local storage', key, value);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              window.sessionStorage.setItem(key, value);\r\n              module.debug('Value stored using session storage', key, value);\r\n            }\r\n            else if($.cookie !== undefined) {\r\n              $.cookie(key, value, options);\r\n              module.debug('Value stored using cookie', key, value, options);\r\n            }\r\n            else {\r\n              module.error(error.noCookieStorage);\r\n              return;\r\n            }\r\n          },\r\n          get: function(key, value) {\r\n            var\r\n              storedValue\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              storedValue = window.localStorage.getItem(key);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              storedValue = window.sessionStorage.getItem(key);\r\n            }\r\n            // get by cookie\r\n            else if($.cookie !== undefined) {\r\n              storedValue = $.cookie(key);\r\n            }\r\n            else {\r\n              module.error(error.noCookieStorage);\r\n            }\r\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\r\n              storedValue = undefined;\r\n            }\r\n            return storedValue;\r\n          },\r\n          remove: function(key) {\r\n            var\r\n              options = module.get.storageOptions()\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              window.localStorage.removeItem(key);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              window.sessionStorage.removeItem(key);\r\n            }\r\n            // store by cookie\r\n            else if($.cookie !== undefined) {\r\n              $.removeCookie(key, options);\r\n            }\r\n            else {\r\n              module.error(error.noStorage);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.nag.settings = {\r\n\r\n  name        : 'Nag',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  namespace   : 'Nag',\r\n\r\n  // allows cookie to be overridden\r\n  persist     : false,\r\n\r\n  // set to zero to require manually dismissal, otherwise hides on its own\r\n  displayTime : 0,\r\n\r\n  animation   : {\r\n    show : 'slide',\r\n    hide : 'slide'\r\n  },\r\n\r\n  context       : false,\r\n  detachable    : false,\r\n\r\n  expires       : 30,\r\n  domain        : false,\r\n  path          : '/',\r\n\r\n  // type of storage to use\r\n  storageMethod : 'cookie',\r\n\r\n  // value to store in dismissed localstorage/cookie\r\n  key           : 'nag',\r\n  value         : 'dismiss',\r\n\r\n  error: {\r\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\r\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\r\n    method          : 'The method you called is not defined.'\r\n  },\r\n\r\n  className     : {\r\n    bottom : 'bottom',\r\n    fixed  : 'fixed'\r\n  },\r\n\r\n  selector      : {\r\n    close : '.close.icon'\r\n  },\r\n\r\n  speed         : 500,\r\n  easing        : 'easeOutQuad',\r\n\r\n  onHide: function() {}\r\n\r\n};\r\n\r\n// Adds easing\r\n$.extend( $.easing, {\r\n  easeOutQuad: function (x, t, b, c, d) {\r\n    return -c *(t/=d)*(t-2) + b;\r\n  }\r\n});\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Popup\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.popup = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $document      = $(document),\r\n    $window        = $(window),\r\n    $body          = $('body'),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    hasTouch       = (true),\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\r\n          : $.extend({}, $.fn.popup.settings),\r\n\r\n        selector           = settings.selector,\r\n        className          = settings.className,\r\n        error              = settings.error,\r\n        metadata           = settings.metadata,\r\n        namespace          = settings.namespace,\r\n\r\n        eventNamespace     = '.' + settings.namespace,\r\n        moduleNamespace    = 'module-' + namespace,\r\n\r\n        $module            = $(this),\r\n        $context           = $(settings.context),\r\n        $scrollContext     = $(settings.scrollContext),\r\n        $boundary          = $(settings.boundary),\r\n        $target            = (settings.target)\r\n          ? $(settings.target)\r\n          : $module,\r\n\r\n        $popup,\r\n        $offsetParent,\r\n\r\n        searchDepth        = 0,\r\n        triedPositions     = false,\r\n        openedWithTouch    = false,\r\n\r\n        element            = this,\r\n        instance           = $module.data(moduleNamespace),\r\n\r\n        documentObserver,\r\n        elementNamespace,\r\n        id,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        // binds events\r\n        initialize: function() {\r\n          module.debug('Initializing', $module);\r\n          module.createID();\r\n          module.bind.events();\r\n          if(!module.exists() && settings.preserve) {\r\n            module.create();\r\n          }\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            documentObserver = new MutationObserver(module.event.documentChanged);\r\n            documentObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', documentObserver);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          if(settings.popup) {\r\n            $popup = $(settings.popup).eq(0);\r\n          }\r\n          else {\r\n            if(settings.inline) {\r\n              $popup = $target.nextAll(selector.popup).eq(0);\r\n              settings.popup = $popup;\r\n            }\r\n          }\r\n          if(settings.popup) {\r\n            $popup.addClass(className.loading);\r\n            $offsetParent = module.get.offsetParent();\r\n            $popup.removeClass(className.loading);\r\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\r\n              module.debug('Moving popup to the same offset parent as activating element');\r\n              $popup\r\n                .detach()\r\n                .appendTo($offsetParent)\r\n              ;\r\n            }\r\n          }\r\n          else {\r\n            $offsetParent = (settings.inline)\r\n              ? module.get.offsetParent($target)\r\n              : module.has.popup()\r\n                ? module.get.offsetParent($popup)\r\n                : $body\r\n            ;\r\n          }\r\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\r\n            module.debug('Setting page as offset parent');\r\n            $offsetParent = $body;\r\n          }\r\n          if( module.get.variation() ) {\r\n            module.set.variation();\r\n          }\r\n        },\r\n\r\n        reposition: function() {\r\n          module.refresh();\r\n          module.set.position();\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying previous module');\r\n          if(documentObserver) {\r\n            documentObserver.disconnect();\r\n          }\r\n          // remove element only if was created dynamically\r\n          if($popup && !settings.preserve) {\r\n            module.removePopup();\r\n          }\r\n          // clear all timeouts\r\n          clearTimeout(module.hideTimer);\r\n          clearTimeout(module.showTimer);\r\n          // remove events\r\n          module.unbind.close();\r\n          module.unbind.events();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        event: {\r\n          start:  function(event) {\r\n            var\r\n              delay = ($.isPlainObject(settings.delay))\r\n                ? settings.delay.show\r\n                : settings.delay\r\n            ;\r\n            clearTimeout(module.hideTimer);\r\n            if(!openedWithTouch) {\r\n              module.showTimer = setTimeout(module.show, delay);\r\n            }\r\n          },\r\n          end:  function() {\r\n            var\r\n              delay = ($.isPlainObject(settings.delay))\r\n                ? settings.delay.hide\r\n                : settings.delay\r\n            ;\r\n            clearTimeout(module.showTimer);\r\n            module.hideTimer = setTimeout(module.hide, delay);\r\n          },\r\n          touchstart: function(event) {\r\n            openedWithTouch = true;\r\n            module.show();\r\n          },\r\n          resize: function() {\r\n            if( module.is.visible() ) {\r\n              module.set.position();\r\n            }\r\n          },\r\n          documentChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          hideGracefully: function(event) {\r\n            var\r\n              $target = $(event.target),\r\n              isInDOM = $.contains(document.documentElement, event.target),\r\n              inPopup = ($target.closest(selector.popup).length > 0)\r\n            ;\r\n            // don't close on clicks inside popup\r\n            if(event && !inPopup && isInDOM) {\r\n              module.debug('Click occurred outside popup hiding popup');\r\n              module.hide();\r\n            }\r\n            else {\r\n              module.debug('Click was inside popup, keeping popup open');\r\n            }\r\n          }\r\n        },\r\n\r\n        // generates popup html from metadata\r\n        create: function() {\r\n          var\r\n            html      = module.get.html(),\r\n            title     = module.get.title(),\r\n            content   = module.get.content()\r\n          ;\r\n\r\n          if(html || content || title) {\r\n            module.debug('Creating pop-up html');\r\n            if(!html) {\r\n              html = settings.templates.popup({\r\n                title   : title,\r\n                content : content\r\n              });\r\n            }\r\n            $popup = $('<div/>')\r\n              .addClass(className.popup)\r\n              .data(metadata.activator, $module)\r\n              .html(html)\r\n            ;\r\n            if(settings.inline) {\r\n              module.verbose('Inserting popup element inline', $popup);\r\n              $popup\r\n                .insertAfter($module)\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Appending popup element to body', $popup);\r\n              $popup\r\n                .appendTo( $context )\r\n              ;\r\n            }\r\n            module.refresh();\r\n            module.set.variation();\r\n\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n            settings.onCreate.call($popup, element);\r\n          }\r\n          else if($target.next(selector.popup).length !== 0) {\r\n            module.verbose('Pre-existing popup found');\r\n            settings.inline = true;\r\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\r\n            module.refresh();\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n          }\r\n          else if(settings.popup) {\r\n            $(settings.popup).data(metadata.activator, $module);\r\n            module.verbose('Used popup specified in settings');\r\n            module.refresh();\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n          }\r\n          else {\r\n            module.debug('No content specified skipping display', element);\r\n          }\r\n        },\r\n\r\n        createID: function() {\r\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\r\n          elementNamespace = '.' + id;\r\n          module.verbose('Creating unique id for element', id);\r\n        },\r\n\r\n        // determines popup state\r\n        toggle: function() {\r\n          module.debug('Toggling pop-up');\r\n          if( module.is.hidden() ) {\r\n            module.debug('Popup is hidden, showing pop-up');\r\n            module.unbind.close();\r\n            module.show();\r\n          }\r\n          else {\r\n            module.debug('Popup is visible, hiding pop-up');\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = callback || function(){};\r\n          module.debug('Showing pop-up', settings.transition);\r\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\r\n            if( !module.exists() ) {\r\n              module.create();\r\n            }\r\n            if(settings.onShow.call($popup, element) === false) {\r\n              module.debug('onShow callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            else if(!settings.preserve && !settings.popup) {\r\n              module.refresh();\r\n            }\r\n            if( $popup && module.set.position() ) {\r\n              module.save.conditions();\r\n              if(settings.exclusive) {\r\n                module.hideAll();\r\n              }\r\n              module.animate.show(callback);\r\n            }\r\n          }\r\n        },\r\n\r\n\r\n        hide: function(callback) {\r\n          callback = callback || function(){};\r\n          if( module.is.visible() || module.is.animating() ) {\r\n            if(settings.onHide.call($popup, element) === false) {\r\n              module.debug('onHide callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            module.remove.visible();\r\n            module.unbind.close();\r\n            module.restore.conditions();\r\n            module.animate.hide(callback);\r\n          }\r\n        },\r\n\r\n        hideAll: function() {\r\n          $(selector.popup)\r\n            .filter('.' + className.visible)\r\n            .each(function() {\r\n              $(this)\r\n                .data(metadata.activator)\r\n                  .popup('hide')\r\n              ;\r\n            })\r\n          ;\r\n        },\r\n        exists: function() {\r\n          if(!$popup) {\r\n            return false;\r\n          }\r\n          if(settings.inline || settings.popup) {\r\n            return ( module.has.popup() );\r\n          }\r\n          else {\r\n            return ( $popup.closest($context).length >= 1 )\r\n              ? true\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        removePopup: function() {\r\n          if( module.has.popup() && !settings.popup) {\r\n            module.debug('Removing popup', $popup);\r\n            $popup.remove();\r\n            $popup = undefined;\r\n            settings.onRemove.call($popup, element);\r\n          }\r\n        },\r\n\r\n        save: {\r\n          conditions: function() {\r\n            module.cache = {\r\n              title: $module.attr('title')\r\n            };\r\n            if (module.cache.title) {\r\n              $module.removeAttr('title');\r\n            }\r\n            module.verbose('Saving original attributes', module.cache.title);\r\n          }\r\n        },\r\n        restore: {\r\n          conditions: function() {\r\n            if(module.cache && module.cache.title) {\r\n              $module.attr('title', module.cache.title);\r\n              module.verbose('Restoring original attributes', module.cache.title);\r\n            }\r\n            return true;\r\n          }\r\n        },\r\n        supports: {\r\n          svg: function() {\r\n            return (typeof SVGGraphicsElement === undefined);\r\n          }\r\n        },\r\n        animate: {\r\n          show: function(callback) {\r\n            callback = $.isFunction(callback) ? callback : function(){};\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              module.set.visible();\r\n              $popup\r\n                .transition({\r\n                  animation  : settings.transition + ' in',\r\n                  queue      : false,\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    module.bind.close();\r\n                    callback.call($popup, element);\r\n                    settings.onVisible.call($popup, element);\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          },\r\n          hide: function(callback) {\r\n            callback = $.isFunction(callback) ? callback : function(){};\r\n            module.debug('Hiding pop-up');\r\n            if(settings.onHide.call($popup, element) === false) {\r\n              module.debug('onHide callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              $popup\r\n                .transition({\r\n                  animation  : settings.transition + ' out',\r\n                  queue      : false,\r\n                  duration   : settings.duration,\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  onComplete : function() {\r\n                    module.reset();\r\n                    callback.call($popup, element);\r\n                    settings.onHidden.call($popup, element);\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          }\r\n        },\r\n\r\n        change: {\r\n          content: function(html) {\r\n            $popup.html(html);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          html: function() {\r\n            $module.removeData(metadata.html);\r\n            return $module.data(metadata.html) || settings.html;\r\n          },\r\n          title: function() {\r\n            $module.removeData(metadata.title);\r\n            return $module.data(metadata.title) || settings.title;\r\n          },\r\n          content: function() {\r\n            $module.removeData(metadata.content);\r\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\r\n          },\r\n          variation: function() {\r\n            $module.removeData(metadata.variation);\r\n            return $module.data(metadata.variation) || settings.variation;\r\n          },\r\n          popup: function() {\r\n            return $popup;\r\n          },\r\n          popupOffset: function() {\r\n            return $popup.offset();\r\n          },\r\n          calculations: function() {\r\n            var\r\n              targetElement    = $target[0],\r\n              isWindow         = ($boundary[0] == window),\r\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\r\n                ? $target.position()\r\n                : $target.offset(),\r\n              screenPosition = (isWindow)\r\n                ? { top: 0, left: 0 }\r\n                : $boundary.offset(),\r\n              calculations   = {},\r\n              scroll = (isWindow)\r\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\r\n                : { top: 0, left: 0},\r\n              screen\r\n            ;\r\n            calculations = {\r\n              // element which is launching popup\r\n              target : {\r\n                element : $target[0],\r\n                width   : $target.outerWidth(),\r\n                height  : $target.outerHeight(),\r\n                top     : targetPosition.top,\r\n                left    : targetPosition.left,\r\n                margin  : {}\r\n              },\r\n              // popup itself\r\n              popup : {\r\n                width  : $popup.outerWidth(),\r\n                height : $popup.outerHeight()\r\n              },\r\n              // offset container (or 3d context)\r\n              parent : {\r\n                width  : $offsetParent.outerWidth(),\r\n                height : $offsetParent.outerHeight()\r\n              },\r\n              // screen boundaries\r\n              screen : {\r\n                top  : screenPosition.top,\r\n                left : screenPosition.left,\r\n                scroll: {\r\n                  top  : scroll.top,\r\n                  left : scroll.left\r\n                },\r\n                width  : $boundary.width(),\r\n                height : $boundary.height()\r\n              }\r\n            };\r\n\r\n            // add in container calcs if fluid\r\n            if( settings.setFluidWidth && module.is.fluid() ) {\r\n              calculations.container = {\r\n                width: $popup.parent().outerWidth()\r\n              };\r\n              calculations.popup.width = calculations.container.width;\r\n            }\r\n\r\n            // add in margins if inline\r\n            calculations.target.margin.top = (settings.inline)\r\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\r\n              : 0\r\n            ;\r\n            calculations.target.margin.left = (settings.inline)\r\n              ? module.is.rtl()\r\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\r\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\r\n              : 0\r\n            ;\r\n            // calculate screen boundaries\r\n            screen = calculations.screen;\r\n            calculations.boundary = {\r\n              top    : screen.top + screen.scroll.top,\r\n              bottom : screen.top + screen.scroll.top + screen.height,\r\n              left   : screen.left + screen.scroll.left,\r\n              right  : screen.left + screen.scroll.left + screen.width\r\n            };\r\n            return calculations;\r\n          },\r\n          id: function() {\r\n            return id;\r\n          },\r\n          startEvent: function() {\r\n            if(settings.on == 'hover') {\r\n              return 'mouseenter';\r\n            }\r\n            else if(settings.on == 'focus') {\r\n              return 'focus';\r\n            }\r\n            return false;\r\n          },\r\n          scrollEvent: function() {\r\n            return 'scroll';\r\n          },\r\n          endEvent: function() {\r\n            if(settings.on == 'hover') {\r\n              return 'mouseleave';\r\n            }\r\n            else if(settings.on == 'focus') {\r\n              return 'blur';\r\n            }\r\n            return false;\r\n          },\r\n          distanceFromBoundary: function(offset, calculations) {\r\n            var\r\n              distanceFromBoundary = {},\r\n              popup,\r\n              boundary\r\n            ;\r\n            calculations = calculations || module.get.calculations();\r\n\r\n            // shorthand\r\n            popup        = calculations.popup;\r\n            boundary     = calculations.boundary;\r\n\r\n            if(offset) {\r\n              distanceFromBoundary = {\r\n                top    : (offset.top - boundary.top),\r\n                left   : (offset.left - boundary.left),\r\n                right  : (boundary.right - (offset.left + popup.width) ),\r\n                bottom : (boundary.bottom - (offset.top + popup.height) )\r\n              };\r\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\r\n            }\r\n            return distanceFromBoundary;\r\n          },\r\n          offsetParent: function($target) {\r\n            var\r\n              element = ($target !== undefined)\r\n                ? $target[0]\r\n                : $module[0],\r\n              parentNode = element.parentNode,\r\n              $node    = $(parentNode)\r\n            ;\r\n            if(parentNode) {\r\n              var\r\n                is2D     = ($node.css('transform') === 'none'),\r\n                isStatic = ($node.css('position') === 'static'),\r\n                isHTML   = $node.is('html')\r\n              ;\r\n              while(parentNode && !isHTML && isStatic && is2D) {\r\n                parentNode = parentNode.parentNode;\r\n                $node    = $(parentNode);\r\n                is2D     = ($node.css('transform') === 'none');\r\n                isStatic = ($node.css('position') === 'static');\r\n                isHTML   = $node.is('html');\r\n              }\r\n            }\r\n            return ($node && $node.length > 0)\r\n              ? $node\r\n              : $()\r\n            ;\r\n          },\r\n          positions: function() {\r\n            return {\r\n              'top left'      : false,\r\n              'top center'    : false,\r\n              'top right'     : false,\r\n              'bottom left'   : false,\r\n              'bottom center' : false,\r\n              'bottom right'  : false,\r\n              'left center'   : false,\r\n              'right center'  : false\r\n            };\r\n          },\r\n          nextPosition: function(position) {\r\n            var\r\n              positions          = position.split(' '),\r\n              verticalPosition   = positions[0],\r\n              horizontalPosition = positions[1],\r\n              opposite = {\r\n                top    : 'bottom',\r\n                bottom : 'top',\r\n                left   : 'right',\r\n                right  : 'left'\r\n              },\r\n              adjacent = {\r\n                left   : 'center',\r\n                center : 'right',\r\n                right  : 'left'\r\n              },\r\n              backup = {\r\n                'top left'      : 'top center',\r\n                'top center'    : 'top right',\r\n                'top right'     : 'right center',\r\n                'right center'  : 'bottom right',\r\n                'bottom right'  : 'bottom center',\r\n                'bottom center' : 'bottom left',\r\n                'bottom left'   : 'left center',\r\n                'left center'   : 'top left'\r\n              },\r\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\r\n              oppositeTried = false,\r\n              adjacentTried = false,\r\n              nextPosition  = false\r\n            ;\r\n            if(!triedPositions) {\r\n              module.verbose('All available positions available');\r\n              triedPositions = module.get.positions();\r\n            }\r\n\r\n            module.debug('Recording last position tried', position);\r\n            triedPositions[position] = true;\r\n\r\n            if(settings.prefer === 'opposite') {\r\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\r\n              nextPosition  = nextPosition.join(' ');\r\n              oppositeTried = (triedPositions[nextPosition] === true);\r\n              module.debug('Trying opposite strategy', nextPosition);\r\n            }\r\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\r\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\r\n              nextPosition  = nextPosition.join(' ');\r\n              adjacentTried = (triedPositions[nextPosition] === true);\r\n              module.debug('Trying adjacent strategy', nextPosition);\r\n            }\r\n            if(adjacentTried || oppositeTried) {\r\n              module.debug('Using backup position', nextPosition);\r\n              nextPosition = backup[position];\r\n            }\r\n            return nextPosition;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          position: function(position, calculations) {\r\n\r\n            // exit conditions\r\n            if($target.length === 0 || $popup.length === 0) {\r\n              module.error(error.notFound);\r\n              return;\r\n            }\r\n            var\r\n              offset,\r\n              distanceAway,\r\n              target,\r\n              popup,\r\n              parent,\r\n              positioning,\r\n              popupOffset,\r\n              distanceFromBoundary\r\n            ;\r\n\r\n            calculations = calculations || module.get.calculations();\r\n            position     = position     || $module.data(metadata.position) || settings.position;\r\n\r\n            offset       = $module.data(metadata.offset) || settings.offset;\r\n            distanceAway = settings.distanceAway;\r\n\r\n            // shorthand\r\n            target = calculations.target;\r\n            popup  = calculations.popup;\r\n            parent = calculations.parent;\r\n\r\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\r\n              module.debug('Popup target is hidden, no action taken');\r\n              return false;\r\n            }\r\n\r\n            if(settings.inline) {\r\n              module.debug('Adding margin to calculation', target.margin);\r\n              if(position == 'left center' || position == 'right center') {\r\n                offset       +=  target.margin.top;\r\n                distanceAway += -target.margin.left;\r\n              }\r\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\r\n                offset       += target.margin.left;\r\n                distanceAway -= target.margin.top;\r\n              }\r\n              else {\r\n                offset       += target.margin.left;\r\n                distanceAway += target.margin.top;\r\n              }\r\n            }\r\n\r\n            module.debug('Determining popup position from calculations', position, calculations);\r\n\r\n            if (module.is.rtl()) {\r\n              position = position.replace(/left|right/g, function (match) {\r\n                return (match == 'left')\r\n                  ? 'right'\r\n                  : 'left'\r\n                ;\r\n              });\r\n              module.debug('RTL: Popup position updated', position);\r\n            }\r\n\r\n            // if last attempt use specified last resort position\r\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\r\n              position = settings.lastResort;\r\n            }\r\n\r\n            switch (position) {\r\n              case 'top left':\r\n                positioning = {\r\n                  top    : 'auto',\r\n                  bottom : parent.height - target.top + distanceAway,\r\n                  left   : target.left + offset,\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'top center':\r\n                positioning = {\r\n                  bottom : parent.height - target.top + distanceAway,\r\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\r\n                  top    : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'top right':\r\n                positioning = {\r\n                  bottom :  parent.height - target.top + distanceAway,\r\n                  right  :  parent.width - target.left - target.width - offset,\r\n                  top    : 'auto',\r\n                  left   : 'auto'\r\n                };\r\n              break;\r\n              case 'left center':\r\n                positioning = {\r\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\r\n                  right  : parent.width - target.left + distanceAway,\r\n                  left   : 'auto',\r\n                  bottom : 'auto'\r\n                };\r\n              break;\r\n              case 'right center':\r\n                positioning = {\r\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\r\n                  left   : target.left + target.width + distanceAway,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom left':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  left   : target.left + offset,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom center':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom right':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  right  : parent.width - target.left  - target.width - offset,\r\n                  left   : 'auto',\r\n                  bottom : 'auto'\r\n                };\r\n              break;\r\n            }\r\n            if(positioning === undefined) {\r\n              module.error(error.invalidPosition, position);\r\n            }\r\n\r\n            module.debug('Calculated popup positioning values', positioning);\r\n\r\n            // tentatively place on stage\r\n            $popup\r\n              .css(positioning)\r\n              .removeClass(className.position)\r\n              .addClass(position)\r\n              .addClass(className.loading)\r\n            ;\r\n\r\n            popupOffset = module.get.popupOffset();\r\n\r\n            // see if any boundaries are surpassed with this tentative position\r\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\r\n\r\n            if( module.is.offstage(distanceFromBoundary, position) ) {\r\n              module.debug('Position is outside viewport', position);\r\n              if(searchDepth < settings.maxSearchDepth) {\r\n                searchDepth++;\r\n                position = module.get.nextPosition(position);\r\n                module.debug('Trying new position', position);\r\n                return ($popup)\r\n                  ? module.set.position(position, calculations)\r\n                  : false\r\n                ;\r\n              }\r\n              else {\r\n                if(settings.lastResort) {\r\n                  module.debug('No position found, showing with last position');\r\n                }\r\n                else {\r\n                  module.debug('Popup could not find a position to display', $popup);\r\n                  module.error(error.cannotPlace, element);\r\n                  module.remove.attempts();\r\n                  module.remove.loading();\r\n                  module.reset();\r\n                  settings.onUnplaceable.call($popup, element);\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            module.debug('Position is on stage', position);\r\n            module.remove.attempts();\r\n            module.remove.loading();\r\n            if( settings.setFluidWidth && module.is.fluid() ) {\r\n              module.set.fluidWidth(calculations);\r\n            }\r\n            return true;\r\n          },\r\n\r\n          fluidWidth: function(calculations) {\r\n            calculations = calculations || module.get.calculations();\r\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\r\n            $popup.css('width', calculations.container.width);\r\n          },\r\n\r\n          variation: function(variation) {\r\n            variation = variation || module.get.variation();\r\n            if(variation && module.has.popup() ) {\r\n              module.verbose('Adding variation to popup', variation);\r\n              $popup.addClass(variation);\r\n            }\r\n          },\r\n\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          loading: function() {\r\n            $popup.removeClass(className.loading);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || module.get.variation();\r\n            if(variation) {\r\n              module.verbose('Removing variation', variation);\r\n              $popup.removeClass(variation);\r\n            }\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          attempts: function() {\r\n            module.verbose('Resetting all searched positions');\r\n            searchDepth    = 0;\r\n            triedPositions = false;\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.debug('Binding popup events to module');\r\n            if(settings.on == 'click') {\r\n              $module\r\n                .on('click' + eventNamespace, module.toggle)\r\n              ;\r\n            }\r\n            if(settings.on == 'hover' && hasTouch) {\r\n              $module\r\n                .on('touchstart' + eventNamespace, module.event.touchstart)\r\n              ;\r\n            }\r\n            if( module.get.startEvent() ) {\r\n              $module\r\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\r\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\r\n              ;\r\n            }\r\n            if(settings.target) {\r\n              module.debug('Target set to element', $target);\r\n            }\r\n            $window.on('resize' + elementNamespace, module.event.resize);\r\n          },\r\n          popup: function() {\r\n            module.verbose('Allowing hover events on popup to prevent closing');\r\n            if( $popup && module.has.popup() ) {\r\n              $popup\r\n                .on('mouseenter' + eventNamespace, module.event.start)\r\n                .on('mouseleave' + eventNamespace, module.event.end)\r\n              ;\r\n            }\r\n          },\r\n          close: function() {\r\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\r\n              $scrollContext\r\n                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\r\n              ;\r\n            }\r\n            if(settings.on == 'hover' && openedWithTouch) {\r\n              module.verbose('Binding popup close event to document');\r\n              $document\r\n                .on('touchstart' + elementNamespace, function(event) {\r\n                  module.verbose('Touched away from popup');\r\n                  module.event.hideGracefully.call(element, event);\r\n                })\r\n              ;\r\n            }\r\n            if(settings.on == 'click' && settings.closable) {\r\n              module.verbose('Binding popup close event to document');\r\n              $document\r\n                .on('click' + elementNamespace, function(event) {\r\n                  module.verbose('Clicked away from popup');\r\n                  module.event.hideGracefully.call(element, event);\r\n                })\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            $window\r\n              .off(elementNamespace)\r\n            ;\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          },\r\n          close: function() {\r\n            $document\r\n              .off(elementNamespace)\r\n            ;\r\n            $scrollContext\r\n              .off(elementNamespace)\r\n            ;\r\n          },\r\n        },\r\n\r\n        has: {\r\n          popup: function() {\r\n            return ($popup && $popup.length > 0);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          offstage: function(distanceFromBoundary, position) {\r\n            var\r\n              offstage = []\r\n            ;\r\n            // return boundaries that have been surpassed\r\n            $.each(distanceFromBoundary, function(direction, distance) {\r\n              if(distance < -settings.jitter) {\r\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\r\n                offstage.push(direction);\r\n              }\r\n            });\r\n            if(offstage.length > 0) {\r\n              return true;\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          },\r\n          svg: function(element) {\r\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\r\n          },\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\r\n          },\r\n          fluid: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\r\n          },\r\n          visible: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.visible));\r\n          },\r\n          dropdown: function() {\r\n            return $module.hasClass(className.dropdown);\r\n          },\r\n          hidden: function() {\r\n            return !module.is.visible();\r\n          },\r\n          rtl: function () {\r\n            return $module.css('direction') == 'rtl';\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.remove.visible();\r\n          if(settings.preserve) {\r\n            if($.fn.transition !== undefined) {\r\n              $popup\r\n                .transition('remove transition')\r\n              ;\r\n            }\r\n          }\r\n          else {\r\n            module.removePopup();\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.popup.settings = {\r\n\r\n  name           : 'Popup',\r\n\r\n  // module settings\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : false,\r\n  performance    : true,\r\n  namespace      : 'popup',\r\n\r\n  // whether it should use dom mutation observers\r\n  observeChanges : true,\r\n\r\n  // callback only when element added to dom\r\n  onCreate       : function(){},\r\n\r\n  // callback before element removed from dom\r\n  onRemove       : function(){},\r\n\r\n  // callback before show animation\r\n  onShow         : function(){},\r\n\r\n  // callback after show animation\r\n  onVisible      : function(){},\r\n\r\n  // callback before hide animation\r\n  onHide         : function(){},\r\n\r\n  // callback when popup cannot be positioned in visible screen\r\n  onUnplaceable  : function(){},\r\n\r\n  // callback after hide animation\r\n  onHidden       : function(){},\r\n\r\n  // when to show popup\r\n  on             : 'hover',\r\n\r\n  // element to use to determine if popup is out of boundary\r\n  boundary       : window,\r\n\r\n  // whether to add touchstart events when using hover\r\n  addTouchEvents : true,\r\n\r\n  // default position relative to element\r\n  position       : 'top left',\r\n\r\n  // name of variation to use\r\n  variation      : '',\r\n\r\n  // whether popup should be moved to context\r\n  movePopup      : true,\r\n\r\n  // element which popup should be relative to\r\n  target         : false,\r\n\r\n  // jq selector or element that should be used as popup\r\n  popup          : false,\r\n\r\n  // popup should remain inline next to activator\r\n  inline         : false,\r\n\r\n  // popup should be removed from page on hide\r\n  preserve       : false,\r\n\r\n  // popup should not close when being hovered on\r\n  hoverable      : false,\r\n\r\n  // explicitly set content\r\n  content        : false,\r\n\r\n  // explicitly set html\r\n  html           : false,\r\n\r\n  // explicitly set title\r\n  title          : false,\r\n\r\n  // whether automatically close on clickaway when on click\r\n  closable       : true,\r\n\r\n  // automatically hide on scroll\r\n  hideOnScroll   : 'auto',\r\n\r\n  // hide other popups on show\r\n  exclusive      : false,\r\n\r\n  // context to attach popups\r\n  context        : 'body',\r\n\r\n  // context for binding scroll events\r\n  scrollContext  : window,\r\n\r\n  // position to prefer when calculating new position\r\n  prefer         : 'opposite',\r\n\r\n  // specify position to appear even if it doesn't fit\r\n  lastResort     : false,\r\n\r\n  // delay used to prevent accidental refiring of animations due to user error\r\n  delay        : {\r\n    show : 50,\r\n    hide : 70\r\n  },\r\n\r\n  // whether fluid variation should assign width explicitly\r\n  setFluidWidth  : true,\r\n\r\n  // transition settings\r\n  duration       : 200,\r\n  transition     : 'scale',\r\n\r\n  // distance away from activating element in px\r\n  distanceAway   : 0,\r\n\r\n  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\r\n  jitter         : 2,\r\n\r\n  // offset on aligning axis from calculated position\r\n  offset         : 0,\r\n\r\n  // maximum times to look for a position before failing (9 positions total)\r\n  maxSearchDepth : 15,\r\n\r\n  error: {\r\n    invalidPosition : 'The position you specified is not a valid position',\r\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\r\n    method          : 'The method you called is not defined.',\r\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\r\n    notFound        : 'The target or popup you specified does not exist on the page'\r\n  },\r\n\r\n  metadata: {\r\n    activator : 'activator',\r\n    content   : 'content',\r\n    html      : 'html',\r\n    offset    : 'offset',\r\n    position  : 'position',\r\n    title     : 'title',\r\n    variation : 'variation'\r\n  },\r\n\r\n  className   : {\r\n    active    : 'active',\r\n    animating : 'animating',\r\n    dropdown  : 'dropdown',\r\n    fluid     : 'fluid',\r\n    loading   : 'loading',\r\n    popup     : 'ui popup',\r\n    position  : 'top left center bottom right',\r\n    visible   : 'visible'\r\n  },\r\n\r\n  selector    : {\r\n    popup    : '.ui.popup'\r\n  },\r\n\r\n  templates: {\r\n    escape: function(string) {\r\n      var\r\n        badChars     = /[&<>\"'`]/g,\r\n        shouldEscape = /[&<>\"'`]/,\r\n        escape       = {\r\n          \"&\": \"&amp;\",\r\n          \"<\": \"&lt;\",\r\n          \">\": \"&gt;\",\r\n          '\"': \"&quot;\",\r\n          \"'\": \"&#x27;\",\r\n          \"`\": \"&#x60;\"\r\n        },\r\n        escapedChar  = function(chr) {\r\n          return escape[chr];\r\n        }\r\n      ;\r\n      if(shouldEscape.test(string)) {\r\n        return string.replace(badChars, escapedChar);\r\n      }\r\n      return string;\r\n    },\r\n    popup: function(text) {\r\n      var\r\n        html   = '',\r\n        escape = $.fn.popup.settings.templates.escape\r\n      ;\r\n      if(typeof text !== undefined) {\r\n        if(typeof text.title !== undefined && text.title) {\r\n          text.title = escape(text.title);\r\n          html += '<div class=\"header\">' + text.title + '</div>';\r\n        }\r\n        if(typeof text.content !== undefined && text.content) {\r\n          text.content = escape(text.content);\r\n          html += '<div class=\"content\">' + text.content + '</div>';\r\n        }\r\n      }\r\n      return html;\r\n    }\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Progress\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\nvar\r\n  global = (typeof window != 'undefined' && window.Math == Math)\r\n    ? window\r\n    : (typeof self != 'undefined' && self.Math == Math)\r\n      ? self\r\n      : Function('return this')()\r\n;\r\n\r\n$.fn.progress = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\r\n          : $.extend({}, $.fn.progress.settings),\r\n\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $bar            = $(this).find(selector.bar),\r\n        $progress       = $(this).find(selector.progress),\r\n        $label          = $(this).find(selector.label),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        animating = false,\r\n        transitionEnd,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing progress bar', settings);\r\n\r\n          module.set.duration();\r\n          module.set.transitionEvent();\r\n\r\n          module.read.metadata();\r\n          module.read.settings();\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of progress', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n        destroy: function() {\r\n          module.verbose('Destroying previous progress for', $module);\r\n          clearInterval(instance.interval);\r\n          module.remove.state();\r\n          $module.removeData(moduleNamespace);\r\n          instance = undefined;\r\n        },\r\n\r\n        reset: function() {\r\n          module.remove.nextValue();\r\n          module.update.progress(0);\r\n        },\r\n\r\n        complete: function() {\r\n          if(module.percent === undefined || module.percent < 100) {\r\n            module.remove.progressPoll();\r\n            module.set.percent(100);\r\n          }\r\n        },\r\n\r\n        read: {\r\n          metadata: function() {\r\n            var\r\n              data = {\r\n                percent : $module.data(metadata.percent),\r\n                total   : $module.data(metadata.total),\r\n                value   : $module.data(metadata.value)\r\n              }\r\n            ;\r\n            if(data.percent) {\r\n              module.debug('Current percent value set from metadata', data.percent);\r\n              module.set.percent(data.percent);\r\n            }\r\n            if(data.total) {\r\n              module.debug('Total value set from metadata', data.total);\r\n              module.set.total(data.total);\r\n            }\r\n            if(data.value) {\r\n              module.debug('Current value set from metadata', data.value);\r\n              module.set.value(data.value);\r\n              module.set.progress(data.value);\r\n            }\r\n          },\r\n          settings: function() {\r\n            if(settings.total !== false) {\r\n              module.debug('Current total set in settings', settings.total);\r\n              module.set.total(settings.total);\r\n            }\r\n            if(settings.value !== false) {\r\n              module.debug('Current value set in settings', settings.value);\r\n              module.set.value(settings.value);\r\n              module.set.progress(module.value);\r\n            }\r\n            if(settings.percent !== false) {\r\n              module.debug('Current percent set in settings', settings.percent);\r\n              module.set.percent(settings.percent);\r\n            }\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          transitionEnd: function(callback) {\r\n            var\r\n              transitionEnd = module.get.transitionEnd()\r\n            ;\r\n            $bar\r\n              .one(transitionEnd + eventNamespace, function(event) {\r\n                clearTimeout(module.failSafeTimer);\r\n                callback.call(this, event);\r\n              })\r\n            ;\r\n            module.failSafeTimer = setTimeout(function() {\r\n              $bar.triggerHandler(transitionEnd);\r\n            }, settings.duration + settings.failSafeDelay);\r\n            module.verbose('Adding fail safe timer', module.timer);\r\n          }\r\n        },\r\n\r\n        increment: function(incrementValue) {\r\n          var\r\n            maxValue,\r\n            startValue,\r\n            newValue\r\n          ;\r\n          if( module.has.total() ) {\r\n            startValue     = module.get.value();\r\n            incrementValue = incrementValue || 1;\r\n            newValue       = startValue + incrementValue;\r\n          }\r\n          else {\r\n            startValue     = module.get.percent();\r\n            incrementValue = incrementValue || module.get.randomValue();\r\n\r\n            newValue       = startValue + incrementValue;\r\n            maxValue       = 100;\r\n            module.debug('Incrementing percentage by', startValue, newValue);\r\n          }\r\n          newValue = module.get.normalizedValue(newValue);\r\n          module.set.progress(newValue);\r\n        },\r\n        decrement: function(decrementValue) {\r\n          var\r\n            total     = module.get.total(),\r\n            startValue,\r\n            newValue\r\n          ;\r\n          if(total) {\r\n            startValue     =  module.get.value();\r\n            decrementValue =  decrementValue || 1;\r\n            newValue       =  startValue - decrementValue;\r\n            module.debug('Decrementing value by', decrementValue, startValue);\r\n          }\r\n          else {\r\n            startValue     =  module.get.percent();\r\n            decrementValue =  decrementValue || module.get.randomValue();\r\n            newValue       =  startValue - decrementValue;\r\n            module.debug('Decrementing percentage by', decrementValue, startValue);\r\n          }\r\n          newValue = module.get.normalizedValue(newValue);\r\n          module.set.progress(newValue);\r\n        },\r\n\r\n        has: {\r\n          progressPoll: function() {\r\n            return module.progressPoll;\r\n          },\r\n          total: function() {\r\n            return (module.get.total() !== false);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          text: function(templateText) {\r\n            var\r\n              value   = module.value                || 0,\r\n              total   = module.total                || 0,\r\n              percent = (animating)\r\n                ? module.get.displayPercent()\r\n                : module.percent || 0,\r\n              left = (module.total > 0)\r\n                ? (total - value)\r\n                : (100 - percent)\r\n            ;\r\n            templateText = templateText || '';\r\n            templateText = templateText\r\n              .replace('{value}', value)\r\n              .replace('{total}', total)\r\n              .replace('{left}', left)\r\n              .replace('{percent}', percent)\r\n            ;\r\n            module.verbose('Adding variables to progress bar text', templateText);\r\n            return templateText;\r\n          },\r\n\r\n          normalizedValue: function(value) {\r\n            if(value < 0) {\r\n              module.debug('Value cannot decrement below 0');\r\n              return 0;\r\n            }\r\n            if(module.has.total()) {\r\n              if(value > module.total) {\r\n                module.debug('Value cannot increment above total', module.total);\r\n                return module.total;\r\n              }\r\n            }\r\n            else if(value > 100 ) {\r\n              module.debug('Value cannot increment above 100 percent');\r\n              return 100;\r\n            }\r\n            return value;\r\n          },\r\n\r\n          updateInterval: function() {\r\n            if(settings.updateInterval == 'auto') {\r\n              return settings.duration;\r\n            }\r\n            return settings.updateInterval;\r\n          },\r\n\r\n          randomValue: function() {\r\n            module.debug('Generating random increment percentage');\r\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\r\n          },\r\n\r\n          numericValue: function(value) {\r\n            return (typeof value === 'string')\r\n              ? (value.replace(/[^\\d.]/g, '') !== '')\r\n                ? +(value.replace(/[^\\d.]/g, ''))\r\n                : false\r\n              : value\r\n            ;\r\n          },\r\n\r\n          transitionEnd: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          },\r\n\r\n          // gets current displayed percentage (if animating values this is the intermediary value)\r\n          displayPercent: function() {\r\n            var\r\n              barWidth       = $bar.width(),\r\n              totalWidth     = $module.width(),\r\n              minDisplay     = parseInt($bar.css('min-width'), 10),\r\n              displayPercent = (barWidth > minDisplay)\r\n                ? (barWidth / totalWidth * 100)\r\n                : module.percent\r\n            ;\r\n            return (settings.precision > 0)\r\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\r\n              : Math.round(displayPercent)\r\n            ;\r\n          },\r\n\r\n          percent: function() {\r\n            return module.percent || 0;\r\n          },\r\n          value: function() {\r\n            return module.nextValue || module.value || 0;\r\n          },\r\n          total: function() {\r\n            return module.total || false;\r\n          }\r\n        },\r\n\r\n        create: {\r\n          progressPoll: function() {\r\n            module.progressPoll = setTimeout(function() {\r\n              module.update.toNextValue();\r\n              module.remove.progressPoll();\r\n            }, module.get.updateInterval());\r\n          },\r\n        },\r\n\r\n        is: {\r\n          complete: function() {\r\n            return module.is.success() || module.is.warning() || module.is.error();\r\n          },\r\n          success: function() {\r\n            return $module.hasClass(className.success);\r\n          },\r\n          warning: function() {\r\n            return $module.hasClass(className.warning);\r\n          },\r\n          error: function() {\r\n            return $module.hasClass(className.error);\r\n          },\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          visible: function() {\r\n            return $module.is(':visible');\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          progressPoll: function() {\r\n            module.verbose('Removing progress poll timer');\r\n            if(module.progressPoll) {\r\n              clearTimeout(module.progressPoll);\r\n              delete module.progressPoll;\r\n            }\r\n          },\r\n          nextValue: function() {\r\n            module.verbose('Removing progress value stored for next update');\r\n            delete module.nextValue;\r\n          },\r\n          state: function() {\r\n            module.verbose('Removing stored state');\r\n            delete module.total;\r\n            delete module.percent;\r\n            delete module.value;\r\n          },\r\n          active: function() {\r\n            module.verbose('Removing active state');\r\n            $module.removeClass(className.active);\r\n          },\r\n          success: function() {\r\n            module.verbose('Removing success state');\r\n            $module.removeClass(className.success);\r\n          },\r\n          warning: function() {\r\n            module.verbose('Removing warning state');\r\n            $module.removeClass(className.warning);\r\n          },\r\n          error: function() {\r\n            module.verbose('Removing error state');\r\n            $module.removeClass(className.error);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          barWidth: function(value) {\r\n            if(value > 100) {\r\n              module.error(error.tooHigh, value);\r\n            }\r\n            else if (value < 0) {\r\n              module.error(error.tooLow, value);\r\n            }\r\n            else {\r\n              $bar\r\n                .css('width', value + '%')\r\n              ;\r\n              $module\r\n                .attr('data-percent', parseInt(value, 10))\r\n              ;\r\n            }\r\n          },\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            module.verbose('Setting progress bar transition duration', duration);\r\n            $bar\r\n              .css({\r\n                'transition-duration':  duration\r\n              })\r\n            ;\r\n          },\r\n          percent: function(percent) {\r\n            percent = (typeof percent == 'string')\r\n              ? +(percent.replace('%', ''))\r\n              : percent\r\n            ;\r\n            // round display percentage\r\n            percent = (settings.precision > 0)\r\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\r\n              : Math.round(percent)\r\n            ;\r\n            module.percent = percent;\r\n            if( !module.has.total() ) {\r\n              module.value = (settings.precision > 0)\r\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\r\n                : Math.round( (percent / 100) * module.total * 10) / 10\r\n              ;\r\n              if(settings.limitValues) {\r\n                module.value = (module.value > 100)\r\n                  ? 100\r\n                  : (module.value < 0)\r\n                    ? 0\r\n                    : module.value\r\n                ;\r\n              }\r\n            }\r\n            module.set.barWidth(percent);\r\n            module.set.labelInterval();\r\n            module.set.labels();\r\n            settings.onChange.call(element, percent, module.value, module.total);\r\n          },\r\n          labelInterval: function() {\r\n            var\r\n              animationCallback = function() {\r\n                module.verbose('Bar finished animating, removing continuous label updates');\r\n                clearInterval(module.interval);\r\n                animating = false;\r\n                module.set.labels();\r\n              }\r\n            ;\r\n            clearInterval(module.interval);\r\n            module.bind.transitionEnd(animationCallback);\r\n            animating = true;\r\n            module.interval = setInterval(function() {\r\n              var\r\n                isInDOM = $.contains(document.documentElement, element)\r\n              ;\r\n              if(!isInDOM) {\r\n                clearInterval(module.interval);\r\n                animating = false;\r\n              }\r\n              module.set.labels();\r\n            }, settings.framerate);\r\n          },\r\n          labels: function() {\r\n            module.verbose('Setting both bar progress and outer label text');\r\n            module.set.barLabel();\r\n            module.set.state();\r\n          },\r\n          label: function(text) {\r\n            text = text || '';\r\n            if(text) {\r\n              text = module.get.text(text);\r\n              module.verbose('Setting label to text', text);\r\n              $label.text(text);\r\n            }\r\n          },\r\n          state: function(percent) {\r\n            percent = (percent !== undefined)\r\n              ? percent\r\n              : module.percent\r\n            ;\r\n            if(percent === 100) {\r\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\r\n                module.set.success();\r\n                module.debug('Automatically triggering success at 100%');\r\n              }\r\n              else {\r\n                module.verbose('Reached 100% removing active state');\r\n                module.remove.active();\r\n                module.remove.progressPoll();\r\n              }\r\n            }\r\n            else if(percent > 0) {\r\n              module.verbose('Adjusting active progress bar label', percent);\r\n              module.set.active();\r\n            }\r\n            else {\r\n              module.remove.active();\r\n              module.set.label(settings.text.active);\r\n            }\r\n          },\r\n          barLabel: function(text) {\r\n            if(text !== undefined) {\r\n              $progress.text( module.get.text(text) );\r\n            }\r\n            else if(settings.label == 'ratio' && module.total) {\r\n              module.verbose('Adding ratio to bar label');\r\n              $progress.text( module.get.text(settings.text.ratio) );\r\n            }\r\n            else if(settings.label == 'percent') {\r\n              module.verbose('Adding percentage to bar label');\r\n              $progress.text( module.get.text(settings.text.percent) );\r\n            }\r\n          },\r\n          active: function(text) {\r\n            text = text || settings.text.active;\r\n            module.debug('Setting active state');\r\n            if(settings.showActivity && !module.is.active() ) {\r\n              $module.addClass(className.active);\r\n            }\r\n            module.remove.warning();\r\n            module.remove.error();\r\n            module.remove.success();\r\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onActive.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          success : function(text) {\r\n            text = text || settings.text.success || settings.text.active;\r\n            module.debug('Setting success state');\r\n            $module.addClass(className.success);\r\n            module.remove.active();\r\n            module.remove.warning();\r\n            module.remove.error();\r\n            module.complete();\r\n            if(settings.text.success) {\r\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\r\n              module.set.label(text);\r\n            }\r\n            else {\r\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onSuccess.call(element, module.total);\r\n            });\r\n          },\r\n          warning : function(text) {\r\n            text = text || settings.text.warning;\r\n            module.debug('Setting warning state');\r\n            $module.addClass(className.warning);\r\n            module.remove.active();\r\n            module.remove.success();\r\n            module.remove.error();\r\n            module.complete();\r\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onWarning.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          error : function(text) {\r\n            text = text || settings.text.error;\r\n            module.debug('Setting error state');\r\n            $module.addClass(className.error);\r\n            module.remove.active();\r\n            module.remove.success();\r\n            module.remove.warning();\r\n            module.complete();\r\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onError.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          transitionEvent: function() {\r\n            transitionEnd = module.get.transitionEnd();\r\n          },\r\n          total: function(totalValue) {\r\n            module.total = totalValue;\r\n          },\r\n          value: function(value) {\r\n            module.value = value;\r\n          },\r\n          progress: function(value) {\r\n            if(!module.has.progressPoll()) {\r\n              module.debug('First update in progress update interval, immediately updating', value);\r\n              module.update.progress(value);\r\n              module.create.progressPoll();\r\n            }\r\n            else {\r\n              module.debug('Updated within interval, setting next update to use new value', value);\r\n              module.set.nextValue(value);\r\n            }\r\n          },\r\n          nextValue: function(value) {\r\n            module.nextValue = value;\r\n          }\r\n        },\r\n\r\n        update: {\r\n          toNextValue: function() {\r\n            var\r\n              nextValue = module.nextValue\r\n            ;\r\n            if(nextValue) {\r\n              module.debug('Update interval complete using last updated value', nextValue);\r\n              module.update.progress(nextValue);\r\n              module.remove.nextValue();\r\n            }\r\n          },\r\n          progress: function(value) {\r\n            var\r\n              percentComplete\r\n            ;\r\n            value = module.get.numericValue(value);\r\n            if(value === false) {\r\n              module.error(error.nonNumeric, value);\r\n            }\r\n            value = module.get.normalizedValue(value);\r\n            if( module.has.total() ) {\r\n              module.set.value(value);\r\n              percentComplete = (value / module.total) * 100;\r\n              module.debug('Calculating percent complete from total', percentComplete);\r\n              module.set.percent( percentComplete );\r\n            }\r\n            else {\r\n              percentComplete = value;\r\n              module.debug('Setting value to exact percentage value', percentComplete);\r\n              module.set.percent( percentComplete );\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.progress.settings = {\r\n\r\n  name         : 'Progress',\r\n  namespace    : 'progress',\r\n\r\n  silent       : false,\r\n  debug        : false,\r\n  verbose      : false,\r\n  performance  : true,\r\n\r\n  random       : {\r\n    min : 2,\r\n    max : 5\r\n  },\r\n\r\n  duration       : 300,\r\n\r\n  updateInterval : 'auto',\r\n\r\n  autoSuccess    : true,\r\n  showActivity   : true,\r\n  limitValues    : true,\r\n\r\n  label          : 'percent',\r\n  precision      : 0,\r\n  framerate      : (1000 / 30), /// 30 fps\r\n\r\n  percent        : false,\r\n  total          : false,\r\n  value          : false,\r\n\r\n  // delay in ms for fail safe animation callback\r\n  failSafeDelay : 100,\r\n\r\n  onLabelUpdate : function(state, text, value, total){\r\n    return text;\r\n  },\r\n  onChange      : function(percent, value, total){},\r\n  onSuccess     : function(total){},\r\n  onActive      : function(value, total){},\r\n  onError       : function(value, total){},\r\n  onWarning     : function(value, total){},\r\n\r\n  error    : {\r\n    method     : 'The method you called is not defined.',\r\n    nonNumeric : 'Progress value is non numeric',\r\n    tooHigh    : 'Value specified is above 100%',\r\n    tooLow     : 'Value specified is below 0%'\r\n  },\r\n\r\n  regExp: {\r\n    variable: /\\{\\$*[A-z0-9]+\\}/g\r\n  },\r\n\r\n  metadata: {\r\n    percent : 'percent',\r\n    total   : 'total',\r\n    value   : 'value'\r\n  },\r\n\r\n  selector : {\r\n    bar      : '> .bar',\r\n    label    : '> .label',\r\n    progress : '.bar > .progress'\r\n  },\r\n\r\n  text : {\r\n    active  : false,\r\n    error   : false,\r\n    success : false,\r\n    warning : false,\r\n    percent : '{percent}%',\r\n    ratio   : '{value} of {total}'\r\n  },\r\n\r\n  className : {\r\n    active  : 'active',\r\n    error   : 'error',\r\n    success : 'success',\r\n    warning : 'warning'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Rating\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.rating = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\r\n          : $.extend({}, $.fn.rating.settings),\r\n\r\n        namespace       = settings.namespace,\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        element         = this,\r\n        instance        = $(this).data(moduleNamespace),\r\n\r\n        $module         = $(this),\r\n        $icon           = $module.find(selector.icon),\r\n\r\n        initialLoad,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing rating module', settings);\r\n\r\n          if($icon.length === 0) {\r\n            module.setup.layout();\r\n          }\r\n\r\n          if(settings.interactive) {\r\n            module.enable();\r\n          }\r\n          else {\r\n            module.disable();\r\n          }\r\n          module.set.initialLoad();\r\n          module.set.rating( module.get.initialRating() );\r\n          module.remove.initialLoad();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Instantiating module', settings);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance', instance);\r\n          module.remove.events();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          $icon   = $module.find(selector.icon);\r\n        },\r\n\r\n        setup: {\r\n          layout: function() {\r\n            var\r\n              maxRating = module.get.maxRating(),\r\n              html      = $.fn.rating.settings.templates.icon(maxRating)\r\n            ;\r\n            module.debug('Generating icon html dynamically');\r\n            $module\r\n              .html(html)\r\n            ;\r\n            module.refresh();\r\n          }\r\n        },\r\n\r\n        event: {\r\n          mouseenter: function() {\r\n            var\r\n              $activeIcon = $(this)\r\n            ;\r\n            $activeIcon\r\n              .nextAll()\r\n                .removeClass(className.selected)\r\n            ;\r\n            $module\r\n              .addClass(className.selected)\r\n            ;\r\n            $activeIcon\r\n              .addClass(className.selected)\r\n                .prevAll()\r\n                .addClass(className.selected)\r\n            ;\r\n          },\r\n          mouseleave: function() {\r\n            $module\r\n              .removeClass(className.selected)\r\n            ;\r\n            $icon\r\n              .removeClass(className.selected)\r\n            ;\r\n          },\r\n          click: function() {\r\n            var\r\n              $activeIcon   = $(this),\r\n              currentRating = module.get.rating(),\r\n              rating        = $icon.index($activeIcon) + 1,\r\n              canClear      = (settings.clearable == 'auto')\r\n               ? ($icon.length === 1)\r\n               : settings.clearable\r\n            ;\r\n            if(canClear && currentRating == rating) {\r\n              module.clearRating();\r\n            }\r\n            else {\r\n              module.set.rating( rating );\r\n            }\r\n          }\r\n        },\r\n\r\n        clearRating: function() {\r\n          module.debug('Clearing current rating');\r\n          module.set.rating(0);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding events');\r\n            $module\r\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\r\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\r\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          events: function() {\r\n            module.verbose('Removing events');\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          module.debug('Setting rating to interactive mode');\r\n          module.bind.events();\r\n          $module\r\n            .removeClass(className.disabled)\r\n          ;\r\n        },\r\n\r\n        disable: function() {\r\n          module.debug('Setting rating to read-only mode');\r\n          module.remove.events();\r\n          $module\r\n            .addClass(className.disabled)\r\n          ;\r\n        },\r\n\r\n        is: {\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          initialRating: function() {\r\n            if($module.data(metadata.rating) !== undefined) {\r\n              $module.removeData(metadata.rating);\r\n              return $module.data(metadata.rating);\r\n            }\r\n            return settings.initialRating;\r\n          },\r\n          maxRating: function() {\r\n            if($module.data(metadata.maxRating) !== undefined) {\r\n              $module.removeData(metadata.maxRating);\r\n              return $module.data(metadata.maxRating);\r\n            }\r\n            return settings.maxRating;\r\n          },\r\n          rating: function() {\r\n            var\r\n              currentRating = $icon.filter('.' + className.active).length\r\n            ;\r\n            module.verbose('Current rating retrieved', currentRating);\r\n            return currentRating;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          rating: function(rating) {\r\n            var\r\n              ratingIndex = (rating - 1 >= 0)\r\n                ? (rating - 1)\r\n                : 0,\r\n              $activeIcon = $icon.eq(ratingIndex)\r\n            ;\r\n            $module\r\n              .removeClass(className.selected)\r\n            ;\r\n            $icon\r\n              .removeClass(className.selected)\r\n              .removeClass(className.active)\r\n            ;\r\n            if(rating > 0) {\r\n              module.verbose('Setting current rating to', rating);\r\n              $activeIcon\r\n                .prevAll()\r\n                .addBack()\r\n                  .addClass(className.active)\r\n              ;\r\n            }\r\n            if(!module.is.initialLoad()) {\r\n              settings.onRate.call(element, rating);\r\n            }\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = true;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.rating.settings = {\r\n\r\n  name          : 'Rating',\r\n  namespace     : 'rating',\r\n\r\n  slent         : false,\r\n  debug         : false,\r\n  verbose       : false,\r\n  performance   : true,\r\n\r\n  initialRating : 0,\r\n  interactive   : true,\r\n  maxRating     : 4,\r\n  clearable     : 'auto',\r\n\r\n  fireOnInit    : false,\r\n\r\n  onRate        : function(rating){},\r\n\r\n  error         : {\r\n    method    : 'The method you called is not defined',\r\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\r\n  },\r\n\r\n\r\n  metadata: {\r\n    rating    : 'rating',\r\n    maxRating : 'maxRating'\r\n  },\r\n\r\n  className : {\r\n    active   : 'active',\r\n    disabled : 'disabled',\r\n    selected : 'selected',\r\n    loading  : 'loading'\r\n  },\r\n\r\n  selector  : {\r\n    icon : '.icon'\r\n  },\r\n\r\n  templates: {\r\n    icon: function(maxRating) {\r\n      var\r\n        icon = 1,\r\n        html = ''\r\n      ;\r\n      while(icon <= maxRating) {\r\n        html += '<i class=\"icon\"></i>';\r\n        icon++;\r\n      }\r\n      return html;\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Search\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.search = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $(this)\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\r\n          : $.extend({}, $.fn.search.settings),\r\n\r\n        className        = settings.className,\r\n        metadata         = settings.metadata,\r\n        regExp           = settings.regExp,\r\n        fields           = settings.fields,\r\n        selector         = settings.selector,\r\n        error            = settings.error,\r\n        namespace        = settings.namespace,\r\n\r\n        eventNamespace   = '.' + namespace,\r\n        moduleNamespace  = namespace + '-module',\r\n\r\n        $module          = $(this),\r\n        $prompt          = $module.find(selector.prompt),\r\n        $searchButton    = $module.find(selector.searchButton),\r\n        $results         = $module.find(selector.results),\r\n        $result          = $module.find(selector.result),\r\n        $category        = $module.find(selector.category),\r\n\r\n        element          = this,\r\n        instance         = $module.data(moduleNamespace),\r\n\r\n        disabledBubbled  = false,\r\n        resultsDismissed = false,\r\n\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module');\r\n          module.determine.searchFields();\r\n          module.bind.events();\r\n          module.set.type();\r\n          module.create.results();\r\n          module.instantiate();\r\n        },\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n        destroy: function() {\r\n          module.verbose('Destroying instance');\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.debug('Refreshing selector cache');\r\n          $prompt         = $module.find(selector.prompt);\r\n          $searchButton   = $module.find(selector.searchButton);\r\n          $category       = $module.find(selector.category);\r\n          $results        = $module.find(selector.results);\r\n          $result         = $module.find(selector.result);\r\n        },\r\n\r\n        refreshResults: function() {\r\n          $results = $module.find(selector.results);\r\n          $result  = $module.find(selector.result);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding events to search');\r\n            if(settings.automatic) {\r\n              $module\r\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\r\n              ;\r\n              $prompt\r\n                .attr('autocomplete', 'off')\r\n              ;\r\n            }\r\n            $module\r\n              // prompt\r\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\r\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\r\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\r\n              // search button\r\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\r\n              // results\r\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\r\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\r\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          searchFields: function() {\r\n            // this makes sure $.extend does not add specified search fields to default fields\r\n            // this is the only setting which should not extend defaults\r\n            if(parameters && parameters.searchFields !== undefined) {\r\n              settings.searchFields = parameters.searchFields;\r\n            }\r\n          }\r\n        },\r\n\r\n        event: {\r\n          input: function() {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.query, settings.searchDelay);\r\n          },\r\n          focus: function() {\r\n            module.set.focus();\r\n            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\r\n              module.query(function() {\r\n                if(module.can.show() ) {\r\n                  module.showResults();\r\n                }\r\n              });\r\n            }\r\n          },\r\n          blur: function(event) {\r\n            var\r\n              pageLostFocus = (document.activeElement === this),\r\n              callback      = function() {\r\n                module.cancel.query();\r\n                module.remove.focus();\r\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\r\n              }\r\n            ;\r\n            if(pageLostFocus) {\r\n              return;\r\n            }\r\n            resultsDismissed = false;\r\n            if(module.resultsClicked) {\r\n              module.debug('Determining if user action caused search to close');\r\n              $module\r\n                .one('click.close' + eventNamespace, selector.results, function(event) {\r\n                  if(module.is.inMessage(event) || disabledBubbled) {\r\n                    $prompt.focus();\r\n                    return;\r\n                  }\r\n                  disabledBubbled = false;\r\n                  if( !module.is.animating() && !module.is.hidden()) {\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Input blurred without user action, closing results');\r\n              callback();\r\n            }\r\n          },\r\n          result: {\r\n            mousedown: function() {\r\n              module.resultsClicked = true;\r\n            },\r\n            mouseup: function() {\r\n              module.resultsClicked = false;\r\n            },\r\n            click: function(event) {\r\n              module.debug('Search result selected');\r\n              var\r\n                $result = $(this),\r\n                $title  = $result.find(selector.title).eq(0),\r\n                $link   = $result.is('a[href]')\r\n                  ? $result\r\n                  : $result.find('a[href]').eq(0),\r\n                href    = $link.attr('href')   || false,\r\n                target  = $link.attr('target') || false,\r\n                title   = $title.html(),\r\n                // title is used for result lookup\r\n                value   = ($title.length > 0)\r\n                  ? $title.text()\r\n                  : false,\r\n                results = module.get.results(),\r\n                result  = $result.data(metadata.result) || module.get.result(value, results),\r\n                returnedValue\r\n              ;\r\n              if( $.isFunction(settings.onSelect) ) {\r\n                if(settings.onSelect.call(element, result, results) === false) {\r\n                  module.debug('Custom onSelect callback cancelled default select action');\r\n                  disabledBubbled = true;\r\n                  return;\r\n                }\r\n              }\r\n              module.hideResults();\r\n              if(value) {\r\n                module.set.value(value);\r\n              }\r\n              if(href) {\r\n                module.verbose('Opening search link found in result', $link);\r\n                if(target == '_blank' || event.ctrlKey) {\r\n                  window.open(href);\r\n                }\r\n                else {\r\n                  window.location.href = (href);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        handleKeyboard: function(event) {\r\n          var\r\n            // force selector refresh\r\n            $result         = $module.find(selector.result),\r\n            $category       = $module.find(selector.category),\r\n            $activeResult   = $result.filter('.' + className.active),\r\n            currentIndex    = $result.index( $activeResult ),\r\n            resultSize      = $result.length,\r\n            hasActiveResult = $activeResult.length > 0,\r\n\r\n            keyCode         = event.which,\r\n            keys            = {\r\n              backspace : 8,\r\n              enter     : 13,\r\n              escape    : 27,\r\n              upArrow   : 38,\r\n              downArrow : 40\r\n            },\r\n            newIndex\r\n          ;\r\n          // search shortcuts\r\n          if(keyCode == keys.escape) {\r\n            module.verbose('Escape key pressed, blurring search field');\r\n            module.hideResults();\r\n            resultsDismissed = true;\r\n          }\r\n          if( module.is.visible() ) {\r\n            if(keyCode == keys.enter) {\r\n              module.verbose('Enter key pressed, selecting active result');\r\n              if( $result.filter('.' + className.active).length > 0 ) {\r\n                module.event.result.click.call($result.filter('.' + className.active), event);\r\n                event.preventDefault();\r\n                return false;\r\n              }\r\n            }\r\n            else if(keyCode == keys.upArrow && hasActiveResult) {\r\n              module.verbose('Up key pressed, changing active result');\r\n              newIndex = (currentIndex - 1 < 0)\r\n                ? currentIndex\r\n                : currentIndex - 1\r\n              ;\r\n              $category\r\n                .removeClass(className.active)\r\n              ;\r\n              $result\r\n                .removeClass(className.active)\r\n                .eq(newIndex)\r\n                  .addClass(className.active)\r\n                  .closest($category)\r\n                    .addClass(className.active)\r\n              ;\r\n              event.preventDefault();\r\n            }\r\n            else if(keyCode == keys.downArrow) {\r\n              module.verbose('Down key pressed, changing active result');\r\n              newIndex = (currentIndex + 1 >= resultSize)\r\n                ? currentIndex\r\n                : currentIndex + 1\r\n              ;\r\n              $category\r\n                .removeClass(className.active)\r\n              ;\r\n              $result\r\n                .removeClass(className.active)\r\n                .eq(newIndex)\r\n                  .addClass(className.active)\r\n                  .closest($category)\r\n                    .addClass(className.active)\r\n              ;\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          else {\r\n            // query shortcuts\r\n            if(keyCode == keys.enter) {\r\n              module.verbose('Enter key pressed, executing query');\r\n              module.query();\r\n              module.set.buttonPressed();\r\n              $prompt.one('keyup', module.remove.buttonFocus);\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          api: function(searchTerm, callback) {\r\n            var\r\n              apiSettings = {\r\n                debug             : settings.debug,\r\n                on                : false,\r\n                cache             : true,\r\n                action            : 'search',\r\n                urlData           : {\r\n                  query : searchTerm\r\n                },\r\n                onSuccess         : function(response) {\r\n                  module.parse.response.call(element, response, searchTerm);\r\n                  callback();\r\n                },\r\n                onFailure         : function() {\r\n                  module.displayMessage(error.serverError);\r\n                  callback();\r\n                },\r\n                onAbort : function(response) {\r\n                },\r\n                onError           : module.error\r\n              },\r\n              searchHTML\r\n            ;\r\n            $.extend(true, apiSettings, settings.apiSettings);\r\n            module.verbose('Setting up API request', apiSettings);\r\n            $module.api(apiSettings);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          useAPI: function() {\r\n            return $.fn.api !== undefined;\r\n          },\r\n          show: function() {\r\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\r\n          },\r\n          transition: function() {\r\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\r\n          }\r\n        },\r\n\r\n        is: {\r\n          animating: function() {\r\n            return $results.hasClass(className.animating);\r\n          },\r\n          hidden: function() {\r\n            return $results.hasClass(className.hidden);\r\n          },\r\n          inMessage: function(event) {\r\n            if(!event.target) {\r\n              return;\r\n            }\r\n            var\r\n              $target = $(event.target),\r\n              isInDOM = $.contains(document.documentElement, event.target)\r\n            ;\r\n            return (isInDOM && $target.closest(selector.message).length > 0);\r\n          },\r\n          empty: function() {\r\n            return ($results.html() === '');\r\n          },\r\n          visible: function() {\r\n            return ($results.filter(':visible').length > 0);\r\n          },\r\n          focused: function() {\r\n            return ($prompt.filter(':focus').length > 0);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          inputEvent: function() {\r\n            var\r\n              prompt = $prompt[0],\r\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\r\n                ? 'input'\r\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\r\n                  ? 'propertychange'\r\n                  : 'keyup'\r\n            ;\r\n            return inputEvent;\r\n          },\r\n          value: function() {\r\n            return $prompt.val();\r\n          },\r\n          results: function() {\r\n            var\r\n              results = $module.data(metadata.results)\r\n            ;\r\n            return results;\r\n          },\r\n          result: function(value, results) {\r\n            var\r\n              lookupFields = ['title', 'id'],\r\n              result       = false\r\n            ;\r\n            value = (value !== undefined)\r\n              ? value\r\n              : module.get.value()\r\n            ;\r\n            results = (results !== undefined)\r\n              ? results\r\n              : module.get.results()\r\n            ;\r\n            if(settings.type === 'category') {\r\n              module.debug('Finding result that matches', value);\r\n              $.each(results, function(index, category) {\r\n                if($.isArray(category.results)) {\r\n                  result = module.search.object(value, category.results, lookupFields)[0];\r\n                  // don't continue searching if a result is found\r\n                  if(result) {\r\n                    return false;\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            else {\r\n              module.debug('Finding result in results object', value);\r\n              result = module.search.object(value, results, lookupFields)[0];\r\n            }\r\n            return result || false;\r\n          },\r\n        },\r\n\r\n        select: {\r\n          firstResult: function() {\r\n            module.verbose('Selecting first result');\r\n            $result.first().addClass(className.active);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          focus: function() {\r\n            $module.addClass(className.focus);\r\n          },\r\n          loading: function() {\r\n            $module.addClass(className.loading);\r\n          },\r\n          value: function(value) {\r\n            module.verbose('Setting search input value', value);\r\n            $prompt\r\n              .val(value)\r\n            ;\r\n          },\r\n          type: function(type) {\r\n            type = type || settings.type;\r\n            if(settings.type == 'category') {\r\n              $module.addClass(settings.type);\r\n            }\r\n          },\r\n          buttonPressed: function() {\r\n            $searchButton.addClass(className.pressed);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          loading: function() {\r\n            $module.removeClass(className.loading);\r\n          },\r\n          focus: function() {\r\n            $module.removeClass(className.focus);\r\n          },\r\n          buttonPressed: function() {\r\n            $searchButton.removeClass(className.pressed);\r\n          }\r\n        },\r\n\r\n        query: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          var\r\n            searchTerm = module.get.value(),\r\n            cache = module.read.cache(searchTerm)\r\n          ;\r\n          callback = callback || function() {};\r\n          if( module.has.minimumCharacters() )  {\r\n            if(cache) {\r\n              module.debug('Reading result from cache', searchTerm);\r\n              module.save.results(cache.results);\r\n              module.addResults(cache.html);\r\n              module.inject.id(cache.results);\r\n              callback();\r\n            }\r\n            else {\r\n              module.debug('Querying for', searchTerm);\r\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\r\n                module.search.local(searchTerm);\r\n                callback();\r\n              }\r\n              else if( module.can.useAPI() ) {\r\n                module.search.remote(searchTerm, callback);\r\n              }\r\n              else {\r\n                module.error(error.source);\r\n                callback();\r\n              }\r\n            }\r\n            settings.onSearchQuery.call(element, searchTerm);\r\n          }\r\n          else {\r\n            module.hideResults();\r\n          }\r\n        },\r\n\r\n        search: {\r\n          local: function(searchTerm) {\r\n            var\r\n              results = module.search.object(searchTerm, settings.content),\r\n              searchHTML\r\n            ;\r\n            module.set.loading();\r\n            module.save.results(results);\r\n            module.debug('Returned local search results', results);\r\n\r\n            searchHTML = module.generateResults({\r\n              results: results\r\n            });\r\n            module.remove.loading();\r\n            module.addResults(searchHTML);\r\n            module.inject.id(results);\r\n            module.write.cache(searchTerm, {\r\n              html    : searchHTML,\r\n              results : results\r\n            });\r\n          },\r\n          remote: function(searchTerm, callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if($module.api('is loading')) {\r\n              $module.api('abort');\r\n            }\r\n            module.setup.api(searchTerm, callback);\r\n            $module\r\n              .api('query')\r\n            ;\r\n          },\r\n          object: function(searchTerm, source, searchFields) {\r\n            var\r\n              results      = [],\r\n              fuzzyResults = [],\r\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\r\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\r\n\r\n              // avoid duplicates when pushing results\r\n              addResult = function(array, result) {\r\n                var\r\n                  notResult      = ($.inArray(result, results) == -1),\r\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\r\n                ;\r\n                if(notResult && notFuzzyResult) {\r\n                  array.push(result);\r\n                }\r\n              }\r\n            ;\r\n            source = source || settings.source;\r\n            searchFields = (searchFields !== undefined)\r\n              ? searchFields\r\n              : settings.searchFields\r\n            ;\r\n\r\n            // search fields should be array to loop correctly\r\n            if(!$.isArray(searchFields)) {\r\n              searchFields = [searchFields];\r\n            }\r\n\r\n            // exit conditions if no source\r\n            if(source === undefined || source === false) {\r\n              module.error(error.source);\r\n              return [];\r\n            }\r\n\r\n            // iterate through search fields looking for matches\r\n            $.each(searchFields, function(index, field) {\r\n              $.each(source, function(label, content) {\r\n                var\r\n                  fieldExists = (typeof content[field] == 'string')\r\n                ;\r\n                if(fieldExists) {\r\n                  if( content[field].search(matchRegExp) !== -1) {\r\n                    // content starts with value (first in results)\r\n                    addResult(results, content);\r\n                  }\r\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\r\n                    // content fuzzy matches (last in results)\r\n                    addResult(fuzzyResults, content);\r\n                  }\r\n                }\r\n              });\r\n            });\r\n            return $.merge(results, fuzzyResults);\r\n          }\r\n        },\r\n\r\n        fuzzySearch: function(query, term) {\r\n          var\r\n            termLength  = term.length,\r\n            queryLength = query.length\r\n          ;\r\n          if(typeof query !== 'string') {\r\n            return false;\r\n          }\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(queryLength > termLength) {\r\n            return false;\r\n          }\r\n          if(queryLength === termLength) {\r\n            return (query === term);\r\n          }\r\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\r\n            var\r\n              queryCharacter = query.charCodeAt(characterIndex)\r\n            ;\r\n            while(nextCharacterIndex < termLength) {\r\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\r\n                continue search;\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n\r\n        parse: {\r\n          response: function(response, searchTerm) {\r\n            var\r\n              searchHTML = module.generateResults(response)\r\n            ;\r\n            module.verbose('Parsing server response', response);\r\n            if(response !== undefined) {\r\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\r\n                module.addResults(searchHTML);\r\n                module.inject.id(response[fields.results]);\r\n                module.write.cache(searchTerm, {\r\n                  html    : searchHTML,\r\n                  results : response[fields.results]\r\n                });\r\n                module.save.results(response[fields.results]);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        cancel: {\r\n          query: function() {\r\n            if( module.can.useAPI() ) {\r\n              $module.api('abort');\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          minimumCharacters: function() {\r\n            var\r\n              searchTerm    = module.get.value(),\r\n              numCharacters = searchTerm.length\r\n            ;\r\n            return (numCharacters >= settings.minCharacters);\r\n          },\r\n          results: function() {\r\n            if($results.length === 0) {\r\n              return false;\r\n            }\r\n            var\r\n              html = $results.html()\r\n            ;\r\n            return html != '';\r\n          }\r\n        },\r\n\r\n        clear: {\r\n          cache: function(value) {\r\n            var\r\n              cache = $module.data(metadata.cache)\r\n            ;\r\n            if(!value) {\r\n              module.debug('Clearing cache', value);\r\n              $module.removeData(metadata.cache);\r\n            }\r\n            else if(value && cache && cache[value]) {\r\n              module.debug('Removing value from cache', value);\r\n              delete cache[value];\r\n              $module.data(metadata.cache, cache);\r\n            }\r\n          }\r\n        },\r\n\r\n        read: {\r\n          cache: function(name) {\r\n            var\r\n              cache = $module.data(metadata.cache)\r\n            ;\r\n            if(settings.cache) {\r\n              module.verbose('Checking cache for generated html for query', name);\r\n              return (typeof cache == 'object') && (cache[name] !== undefined)\r\n                ? cache[name]\r\n                : false\r\n              ;\r\n            }\r\n            return false;\r\n          }\r\n        },\r\n\r\n        create: {\r\n          id: function(resultIndex, categoryIndex) {\r\n            var\r\n              resultID      = (resultIndex + 1), // not zero indexed\r\n              categoryID    = (categoryIndex + 1),\r\n              firstCharCode,\r\n              letterID,\r\n              id\r\n            ;\r\n            if(categoryIndex !== undefined) {\r\n              // start char code for \"A\"\r\n              letterID = String.fromCharCode(97 + categoryIndex);\r\n              id          = letterID + resultID;\r\n              module.verbose('Creating category result id', id);\r\n            }\r\n            else {\r\n              id = resultID;\r\n              module.verbose('Creating result id', id);\r\n            }\r\n            return id;\r\n          },\r\n          results: function() {\r\n            if($results.length === 0) {\r\n              $results = $('<div />')\r\n                .addClass(className.results)\r\n                .appendTo($module)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        inject: {\r\n          result: function(result, resultIndex, categoryIndex) {\r\n            module.verbose('Injecting result into results');\r\n            var\r\n              $selectedResult = (categoryIndex !== undefined)\r\n                ? $results\r\n                    .children().eq(categoryIndex)\r\n                      .children(selector.result).eq(resultIndex)\r\n                : $results\r\n                    .children(selector.result).eq(resultIndex)\r\n            ;\r\n            module.verbose('Injecting results metadata', $selectedResult);\r\n            $selectedResult\r\n              .data(metadata.result, result)\r\n            ;\r\n          },\r\n          id: function(results) {\r\n            module.debug('Injecting unique ids into results');\r\n            var\r\n              // since results may be object, we must use counters\r\n              categoryIndex = 0,\r\n              resultIndex   = 0\r\n            ;\r\n            if(settings.type === 'category') {\r\n              // iterate through each category result\r\n              $.each(results, function(index, category) {\r\n                resultIndex = 0;\r\n                $.each(category.results, function(index, value) {\r\n                  var\r\n                    result = category.results[index]\r\n                  ;\r\n                  if(result.id === undefined) {\r\n                    result.id = module.create.id(resultIndex, categoryIndex);\r\n                  }\r\n                  module.inject.result(result, resultIndex, categoryIndex);\r\n                  resultIndex++;\r\n                });\r\n                categoryIndex++;\r\n              });\r\n            }\r\n            else {\r\n              // top level\r\n              $.each(results, function(index, value) {\r\n                var\r\n                  result = results[index]\r\n                ;\r\n                if(result.id === undefined) {\r\n                  result.id = module.create.id(resultIndex);\r\n                }\r\n                module.inject.result(result, resultIndex);\r\n                resultIndex++;\r\n              });\r\n            }\r\n            return results;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          results: function(results) {\r\n            module.verbose('Saving current search results to metadata', results);\r\n            $module.data(metadata.results, results);\r\n          }\r\n        },\r\n\r\n        write: {\r\n          cache: function(name, value) {\r\n            var\r\n              cache = ($module.data(metadata.cache) !== undefined)\r\n                ? $module.data(metadata.cache)\r\n                : {}\r\n            ;\r\n            if(settings.cache) {\r\n              module.verbose('Writing generated html to cache', name, value);\r\n              cache[name] = value;\r\n              $module\r\n                .data(metadata.cache, cache)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        addResults: function(html) {\r\n          if( $.isFunction(settings.onResultsAdd) ) {\r\n            if( settings.onResultsAdd.call($results, html) === false ) {\r\n              module.debug('onResultsAdd callback cancelled default action');\r\n              return false;\r\n            }\r\n          }\r\n          if(html) {\r\n            $results\r\n              .html(html)\r\n            ;\r\n            module.refreshResults();\r\n            if(settings.selectFirstResult) {\r\n              module.select.firstResult();\r\n            }\r\n            module.showResults();\r\n          }\r\n          else {\r\n            module.hideResults(function() {\r\n              $results.empty();\r\n            });\r\n          }\r\n        },\r\n\r\n        showResults: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(resultsDismissed) {\r\n            return;\r\n          }\r\n          if(!module.is.visible() && module.has.results()) {\r\n            if( module.can.transition() ) {\r\n              module.debug('Showing results with css animations');\r\n              $results\r\n                .transition({\r\n                  animation  : settings.transition + ' in',\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    callback();\r\n                  },\r\n                  queue      : true\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Showing results with javascript');\r\n              $results\r\n                .stop()\r\n                .fadeIn(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            settings.onResultsOpen.call($results);\r\n          }\r\n        },\r\n        hideResults: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.visible() ) {\r\n            if( module.can.transition() ) {\r\n              module.debug('Hiding results with css animations');\r\n              $results\r\n                .transition({\r\n                  animation  : settings.transition + ' out',\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    callback();\r\n                  },\r\n                  queue      : true\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Hiding results with javascript');\r\n              $results\r\n                .stop()\r\n                .fadeOut(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            settings.onResultsClose.call($results);\r\n          }\r\n        },\r\n\r\n        generateResults: function(response) {\r\n          module.debug('Generating html from response', response);\r\n          var\r\n            template       = settings.templates[settings.type],\r\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\r\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\r\n            html           = ''\r\n          ;\r\n          if(isProperObject || isProperArray ) {\r\n            if(settings.maxResults > 0) {\r\n              if(isProperObject) {\r\n                if(settings.type == 'standard') {\r\n                  module.error(error.maxResults);\r\n                }\r\n              }\r\n              else {\r\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\r\n              }\r\n            }\r\n            if($.isFunction(template)) {\r\n              html = template(response, fields);\r\n            }\r\n            else {\r\n              module.error(error.noTemplate, false);\r\n            }\r\n          }\r\n          else if(settings.showNoResults) {\r\n            html = module.displayMessage(error.noResults, 'empty');\r\n          }\r\n          settings.onResults.call(element, response);\r\n          return html;\r\n        },\r\n\r\n        displayMessage: function(text, type) {\r\n          type = type || 'standard';\r\n          module.debug('Displaying message', text, type);\r\n          module.addResults( settings.templates.message(text, type) );\r\n          return settings.templates.message(text, type);\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.search.settings = {\r\n\r\n  name              : 'Search',\r\n  namespace         : 'search',\r\n\r\n  silent            : false,\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  // template to use (specified in settings.templates)\r\n  type              : 'standard',\r\n\r\n  // minimum characters required to search\r\n  minCharacters     : 1,\r\n\r\n  // whether to select first result after searching automatically\r\n  selectFirstResult : false,\r\n\r\n  // API config\r\n  apiSettings       : false,\r\n\r\n  // object to search\r\n  source            : false,\r\n\r\n  // Whether search should query current term on focus\r\n  searchOnFocus     : true,\r\n\r\n  // fields to search\r\n  searchFields   : [\r\n    'title',\r\n    'description'\r\n  ],\r\n\r\n  // field to display in standard results template\r\n  displayField   : '',\r\n\r\n  // whether to include fuzzy results in local search\r\n  searchFullText : true,\r\n\r\n  // whether to add events to prompt automatically\r\n  automatic      : true,\r\n\r\n  // delay before hiding menu after blur\r\n  hideDelay      : 0,\r\n\r\n  // delay before searching\r\n  searchDelay    : 200,\r\n\r\n  // maximum results returned from local\r\n  maxResults     : 7,\r\n\r\n  // whether to store lookups in local cache\r\n  cache          : true,\r\n\r\n  // whether no results errors should be shown\r\n  showNoResults  : true,\r\n\r\n  // transition settings\r\n  transition     : 'scale',\r\n  duration       : 200,\r\n  easing         : 'easeOutExpo',\r\n\r\n  // callbacks\r\n  onSelect       : false,\r\n  onResultsAdd   : false,\r\n\r\n  onSearchQuery  : function(query){},\r\n  onResults      : function(response){},\r\n\r\n  onResultsOpen  : function(){},\r\n  onResultsClose : function(){},\r\n\r\n  className: {\r\n    animating : 'animating',\r\n    active    : 'active',\r\n    empty     : 'empty',\r\n    focus     : 'focus',\r\n    hidden    : 'hidden',\r\n    loading   : 'loading',\r\n    results   : 'results',\r\n    pressed   : 'down'\r\n  },\r\n\r\n  error : {\r\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\r\n    noResults   : 'Your search returned no results',\r\n    logging     : 'Error in debug logging, exiting.',\r\n    noEndpoint  : 'No search endpoint was specified',\r\n    noTemplate  : 'A valid template name was not specified.',\r\n    serverError : 'There was an issue querying the server.',\r\n    maxResults  : 'Results must be an array to use maxResults setting',\r\n    method      : 'The method you called is not defined.'\r\n  },\r\n\r\n  metadata: {\r\n    cache   : 'cache',\r\n    results : 'results',\r\n    result  : 'result'\r\n  },\r\n\r\n  regExp: {\r\n    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n    beginsWith : '(?:\\s|^)'\r\n  },\r\n\r\n  // maps api response attributes to internal representation\r\n  fields: {\r\n    categories      : 'results',     // array of categories (category view)\r\n    categoryName    : 'name',        // name of category (category view)\r\n    categoryResults : 'results',     // array of results (category view)\r\n    description     : 'description', // result description\r\n    image           : 'image',       // result image\r\n    price           : 'price',       // result price\r\n    results         : 'results',     // array of results (standard)\r\n    title           : 'title',       // result title\r\n    url             : 'url',         // result url\r\n    action          : 'action',      // \"view more\" object name\r\n    actionText      : 'text',        // \"view more\" text\r\n    actionURL       : 'url'          // \"view more\" url\r\n  },\r\n\r\n  selector : {\r\n    prompt       : '.prompt',\r\n    searchButton : '.search.button',\r\n    results      : '.results',\r\n    message      : '.results > .message',\r\n    category     : '.category',\r\n    result       : '.result',\r\n    title        : '.title, .name'\r\n  },\r\n\r\n  templates: {\r\n    escape: function(string) {\r\n      var\r\n        badChars     = /[&<>\"'`]/g,\r\n        shouldEscape = /[&<>\"'`]/,\r\n        escape       = {\r\n          \"&\": \"&amp;\",\r\n          \"<\": \"&lt;\",\r\n          \">\": \"&gt;\",\r\n          '\"': \"&quot;\",\r\n          \"'\": \"&#x27;\",\r\n          \"`\": \"&#x60;\"\r\n        },\r\n        escapedChar  = function(chr) {\r\n          return escape[chr];\r\n        }\r\n      ;\r\n      if(shouldEscape.test(string)) {\r\n        return string.replace(badChars, escapedChar);\r\n      }\r\n      return string;\r\n    },\r\n    message: function(message, type) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(message !== undefined && type !== undefined) {\r\n        html +=  ''\r\n          + '<div class=\"message ' + type + '\">'\r\n        ;\r\n        // message type\r\n        if(type == 'empty') {\r\n          html += ''\r\n            + '<div class=\"header\">No Results</div class=\"header\">'\r\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\r\n          ;\r\n        }\r\n        else {\r\n          html += ' <div class=\"description\">' + message + '</div>';\r\n        }\r\n        html += '</div>';\r\n      }\r\n      return html;\r\n    },\r\n    category: function(response, fields) {\r\n      var\r\n        html = '',\r\n        escape = $.fn.search.settings.templates.escape\r\n      ;\r\n      if(response[fields.categoryResults] !== undefined) {\r\n\r\n        // each category\r\n        $.each(response[fields.categoryResults], function(index, category) {\r\n          if(category[fields.results] !== undefined && category.results.length > 0) {\r\n\r\n            html  += '<div class=\"category\">';\r\n\r\n            if(category[fields.categoryName] !== undefined) {\r\n              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\r\n            }\r\n\r\n            // each item inside category\r\n            $.each(category.results, function(index, result) {\r\n              if(result[fields.url]) {\r\n                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\r\n              }\r\n              else {\r\n                html  += '<a class=\"result\">';\r\n              }\r\n              if(result[fields.image] !== undefined) {\r\n                html += ''\r\n                  + '<div class=\"image\">'\r\n                  + ' <img src=\"' + result[fields.image] + '\">'\r\n                  + '</div>'\r\n                ;\r\n              }\r\n              html += '<div class=\"content\">';\r\n              if(result[fields.price] !== undefined) {\r\n                html += '<div class=\"price\">' + result[fields.price] + '</div>';\r\n              }\r\n              if(result[fields.title] !== undefined) {\r\n                html += '<div class=\"title\">' + result[fields.title] + '</div>';\r\n              }\r\n              if(result[fields.description] !== undefined) {\r\n                html += '<div class=\"description\">' + result[fields.description] + '</div>';\r\n              }\r\n              html  += ''\r\n                + '</div>'\r\n              ;\r\n              html += '</a>';\r\n            });\r\n            html  += ''\r\n              + '</div>'\r\n            ;\r\n          }\r\n        });\r\n        if(response[fields.action]) {\r\n          html += ''\r\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\r\n          +   response[fields.action][fields.actionText]\r\n          + '</a>';\r\n        }\r\n        return html;\r\n      }\r\n      return false;\r\n    },\r\n    standard: function(response, fields) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(response[fields.results] !== undefined) {\r\n\r\n        // each result\r\n        $.each(response[fields.results], function(index, result) {\r\n          if(result[fields.url]) {\r\n            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\r\n          }\r\n          else {\r\n            html  += '<a class=\"result\">';\r\n          }\r\n          if(result[fields.image] !== undefined) {\r\n            html += ''\r\n              + '<div class=\"image\">'\r\n              + ' <img src=\"' + result[fields.image] + '\">'\r\n              + '</div>'\r\n            ;\r\n          }\r\n          html += '<div class=\"content\">';\r\n          if(result[fields.price] !== undefined) {\r\n            html += '<div class=\"price\">' + result[fields.price] + '</div>';\r\n          }\r\n          if(result[fields.title] !== undefined) {\r\n            html += '<div class=\"title\">' + result[fields.title] + '</div>';\r\n          }\r\n          if(result[fields.description] !== undefined) {\r\n            html += '<div class=\"description\">' + result[fields.description] + '</div>';\r\n          }\r\n          html  += ''\r\n            + '</div>'\r\n          ;\r\n          html += '</a>';\r\n        });\r\n\r\n        if(response[fields.action]) {\r\n          html += ''\r\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\r\n          +   response[fields.action][fields.actionText]\r\n          + '</a>';\r\n        }\r\n        return html;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Shape\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.shape = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    $body           = $('body'),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        moduleSelector = $allModules.selector || '',\r\n        settings       = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\r\n          : $.extend({}, $.fn.shape.settings),\r\n\r\n        // internal aliases\r\n        namespace     = settings.namespace,\r\n        selector      = settings.selector,\r\n        error         = settings.error,\r\n        className     = settings.className,\r\n\r\n        // define namespaces for modules\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        // selector cache\r\n        $module       = $(this),\r\n        $sides        = $module.find(selector.sides),\r\n        $side         = $module.find(selector.side),\r\n\r\n        // private variables\r\n        nextIndex = false,\r\n        $activeSide,\r\n        $nextSide,\r\n\r\n        // standard module\r\n        element       = this,\r\n        instance      = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module for', element);\r\n          module.set.defaultSide();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache for', element);\r\n          $module = $(element);\r\n          $sides  = $(this).find(selector.shape);\r\n          $side   = $(this).find(selector.side);\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Forcing repaint event');\r\n          var\r\n            shape          = $sides[0] || document.createElement('div'),\r\n            fakeAssignment = shape.offsetWidth\r\n          ;\r\n        },\r\n\r\n        animate: function(propertyObject, callback) {\r\n          module.verbose('Animating box with properties', propertyObject);\r\n          callback = callback || function(event) {\r\n            module.verbose('Executing animation callback');\r\n            if(event !== undefined) {\r\n              event.stopPropagation();\r\n            }\r\n            module.reset();\r\n            module.set.active();\r\n          };\r\n          settings.beforeChange.call($nextSide[0]);\r\n          if(module.get.transitionEvent()) {\r\n            module.verbose('Starting CSS animation');\r\n            $module\r\n              .addClass(className.animating)\r\n            ;\r\n            $sides\r\n              .css(propertyObject)\r\n              .one(module.get.transitionEvent(), callback)\r\n            ;\r\n            module.set.duration(settings.duration);\r\n            requestAnimationFrame(function() {\r\n              $module\r\n                .addClass(className.animating)\r\n              ;\r\n              $activeSide\r\n                .addClass(className.hidden)\r\n              ;\r\n            });\r\n          }\r\n          else {\r\n            callback();\r\n          }\r\n        },\r\n\r\n        queue: function(method) {\r\n          module.debug('Queueing animation of', method);\r\n          $sides\r\n            .one(module.get.transitionEvent(), function() {\r\n              module.debug('Executing queued animation');\r\n              setTimeout(function(){\r\n                $module.shape(method);\r\n              }, 0);\r\n            })\r\n          ;\r\n        },\r\n\r\n        reset: function() {\r\n          module.verbose('Animating states reset');\r\n          $module\r\n            .removeClass(className.animating)\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n          // removeAttr style does not consistently work in safari\r\n          $sides\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n          $side\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n            .removeClass(className.hidden)\r\n          ;\r\n          $nextSide\r\n            .removeClass(className.animating)\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n        },\r\n\r\n        is: {\r\n          complete: function() {\r\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\r\n          },\r\n          animating: function() {\r\n            return $module.hasClass(className.animating);\r\n          }\r\n        },\r\n\r\n        set: {\r\n\r\n          defaultSide: function() {\r\n            $activeSide = $module.find('.' + settings.className.active);\r\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\r\n              ? $activeSide.next(selector.side)\r\n              : $module.find(selector.side).first()\r\n            ;\r\n            nextIndex = false;\r\n            module.verbose('Active side set to', $activeSide);\r\n            module.verbose('Next side set to', $nextSide);\r\n          },\r\n\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            module.verbose('Setting animation duration', duration);\r\n            if(settings.duration || settings.duration === 0) {\r\n              $sides.add($side)\r\n                .css({\r\n                  '-webkit-transition-duration': duration,\r\n                  '-moz-transition-duration': duration,\r\n                  '-ms-transition-duration': duration,\r\n                  '-o-transition-duration': duration,\r\n                  'transition-duration': duration\r\n                })\r\n              ;\r\n            }\r\n          },\r\n\r\n          currentStageSize: function() {\r\n            var\r\n              $activeSide = $module.find('.' + settings.className.active),\r\n              width       = $activeSide.outerWidth(true),\r\n              height      = $activeSide.outerHeight(true)\r\n            ;\r\n            $module\r\n              .css({\r\n                width: width,\r\n                height: height\r\n              })\r\n            ;\r\n          },\r\n\r\n          stageSize: function() {\r\n            var\r\n              $clone      = $module.clone().addClass(className.loading),\r\n              $activeSide = $clone.find('.' + settings.className.active),\r\n              $nextSide   = (nextIndex)\r\n                ? $clone.find(selector.side).eq(nextIndex)\r\n                : ( $activeSide.next(selector.side).length > 0 )\r\n                  ? $activeSide.next(selector.side)\r\n                  : $clone.find(selector.side).first(),\r\n              newWidth    = (settings.width == 'next')\r\n                ? $nextSide.outerWidth(true)\r\n                : (settings.width == 'initial')\r\n                  ? $module.width()\r\n                  : settings.width,\r\n              newHeight    = (settings.height == 'next')\r\n                ? $nextSide.outerHeight(true)\r\n                : (settings.height == 'initial')\r\n                  ? $module.height()\r\n                  : settings.height\r\n            ;\r\n            $activeSide.removeClass(className.active);\r\n            $nextSide.addClass(className.active);\r\n            $clone.insertAfter($module);\r\n            $clone.remove();\r\n            if(settings.width != 'auto') {\r\n              $module.css('width', newWidth + settings.jitter);\r\n              module.verbose('Specifying width during animation', newWidth);\r\n            }\r\n            if(settings.height != 'auto') {\r\n              $module.css('height', newHeight + settings.jitter);\r\n              module.verbose('Specifying height during animation', newHeight);\r\n            }\r\n          },\r\n\r\n          nextSide: function(selector) {\r\n            nextIndex = selector;\r\n            $nextSide = $side.filter(selector);\r\n            nextIndex = $side.index($nextSide);\r\n            if($nextSide.length === 0) {\r\n              module.set.defaultSide();\r\n              module.error(error.side);\r\n            }\r\n            module.verbose('Next side manually set to', $nextSide);\r\n          },\r\n\r\n          active: function() {\r\n            module.verbose('Setting new side to active', $nextSide);\r\n            $side\r\n              .removeClass(className.active)\r\n            ;\r\n            $nextSide\r\n              .addClass(className.active)\r\n            ;\r\n            settings.onChange.call($nextSide[0]);\r\n            module.set.defaultSide();\r\n          }\r\n        },\r\n\r\n        flip: {\r\n\r\n          up: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping up', $nextSide);\r\n              var\r\n                transform = module.get.transform.up()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.above();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip up');\r\n            }\r\n          },\r\n\r\n          down: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping down', $nextSide);\r\n              var\r\n                transform = module.get.transform.down()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.below();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip down');\r\n            }\r\n          },\r\n\r\n          left: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping left', $nextSide);\r\n              var\r\n                transform = module.get.transform.left()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.left();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip left');\r\n            }\r\n          },\r\n\r\n          right: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping right', $nextSide);\r\n              var\r\n                transform = module.get.transform.right()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.right();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip right');\r\n            }\r\n          },\r\n\r\n          over: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping over', $nextSide);\r\n              module.set.stageSize();\r\n              module.stage.behind();\r\n              module.animate(module.get.transform.over() );\r\n            }\r\n            else {\r\n              module.queue('flip over');\r\n            }\r\n          },\r\n\r\n          back: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping back', $nextSide);\r\n              module.set.stageSize();\r\n              module.stage.behind();\r\n              module.animate(module.get.transform.back() );\r\n            }\r\n            else {\r\n              module.queue('flip back');\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n\r\n          transform: {\r\n            up: function() {\r\n              var\r\n                translate = {\r\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                  z: -($activeSide.outerHeight(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\r\n              };\r\n            },\r\n\r\n            down: function() {\r\n              var\r\n                translate = {\r\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                  z: -($activeSide.outerHeight(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\r\n              };\r\n            },\r\n\r\n            left: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\r\n                  z : -($activeSide.outerWidth(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\r\n              };\r\n            },\r\n\r\n            right: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\r\n                  z : -($activeSide.outerWidth(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\r\n              };\r\n            },\r\n\r\n            over: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\r\n              };\r\n            },\r\n\r\n            back: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\r\n              };\r\n            }\r\n          },\r\n\r\n          transitionEvent: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          },\r\n\r\n          nextSide: function() {\r\n            return ( $activeSide.next(selector.side).length > 0 )\r\n              ? $activeSide.next(selector.side)\r\n              : $module.find(selector.side).first()\r\n            ;\r\n          }\r\n\r\n        },\r\n\r\n        stage: {\r\n\r\n          above: function() {\r\n            var\r\n              box = {\r\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                depth  : {\r\n                  active : ($nextSide.outerHeight(true) / 2),\r\n                  next   : ($activeSide.outerHeight(true) / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'top'       : box.origin + 'px',\r\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          below: function() {\r\n            var\r\n              box = {\r\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                depth  : {\r\n                  active : ($nextSide.outerHeight(true) / 2),\r\n                  next   : ($activeSide.outerHeight(true) / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'top'       : box.origin + 'px',\r\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          left: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          right: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          behind: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(-180deg)'\r\n              })\r\n            ;\r\n          }\r\n        },\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.shape.settings = {\r\n\r\n  // module info\r\n  name : 'Shape',\r\n\r\n  // hide all debug content\r\n  silent     : false,\r\n\r\n  // debug content outputted to console\r\n  debug      : false,\r\n\r\n  // verbose debug output\r\n  verbose    : false,\r\n\r\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\r\n  jitter     : 0,\r\n\r\n  // performance data output\r\n  performance: true,\r\n\r\n  // event namespace\r\n  namespace  : 'shape',\r\n\r\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\r\n  width: 'initial',\r\n\r\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\r\n  height: 'initial',\r\n\r\n  // callback occurs on side change\r\n  beforeChange : function() {},\r\n  onChange     : function() {},\r\n\r\n  // allow animation to same side\r\n  allowRepeats: false,\r\n\r\n  // animation duration\r\n  duration   : false,\r\n\r\n  // possible errors\r\n  error: {\r\n    side   : 'You tried to switch to a side that does not exist.',\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  // classnames used\r\n  className   : {\r\n    animating : 'animating',\r\n    hidden    : 'hidden',\r\n    loading   : 'loading',\r\n    active    : 'active'\r\n  },\r\n\r\n  // selectors used\r\n  selector    : {\r\n    sides : '.sides',\r\n    side  : '.side'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Sidebar\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.sidebar = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    $window         = $(window),\r\n    $document       = $(document),\r\n    $html           = $('html'),\r\n    $head           = $('head'),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\r\n          : $.extend({}, $.fn.sidebar.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        regExp          = settings.regExp,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n\r\n        $sidebars       = $module.children(selector.sidebar),\r\n        $fixed          = $context.children(selector.fixed),\r\n        $pusher         = $context.children(selector.pusher),\r\n        $style,\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        elementNamespace,\r\n        id,\r\n        currentScroll,\r\n        transitionEvent,\r\n\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing sidebar', parameters);\r\n\r\n          module.create.id();\r\n\r\n          transitionEvent = module.get.transitionEvent();\r\n\r\n          if(module.is.ios()) {\r\n            module.set.ios();\r\n          }\r\n\r\n          // avoids locking rendering if initialized in onReady\r\n          if(settings.delaySetup) {\r\n            requestAnimationFrame(module.setup.layout);\r\n          }\r\n          else {\r\n            module.setup.layout();\r\n          }\r\n\r\n          requestAnimationFrame(function() {\r\n            module.setup.cache();\r\n          });\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        create: {\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\r\n            elementNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          }\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', $module);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n          if(module.is.ios()) {\r\n            module.remove.ios();\r\n          }\r\n          // bound by uuid\r\n          $context.off(elementNamespace);\r\n          $window.off(elementNamespace);\r\n          $document.off(elementNamespace);\r\n        },\r\n\r\n        event: {\r\n          clickaway: function(event) {\r\n            var\r\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\r\n              clickedContext  = ($context.is(event.target))\r\n            ;\r\n            if(clickedInPusher) {\r\n              module.verbose('User clicked on dimmed page');\r\n              module.hide();\r\n            }\r\n            if(clickedContext) {\r\n              module.verbose('User clicked on dimmable context (scaled out page)');\r\n              module.hide();\r\n            }\r\n          },\r\n          touch: function(event) {\r\n            //event.stopPropagation();\r\n          },\r\n          containScroll: function(event) {\r\n            if(element.scrollTop <= 0)  {\r\n              element.scrollTop = 1;\r\n            }\r\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\r\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\r\n            }\r\n          },\r\n          scroll: function(event) {\r\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          clickaway: function() {\r\n            module.verbose('Adding clickaway events to context', $context);\r\n            if(settings.closable) {\r\n              $context\r\n                .on('click'    + elementNamespace, module.event.clickaway)\r\n                .on('touchend' + elementNamespace, module.event.clickaway)\r\n              ;\r\n            }\r\n          },\r\n          scrollLock: function() {\r\n            if(settings.scrollLock) {\r\n              module.debug('Disabling page scroll');\r\n              $window\r\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\r\n              ;\r\n            }\r\n            module.verbose('Adding events to contain sidebar scroll');\r\n            $document\r\n              .on('touchmove' + elementNamespace, module.event.touch)\r\n            ;\r\n            $module\r\n              .on('scroll' + eventNamespace, module.event.containScroll)\r\n            ;\r\n          }\r\n        },\r\n        unbind: {\r\n          clickaway: function() {\r\n            module.verbose('Removing clickaway events from context', $context);\r\n            $context.off(elementNamespace);\r\n          },\r\n          scrollLock: function() {\r\n            module.verbose('Removing scroll lock from page');\r\n            $document.off(elementNamespace);\r\n            $window.off(elementNamespace);\r\n            $module.off('scroll' + eventNamespace);\r\n          }\r\n        },\r\n\r\n        add: {\r\n          inlineCSS: function() {\r\n            var\r\n              width     = module.cache.width  || $module.outerWidth(),\r\n              height    = module.cache.height || $module.outerHeight(),\r\n              isRTL     = module.is.rtl(),\r\n              direction = module.get.direction(),\r\n              distance  = {\r\n                left   : width,\r\n                right  : -width,\r\n                top    : height,\r\n                bottom : -height\r\n              },\r\n              style\r\n            ;\r\n\r\n            if(isRTL){\r\n              module.verbose('RTL detected, flipping widths');\r\n              distance.left = -width;\r\n              distance.right = width;\r\n            }\r\n\r\n            style  = '<style>';\r\n\r\n            if(direction === 'left' || direction === 'right') {\r\n              module.debug('Adding CSS rules for animation distance', width);\r\n              style  += ''\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\r\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n            else if(direction === 'top' || direction == 'bottom') {\r\n              style  += ''\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\r\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n\r\n            /* IE is only browser not to create context with transforms */\r\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\r\n            if( module.is.ie() ) {\r\n              if(direction === 'left' || direction === 'right') {\r\n                module.debug('Adding CSS rules for animation distance', width);\r\n                style  += ''\r\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\r\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                  + ' }'\r\n                ;\r\n              }\r\n              else if(direction === 'top' || direction == 'bottom') {\r\n                style  += ''\r\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\r\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                  + ' }'\r\n                ;\r\n              }\r\n              /* opposite sides visible forces content overlay */\r\n              style += ''\r\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\r\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\r\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\r\n                + '           transform: translate3d(0px, 0, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n            style += '</style>';\r\n            $style = $(style)\r\n              .appendTo($head)\r\n            ;\r\n            module.debug('Adding sizing css to head', $style);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $context  = $(settings.context);\r\n          $sidebars = $context.children(selector.sidebar);\r\n          $pusher   = $context.children(selector.pusher);\r\n          $fixed    = $context.children(selector.fixed);\r\n          module.clear.cache();\r\n        },\r\n\r\n        refreshSidebars: function() {\r\n          module.verbose('Refreshing other sidebars');\r\n          $sidebars = $context.children(selector.sidebar);\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Forcing repaint event');\r\n          element.style.display = 'none';\r\n          var ignored = element.offsetHeight;\r\n          element.scrollTop = element.scrollTop;\r\n          element.style.display = '';\r\n        },\r\n\r\n        setup: {\r\n          cache: function() {\r\n            module.cache = {\r\n              width  : $module.outerWidth(),\r\n              height : $module.outerHeight(),\r\n              rtl    : ($module.css('direction') == 'rtl')\r\n            };\r\n          },\r\n          layout: function() {\r\n            if( $context.children(selector.pusher).length === 0 ) {\r\n              module.debug('Adding wrapper element for sidebar');\r\n              module.error(error.pusher);\r\n              $pusher = $('<div class=\"pusher\" />');\r\n              $context\r\n                .children()\r\n                  .not(selector.omitted)\r\n                  .not($sidebars)\r\n                  .wrapAll($pusher)\r\n              ;\r\n              module.refresh();\r\n            }\r\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\r\n              module.debug('Moved sidebar to correct parent element');\r\n              module.error(error.movedSidebar, element);\r\n              $module.detach().prependTo($context);\r\n              module.refresh();\r\n            }\r\n            module.clear.cache();\r\n            module.set.pushable();\r\n            module.set.direction();\r\n          }\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $toggle = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($toggle.length > 0) {\r\n            module.debug('Attaching sidebar events to element', selector, event);\r\n            $toggle\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound, selector);\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(module.is.hidden()) {\r\n            module.refreshSidebars();\r\n            if(settings.overlay)  {\r\n              module.error(error.overlay);\r\n              settings.transition = 'overlay';\r\n            }\r\n            module.refresh();\r\n            if(module.othersActive()) {\r\n              module.debug('Other sidebars currently visible');\r\n              if(settings.exclusive) {\r\n                // if not overlay queue animation after hide\r\n                if(settings.transition != 'overlay') {\r\n                  module.hideOthers(module.show);\r\n                  return;\r\n                }\r\n                else {\r\n                  module.hideOthers();\r\n                }\r\n              }\r\n              else {\r\n                settings.transition = 'overlay';\r\n              }\r\n            }\r\n            module.pushPage(function() {\r\n              callback.call(element);\r\n              settings.onShow.call(element);\r\n            });\r\n            settings.onChange.call(element);\r\n            settings.onVisible.call(element);\r\n          }\r\n          else {\r\n            module.debug('Sidebar is already visible');\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(module.is.visible() || module.is.animating()) {\r\n            module.debug('Hiding sidebar', callback);\r\n            module.refreshSidebars();\r\n            module.pullPage(function() {\r\n              callback.call(element);\r\n              settings.onHidden.call(element);\r\n            });\r\n            settings.onChange.call(element);\r\n            settings.onHide.call(element);\r\n          }\r\n        },\r\n\r\n        othersAnimating: function() {\r\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\r\n        },\r\n        othersVisible: function() {\r\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\r\n        },\r\n        othersActive: function() {\r\n          return(module.othersVisible() || module.othersAnimating());\r\n        },\r\n\r\n        hideOthers: function(callback) {\r\n          var\r\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\r\n            sidebarCount   = $otherSidebars.length,\r\n            callbackCount  = 0\r\n          ;\r\n          callback = callback || function(){};\r\n          $otherSidebars\r\n            .sidebar('hide', function() {\r\n              callbackCount++;\r\n              if(callbackCount == sidebarCount) {\r\n                callback();\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Determining toggled direction');\r\n          if(module.is.hidden()) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        pushPage: function(callback) {\r\n          var\r\n            transition = module.get.transition(),\r\n            $transition = (transition === 'overlay' || module.othersActive())\r\n              ? $module\r\n              : $pusher,\r\n            animate,\r\n            dim,\r\n            transitionEnd\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(settings.transition == 'scale down') {\r\n            module.scrollToTop();\r\n          }\r\n          module.set.transition(transition);\r\n          module.repaint();\r\n          animate = function() {\r\n            module.bind.clickaway();\r\n            module.add.inlineCSS();\r\n            module.set.animating();\r\n            module.set.visible();\r\n          };\r\n          dim = function() {\r\n            module.set.dimmed();\r\n          };\r\n          transitionEnd = function(event) {\r\n            if( event.target == $transition[0] ) {\r\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\r\n              module.remove.animating();\r\n              module.bind.scrollLock();\r\n              callback.call(element);\r\n            }\r\n          };\r\n          $transition.off(transitionEvent + elementNamespace);\r\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\r\n          requestAnimationFrame(animate);\r\n          if(settings.dimPage && !module.othersVisible()) {\r\n            requestAnimationFrame(dim);\r\n          }\r\n        },\r\n\r\n        pullPage: function(callback) {\r\n          var\r\n            transition = module.get.transition(),\r\n            $transition = (transition == 'overlay' || module.othersActive())\r\n              ? $module\r\n              : $pusher,\r\n            animate,\r\n            transitionEnd\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.verbose('Removing context push state', module.get.direction());\r\n\r\n          module.unbind.clickaway();\r\n          module.unbind.scrollLock();\r\n\r\n          animate = function() {\r\n            module.set.transition(transition);\r\n            module.set.animating();\r\n            module.remove.visible();\r\n            if(settings.dimPage && !module.othersVisible()) {\r\n              $pusher.removeClass(className.dimmed);\r\n            }\r\n          };\r\n          transitionEnd = function(event) {\r\n            if( event.target == $transition[0] ) {\r\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\r\n              module.remove.animating();\r\n              module.remove.transition();\r\n              module.remove.inlineCSS();\r\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\r\n                module.scrollBack();\r\n              }\r\n              callback.call(element);\r\n            }\r\n          };\r\n          $transition.off(transitionEvent + elementNamespace);\r\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\r\n          requestAnimationFrame(animate);\r\n        },\r\n\r\n        scrollToTop: function() {\r\n          module.verbose('Scrolling to top of page to avoid animation issues');\r\n          currentScroll = $(window).scrollTop();\r\n          $module.scrollTop(0);\r\n          window.scrollTo(0, 0);\r\n        },\r\n\r\n        scrollBack: function() {\r\n          module.verbose('Scrolling back to original page position');\r\n          window.scrollTo(0, currentScroll);\r\n        },\r\n\r\n        clear: {\r\n          cache: function() {\r\n            module.verbose('Clearing cached dimensions');\r\n            module.cache = {};\r\n          }\r\n        },\r\n\r\n        set: {\r\n\r\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\r\n          ios: function() {\r\n            $html.addClass(className.ios);\r\n          },\r\n\r\n          // container\r\n          pushed: function() {\r\n            $context.addClass(className.pushed);\r\n          },\r\n          pushable: function() {\r\n            $context.addClass(className.pushable);\r\n          },\r\n\r\n          // pusher\r\n          dimmed: function() {\r\n            $pusher.addClass(className.dimmed);\r\n          },\r\n\r\n          // sidebar\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          },\r\n          animating: function() {\r\n            $module.addClass(className.animating);\r\n          },\r\n          transition: function(transition) {\r\n            transition = transition || module.get.transition();\r\n            $module.addClass(transition);\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            $module.addClass(className[direction]);\r\n          },\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          },\r\n          overlay: function() {\r\n            $module.addClass(className.overlay);\r\n          }\r\n        },\r\n        remove: {\r\n\r\n          inlineCSS: function() {\r\n            module.debug('Removing inline css styles', $style);\r\n            if($style && $style.length > 0) {\r\n              $style.remove();\r\n            }\r\n          },\r\n\r\n          // ios scroll on html not document\r\n          ios: function() {\r\n            $html.removeClass(className.ios);\r\n          },\r\n\r\n          // context\r\n          pushed: function() {\r\n            $context.removeClass(className.pushed);\r\n          },\r\n          pushable: function() {\r\n            $context.removeClass(className.pushable);\r\n          },\r\n\r\n          // sidebar\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          animating: function() {\r\n            $module.removeClass(className.animating);\r\n          },\r\n          transition: function(transition) {\r\n            transition = transition || module.get.transition();\r\n            $module.removeClass(transition);\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            $module.removeClass(className[direction]);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          overlay: function() {\r\n            $module.removeClass(className.overlay);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          direction: function() {\r\n            if($module.hasClass(className.top)) {\r\n              return className.top;\r\n            }\r\n            else if($module.hasClass(className.right)) {\r\n              return className.right;\r\n            }\r\n            else if($module.hasClass(className.bottom)) {\r\n              return className.bottom;\r\n            }\r\n            return className.left;\r\n          },\r\n          transition: function() {\r\n            var\r\n              direction = module.get.direction(),\r\n              transition\r\n            ;\r\n            transition = ( module.is.mobile() )\r\n              ? (settings.mobileTransition == 'auto')\r\n                ? settings.defaultTransition.mobile[direction]\r\n                : settings.mobileTransition\r\n              : (settings.transition == 'auto')\r\n                ? settings.defaultTransition.computer[direction]\r\n                : settings.transition\r\n            ;\r\n            module.verbose('Determined transition', transition);\r\n            return transition;\r\n          },\r\n          transitionEvent: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n\r\n          ie: function() {\r\n            var\r\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\r\n              isIE   = ('ActiveXObject' in window)\r\n            ;\r\n            return (isIE11 || isIE);\r\n          },\r\n\r\n          ios: function() {\r\n            var\r\n              userAgent      = navigator.userAgent,\r\n              isIOS          = userAgent.match(regExp.ios),\r\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\r\n            ;\r\n            if(isIOS && !isMobileChrome) {\r\n              module.verbose('Browser was found to be iOS', userAgent);\r\n              return true;\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          },\r\n          mobile: function() {\r\n            var\r\n              userAgent    = navigator.userAgent,\r\n              isMobile     = userAgent.match(regExp.mobile)\r\n            ;\r\n            if(isMobile) {\r\n              module.verbose('Browser was found to be mobile', userAgent);\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\r\n              return false;\r\n            }\r\n          },\r\n          hidden: function() {\r\n            return !module.is.visible();\r\n          },\r\n          visible: function() {\r\n            return $module.hasClass(className.visible);\r\n          },\r\n          // alias\r\n          open: function() {\r\n            return module.is.visible();\r\n          },\r\n          closed: function() {\r\n            return module.is.hidden();\r\n          },\r\n          vertical: function() {\r\n            return $module.hasClass(className.top);\r\n          },\r\n          animating: function() {\r\n            return $context.hasClass(className.animating);\r\n          },\r\n          rtl: function () {\r\n            if(module.cache.rtl === undefined) {\r\n              module.cache.rtl = ($module.css('direction') == 'rtl');\r\n            }\r\n            return module.cache.rtl;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      }\r\n    ;\r\n\r\n    if(methodInvoked) {\r\n      if(instance === undefined) {\r\n        module.initialize();\r\n      }\r\n      module.invoke(query);\r\n    }\r\n    else {\r\n      if(instance !== undefined) {\r\n        module.invoke('destroy');\r\n      }\r\n      module.initialize();\r\n    }\r\n  });\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.sidebar.settings = {\r\n\r\n  name              : 'Sidebar',\r\n  namespace         : 'sidebar',\r\n\r\n  silent            : false,\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  transition        : 'auto',\r\n  mobileTransition  : 'auto',\r\n\r\n  defaultTransition : {\r\n    computer: {\r\n      left   : 'uncover',\r\n      right  : 'uncover',\r\n      top    : 'overlay',\r\n      bottom : 'overlay'\r\n    },\r\n    mobile: {\r\n      left   : 'uncover',\r\n      right  : 'uncover',\r\n      top    : 'overlay',\r\n      bottom : 'overlay'\r\n    }\r\n  },\r\n\r\n  context           : 'body',\r\n  exclusive         : false,\r\n  closable          : true,\r\n  dimPage           : true,\r\n  scrollLock        : false,\r\n  returnScroll      : false,\r\n  delaySetup        : false,\r\n\r\n  duration          : 500,\r\n\r\n  onChange          : function(){},\r\n  onShow            : function(){},\r\n  onHide            : function(){},\r\n\r\n  onHidden          : function(){},\r\n  onVisible         : function(){},\r\n\r\n  className         : {\r\n    active    : 'active',\r\n    animating : 'animating',\r\n    dimmed    : 'dimmed',\r\n    ios       : 'ios',\r\n    pushable  : 'pushable',\r\n    pushed    : 'pushed',\r\n    right     : 'right',\r\n    top       : 'top',\r\n    left      : 'left',\r\n    bottom    : 'bottom',\r\n    visible   : 'visible'\r\n  },\r\n\r\n  selector: {\r\n    fixed   : '.fixed',\r\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\r\n    pusher  : '.pusher',\r\n    sidebar : '.ui.sidebar'\r\n  },\r\n\r\n  regExp: {\r\n    ios          : /(iPad|iPhone|iPod)/g,\r\n    mobileChrome : /(CriOS)/g,\r\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\r\n  },\r\n\r\n  error   : {\r\n    method       : 'The method you called is not defined.',\r\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\r\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\r\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\r\n    notFound     : 'There were no elements that matched the specified selector'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Sticky\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.sticky = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings              = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\r\n          : $.extend({}, $.fn.sticky.settings),\r\n\r\n        className             = settings.className,\r\n        namespace             = settings.namespace,\r\n        error                 = settings.error,\r\n\r\n        eventNamespace        = '.' + namespace,\r\n        moduleNamespace       = 'module-' + namespace,\r\n\r\n        $module               = $(this),\r\n        $window               = $(window),\r\n        $scroll               = $(settings.scrollContext),\r\n        $container,\r\n        $context,\r\n\r\n        selector              = $module.selector || '',\r\n        instance              = $module.data(moduleNamespace),\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); },\r\n\r\n        element         = this,\r\n\r\n        documentObserver,\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n\r\n          module.determineContainer();\r\n          module.determineContext();\r\n          module.verbose('Initializing sticky', settings, $container);\r\n\r\n          module.save.positions();\r\n          module.checkErrors();\r\n          module.bind.events();\r\n\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance');\r\n          module.reset();\r\n          if(documentObserver) {\r\n            documentObserver.disconnect();\r\n          }\r\n          if(observer) {\r\n            observer.disconnect();\r\n          }\r\n          $window\r\n            .off('load' + eventNamespace, module.event.load)\r\n            .off('resize' + eventNamespace, module.event.resize)\r\n          ;\r\n          $scroll\r\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\r\n          ;\r\n          $module.removeData(moduleNamespace);\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            documentObserver = new MutationObserver(module.event.documentChanged);\r\n            observer         = new MutationObserver(module.event.changed);\r\n            documentObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe($context[0], {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        determineContainer: function() {\r\n          if(settings.container) {\r\n            $container = $(settings.container);\r\n          }\r\n          else {\r\n            $container = $module.offsetParent();\r\n          }\r\n        },\r\n\r\n        determineContext: function() {\r\n          if(settings.context) {\r\n            $context = $(settings.context);\r\n          }\r\n          else {\r\n            $context = $container;\r\n          }\r\n          if($context.length === 0) {\r\n            module.error(error.invalidContext, settings.context, $module);\r\n            return;\r\n          }\r\n        },\r\n\r\n        checkErrors: function() {\r\n          if( module.is.hidden() ) {\r\n            module.error(error.visible, $module);\r\n          }\r\n          if(module.cache.element.height > module.cache.context.height) {\r\n            module.reset();\r\n            module.error(error.elementSize, $module);\r\n            return;\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            $window\r\n              .on('load' + eventNamespace, module.event.load)\r\n              .on('resize' + eventNamespace, module.event.resize)\r\n            ;\r\n            // pub/sub pattern\r\n            $scroll\r\n              .off('scroll' + eventNamespace)\r\n              .on('scroll' + eventNamespace, module.event.scroll)\r\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          changed: function(mutations) {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(function() {\r\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\r\n              module.refresh();\r\n            }, 100);\r\n          },\r\n          documentChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          load: function() {\r\n            module.verbose('Page contents finished loading');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          resize: function() {\r\n            module.verbose('Window resized');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          scroll: function() {\r\n            requestAnimationFrame(function() {\r\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\r\n            });\r\n          },\r\n          scrollchange: function(event, scrollPosition) {\r\n            module.stick(scrollPosition);\r\n            settings.onScroll.call(element);\r\n          }\r\n        },\r\n\r\n        refresh: function(hardRefresh) {\r\n          module.reset();\r\n          if(!settings.context) {\r\n            module.determineContext();\r\n          }\r\n          if(hardRefresh) {\r\n            module.determineContainer();\r\n          }\r\n          module.save.positions();\r\n          module.stick();\r\n          settings.onReposition.call(element);\r\n        },\r\n\r\n        supports: {\r\n          sticky: function() {\r\n            var\r\n              $element = $('<div/>'),\r\n              element = $element[0]\r\n            ;\r\n            $element.addClass(className.supported);\r\n            return($element.css('position').match('sticky'));\r\n          }\r\n        },\r\n\r\n        save: {\r\n          lastScroll: function(scroll) {\r\n            module.lastScroll = scroll;\r\n          },\r\n          elementScroll: function(scroll) {\r\n            module.elementScroll = scroll;\r\n          },\r\n          positions: function() {\r\n            var\r\n              scrollContext = {\r\n                height : $scroll.height()\r\n              },\r\n              element = {\r\n                margin: {\r\n                  top    : parseInt($module.css('margin-top'), 10),\r\n                  bottom : parseInt($module.css('margin-bottom'), 10),\r\n                },\r\n                offset : $module.offset(),\r\n                width  : $module.outerWidth(),\r\n                height : $module.outerHeight()\r\n              },\r\n              context = {\r\n                offset : $context.offset(),\r\n                height : $context.outerHeight()\r\n              },\r\n              container = {\r\n                height: $container.outerHeight()\r\n              }\r\n            ;\r\n            if( !module.is.standardScroll() ) {\r\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\r\n\r\n              scrollContext.top  = $scroll.scrollTop();\r\n              scrollContext.left = $scroll.scrollLeft();\r\n\r\n              element.offset.top  += scrollContext.top;\r\n              context.offset.top  += scrollContext.top;\r\n              element.offset.left += scrollContext.left;\r\n              context.offset.left += scrollContext.left;\r\n            }\r\n            module.cache = {\r\n              fits : ( element.height < scrollContext.height ),\r\n              scrollContext : {\r\n                height : scrollContext.height\r\n              },\r\n              element: {\r\n                margin : element.margin,\r\n                top    : element.offset.top - element.margin.top,\r\n                left   : element.offset.left,\r\n                width  : element.width,\r\n                height : element.height,\r\n                bottom : element.offset.top + element.height\r\n              },\r\n              context: {\r\n                top           : context.offset.top,\r\n                height        : context.height,\r\n                bottom        : context.offset.top + context.height\r\n              }\r\n            };\r\n            module.set.containerSize();\r\n            module.set.size();\r\n            module.stick();\r\n            module.debug('Caching element positions', module.cache);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          direction: function(scroll) {\r\n            var\r\n              direction = 'down'\r\n            ;\r\n            scroll = scroll || $scroll.scrollTop();\r\n            if(module.lastScroll !== undefined) {\r\n              if(module.lastScroll < scroll) {\r\n                direction = 'down';\r\n              }\r\n              else if(module.lastScroll > scroll) {\r\n                direction = 'up';\r\n              }\r\n            }\r\n            return direction;\r\n          },\r\n          scrollChange: function(scroll) {\r\n            scroll = scroll || $scroll.scrollTop();\r\n            return (module.lastScroll)\r\n              ? (scroll - module.lastScroll)\r\n              : 0\r\n            ;\r\n          },\r\n          currentElementScroll: function() {\r\n            if(module.elementScroll) {\r\n              return module.elementScroll;\r\n            }\r\n            return ( module.is.top() )\r\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\r\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\r\n            ;\r\n          },\r\n\r\n          elementScroll: function(scroll) {\r\n            scroll = scroll || $scroll.scrollTop();\r\n            var\r\n              element        = module.cache.element,\r\n              scrollContext  = module.cache.scrollContext,\r\n              delta          = module.get.scrollChange(scroll),\r\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\r\n              elementScroll  = module.get.currentElementScroll(),\r\n              possibleScroll = (elementScroll + delta)\r\n            ;\r\n            if(module.cache.fits || possibleScroll < 0) {\r\n              elementScroll = 0;\r\n            }\r\n            else if(possibleScroll > maxScroll ) {\r\n              elementScroll = maxScroll;\r\n            }\r\n            else {\r\n              elementScroll = possibleScroll;\r\n            }\r\n            return elementScroll;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          lastScroll: function() {\r\n            delete module.lastScroll;\r\n          },\r\n          elementScroll: function(scroll) {\r\n            delete module.elementScroll;\r\n          },\r\n          offset: function() {\r\n            $module.css('margin-top', '');\r\n          }\r\n        },\r\n\r\n        set: {\r\n          offset: function() {\r\n            module.verbose('Setting offset on element', settings.offset);\r\n            $module\r\n              .css('margin-top', settings.offset)\r\n            ;\r\n          },\r\n          containerSize: function() {\r\n            var\r\n              tagName = $container.get(0).tagName\r\n            ;\r\n            if(tagName === 'HTML' || tagName == 'body') {\r\n              // this can trigger for too many reasons\r\n              //module.error(error.container, tagName, $module);\r\n              module.determineContainer();\r\n            }\r\n            else {\r\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\r\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\r\n                $container.css({\r\n                  height: module.cache.context.height\r\n                });\r\n              }\r\n            }\r\n          },\r\n          minimumSize: function() {\r\n            var\r\n              element   = module.cache.element\r\n            ;\r\n            $container\r\n              .css('min-height', element.height)\r\n            ;\r\n          },\r\n          scroll: function(scroll) {\r\n            module.debug('Setting scroll on element', scroll);\r\n            if(module.elementScroll == scroll) {\r\n              return;\r\n            }\r\n            if( module.is.top() ) {\r\n              $module\r\n                .css('bottom', '')\r\n                .css('top', -scroll)\r\n              ;\r\n            }\r\n            if( module.is.bottom() ) {\r\n              $module\r\n                .css('top', '')\r\n                .css('bottom', scroll)\r\n              ;\r\n            }\r\n          },\r\n          size: function() {\r\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\r\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\r\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          standardScroll: function() {\r\n            return ($scroll[0] == window);\r\n          },\r\n          top: function() {\r\n            return $module.hasClass(className.top);\r\n          },\r\n          bottom: function() {\r\n            return $module.hasClass(className.bottom);\r\n          },\r\n          initialPosition: function() {\r\n            return (!module.is.fixed() && !module.is.bound());\r\n          },\r\n          hidden: function() {\r\n            return (!$module.is(':visible'));\r\n          },\r\n          bound: function() {\r\n            return $module.hasClass(className.bound);\r\n          },\r\n          fixed: function() {\r\n            return $module.hasClass(className.fixed);\r\n          }\r\n        },\r\n\r\n        stick: function(scroll) {\r\n          var\r\n            cachedPosition = scroll || $scroll.scrollTop(),\r\n            cache          = module.cache,\r\n            fits           = cache.fits,\r\n            element        = cache.element,\r\n            scrollContext  = cache.scrollContext,\r\n            context        = cache.context,\r\n            offset         = (module.is.bottom() && settings.pushing)\r\n              ? settings.bottomOffset\r\n              : settings.offset,\r\n            scroll         = {\r\n              top    : cachedPosition + offset,\r\n              bottom : cachedPosition + offset + scrollContext.height\r\n            },\r\n            direction      = module.get.direction(scroll.top),\r\n            elementScroll  = (fits)\r\n              ? 0\r\n              : module.get.elementScroll(scroll.top),\r\n\r\n            // shorthand\r\n            doesntFit      = !fits,\r\n            elementVisible = (element.height !== 0)\r\n          ;\r\n\r\n          if(elementVisible) {\r\n\r\n            if( module.is.initialPosition() ) {\r\n              if(scroll.top >= context.bottom) {\r\n                module.debug('Initial element position is bottom of container');\r\n                module.bindBottom();\r\n              }\r\n              else if(scroll.top > element.top) {\r\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\r\n                  module.debug('Initial element position is bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                else {\r\n                  module.debug('Initial element position is fixed');\r\n                  module.fixTop();\r\n                }\r\n              }\r\n\r\n            }\r\n            else if( module.is.fixed() ) {\r\n\r\n              // currently fixed top\r\n              if( module.is.top() ) {\r\n                if( scroll.top <= element.top ) {\r\n                  module.debug('Fixed element reached top of container');\r\n                  module.setInitialPosition();\r\n                }\r\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\r\n                  module.debug('Fixed element reached bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                // scroll element if larger than screen\r\n                else if(doesntFit) {\r\n                  module.set.scroll(elementScroll);\r\n                  module.save.lastScroll(scroll.top);\r\n                  module.save.elementScroll(elementScroll);\r\n                }\r\n              }\r\n\r\n              // currently fixed bottom\r\n              else if(module.is.bottom() ) {\r\n\r\n                // top edge\r\n                if( (scroll.bottom - element.height) <= element.top) {\r\n                  module.debug('Bottom fixed rail has reached top of container');\r\n                  module.setInitialPosition();\r\n                }\r\n                // bottom edge\r\n                else if(scroll.bottom >= context.bottom) {\r\n                  module.debug('Bottom fixed rail has reached bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                // scroll element if larger than screen\r\n                else if(doesntFit) {\r\n                  module.set.scroll(elementScroll);\r\n                  module.save.lastScroll(scroll.top);\r\n                  module.save.elementScroll(elementScroll);\r\n                }\r\n\r\n              }\r\n            }\r\n            else if( module.is.bottom() ) {\r\n              if( scroll.top <= element.top ) {\r\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\r\n                module.setInitialPosition();\r\n              }\r\n              else {\r\n                if(settings.pushing) {\r\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\r\n                    module.debug('Fixing bottom attached element to bottom of browser.');\r\n                    module.fixBottom();\r\n                  }\r\n                }\r\n                else {\r\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\r\n                    module.debug('Fixing bottom attached element to top of browser.');\r\n                    module.fixTop();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        bindTop: function() {\r\n          module.debug('Binding element to top of parent container');\r\n          module.remove.offset();\r\n          $module\r\n            .css({\r\n              left         : '',\r\n              top          : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.fixed)\r\n            .removeClass(className.bottom)\r\n            .addClass(className.bound)\r\n            .addClass(className.top)\r\n          ;\r\n          settings.onTop.call(element);\r\n          settings.onUnstick.call(element);\r\n        },\r\n        bindBottom: function() {\r\n          module.debug('Binding element to bottom of parent container');\r\n          module.remove.offset();\r\n          $module\r\n            .css({\r\n              left         : '',\r\n              top          : ''\r\n            })\r\n            .removeClass(className.fixed)\r\n            .removeClass(className.top)\r\n            .addClass(className.bound)\r\n            .addClass(className.bottom)\r\n          ;\r\n          settings.onBottom.call(element);\r\n          settings.onUnstick.call(element);\r\n        },\r\n\r\n        setInitialPosition: function() {\r\n          module.debug('Returning to initial position');\r\n          module.unfix();\r\n          module.unbind();\r\n        },\r\n\r\n\r\n        fixTop: function() {\r\n          module.debug('Fixing element to top of page');\r\n          module.set.minimumSize();\r\n          module.set.offset();\r\n          $module\r\n            .css({\r\n              left         : module.cache.element.left,\r\n              bottom       : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.bound)\r\n            .removeClass(className.bottom)\r\n            .addClass(className.fixed)\r\n            .addClass(className.top)\r\n          ;\r\n          settings.onStick.call(element);\r\n        },\r\n\r\n        fixBottom: function() {\r\n          module.debug('Sticking element to bottom of page');\r\n          module.set.minimumSize();\r\n          module.set.offset();\r\n          $module\r\n            .css({\r\n              left         : module.cache.element.left,\r\n              bottom       : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.bound)\r\n            .removeClass(className.top)\r\n            .addClass(className.fixed)\r\n            .addClass(className.bottom)\r\n          ;\r\n          settings.onStick.call(element);\r\n        },\r\n\r\n        unbind: function() {\r\n          if( module.is.bound() ) {\r\n            module.debug('Removing container bound position on element');\r\n            module.remove.offset();\r\n            $module\r\n              .removeClass(className.bound)\r\n              .removeClass(className.top)\r\n              .removeClass(className.bottom)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unfix: function() {\r\n          if( module.is.fixed() ) {\r\n            module.debug('Removing fixed position on element');\r\n            module.remove.offset();\r\n            $module\r\n              .removeClass(className.fixed)\r\n              .removeClass(className.top)\r\n              .removeClass(className.bottom)\r\n            ;\r\n            settings.onUnstick.call(element);\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.debug('Resetting elements position');\r\n          module.unbind();\r\n          module.unfix();\r\n          module.resetCSS();\r\n          module.remove.offset();\r\n          module.remove.lastScroll();\r\n        },\r\n\r\n        resetCSS: function() {\r\n          $module\r\n            .css({\r\n              width  : '',\r\n              height : ''\r\n            })\r\n          ;\r\n          $container\r\n            .css({\r\n              height: ''\r\n            })\r\n          ;\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 0);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.sticky.settings = {\r\n\r\n  name           : 'Sticky',\r\n  namespace      : 'sticky',\r\n\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : true,\r\n  performance    : true,\r\n\r\n  // whether to stick in the opposite direction on scroll up\r\n  pushing        : false,\r\n\r\n  context        : false,\r\n  container      : false,\r\n\r\n  // Context to watch scroll events\r\n  scrollContext  : window,\r\n\r\n  // Offset to adjust scroll\r\n  offset         : 0,\r\n\r\n  // Offset to adjust scroll when attached to bottom of screen\r\n  bottomOffset   : 0,\r\n\r\n  jitter         : 5, // will only set container height if difference between context and container is larger than this number\r\n\r\n  // Whether to automatically observe changes with Mutation Observers\r\n  observeChanges : false,\r\n\r\n  // Called when position is recalculated\r\n  onReposition   : function(){},\r\n\r\n  // Called on each scroll\r\n  onScroll       : function(){},\r\n\r\n  // Called when element is stuck to viewport\r\n  onStick        : function(){},\r\n\r\n  // Called when element is unstuck from viewport\r\n  onUnstick      : function(){},\r\n\r\n  // Called when element reaches top of context\r\n  onTop          : function(){},\r\n\r\n  // Called when element reaches bottom of context\r\n  onBottom       : function(){},\r\n\r\n  error         : {\r\n    container      : 'Sticky element must be inside a relative container',\r\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\r\n    method         : 'The method you called is not defined.',\r\n    invalidContext : 'Context specified does not exist',\r\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\r\n  },\r\n\r\n  className : {\r\n    bound     : 'bound',\r\n    fixed     : 'fixed',\r\n    supported : 'native',\r\n    top       : 'top',\r\n    bottom    : 'bottom'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Tab\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.tab = function(parameters) {\r\n\r\n  var\r\n    // use window context if none specified\r\n    $allModules     = $.isFunction(this)\r\n        ? $(window)\r\n        : $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    initializedHistory = false,\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\r\n          : $.extend({}, $.fn.tab.settings),\r\n\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + settings.namespace,\r\n        moduleNamespace = 'module-' + settings.namespace,\r\n\r\n        $module         = $(this),\r\n        $context,\r\n        $tabs,\r\n\r\n        cache           = {},\r\n        firstLoad       = true,\r\n        recursionDepth  = 0,\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        activeTabPath,\r\n        parameterArray,\r\n        module,\r\n\r\n        historyEvent\r\n\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing tab menu item', $module);\r\n          module.fix.callbacks();\r\n          module.determineTabs();\r\n\r\n          module.debug('Determining tabs', settings.context, $tabs);\r\n          // set up automatic routing\r\n          if(settings.auto) {\r\n            module.set.auto();\r\n          }\r\n          module.bind.events();\r\n\r\n          if(settings.history && !initializedHistory) {\r\n            module.initializeHistory();\r\n            initializedHistory = true;\r\n          }\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function () {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying tabs', $module);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            // if using $.tab don't add events\r\n            if( !$.isWindow( element ) ) {\r\n              module.debug('Attaching tab activation events to element', $module);\r\n              $module\r\n                .on('click' + eventNamespace, module.event.click)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        determineTabs: function() {\r\n          var\r\n            $reference\r\n          ;\r\n\r\n          // determine tab context\r\n          if(settings.context === 'parent') {\r\n            if($module.closest(selector.ui).length > 0) {\r\n              $reference = $module.closest(selector.ui);\r\n              module.verbose('Using closest UI element as parent', $reference);\r\n            }\r\n            else {\r\n              $reference = $module;\r\n            }\r\n            $context = $reference.parent();\r\n            module.verbose('Determined parent element for creating context', $context);\r\n          }\r\n          else if(settings.context) {\r\n            $context = $(settings.context);\r\n            module.verbose('Using selector for tab context', settings.context, $context);\r\n          }\r\n          else {\r\n            $context = $('body');\r\n          }\r\n          // find tabs\r\n          if(settings.childrenOnly) {\r\n            $tabs = $context.children(selector.tabs);\r\n            module.debug('Searching tab context children for tabs', $context, $tabs);\r\n          }\r\n          else {\r\n            $tabs = $context.find(selector.tabs);\r\n            module.debug('Searching tab context for tabs', $context, $tabs);\r\n          }\r\n        },\r\n\r\n        fix: {\r\n          callbacks: function() {\r\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\r\n              if(parameters.onTabLoad) {\r\n                parameters.onLoad = parameters.onTabLoad;\r\n                delete parameters.onTabLoad;\r\n                module.error(error.legacyLoad, parameters.onLoad);\r\n              }\r\n              if(parameters.onTabInit) {\r\n                parameters.onFirstLoad = parameters.onTabInit;\r\n                delete parameters.onTabInit;\r\n                module.error(error.legacyInit, parameters.onFirstLoad);\r\n              }\r\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\r\n            }\r\n          }\r\n        },\r\n\r\n        initializeHistory: function() {\r\n          module.debug('Initializing page state');\r\n          if( $.address === undefined ) {\r\n            module.error(error.state);\r\n            return false;\r\n          }\r\n          else {\r\n            if(settings.historyType == 'state') {\r\n              module.debug('Using HTML5 to manage state');\r\n              if(settings.path !== false) {\r\n                $.address\r\n                  .history(true)\r\n                  .state(settings.path)\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.path);\r\n                return false;\r\n              }\r\n            }\r\n            $.address\r\n              .bind('change', module.event.history.change)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            var\r\n              tabPath = $(this).data(metadata.tab)\r\n            ;\r\n            if(tabPath !== undefined) {\r\n              if(settings.history) {\r\n                module.verbose('Updating page state', event);\r\n                $.address.value(tabPath);\r\n              }\r\n              else {\r\n                module.verbose('Changing tab', event);\r\n                module.changeTab(tabPath);\r\n              }\r\n              event.preventDefault();\r\n            }\r\n            else {\r\n              module.debug('No tab specified');\r\n            }\r\n          },\r\n          history: {\r\n            change: function(event) {\r\n              var\r\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\r\n                pageTitle = settings.templates.determineTitle(tabPath) || false\r\n              ;\r\n              module.performance.display();\r\n              module.debug('History change event', tabPath, event);\r\n              historyEvent = event;\r\n              if(tabPath !== undefined) {\r\n                module.changeTab(tabPath);\r\n              }\r\n              if(pageTitle) {\r\n                $.address.title(pageTitle);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          if(activeTabPath) {\r\n            module.debug('Refreshing tab', activeTabPath);\r\n            module.changeTab(activeTabPath);\r\n          }\r\n        },\r\n\r\n        cache: {\r\n\r\n          read: function(cacheKey) {\r\n            return (cacheKey !== undefined)\r\n              ? cache[cacheKey]\r\n              : false\r\n            ;\r\n          },\r\n          add: function(cacheKey, content) {\r\n            cacheKey = cacheKey || activeTabPath;\r\n            module.debug('Adding cached content for', cacheKey);\r\n            cache[cacheKey] = content;\r\n          },\r\n          remove: function(cacheKey) {\r\n            cacheKey = cacheKey || activeTabPath;\r\n            module.debug('Removing cached content for', cacheKey);\r\n            delete cache[cacheKey];\r\n          }\r\n        },\r\n\r\n        set: {\r\n          auto: function() {\r\n            var\r\n              url = (typeof settings.path == 'string')\r\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\r\n                : '/{$tab}'\r\n            ;\r\n            module.verbose('Setting up automatic tab retrieval from server', url);\r\n            if($.isPlainObject(settings.apiSettings)) {\r\n              settings.apiSettings.url = url;\r\n            }\r\n            else {\r\n              settings.apiSettings = {\r\n                url: url\r\n              };\r\n            }\r\n          },\r\n          loading: function(tabPath) {\r\n            var\r\n              $tab      = module.get.tabElement(tabPath),\r\n              isLoading = $tab.hasClass(className.loading)\r\n            ;\r\n            if(!isLoading) {\r\n              module.verbose('Setting loading state for', $tab);\r\n              $tab\r\n                .addClass(className.loading)\r\n                .siblings($tabs)\r\n                  .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n              if($tab.length > 0) {\r\n                settings.onRequest.call($tab[0], tabPath);\r\n              }\r\n            }\r\n          },\r\n          state: function(state) {\r\n            $.address.value(state);\r\n          }\r\n        },\r\n\r\n        changeTab: function(tabPath) {\r\n          var\r\n            pushStateAvailable = (window.history && window.history.pushState),\r\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\r\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\r\n            // only add default path if not remote content\r\n            pathArray = (remoteContent && !shouldIgnoreLoad)\r\n              ? module.utilities.pathToArray(tabPath)\r\n              : module.get.defaultPathArray(tabPath)\r\n          ;\r\n          tabPath = module.utilities.arrayToPath(pathArray);\r\n          $.each(pathArray, function(index, tab) {\r\n            var\r\n              currentPathArray   = pathArray.slice(0, index + 1),\r\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\r\n\r\n              isTab              = module.is.tab(currentPath),\r\n              isLastIndex        = (index + 1 == pathArray.length),\r\n\r\n              $tab               = module.get.tabElement(currentPath),\r\n              $anchor,\r\n              nextPathArray,\r\n              nextPath,\r\n              isLastTab\r\n            ;\r\n            module.verbose('Looking for tab', tab);\r\n            if(isTab) {\r\n              module.verbose('Tab was found', tab);\r\n              // scope up\r\n              activeTabPath  = currentPath;\r\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\r\n\r\n              if(isLastIndex) {\r\n                isLastTab = true;\r\n              }\r\n              else {\r\n                nextPathArray = pathArray.slice(0, index + 2);\r\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\r\n                isLastTab     = ( !module.is.tab(nextPath) );\r\n                if(isLastTab) {\r\n                  module.verbose('Tab parameters found', nextPathArray);\r\n                }\r\n              }\r\n              if(isLastTab && remoteContent) {\r\n                if(!shouldIgnoreLoad) {\r\n                  module.activate.navigation(currentPath);\r\n                  module.fetch.content(currentPath, tabPath);\r\n                }\r\n                else {\r\n                  module.debug('Ignoring remote content on first tab load', currentPath);\r\n                  firstLoad = false;\r\n                  module.cache.add(tabPath, $tab.html());\r\n                  module.activate.all(currentPath);\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                return false;\r\n              }\r\n              else {\r\n                module.debug('Opened local tab', currentPath);\r\n                module.activate.all(currentPath);\r\n                if( !module.cache.read(currentPath) ) {\r\n                  module.cache.add(currentPath, true);\r\n                  module.debug('First time tab loaded calling tab init');\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n              }\r\n\r\n            }\r\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\r\n              // look for in page anchor\r\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\r\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\r\n              $tab        = module.get.tabElement(currentPath);\r\n              // if anchor exists use parent tab\r\n              if($anchor && $anchor.length > 0 && currentPath) {\r\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\r\n                if( !$tab.hasClass(className.active) ) {\r\n                  setTimeout(function() {\r\n                    module.scrollTo($anchor);\r\n                  }, 0);\r\n                }\r\n                module.activate.all(currentPath);\r\n                if( !module.cache.read(currentPath) ) {\r\n                  module.cache.add(currentPath, true);\r\n                  module.debug('First time tab loaded calling tab init');\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                return false;\r\n              }\r\n            }\r\n            else {\r\n              module.error(error.missingTab, $module, $context, currentPath);\r\n              return false;\r\n            }\r\n          });\r\n        },\r\n\r\n        scrollTo: function($element) {\r\n          var\r\n            scrollOffset = ($element && $element.length > 0)\r\n              ? $element.offset().top\r\n              : false\r\n          ;\r\n          if(scrollOffset !== false) {\r\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\r\n            $(document).scrollTop(scrollOffset);\r\n          }\r\n        },\r\n\r\n        update: {\r\n          content: function(tabPath, html, evaluateScripts) {\r\n            var\r\n              $tab = module.get.tabElement(tabPath),\r\n              tab  = $tab[0]\r\n            ;\r\n            evaluateScripts = (evaluateScripts !== undefined)\r\n              ? evaluateScripts\r\n              : settings.evaluateScripts\r\n            ;\r\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\r\n              $tab\r\n                .empty()\r\n                .append($(html).clone(true))\r\n              ;\r\n            }\r\n            else {\r\n              if(evaluateScripts) {\r\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\r\n                $tab.html(html);\r\n              }\r\n              else {\r\n                module.debug('Updating HTML', tabPath, html);\r\n                tab.innerHTML = html;\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        fetch: {\r\n\r\n          content: function(tabPath, fullTabPath) {\r\n            var\r\n              $tab        = module.get.tabElement(tabPath),\r\n              apiSettings = {\r\n                dataType         : 'html',\r\n                encodeParameters : false,\r\n                on               : 'now',\r\n                cache            : settings.alwaysRefresh,\r\n                headers          : {\r\n                  'X-Remote': true\r\n                },\r\n                onSuccess : function(response) {\r\n                  if(settings.cacheType == 'response') {\r\n                    module.cache.add(fullTabPath, response);\r\n                  }\r\n                  module.update.content(tabPath, response);\r\n                  if(tabPath == activeTabPath) {\r\n                    module.debug('Content loaded', tabPath);\r\n                    module.activate.tab(tabPath);\r\n                  }\r\n                  else {\r\n                    module.debug('Content loaded in background', tabPath);\r\n                  }\r\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n\r\n                  if(settings.loadOnce) {\r\n                    module.cache.add(fullTabPath, true);\r\n                  }\r\n                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\r\n                    setTimeout(function() {\r\n                      var\r\n                        $clone = $tab.children().clone(true)\r\n                      ;\r\n                      $clone = $clone.not('script');\r\n                      module.cache.add(fullTabPath, $clone);\r\n                    }, 0);\r\n                  }\r\n                  else {\r\n                    module.cache.add(fullTabPath, $tab.html());\r\n                  }\r\n                },\r\n                urlData: {\r\n                  tab: fullTabPath\r\n                }\r\n              },\r\n              request         = $tab.api('get request') || false,\r\n              existingRequest = ( request && request.state() === 'pending' ),\r\n              requestSettings,\r\n              cachedContent\r\n            ;\r\n\r\n            fullTabPath   = fullTabPath || tabPath;\r\n            cachedContent = module.cache.read(fullTabPath);\r\n\r\n\r\n            if(settings.cache && cachedContent) {\r\n              module.activate.tab(tabPath);\r\n              module.debug('Adding cached content', fullTabPath);\r\n              if(!settings.loadOnce) {\r\n                if(settings.evaluateScripts == 'once') {\r\n                  module.update.content(tabPath, cachedContent, false);\r\n                }\r\n                else {\r\n                  module.update.content(tabPath, cachedContent);\r\n                }\r\n              }\r\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n            }\r\n            else if(existingRequest) {\r\n              module.set.loading(tabPath);\r\n              module.debug('Content is already loading', fullTabPath);\r\n            }\r\n            else if($.api !== undefined) {\r\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\r\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\r\n              module.set.loading(tabPath);\r\n              $tab.api(requestSettings);\r\n            }\r\n            else {\r\n              module.error(error.api);\r\n            }\r\n          }\r\n        },\r\n\r\n        activate: {\r\n          all: function(tabPath) {\r\n            module.activate.tab(tabPath);\r\n            module.activate.navigation(tabPath);\r\n          },\r\n          tab: function(tabPath) {\r\n            var\r\n              $tab          = module.get.tabElement(tabPath),\r\n              $deactiveTabs = (settings.deactivate == 'siblings')\r\n                ? $tab.siblings($tabs)\r\n                : $tabs.not($tab),\r\n              isActive      = $tab.hasClass(className.active)\r\n            ;\r\n            module.verbose('Showing tab content for', $tab);\r\n            if(!isActive) {\r\n              $tab\r\n                .addClass(className.active)\r\n              ;\r\n              $deactiveTabs\r\n                .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n              if($tab.length > 0) {\r\n                settings.onVisible.call($tab[0], tabPath);\r\n              }\r\n            }\r\n          },\r\n          navigation: function(tabPath) {\r\n            var\r\n              $navigation         = module.get.navElement(tabPath),\r\n              $deactiveNavigation = (settings.deactivate == 'siblings')\r\n                ? $navigation.siblings($allModules)\r\n                : $allModules.not($navigation),\r\n              isActive    = $navigation.hasClass(className.active)\r\n            ;\r\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\r\n            if(!isActive) {\r\n              $navigation\r\n                .addClass(className.active)\r\n              ;\r\n              $deactiveNavigation\r\n                .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        deactivate: {\r\n          all: function() {\r\n            module.deactivate.navigation();\r\n            module.deactivate.tabs();\r\n          },\r\n          navigation: function() {\r\n            $allModules\r\n              .removeClass(className.active)\r\n            ;\r\n          },\r\n          tabs: function() {\r\n            $tabs\r\n              .removeClass(className.active + ' ' + className.loading)\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          tab: function(tabName) {\r\n            return (tabName !== undefined)\r\n              ? ( module.get.tabElement(tabName).length > 0 )\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          initialPath: function() {\r\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\r\n          },\r\n          path: function() {\r\n            return $.address.value();\r\n          },\r\n          // adds default tabs to tab path\r\n          defaultPathArray: function(tabPath) {\r\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\r\n          },\r\n          defaultPath: function(tabPath) {\r\n            var\r\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\r\n              defaultTab  = $defaultNav.data(metadata.tab) || false\r\n            ;\r\n            if( defaultTab ) {\r\n              module.debug('Found default tab', defaultTab);\r\n              if(recursionDepth < settings.maxDepth) {\r\n                recursionDepth++;\r\n                return module.get.defaultPath(defaultTab);\r\n              }\r\n              module.error(error.recursion);\r\n            }\r\n            else {\r\n              module.debug('No default tabs found for', tabPath, $tabs);\r\n            }\r\n            recursionDepth = 0;\r\n            return tabPath;\r\n          },\r\n          navElement: function(tabPath) {\r\n            tabPath = tabPath || activeTabPath;\r\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\r\n          },\r\n          tabElement: function(tabPath) {\r\n            var\r\n              $fullPathTab,\r\n              $simplePathTab,\r\n              tabPathArray,\r\n              lastTab\r\n            ;\r\n            tabPath        = tabPath || activeTabPath;\r\n            tabPathArray   = module.utilities.pathToArray(tabPath);\r\n            lastTab        = module.utilities.last(tabPathArray);\r\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\r\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\r\n            return ($fullPathTab.length > 0)\r\n              ? $fullPathTab\r\n              : $simplePathTab\r\n            ;\r\n          },\r\n          tab: function() {\r\n            return activeTabPath;\r\n          }\r\n        },\r\n\r\n        utilities: {\r\n          filterArray: function(keepArray, removeArray) {\r\n            return $.grep(keepArray, function(keepValue) {\r\n              return ( $.inArray(keepValue, removeArray) == -1);\r\n            });\r\n          },\r\n          last: function(array) {\r\n            return $.isArray(array)\r\n              ? array[ array.length - 1]\r\n              : false\r\n            ;\r\n          },\r\n          pathToArray: function(pathName) {\r\n            if(pathName === undefined) {\r\n              pathName = activeTabPath;\r\n            }\r\n            return typeof pathName == 'string'\r\n              ? pathName.split('/')\r\n              : [pathName]\r\n            ;\r\n          },\r\n          arrayToPath: function(pathArray) {\r\n            return $.isArray(pathArray)\r\n              ? pathArray.join('/')\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n\r\n};\r\n\r\n// shortcut for tabbed content with no defined navigation\r\n$.tab = function() {\r\n  $(window).tab.apply(this, arguments);\r\n};\r\n\r\n$.fn.tab.settings = {\r\n\r\n  name            : 'Tab',\r\n  namespace       : 'tab',\r\n\r\n  silent          : false,\r\n  debug           : false,\r\n  verbose         : false,\r\n  performance     : true,\r\n\r\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\r\n  history         : false,      // use browser history\r\n  historyType     : 'hash',     // #/ or html5 state\r\n  path            : false,      // base path of url\r\n\r\n  context         : false,      // specify a context that tabs must appear inside\r\n  childrenOnly    : false,      // use only tabs that are children of context\r\n  maxDepth        : 25,         // max depth a tab can be nested\r\n\r\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\r\n\r\n  alwaysRefresh   : false,      // load tab content new every tab click\r\n  cache           : true,       // cache the content requests to pull locally\r\n  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\r\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\r\n  ignoreFirstLoad : false,      // don't load remote content on first load\r\n\r\n  apiSettings     : false,      // settings for api call\r\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\r\n\r\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\r\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\r\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\r\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\r\n\r\n  templates : {\r\n    determineTitle: function(tabArray) {} // returns page title for path\r\n  },\r\n\r\n  error: {\r\n    api        : 'You attempted to load content without API module',\r\n    method     : 'The method you called is not defined',\r\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\r\n    noContent  : 'The tab you specified is missing a content url.',\r\n    path       : 'History enabled, but no path was specified',\r\n    recursion  : 'Max recursive depth reached',\r\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\r\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\r\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\r\n  },\r\n\r\n  metadata : {\r\n    tab    : 'tab',\r\n    loaded : 'loaded',\r\n    promise: 'promise'\r\n  },\r\n\r\n  className   : {\r\n    loading : 'loading',\r\n    active  : 'active'\r\n  },\r\n\r\n  selector    : {\r\n    tabs : '.ui.tab',\r\n    ui   : '.ui'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Transition\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.transition = function() {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    moduleArguments = arguments,\r\n    query           = moduleArguments[0],\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    methodInvoked   = (typeof query === 'string'),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function(index) {\r\n      var\r\n        $module  = $(this),\r\n        element  = this,\r\n\r\n        // set at run time\r\n        settings,\r\n        instance,\r\n\r\n        error,\r\n        className,\r\n        metadata,\r\n        animationEnd,\r\n        animationName,\r\n\r\n        namespace,\r\n        moduleNamespace,\r\n        eventNamespace,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n\r\n          // get full settings\r\n          settings        = module.get.settings.apply(element, moduleArguments);\r\n\r\n          // shorthand\r\n          className       = settings.className;\r\n          error           = settings.error;\r\n          metadata        = settings.metadata;\r\n\r\n          // define namespace\r\n          eventNamespace  = '.' + settings.namespace;\r\n          moduleNamespace = 'module-' + settings.namespace;\r\n          instance        = $module.data(moduleNamespace) || module;\r\n\r\n          // get vendor specific events\r\n          animationEnd    = module.get.animationEndEvent();\r\n\r\n          if(methodInvoked) {\r\n            methodInvoked = module.invoke(query);\r\n          }\r\n\r\n          // method not invoked, lets run an animation\r\n          if(methodInvoked === false) {\r\n            module.verbose('Converted arguments into settings object', settings);\r\n            if(settings.interval) {\r\n              module.delay(settings.animate);\r\n            }\r\n            else  {\r\n              module.animate();\r\n            }\r\n            module.instantiate();\r\n          }\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing display type on next animation');\r\n          delete module.displayType;\r\n        },\r\n\r\n        forceRepaint: function() {\r\n          module.verbose('Forcing element repaint');\r\n          var\r\n            $parentElement = $module.parent(),\r\n            $nextElement = $module.next()\r\n          ;\r\n          if($nextElement.length === 0) {\r\n            $module.detach().appendTo($parentElement);\r\n          }\r\n          else {\r\n            $module.detach().insertBefore($nextElement);\r\n          }\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Repainting element');\r\n          var\r\n            fakeAssignment = element.offsetWidth\r\n          ;\r\n        },\r\n\r\n        delay: function(interval) {\r\n          var\r\n            direction = module.get.animationDirection(),\r\n            shouldReverse,\r\n            delay\r\n          ;\r\n          if(!direction) {\r\n            direction = module.can.transition()\r\n              ? module.get.direction()\r\n              : 'static'\r\n            ;\r\n          }\r\n          interval = (interval !== undefined)\r\n            ? interval\r\n            : settings.interval\r\n          ;\r\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\r\n          delay = (shouldReverse || settings.reverse == true)\r\n            ? ($allModules.length - index) * settings.interval\r\n            : index * settings.interval\r\n          ;\r\n          module.debug('Delaying animation by', delay);\r\n          setTimeout(module.animate, delay);\r\n        },\r\n\r\n        animate: function(overrideSettings) {\r\n          settings = overrideSettings || settings;\r\n          if(!module.is.supported()) {\r\n            module.error(error.support);\r\n            return false;\r\n          }\r\n          module.debug('Preparing animation', settings.animation);\r\n          if(module.is.animating()) {\r\n            if(settings.queue) {\r\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\r\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\r\n              }\r\n              else {\r\n                module.queue(settings.animation);\r\n              }\r\n              return false;\r\n            }\r\n            else if(!settings.allowRepeats && module.is.occurring()) {\r\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\r\n              return false;\r\n            }\r\n            else {\r\n              module.debug('New animation started, completing previous early', settings.animation);\r\n              instance.complete();\r\n            }\r\n          }\r\n          if( module.can.animate() ) {\r\n            module.set.animating(settings.animation);\r\n          }\r\n          else {\r\n            module.error(error.noAnimation, settings.animation, element);\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.debug('Resetting animation to beginning conditions');\r\n          module.remove.animationCallbacks();\r\n          module.restore.conditions();\r\n          module.remove.animating();\r\n        },\r\n\r\n        queue: function(animation) {\r\n          module.debug('Queueing animation of', animation);\r\n          module.queuing = true;\r\n          $module\r\n            .one(animationEnd + '.queue' + eventNamespace, function() {\r\n              module.queuing = false;\r\n              module.repaint();\r\n              module.animate.apply(this, settings);\r\n            })\r\n          ;\r\n        },\r\n\r\n        complete: function (event) {\r\n          module.debug('Animation complete', settings.animation);\r\n          module.remove.completeCallback();\r\n          module.remove.failSafe();\r\n          if(!module.is.looping()) {\r\n            if( module.is.outward() ) {\r\n              module.verbose('Animation is outward, hiding element');\r\n              module.restore.conditions();\r\n              module.hide();\r\n            }\r\n            else if( module.is.inward() ) {\r\n              module.verbose('Animation is outward, showing element');\r\n              module.restore.conditions();\r\n              module.show();\r\n            }\r\n            else {\r\n              module.verbose('Static animation completed');\r\n              module.restore.conditions();\r\n              settings.onComplete.call(element);\r\n            }\r\n          }\r\n        },\r\n\r\n        force: {\r\n          visible: function() {\r\n            var\r\n              style          = $module.attr('style'),\r\n              userStyle      = module.get.userStyle(),\r\n              displayType    = module.get.displayType(),\r\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\r\n              currentDisplay = $module.css('display'),\r\n              emptyStyle     = (style === undefined || style === '')\r\n            ;\r\n            if(currentDisplay !== displayType) {\r\n              module.verbose('Overriding default display to show element', displayType);\r\n              $module\r\n                .attr('style', overrideStyle)\r\n              ;\r\n            }\r\n            else if(emptyStyle) {\r\n              $module.removeAttr('style');\r\n            }\r\n          },\r\n          hidden: function() {\r\n            var\r\n              style          = $module.attr('style'),\r\n              currentDisplay = $module.css('display'),\r\n              emptyStyle     = (style === undefined || style === '')\r\n            ;\r\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\r\n              module.verbose('Overriding default display to hide element');\r\n              $module\r\n                .css('display', 'none')\r\n              ;\r\n            }\r\n            else if(emptyStyle) {\r\n              $module\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          direction: function(animation) {\r\n            var\r\n              hasDirection = false\r\n            ;\r\n            animation = animation || settings.animation;\r\n            if(typeof animation === 'string') {\r\n              animation = animation.split(' ');\r\n              $.each(animation, function(index, word){\r\n                if(word === className.inward || word === className.outward) {\r\n                  hasDirection = true;\r\n                }\r\n              });\r\n            }\r\n            return hasDirection;\r\n          },\r\n          inlineDisplay: function() {\r\n            var\r\n              style = $module.attr('style') || ''\r\n            ;\r\n            return $.isArray(style.match(/display.*?;/, ''));\r\n          }\r\n        },\r\n\r\n        set: {\r\n          animating: function(animation) {\r\n            var\r\n              animationClass,\r\n              direction\r\n            ;\r\n            // remove previous callbacks\r\n            module.remove.completeCallback();\r\n\r\n            // determine exact animation\r\n            animation      = animation || settings.animation;\r\n            animationClass = module.get.animationClass(animation);\r\n\r\n            // save animation class in cache to restore class names\r\n            module.save.animation(animationClass);\r\n\r\n            // override display if necessary so animation appears visibly\r\n            module.force.visible();\r\n\r\n            module.remove.hidden();\r\n            module.remove.direction();\r\n\r\n            module.start.animation(animationClass);\r\n\r\n          },\r\n          duration: function(animationName, duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            if(duration || duration === 0) {\r\n              module.verbose('Setting animation duration', duration);\r\n              $module\r\n                .css({\r\n                  'animation-duration':  duration\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            if(direction == className.inward) {\r\n              module.set.inward();\r\n            }\r\n            else {\r\n              module.set.outward();\r\n            }\r\n          },\r\n          looping: function() {\r\n            module.debug('Transition set to loop');\r\n            $module\r\n              .addClass(className.looping)\r\n            ;\r\n          },\r\n          hidden: function() {\r\n            $module\r\n              .addClass(className.transition)\r\n              .addClass(className.hidden)\r\n            ;\r\n          },\r\n          inward: function() {\r\n            module.debug('Setting direction to inward');\r\n            $module\r\n              .removeClass(className.outward)\r\n              .addClass(className.inward)\r\n            ;\r\n          },\r\n          outward: function() {\r\n            module.debug('Setting direction to outward');\r\n            $module\r\n              .removeClass(className.inward)\r\n              .addClass(className.outward)\r\n            ;\r\n          },\r\n          visible: function() {\r\n            $module\r\n              .addClass(className.transition)\r\n              .addClass(className.visible)\r\n            ;\r\n          }\r\n        },\r\n\r\n        start: {\r\n          animation: function(animationClass) {\r\n            animationClass = animationClass || module.get.animationClass();\r\n            module.debug('Starting tween', animationClass);\r\n            $module\r\n              .addClass(animationClass)\r\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\r\n            ;\r\n            if(settings.useFailSafe) {\r\n              module.add.failSafe();\r\n            }\r\n            module.set.duration(settings.duration);\r\n            settings.onStart.call(element);\r\n          }\r\n        },\r\n\r\n        save: {\r\n          animation: function(animation) {\r\n            if(!module.cache) {\r\n              module.cache = {};\r\n            }\r\n            module.cache.animation = animation;\r\n          },\r\n          displayType: function(displayType) {\r\n            if(displayType !== 'none') {\r\n              $module.data(metadata.displayType, displayType);\r\n            }\r\n          },\r\n          transitionExists: function(animation, exists) {\r\n            $.fn.transition.exists[animation] = exists;\r\n            module.verbose('Saving existence of transition', animation, exists);\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          conditions: function() {\r\n            var\r\n              animation = module.get.currentAnimation()\r\n            ;\r\n            if(animation) {\r\n              $module\r\n                .removeClass(animation)\r\n              ;\r\n              module.verbose('Removing animation class', module.cache);\r\n            }\r\n            module.remove.duration();\r\n          }\r\n        },\r\n\r\n        add: {\r\n          failSafe: function() {\r\n            var\r\n              duration = module.get.duration()\r\n            ;\r\n            module.timer = setTimeout(function() {\r\n              $module.triggerHandler(animationEnd);\r\n            }, duration + settings.failSafeDelay);\r\n            module.verbose('Adding fail safe timer', module.timer);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          animating: function() {\r\n            $module.removeClass(className.animating);\r\n          },\r\n          animationCallbacks: function() {\r\n            module.remove.queueCallback();\r\n            module.remove.completeCallback();\r\n          },\r\n          queueCallback: function() {\r\n            $module.off('.queue' + eventNamespace);\r\n          },\r\n          completeCallback: function() {\r\n            $module.off('.complete' + eventNamespace);\r\n          },\r\n          display: function() {\r\n            $module.css('display', '');\r\n          },\r\n          direction: function() {\r\n            $module\r\n              .removeClass(className.inward)\r\n              .removeClass(className.outward)\r\n            ;\r\n          },\r\n          duration: function() {\r\n            $module\r\n              .css('animation-duration', '')\r\n            ;\r\n          },\r\n          failSafe: function() {\r\n            module.verbose('Removing fail safe timer', module.timer);\r\n            if(module.timer) {\r\n              clearTimeout(module.timer);\r\n            }\r\n          },\r\n          hidden: function() {\r\n            $module.removeClass(className.hidden);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          looping: function() {\r\n            module.debug('Transitions are no longer looping');\r\n            if( module.is.looping() ) {\r\n              module.reset();\r\n              $module\r\n                .removeClass(className.looping)\r\n              ;\r\n            }\r\n          },\r\n          transition: function() {\r\n            $module\r\n              .removeClass(className.visible)\r\n              .removeClass(className.hidden)\r\n            ;\r\n          }\r\n        },\r\n        get: {\r\n          settings: function(animation, duration, onComplete) {\r\n            // single settings object\r\n            if(typeof animation == 'object') {\r\n              return $.extend(true, {}, $.fn.transition.settings, animation);\r\n            }\r\n            // all arguments provided\r\n            else if(typeof onComplete == 'function') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation  : animation,\r\n                onComplete : onComplete,\r\n                duration   : duration\r\n              });\r\n            }\r\n            // only duration provided\r\n            else if(typeof duration == 'string' || typeof duration == 'number') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation : animation,\r\n                duration  : duration\r\n              });\r\n            }\r\n            // duration is actually settings object\r\n            else if(typeof duration == 'object') {\r\n              return $.extend({}, $.fn.transition.settings, duration, {\r\n                animation : animation\r\n              });\r\n            }\r\n            // duration is actually callback\r\n            else if(typeof duration == 'function') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation  : animation,\r\n                onComplete : duration\r\n              });\r\n            }\r\n            // only animation provided\r\n            else {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation : animation\r\n              });\r\n            }\r\n          },\r\n          animationClass: function(animation) {\r\n            var\r\n              animationClass = animation || settings.animation,\r\n              directionClass = (module.can.transition() && !module.has.direction())\r\n                ? module.get.direction() + ' '\r\n                : ''\r\n            ;\r\n            return className.animating + ' '\r\n              + className.transition + ' '\r\n              + directionClass\r\n              + animationClass\r\n            ;\r\n          },\r\n          currentAnimation: function() {\r\n            return (module.cache && module.cache.animation !== undefined)\r\n              ? module.cache.animation\r\n              : false\r\n            ;\r\n          },\r\n          currentDirection: function() {\r\n            return module.is.inward()\r\n              ? className.inward\r\n              : className.outward\r\n            ;\r\n          },\r\n          direction: function() {\r\n            return module.is.hidden() || !module.is.visible()\r\n              ? className.inward\r\n              : className.outward\r\n            ;\r\n          },\r\n          animationDirection: function(animation) {\r\n            var\r\n              direction\r\n            ;\r\n            animation = animation || settings.animation;\r\n            if(typeof animation === 'string') {\r\n              animation = animation.split(' ');\r\n              // search animation name for out/in class\r\n              $.each(animation, function(index, word){\r\n                if(word === className.inward) {\r\n                  direction = className.inward;\r\n                }\r\n                else if(word === className.outward) {\r\n                  direction = className.outward;\r\n                }\r\n              });\r\n            }\r\n            // return found direction\r\n            if(direction) {\r\n              return direction;\r\n            }\r\n            return false;\r\n          },\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            if(duration === false) {\r\n              duration = $module.css('animation-duration') || 0;\r\n            }\r\n            return (typeof duration === 'string')\r\n              ? (duration.indexOf('ms') > -1)\r\n                ? parseFloat(duration)\r\n                : parseFloat(duration) * 1000\r\n              : duration\r\n            ;\r\n          },\r\n          displayType: function(shouldDetermine) {\r\n            shouldDetermine = (shouldDetermine !== undefined)\r\n              ? shouldDetermine\r\n              : true\r\n            ;\r\n            if(settings.displayType) {\r\n              return settings.displayType;\r\n            }\r\n            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\r\n              // create fake element to determine display state\r\n              module.can.transition(true);\r\n            }\r\n            return $module.data(metadata.displayType);\r\n          },\r\n          userStyle: function(style) {\r\n            style = style || $module.attr('style') || '';\r\n            return style.replace(/display.*?;/, '');\r\n          },\r\n          transitionExists: function(animation) {\r\n            return $.fn.transition.exists[animation];\r\n          },\r\n          animationStartEvent: function() {\r\n            var\r\n              element     = document.createElement('div'),\r\n              animations  = {\r\n                'animation'       :'animationstart',\r\n                'OAnimation'      :'oAnimationStart',\r\n                'MozAnimation'    :'mozAnimationStart',\r\n                'WebkitAnimation' :'webkitAnimationStart'\r\n              },\r\n              animation\r\n            ;\r\n            for(animation in animations){\r\n              if( element.style[animation] !== undefined ){\r\n                return animations[animation];\r\n              }\r\n            }\r\n            return false;\r\n          },\r\n          animationEndEvent: function() {\r\n            var\r\n              element     = document.createElement('div'),\r\n              animations  = {\r\n                'animation'       :'animationend',\r\n                'OAnimation'      :'oAnimationEnd',\r\n                'MozAnimation'    :'mozAnimationEnd',\r\n                'WebkitAnimation' :'webkitAnimationEnd'\r\n              },\r\n              animation\r\n            ;\r\n            for(animation in animations){\r\n              if( element.style[animation] !== undefined ){\r\n                return animations[animation];\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n\r\n        },\r\n\r\n        can: {\r\n          transition: function(forced) {\r\n            var\r\n              animation         = settings.animation,\r\n              transitionExists  = module.get.transitionExists(animation),\r\n              displayType       = module.get.displayType(false),\r\n              elementClass,\r\n              tagName,\r\n              $clone,\r\n              currentAnimation,\r\n              inAnimation,\r\n              directionExists\r\n            ;\r\n            if( transitionExists === undefined || forced) {\r\n              module.verbose('Determining whether animation exists');\r\n              elementClass = $module.attr('class');\r\n              tagName      = $module.prop('tagName');\r\n\r\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\r\n              currentAnimation = $clone\r\n                .addClass(animation)\r\n                .removeClass(className.inward)\r\n                .removeClass(className.outward)\r\n                .addClass(className.animating)\r\n                .addClass(className.transition)\r\n                .css('animationName')\r\n              ;\r\n              inAnimation = $clone\r\n                .addClass(className.inward)\r\n                .css('animationName')\r\n              ;\r\n              if(!displayType) {\r\n                displayType = $clone\r\n                  .attr('class', elementClass)\r\n                  .removeAttr('style')\r\n                  .removeClass(className.hidden)\r\n                  .removeClass(className.visible)\r\n                  .show()\r\n                  .css('display')\r\n                ;\r\n                module.verbose('Determining final display state', displayType);\r\n                module.save.displayType(displayType);\r\n              }\r\n\r\n              $clone.remove();\r\n              if(currentAnimation != inAnimation) {\r\n                module.debug('Direction exists for animation', animation);\r\n                directionExists = true;\r\n              }\r\n              else if(currentAnimation == 'none' || !currentAnimation) {\r\n                module.debug('No animation defined in css', animation);\r\n                return;\r\n              }\r\n              else {\r\n                module.debug('Static animation found', animation, displayType);\r\n                directionExists = false;\r\n              }\r\n              module.save.transitionExists(animation, directionExists);\r\n            }\r\n            return (transitionExists !== undefined)\r\n              ? transitionExists\r\n              : directionExists\r\n            ;\r\n          },\r\n          animate: function() {\r\n            // can transition does not return a value if animation does not exist\r\n            return (module.can.transition() !== undefined);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          animating: function() {\r\n            return $module.hasClass(className.animating);\r\n          },\r\n          inward: function() {\r\n            return $module.hasClass(className.inward);\r\n          },\r\n          outward: function() {\r\n            return $module.hasClass(className.outward);\r\n          },\r\n          looping: function() {\r\n            return $module.hasClass(className.looping);\r\n          },\r\n          occurring: function(animation) {\r\n            animation = animation || settings.animation;\r\n            animation = '.' + animation.replace(' ', '.');\r\n            return ( $module.filter(animation).length > 0 );\r\n          },\r\n          visible: function() {\r\n            return $module.is(':visible');\r\n          },\r\n          hidden: function() {\r\n            return $module.css('visibility') === 'hidden';\r\n          },\r\n          supported: function() {\r\n            return(animationEnd !== false);\r\n          }\r\n        },\r\n\r\n        hide: function() {\r\n          module.verbose('Hiding element');\r\n          if( module.is.animating() ) {\r\n            module.reset();\r\n          }\r\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\r\n          module.remove.display();\r\n          module.remove.visible();\r\n          module.set.hidden();\r\n          module.force.hidden();\r\n          settings.onHide.call(element);\r\n          settings.onComplete.call(element);\r\n          // module.repaint();\r\n        },\r\n\r\n        show: function(display) {\r\n          module.verbose('Showing element', display);\r\n          module.remove.hidden();\r\n          module.set.visible();\r\n          module.force.visible();\r\n          settings.onShow.call(element);\r\n          settings.onComplete.call(element);\r\n          // module.repaint();\r\n        },\r\n\r\n        toggle: function() {\r\n          if( module.is.visible() ) {\r\n            module.hide();\r\n          }\r\n          else {\r\n            module.show();\r\n          }\r\n        },\r\n\r\n        stop: function() {\r\n          module.debug('Stopping current animation');\r\n          $module.triggerHandler(animationEnd);\r\n        },\r\n\r\n        stopAll: function() {\r\n          module.debug('Stopping all animation');\r\n          module.remove.queueCallback();\r\n          $module.triggerHandler(animationEnd);\r\n        },\r\n\r\n        clear: {\r\n          queue: function() {\r\n            module.debug('Clearing animation queue');\r\n            module.remove.queueCallback();\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          module.verbose('Starting animation');\r\n          $module.removeClass(className.disabled);\r\n        },\r\n\r\n        disable: function() {\r\n          module.debug('Stopping animation');\r\n          $module.addClass(className.disabled);\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        // modified for transition to return invoke success\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return (found !== undefined)\r\n            ? found\r\n            : false\r\n          ;\r\n        }\r\n      };\r\n      module.initialize();\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n// Records if CSS transition is available\r\n$.fn.transition.exists = {};\r\n\r\n$.fn.transition.settings = {\r\n\r\n  // module info\r\n  name          : 'Transition',\r\n\r\n  // hide all output from this component regardless of other settings\r\n  silent        : false,\r\n\r\n  // debug content outputted to console\r\n  debug         : false,\r\n\r\n  // verbose debug output\r\n  verbose       : false,\r\n\r\n  // performance data output\r\n  performance   : true,\r\n\r\n  // event namespace\r\n  namespace     : 'transition',\r\n\r\n  // delay between animations in group\r\n  interval      : 0,\r\n\r\n  // whether group animations should be reversed\r\n  reverse       : 'auto',\r\n\r\n  // animation callback event\r\n  onStart       : function() {},\r\n  onComplete    : function() {},\r\n  onShow        : function() {},\r\n  onHide        : function() {},\r\n\r\n  // whether timeout should be used to ensure callback fires in cases animationend does not\r\n  useFailSafe   : true,\r\n\r\n  // delay in ms for fail safe\r\n  failSafeDelay : 100,\r\n\r\n  // whether EXACT animation can occur twice in a row\r\n  allowRepeats  : false,\r\n\r\n  // Override final display type on visible\r\n  displayType   : false,\r\n\r\n  // animation duration\r\n  animation     : 'fade',\r\n  duration      : false,\r\n\r\n  // new animations will occur after previous ones\r\n  queue         : true,\r\n\r\n  metadata : {\r\n    displayType: 'display'\r\n  },\r\n\r\n  className   : {\r\n    animating  : 'animating',\r\n    disabled   : 'disabled',\r\n    hidden     : 'hidden',\r\n    inward     : 'in',\r\n    loading    : 'loading',\r\n    looping    : 'looping',\r\n    outward    : 'out',\r\n    transition : 'transition',\r\n    visible    : 'visible'\r\n  },\r\n\r\n  // possible errors\r\n  error: {\r\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\r\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\r\n    method      : 'The method you called is not defined',\r\n    support     : 'This browser does not support CSS animations'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - API\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nvar\r\n  window = (typeof window != 'undefined' && window.Math == Math)\r\n    ? window\r\n    : (typeof self != 'undefined' && self.Math == Math)\r\n      ? self\r\n      : Function('return this')()\r\n;\r\n\r\n$.api = $.fn.api = function(parameters) {\r\n\r\n  var\r\n    // use window context if none specified\r\n    $allModules     = $.isFunction(this)\r\n        ? $(window)\r\n        : $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\r\n          : $.extend({}, $.fn.api.settings),\r\n\r\n        // internal aliases\r\n        namespace       = settings.namespace,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        className       = settings.className,\r\n\r\n        // define namespaces for modules\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        // element that creates request\r\n        $module         = $(this),\r\n        $form           = $module.closest(selector.form),\r\n\r\n        // context used for state\r\n        $context        = (settings.stateContext)\r\n          ? $(settings.stateContext)\r\n          : $module,\r\n\r\n        // request details\r\n        ajaxSettings,\r\n        requestSettings,\r\n        url,\r\n        data,\r\n        requestStartTime,\r\n\r\n        // standard module\r\n        element         = this,\r\n        context         = $context[0],\r\n        instance        = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          if(!methodInvoked) {\r\n            module.bind.events();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            var\r\n              triggerEvent = module.get.event()\r\n            ;\r\n            if( triggerEvent ) {\r\n              module.verbose('Attaching API events to element', triggerEvent);\r\n              $module\r\n                .on(triggerEvent + eventNamespace, module.event.trigger)\r\n              ;\r\n            }\r\n            else if(settings.on == 'now') {\r\n              module.debug('Querying API endpoint immediately');\r\n              module.query();\r\n            }\r\n          }\r\n        },\r\n\r\n        decode: {\r\n          json: function(response) {\r\n            if(response !== undefined && typeof response == 'string') {\r\n              try {\r\n               response = JSON.parse(response);\r\n              }\r\n              catch(e) {\r\n                // isnt json string\r\n              }\r\n            }\r\n            return response;\r\n          }\r\n        },\r\n\r\n        read: {\r\n          cachedResponse: function(url) {\r\n            var\r\n              response\r\n            ;\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            response = sessionStorage.getItem(url);\r\n            module.debug('Using cached response', url, response);\r\n            response = module.decode.json(response);\r\n            return response;\r\n          }\r\n        },\r\n        write: {\r\n          cachedResponse: function(url, response) {\r\n            if(response && response === '') {\r\n              module.debug('Response empty, not caching', response);\r\n              return;\r\n            }\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            if( $.isPlainObject(response) ) {\r\n              response = JSON.stringify(response);\r\n            }\r\n            sessionStorage.setItem(url, response);\r\n            module.verbose('Storing cached response for url', url, response);\r\n          }\r\n        },\r\n\r\n        query: function() {\r\n\r\n          if(module.is.disabled()) {\r\n            module.debug('Element is disabled API request aborted');\r\n            return;\r\n          }\r\n\r\n          if(module.is.loading()) {\r\n            if(settings.interruptRequests) {\r\n              module.debug('Interrupting previous request');\r\n              module.abort();\r\n            }\r\n            else {\r\n              module.debug('Cancelling request, previous request is still pending');\r\n              return;\r\n            }\r\n          }\r\n\r\n          // pass element metadata to url (value, text)\r\n          if(settings.defaultData) {\r\n            $.extend(true, settings.urlData, module.get.defaultData());\r\n          }\r\n\r\n          // Add form content\r\n          if(settings.serializeForm) {\r\n            settings.data = module.add.formData(settings.data);\r\n          }\r\n\r\n          // call beforesend and get any settings changes\r\n          requestSettings = module.get.settings();\r\n\r\n          // check if before send cancelled request\r\n          if(requestSettings === false) {\r\n            module.cancelled = true;\r\n            module.error(error.beforeSend);\r\n            return;\r\n          }\r\n          else {\r\n            module.cancelled = false;\r\n          }\r\n\r\n          // get url\r\n          url = module.get.templatedURL();\r\n\r\n          if(!url && !module.is.mocked()) {\r\n            module.error(error.missingURL);\r\n            return;\r\n          }\r\n\r\n          // replace variables\r\n          url = module.add.urlData( url );\r\n          // missing url parameters\r\n          if( !url && !module.is.mocked()) {\r\n            return;\r\n          }\r\n\r\n          requestSettings.url = settings.base + url;\r\n\r\n          // look for jQuery ajax parameters in settings\r\n          ajaxSettings = $.extend(true, {}, settings, {\r\n            type       : settings.method || settings.type,\r\n            data       : data,\r\n            url        : settings.base + url,\r\n            beforeSend : settings.beforeXHR,\r\n            success    : function() {},\r\n            failure    : function() {},\r\n            complete   : function() {}\r\n          });\r\n\r\n          module.debug('Querying URL', ajaxSettings.url);\r\n          module.verbose('Using AJAX settings', ajaxSettings);\r\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\r\n            module.debug('Response returned from local cache');\r\n            module.request = module.create.request();\r\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\r\n            return;\r\n          }\r\n\r\n          if( !settings.throttle ) {\r\n            module.debug('Sending request', data, ajaxSettings.method);\r\n            module.send.request();\r\n          }\r\n          else {\r\n            if(!settings.throttleFirstRequest && !module.timer) {\r\n              module.debug('Sending request', data, ajaxSettings.method);\r\n              module.send.request();\r\n              module.timer = setTimeout(function(){}, settings.throttle);\r\n            }\r\n            else {\r\n              module.debug('Throttling request', settings.throttle);\r\n              clearTimeout(module.timer);\r\n              module.timer = setTimeout(function() {\r\n                if(module.timer) {\r\n                  delete module.timer;\r\n                }\r\n                module.debug('Sending throttled request', data, ajaxSettings.method);\r\n                module.send.request();\r\n              }, settings.throttle);\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        should: {\r\n          removeError: function() {\r\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\r\n          }\r\n        },\r\n\r\n        is: {\r\n          disabled: function() {\r\n            return ($module.filter(selector.disabled).length > 0);\r\n          },\r\n          expectingJSON: function() {\r\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\r\n          },\r\n          form: function() {\r\n            return $module.is('form') || $context.is('form');\r\n          },\r\n          mocked: function() {\r\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\r\n          },\r\n          input: function() {\r\n            return $module.is('input');\r\n          },\r\n          loading: function() {\r\n            return (module.request)\r\n              ? (module.request.state() == 'pending')\r\n              : false\r\n            ;\r\n          },\r\n          abortedRequest: function(xhr) {\r\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\r\n              module.verbose('XHR request determined to be aborted');\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('XHR request was not aborted');\r\n              return false;\r\n            }\r\n          },\r\n          validResponse: function(response) {\r\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\r\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\r\n              return true;\r\n            }\r\n            module.debug('Checking JSON returned success', settings.successTest, response);\r\n            if( settings.successTest(response) ) {\r\n              module.debug('Response passed success test', response);\r\n              return true;\r\n            }\r\n            else {\r\n              module.debug('Response failed success test', response);\r\n              return false;\r\n            }\r\n          }\r\n        },\r\n\r\n        was: {\r\n          cancelled: function() {\r\n            return (module.cancelled || false);\r\n          },\r\n          succesful: function() {\r\n            return (module.request && module.request.state() == 'resolved');\r\n          },\r\n          failure: function() {\r\n            return (module.request && module.request.state() == 'rejected');\r\n          },\r\n          complete: function() {\r\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\r\n          }\r\n        },\r\n\r\n        add: {\r\n          urlData: function(url, urlData) {\r\n            var\r\n              requiredVariables,\r\n              optionalVariables\r\n            ;\r\n            if(url) {\r\n              requiredVariables = url.match(settings.regExp.required);\r\n              optionalVariables = url.match(settings.regExp.optional);\r\n              urlData           = urlData || settings.urlData;\r\n              if(requiredVariables) {\r\n                module.debug('Looking for required URL variables', requiredVariables);\r\n                $.each(requiredVariables, function(index, templatedString) {\r\n                  var\r\n                    // allow legacy {$var} style\r\n                    variable = (templatedString.indexOf('$') !== -1)\r\n                      ? templatedString.substr(2, templatedString.length - 3)\r\n                      : templatedString.substr(1, templatedString.length - 2),\r\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\r\n                      ? urlData[variable]\r\n                      : ($module.data(variable) !== undefined)\r\n                        ? $module.data(variable)\r\n                        : ($context.data(variable) !== undefined)\r\n                          ? $context.data(variable)\r\n                          : urlData[variable]\r\n                  ;\r\n                  // remove value\r\n                  if(value === undefined) {\r\n                    module.error(error.requiredParameter, variable, url);\r\n                    url = false;\r\n                    return false;\r\n                  }\r\n                  else {\r\n                    module.verbose('Found required variable', variable, value);\r\n                    value = (settings.encodeParameters)\r\n                      ? module.get.urlEncodedValue(value)\r\n                      : value\r\n                    ;\r\n                    url = url.replace(templatedString, value);\r\n                  }\r\n                });\r\n              }\r\n              if(optionalVariables) {\r\n                module.debug('Looking for optional URL variables', requiredVariables);\r\n                $.each(optionalVariables, function(index, templatedString) {\r\n                  var\r\n                    // allow legacy {/$var} style\r\n                    variable = (templatedString.indexOf('$') !== -1)\r\n                      ? templatedString.substr(3, templatedString.length - 4)\r\n                      : templatedString.substr(2, templatedString.length - 3),\r\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\r\n                      ? urlData[variable]\r\n                      : ($module.data(variable) !== undefined)\r\n                        ? $module.data(variable)\r\n                        : ($context.data(variable) !== undefined)\r\n                          ? $context.data(variable)\r\n                          : urlData[variable]\r\n                  ;\r\n                  // optional replacement\r\n                  if(value !== undefined) {\r\n                    module.verbose('Optional variable Found', variable, value);\r\n                    url = url.replace(templatedString, value);\r\n                  }\r\n                  else {\r\n                    module.verbose('Optional variable not found', variable);\r\n                    // remove preceding slash if set\r\n                    if(url.indexOf('/' + templatedString) !== -1) {\r\n                      url = url.replace('/' + templatedString, '');\r\n                    }\r\n                    else {\r\n                      url = url.replace(templatedString, '');\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n            return url;\r\n          },\r\n          formData: function(data) {\r\n            var\r\n              canSerialize = ($.fn.serializeObject !== undefined),\r\n              formData     = (canSerialize)\r\n                ? $form.serializeObject()\r\n                : $form.serialize(),\r\n              hasOtherData\r\n            ;\r\n            data         = data || settings.data;\r\n            hasOtherData = $.isPlainObject(data);\r\n\r\n            if(hasOtherData) {\r\n              if(canSerialize) {\r\n                module.debug('Extending existing data with form data', data, formData);\r\n                data = $.extend(true, {}, data, formData);\r\n              }\r\n              else {\r\n                module.error(error.missingSerialize);\r\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\r\n                data = formData;\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Adding form data', formData);\r\n              data = formData;\r\n            }\r\n            return data;\r\n          }\r\n        },\r\n\r\n        send: {\r\n          request: function() {\r\n            module.set.loading();\r\n            module.request = module.create.request();\r\n            if( module.is.mocked() ) {\r\n              module.mockedXHR = module.create.mockedXHR();\r\n            }\r\n            else {\r\n              module.xhr = module.create.xhr();\r\n            }\r\n            settings.onRequest.call(context, module.request, module.xhr);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          trigger: function(event) {\r\n            module.query();\r\n            if(event.type == 'submit' || event.type == 'click') {\r\n              event.preventDefault();\r\n            }\r\n          },\r\n          xhr: {\r\n            always: function() {\r\n              // nothing special\r\n            },\r\n            done: function(response, textStatus, xhr) {\r\n              var\r\n                context            = this,\r\n                elapsedTime        = (new Date().getTime() - requestStartTime),\r\n                timeLeft           = (settings.loadingDuration - elapsedTime),\r\n                translatedResponse = ( $.isFunction(settings.onResponse) )\r\n                  ? module.is.expectingJSON()\r\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\r\n                    : settings.onResponse.call(context, response)\r\n                  : false\r\n              ;\r\n              timeLeft = (timeLeft > 0)\r\n                ? timeLeft\r\n                : 0\r\n              ;\r\n              if(translatedResponse) {\r\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\r\n                response = translatedResponse;\r\n              }\r\n              if(timeLeft > 0) {\r\n                module.debug('Response completed early delaying state change by', timeLeft);\r\n              }\r\n              setTimeout(function() {\r\n                if( module.is.validResponse(response) ) {\r\n                  module.request.resolveWith(context, [response, xhr]);\r\n                }\r\n                else {\r\n                  module.request.rejectWith(context, [xhr, 'invalid']);\r\n                }\r\n              }, timeLeft);\r\n            },\r\n            fail: function(xhr, status, httpMessage) {\r\n              var\r\n                context     = this,\r\n                elapsedTime = (new Date().getTime() - requestStartTime),\r\n                timeLeft    = (settings.loadingDuration - elapsedTime)\r\n              ;\r\n              timeLeft = (timeLeft > 0)\r\n                ? timeLeft\r\n                : 0\r\n              ;\r\n              if(timeLeft > 0) {\r\n                module.debug('Response completed early delaying state change by', timeLeft);\r\n              }\r\n              setTimeout(function() {\r\n                if( module.is.abortedRequest(xhr) ) {\r\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\r\n                }\r\n                else {\r\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\r\n                }\r\n              }, timeLeft);\r\n            }\r\n          },\r\n          request: {\r\n            done: function(response, xhr) {\r\n              module.debug('Successful API Response', response);\r\n              if(settings.cache === 'local' && url) {\r\n                module.write.cachedResponse(url, response);\r\n                module.debug('Saving server response locally', module.cache);\r\n              }\r\n              settings.onSuccess.call(context, response, $module, xhr);\r\n            },\r\n            complete: function(firstParameter, secondParameter) {\r\n              var\r\n                xhr,\r\n                response\r\n              ;\r\n              // have to guess callback parameters based on request success\r\n              if( module.was.succesful() ) {\r\n                response = firstParameter;\r\n                xhr      = secondParameter;\r\n              }\r\n              else {\r\n                xhr      = firstParameter;\r\n                response = module.get.responseFromXHR(xhr);\r\n              }\r\n              module.remove.loading();\r\n              settings.onComplete.call(context, response, $module, xhr);\r\n            },\r\n            fail: function(xhr, status, httpMessage) {\r\n              var\r\n                // pull response from xhr if available\r\n                response     = module.get.responseFromXHR(xhr),\r\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\r\n              ;\r\n              if(status == 'aborted') {\r\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\r\n                settings.onAbort.call(context, status, $module, xhr);\r\n                return true;\r\n              }\r\n              else if(status == 'invalid') {\r\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\r\n              }\r\n              else if(status == 'error') {\r\n                if(xhr !== undefined) {\r\n                  module.debug('XHR produced a server error', status, httpMessage);\r\n                  // make sure we have an error to display to console\r\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\r\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\r\n                  }\r\n                  settings.onError.call(context, errorMessage, $module, xhr);\r\n                }\r\n              }\r\n\r\n              if(settings.errorDuration && status !== 'aborted') {\r\n                module.debug('Adding error state');\r\n                module.set.error();\r\n                if( module.should.removeError() ) {\r\n                  setTimeout(module.remove.error, settings.errorDuration);\r\n                }\r\n              }\r\n              module.debug('API Request failed', errorMessage, xhr);\r\n              settings.onFailure.call(context, response, $module, xhr);\r\n            }\r\n          }\r\n        },\r\n\r\n        create: {\r\n\r\n          request: function() {\r\n            // api request promise\r\n            return $.Deferred()\r\n              .always(module.event.request.complete)\r\n              .done(module.event.request.done)\r\n              .fail(module.event.request.fail)\r\n            ;\r\n          },\r\n\r\n          mockedXHR: function () {\r\n            var\r\n              // xhr does not simulate these properties of xhr but must return them\r\n              textStatus     = false,\r\n              status         = false,\r\n              httpMessage    = false,\r\n              responder      = settings.mockResponse      || settings.response,\r\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\r\n              asyncCallback,\r\n              response,\r\n              mockedXHR\r\n            ;\r\n\r\n            mockedXHR = $.Deferred()\r\n              .always(module.event.xhr.complete)\r\n              .done(module.event.xhr.done)\r\n              .fail(module.event.xhr.fail)\r\n            ;\r\n\r\n            if(responder) {\r\n              if( $.isFunction(responder) ) {\r\n                module.debug('Using specified synchronous callback', responder);\r\n                response = responder.call(context, requestSettings);\r\n              }\r\n              else {\r\n                module.debug('Using settings specified response', responder);\r\n                response = responder;\r\n              }\r\n              // simulating response\r\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\r\n            }\r\n            else if( $.isFunction(asyncResponder) ) {\r\n              asyncCallback = function(response) {\r\n                module.debug('Async callback returned response', response);\r\n\r\n                if(response) {\r\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\r\n                }\r\n                else {\r\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\r\n                }\r\n              };\r\n              module.debug('Using specified async response callback', asyncResponder);\r\n              asyncResponder.call(context, requestSettings, asyncCallback);\r\n            }\r\n            return mockedXHR;\r\n          },\r\n\r\n          xhr: function() {\r\n            var\r\n              xhr\r\n            ;\r\n            // ajax request promise\r\n            xhr = $.ajax(ajaxSettings)\r\n              .always(module.event.xhr.always)\r\n              .done(module.event.xhr.done)\r\n              .fail(module.event.xhr.fail)\r\n            ;\r\n            module.verbose('Created server request', xhr, ajaxSettings);\r\n            return xhr;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          error: function() {\r\n            module.verbose('Adding error state to element', $context);\r\n            $context.addClass(className.error);\r\n          },\r\n          loading: function() {\r\n            module.verbose('Adding loading state to element', $context);\r\n            $context.addClass(className.loading);\r\n            requestStartTime = new Date().getTime();\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          error: function() {\r\n            module.verbose('Removing error state from element', $context);\r\n            $context.removeClass(className.error);\r\n          },\r\n          loading: function() {\r\n            module.verbose('Removing loading state from element', $context);\r\n            $context.removeClass(className.loading);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          responseFromXHR: function(xhr) {\r\n            return $.isPlainObject(xhr)\r\n              ? (module.is.expectingJSON())\r\n                ? module.decode.json(xhr.responseText)\r\n                : xhr.responseText\r\n              : false\r\n            ;\r\n          },\r\n          errorFromRequest: function(response, status, httpMessage) {\r\n            return ($.isPlainObject(response) && response.error !== undefined)\r\n              ? response.error // use json error message\r\n              : (settings.error[status] !== undefined) // use server error message\r\n                ? settings.error[status]\r\n                : httpMessage\r\n            ;\r\n          },\r\n          request: function() {\r\n            return module.request || false;\r\n          },\r\n          xhr: function() {\r\n            return module.xhr || false;\r\n          },\r\n          settings: function() {\r\n            var\r\n              runSettings\r\n            ;\r\n            runSettings = settings.beforeSend.call(context, settings);\r\n            if(runSettings) {\r\n              if(runSettings.success !== undefined) {\r\n                module.debug('Legacy success callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.success);\r\n                runSettings.onSuccess = runSettings.success;\r\n              }\r\n              if(runSettings.failure !== undefined) {\r\n                module.debug('Legacy failure callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.failure);\r\n                runSettings.onFailure = runSettings.failure;\r\n              }\r\n              if(runSettings.complete !== undefined) {\r\n                module.debug('Legacy complete callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.complete);\r\n                runSettings.onComplete = runSettings.complete;\r\n              }\r\n            }\r\n            if(runSettings === undefined) {\r\n              module.error(error.noReturnedValue);\r\n            }\r\n            if(runSettings === false) {\r\n              return runSettings;\r\n            }\r\n            return (runSettings !== undefined)\r\n              ? $.extend(true, {}, runSettings)\r\n              : $.extend(true, {}, settings)\r\n            ;\r\n          },\r\n          urlEncodedValue: function(value) {\r\n            var\r\n              decodedValue   = window.decodeURIComponent(value),\r\n              encodedValue   = window.encodeURIComponent(value),\r\n              alreadyEncoded = (decodedValue !== value)\r\n            ;\r\n            if(alreadyEncoded) {\r\n              module.debug('URL value is already encoded, avoiding double encoding', value);\r\n              return value;\r\n            }\r\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\r\n            return encodedValue;\r\n          },\r\n          defaultData: function() {\r\n            var\r\n              data = {}\r\n            ;\r\n            if( !$.isWindow(element) ) {\r\n              if( module.is.input() ) {\r\n                data.value = $module.val();\r\n              }\r\n              else if( module.is.form() ) {\r\n\r\n              }\r\n              else {\r\n                data.text = $module.text();\r\n              }\r\n            }\r\n            return data;\r\n          },\r\n          event: function() {\r\n            if( $.isWindow(element) || settings.on == 'now' ) {\r\n              module.debug('API called without element, no events attached');\r\n              return false;\r\n            }\r\n            else if(settings.on == 'auto') {\r\n              if( $module.is('input') ) {\r\n                return (element.oninput !== undefined)\r\n                  ? 'input'\r\n                  : (element.onpropertychange !== undefined)\r\n                    ? 'propertychange'\r\n                    : 'keyup'\r\n                ;\r\n              }\r\n              else if( $module.is('form') ) {\r\n                return 'submit';\r\n              }\r\n              else {\r\n                return 'click';\r\n              }\r\n            }\r\n            else {\r\n              return settings.on;\r\n            }\r\n          },\r\n          templatedURL: function(action) {\r\n            action = action || $module.data(metadata.action) || settings.action || false;\r\n            url    = $module.data(metadata.url) || settings.url || false;\r\n            if(url) {\r\n              module.debug('Using specified url', url);\r\n              return url;\r\n            }\r\n            if(action) {\r\n              module.debug('Looking up url for action', action, settings.api);\r\n              if(settings.api[action] === undefined && !module.is.mocked()) {\r\n                module.error(error.missingAction, settings.action, settings.api);\r\n                return;\r\n              }\r\n              url = settings.api[action];\r\n            }\r\n            else if( module.is.form() ) {\r\n              url = $module.attr('action') || $context.attr('action') || false;\r\n              module.debug('No url or action specified, defaulting to form action', url);\r\n            }\r\n            return url;\r\n          }\r\n        },\r\n\r\n        abort: function() {\r\n          var\r\n            xhr = module.get.xhr()\r\n          ;\r\n          if( xhr && xhr.state() !== 'resolved') {\r\n            module.debug('Cancelling API request');\r\n            xhr.abort();\r\n          }\r\n        },\r\n\r\n        // reset state\r\n        reset: function() {\r\n          module.remove.error();\r\n          module.remove.loading();\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                //'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.api.settings = {\r\n\r\n  name              : 'API',\r\n  namespace         : 'api',\r\n\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  // object containing all templates endpoints\r\n  api               : {},\r\n\r\n  // whether to cache responses\r\n  cache             : true,\r\n\r\n  // whether new requests should abort previous requests\r\n  interruptRequests : true,\r\n\r\n  // event binding\r\n  on                : 'auto',\r\n\r\n  // context for applying state classes\r\n  stateContext      : false,\r\n\r\n  // duration for loading state\r\n  loadingDuration   : 0,\r\n\r\n  // whether to hide errors after a period of time\r\n  hideError         : 'auto',\r\n\r\n  // duration for error state\r\n  errorDuration     : 2000,\r\n\r\n  // whether parameters should be encoded with encodeURIComponent\r\n  encodeParameters  : true,\r\n\r\n  // API action to use\r\n  action            : false,\r\n\r\n  // templated URL to use\r\n  url               : false,\r\n\r\n  // base URL to apply to all endpoints\r\n  base              : '',\r\n\r\n  // data that will\r\n  urlData           : {},\r\n\r\n  // whether to add default data to url data\r\n  defaultData          : true,\r\n\r\n  // whether to serialize closest form\r\n  serializeForm        : false,\r\n\r\n  // how long to wait before request should occur\r\n  throttle             : 0,\r\n\r\n  // whether to throttle first request or only repeated\r\n  throttleFirstRequest : true,\r\n\r\n  // standard ajax settings\r\n  method            : 'get',\r\n  data              : {},\r\n  dataType          : 'json',\r\n\r\n  // mock response\r\n  mockResponse      : false,\r\n  mockResponseAsync : false,\r\n\r\n  // aliases for mock\r\n  response          : false,\r\n  responseAsync     : false,\r\n\r\n  // callbacks before request\r\n  beforeSend  : function(settings) { return settings; },\r\n  beforeXHR   : function(xhr) {},\r\n  onRequest   : function(promise, xhr) {},\r\n\r\n  // after request\r\n  onResponse  : false, // function(response) { },\r\n\r\n  // response was successful, if JSON passed validation\r\n  onSuccess   : function(response, $module) {},\r\n\r\n  // request finished without aborting\r\n  onComplete  : function(response, $module) {},\r\n\r\n  // failed JSON success test\r\n  onFailure   : function(response, $module) {},\r\n\r\n  // server error\r\n  onError     : function(errorMessage, $module) {},\r\n\r\n  // request aborted\r\n  onAbort     : function(errorMessage, $module) {},\r\n\r\n  successTest : false,\r\n\r\n  // errors\r\n  error : {\r\n    beforeSend        : 'The before send function has aborted the request',\r\n    error             : 'There was an error with your request',\r\n    exitConditions    : 'API Request Aborted. Exit conditions met',\r\n    JSONParse         : 'JSON could not be parsed during error handling',\r\n    legacyParameters  : 'You are using legacy API success callback names',\r\n    method            : 'The method you called is not defined',\r\n    missingAction     : 'API action used but no url was defined',\r\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\r\n    missingURL        : 'No URL specified for api event',\r\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\r\n    noStorage         : 'Caching responses locally requires session storage',\r\n    parseError        : 'There was an error parsing your request',\r\n    requiredParameter : 'Missing a required URL parameter: ',\r\n    statusMessage     : 'Server gave an error: ',\r\n    timeout           : 'Your request timed out'\r\n  },\r\n\r\n  regExp  : {\r\n    required : /\\{\\$*[A-z0-9]+\\}/g,\r\n    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\r\n  },\r\n\r\n  className: {\r\n    loading : 'loading',\r\n    error   : 'error'\r\n  },\r\n\r\n  selector: {\r\n    disabled : '.disabled',\r\n    form      : 'form'\r\n  },\r\n\r\n  metadata: {\r\n    action  : 'action',\r\n    url     : 'url'\r\n  }\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - State\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.state = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    hasTouch        = ('ontouchstart' in document.documentElement),\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\r\n          : $.extend({}, $.fn.state.settings),\r\n\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        states          = settings.states,\r\n        text            = settings.text,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = namespace + '-module',\r\n\r\n        $module         = $(this),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        module\r\n      ;\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module');\r\n\r\n          // allow module to guess desired state based on element\r\n          if(settings.automatic) {\r\n            module.add.defaults();\r\n          }\r\n\r\n          // bind events with delegated events\r\n          if(settings.context && moduleSelector !== '') {\r\n            $(settings.context)\r\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\r\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\r\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\r\n            ;\r\n          }\r\n          else {\r\n            $module\r\n              .on('mouseenter' + eventNamespace, module.change.text)\r\n              .on('mouseleave' + eventNamespace, module.reset.text)\r\n              .on('click'      + eventNamespace, module.toggle.state)\r\n            ;\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', instance);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $module = $(element);\r\n        },\r\n\r\n        add: {\r\n          defaults: function() {\r\n            var\r\n              userStates = parameters && $.isPlainObject(parameters.states)\r\n                ? parameters.states\r\n                : {}\r\n            ;\r\n            $.each(settings.defaults, function(type, typeStates) {\r\n              if( module.is[type] !== undefined && module.is[type]() ) {\r\n                module.verbose('Adding default states', type, element);\r\n                $.extend(settings.states, typeStates, userStates);\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        is: {\r\n\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          loading: function() {\r\n            return $module.hasClass(className.loading);\r\n          },\r\n          inactive: function() {\r\n            return !( $module.hasClass(className.active) );\r\n          },\r\n          state: function(state) {\r\n            if(className[state] === undefined) {\r\n              return false;\r\n            }\r\n            return $module.hasClass( className[state] );\r\n          },\r\n\r\n          enabled: function() {\r\n            return !( $module.is(settings.filter.active) );\r\n          },\r\n          disabled: function() {\r\n            return ( $module.is(settings.filter.active) );\r\n          },\r\n          textEnabled: function() {\r\n            return !( $module.is(settings.filter.text) );\r\n          },\r\n\r\n          // definitions for automatic type detection\r\n          button: function() {\r\n            return $module.is('.button:not(a, .submit)');\r\n          },\r\n          input: function() {\r\n            return $module.is('input');\r\n          },\r\n          progress: function() {\r\n            return $module.is('.ui.progress');\r\n          }\r\n        },\r\n\r\n        allow: function(state) {\r\n          module.debug('Now allowing state', state);\r\n          states[state] = true;\r\n        },\r\n        disallow: function(state) {\r\n          module.debug('No longer allowing', state);\r\n          states[state] = false;\r\n        },\r\n\r\n        allows: function(state) {\r\n          return states[state] || false;\r\n        },\r\n\r\n        enable: function() {\r\n          $module.removeClass(className.disabled);\r\n        },\r\n\r\n        disable: function() {\r\n          $module.addClass(className.disabled);\r\n        },\r\n\r\n        setState: function(state) {\r\n          if(module.allows(state)) {\r\n            $module.addClass( className[state] );\r\n          }\r\n        },\r\n\r\n        removeState: function(state) {\r\n          if(module.allows(state)) {\r\n            $module.removeClass( className[state] );\r\n          }\r\n        },\r\n\r\n        toggle: {\r\n          state: function() {\r\n            var\r\n              apiRequest,\r\n              requestCancelled\r\n            ;\r\n            if( module.allows('active') && module.is.enabled() ) {\r\n              module.refresh();\r\n              if($.fn.api !== undefined) {\r\n                apiRequest       = $module.api('get request');\r\n                requestCancelled = $module.api('was cancelled');\r\n                if( requestCancelled ) {\r\n                  module.debug('API Request cancelled by beforesend');\r\n                  settings.activateTest   = function(){ return false; };\r\n                  settings.deactivateTest = function(){ return false; };\r\n                }\r\n                else if(apiRequest) {\r\n                  module.listenTo(apiRequest);\r\n                  return;\r\n                }\r\n              }\r\n              module.change.state();\r\n            }\r\n          }\r\n        },\r\n\r\n        listenTo: function(apiRequest) {\r\n          module.debug('API request detected, waiting for state signal', apiRequest);\r\n          if(apiRequest) {\r\n            if(text.loading) {\r\n              module.update.text(text.loading);\r\n            }\r\n            $.when(apiRequest)\r\n              .then(function() {\r\n                if(apiRequest.state() == 'resolved') {\r\n                  module.debug('API request succeeded');\r\n                  settings.activateTest   = function(){ return true; };\r\n                  settings.deactivateTest = function(){ return true; };\r\n                }\r\n                else {\r\n                  module.debug('API request failed');\r\n                  settings.activateTest   = function(){ return false; };\r\n                  settings.deactivateTest = function(){ return false; };\r\n                }\r\n                module.change.state();\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        // checks whether active/inactive state can be given\r\n        change: {\r\n\r\n          state: function() {\r\n            module.debug('Determining state change direction');\r\n            // inactive to active change\r\n            if( module.is.inactive() ) {\r\n              module.activate();\r\n            }\r\n            else {\r\n              module.deactivate();\r\n            }\r\n            if(settings.sync) {\r\n              module.sync();\r\n            }\r\n            settings.onChange.call(element);\r\n          },\r\n\r\n          text: function() {\r\n            if( module.is.textEnabled() ) {\r\n              if(module.is.disabled() ) {\r\n                module.verbose('Changing text to disabled text', text.hover);\r\n                module.update.text(text.disabled);\r\n              }\r\n              else if( module.is.active() ) {\r\n                if(text.hover) {\r\n                  module.verbose('Changing text to hover text', text.hover);\r\n                  module.update.text(text.hover);\r\n                }\r\n                else if(text.deactivate) {\r\n                  module.verbose('Changing text to deactivating text', text.deactivate);\r\n                  module.update.text(text.deactivate);\r\n                }\r\n              }\r\n              else {\r\n                if(text.hover) {\r\n                  module.verbose('Changing text to hover text', text.hover);\r\n                  module.update.text(text.hover);\r\n                }\r\n                else if(text.activate){\r\n                  module.verbose('Changing text to activating text', text.activate);\r\n                  module.update.text(text.activate);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        activate: function() {\r\n          if( settings.activateTest.call(element) ) {\r\n            module.debug('Setting state to active');\r\n            $module\r\n              .addClass(className.active)\r\n            ;\r\n            module.update.text(text.active);\r\n            settings.onActivate.call(element);\r\n          }\r\n        },\r\n\r\n        deactivate: function() {\r\n          if( settings.deactivateTest.call(element) ) {\r\n            module.debug('Setting state to inactive');\r\n            $module\r\n              .removeClass(className.active)\r\n            ;\r\n            module.update.text(text.inactive);\r\n            settings.onDeactivate.call(element);\r\n          }\r\n        },\r\n\r\n        sync: function() {\r\n          module.verbose('Syncing other buttons to current state');\r\n          if( module.is.active() ) {\r\n            $allModules\r\n              .not($module)\r\n                .state('activate');\r\n          }\r\n          else {\r\n            $allModules\r\n              .not($module)\r\n                .state('deactivate')\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          text: function() {\r\n            return (settings.selector.text)\r\n              ? $module.find(settings.selector.text).text()\r\n              : $module.html()\r\n            ;\r\n          },\r\n          textFor: function(state) {\r\n            return text[state] || false;\r\n          }\r\n        },\r\n\r\n        flash: {\r\n          text: function(text, duration, callback) {\r\n            var\r\n              previousText = module.get.text()\r\n            ;\r\n            module.debug('Flashing text message', text, duration);\r\n            text     = text     || settings.text.flash;\r\n            duration = duration || settings.flashDuration;\r\n            callback = callback || function() {};\r\n            module.update.text(text);\r\n            setTimeout(function(){\r\n              module.update.text(previousText);\r\n              callback.call(element);\r\n            }, duration);\r\n          }\r\n        },\r\n\r\n        reset: {\r\n          // on mouseout sets text to previous value\r\n          text: function() {\r\n            var\r\n              activeText   = text.active   || $module.data(metadata.storedText),\r\n              inactiveText = text.inactive || $module.data(metadata.storedText)\r\n            ;\r\n            if( module.is.textEnabled() ) {\r\n              if( module.is.active() && activeText) {\r\n                module.verbose('Resetting active text', activeText);\r\n                module.update.text(activeText);\r\n              }\r\n              else if(inactiveText) {\r\n                module.verbose('Resetting inactive text', activeText);\r\n                module.update.text(inactiveText);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        update: {\r\n          text: function(text) {\r\n            var\r\n              currentText = module.get.text()\r\n            ;\r\n            if(text && text !== currentText) {\r\n              module.debug('Updating text', text);\r\n              if(settings.selector.text) {\r\n                $module\r\n                  .data(metadata.storedText, text)\r\n                  .find(settings.selector.text)\r\n                    .text(text)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .data(metadata.storedText, text)\r\n                  .html(text)\r\n                ;\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Text is already set, ignoring update', text);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.state.settings = {\r\n\r\n  // module info\r\n  name           : 'State',\r\n\r\n  // debug output\r\n  debug          : false,\r\n\r\n  // verbose debug output\r\n  verbose        : false,\r\n\r\n  // namespace for events\r\n  namespace      : 'state',\r\n\r\n  // debug data includes performance\r\n  performance    : true,\r\n\r\n  // callback occurs on state change\r\n  onActivate     : function() {},\r\n  onDeactivate   : function() {},\r\n  onChange       : function() {},\r\n\r\n  // state test functions\r\n  activateTest   : function() { return true; },\r\n  deactivateTest : function() { return true; },\r\n\r\n  // whether to automatically map default states\r\n  automatic      : true,\r\n\r\n  // activate / deactivate changes all elements instantiated at same time\r\n  sync           : false,\r\n\r\n  // default flash text duration, used for temporarily changing text of an element\r\n  flashDuration  : 1000,\r\n\r\n  // selector filter\r\n  filter     : {\r\n    text   : '.loading, .disabled',\r\n    active : '.disabled'\r\n  },\r\n\r\n  context    : false,\r\n\r\n  // error\r\n  error: {\r\n    beforeSend : 'The before send function has cancelled state change',\r\n    method     : 'The method you called is not defined.'\r\n  },\r\n\r\n  // metadata\r\n  metadata: {\r\n    promise    : 'promise',\r\n    storedText : 'stored-text'\r\n  },\r\n\r\n  // change class on state\r\n  className: {\r\n    active   : 'active',\r\n    disabled : 'disabled',\r\n    error    : 'error',\r\n    loading  : 'loading',\r\n    success  : 'success',\r\n    warning  : 'warning'\r\n  },\r\n\r\n  selector: {\r\n    // selector for text node\r\n    text: false\r\n  },\r\n\r\n  defaults : {\r\n    input: {\r\n      disabled : true,\r\n      loading  : true,\r\n      active   : true\r\n    },\r\n    button: {\r\n      disabled : true,\r\n      loading  : true,\r\n      active   : true,\r\n    },\r\n    progress: {\r\n      active   : true,\r\n      success  : true,\r\n      warning  : true,\r\n      error    : true\r\n    }\r\n  },\r\n\r\n  states     : {\r\n    active   : true,\r\n    disabled : true,\r\n    error    : true,\r\n    loading  : true,\r\n    success  : true,\r\n    warning  : true\r\n  },\r\n\r\n  text     : {\r\n    disabled   : false,\r\n    flash      : false,\r\n    hover      : false,\r\n    active     : false,\r\n    inactive   : false,\r\n    activate   : false,\r\n    deactivate : false\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Visibility\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.visibility = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue,\r\n\r\n    moduleCount    = $allModules.length,\r\n    loadedCount    = 0\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\r\n          : $.extend({}, $.fn.visibility.settings),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $window         = $(window),\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n\r\n        $placeholder,\r\n\r\n        selector        = $module.selector || '',\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); },\r\n\r\n        element         = this,\r\n        disabled        = false,\r\n\r\n        contextObserver,\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing', settings);\r\n\r\n          module.setup.cache();\r\n\r\n          if( module.should.trackChanges() ) {\r\n\r\n            if(settings.type == 'image') {\r\n              module.setup.image();\r\n            }\r\n            if(settings.type == 'fixed') {\r\n              module.setup.fixed();\r\n            }\r\n\r\n            if(settings.observeChanges) {\r\n              module.observeChanges();\r\n            }\r\n            module.bind.events();\r\n          }\r\n\r\n          module.save.position();\r\n          if( !module.is.visible() ) {\r\n            module.error(error.visible, $module);\r\n          }\r\n\r\n          if(settings.initialCheck) {\r\n            module.checkVisibility();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.debug('Storing instance', module);\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n          instance = module;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module');\r\n          if(observer) {\r\n            observer.disconnect();\r\n          }\r\n          if(contextObserver) {\r\n            contextObserver.disconnect();\r\n          }\r\n          $window\r\n            .off('load'   + eventNamespace, module.event.load)\r\n            .off('resize' + eventNamespace, module.event.resize)\r\n          ;\r\n          $context\r\n            .off('scroll'       + eventNamespace, module.event.scroll)\r\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\r\n          ;\r\n          if(settings.type == 'fixed') {\r\n            module.resetFixed();\r\n            module.remove.placeholder();\r\n          }\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            contextObserver = new MutationObserver(module.event.contextChanged);\r\n            observer        = new MutationObserver(module.event.changed);\r\n            contextObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding visibility events to scroll and resize');\r\n            if(settings.refreshOnLoad) {\r\n              $window\r\n                .on('load'   + eventNamespace, module.event.load)\r\n              ;\r\n            }\r\n            $window\r\n              .on('resize' + eventNamespace, module.event.resize)\r\n            ;\r\n            // pub/sub pattern\r\n            $context\r\n              .off('scroll'      + eventNamespace)\r\n              .on('scroll'       + eventNamespace, module.event.scroll)\r\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          changed: function(mutations) {\r\n            module.verbose('DOM tree modified, updating visibility calculations');\r\n            module.timer = setTimeout(function() {\r\n              module.verbose('DOM tree modified, updating sticky menu');\r\n              module.refresh();\r\n            }, 100);\r\n          },\r\n          contextChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          resize: function() {\r\n            module.debug('Window resized');\r\n            if(settings.refreshOnResize) {\r\n              requestAnimationFrame(module.refresh);\r\n            }\r\n          },\r\n          load: function() {\r\n            module.debug('Page finished loading');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          // publishes scrollchange event on one scroll\r\n          scroll: function() {\r\n            if(settings.throttle) {\r\n              clearTimeout(module.timer);\r\n              module.timer = setTimeout(function() {\r\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\r\n              }, settings.throttle);\r\n            }\r\n            else {\r\n              requestAnimationFrame(function() {\r\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\r\n              });\r\n            }\r\n          },\r\n          // subscribes to scrollchange\r\n          scrollchange: function(event, scrollPosition) {\r\n            module.checkVisibility(scrollPosition);\r\n          },\r\n        },\r\n\r\n        precache: function(images, callback) {\r\n          if (!(images instanceof Array)) {\r\n            images = [images];\r\n          }\r\n          var\r\n            imagesLength  = images.length,\r\n            loadedCounter = 0,\r\n            cache         = [],\r\n            cacheImage    = document.createElement('img'),\r\n            handleLoad    = function() {\r\n              loadedCounter++;\r\n              if (loadedCounter >= images.length) {\r\n                if ($.isFunction(callback)) {\r\n                  callback();\r\n                }\r\n              }\r\n            }\r\n          ;\r\n          while (imagesLength--) {\r\n            cacheImage         = document.createElement('img');\r\n            cacheImage.onload  = handleLoad;\r\n            cacheImage.onerror = handleLoad;\r\n            cacheImage.src     = images[imagesLength];\r\n            cache.push(cacheImage);\r\n          }\r\n        },\r\n\r\n        enableCallbacks: function() {\r\n          module.debug('Allowing callbacks to occur');\r\n          disabled = false;\r\n        },\r\n\r\n        disableCallbacks: function() {\r\n          module.debug('Disabling all callbacks temporarily');\r\n          disabled = true;\r\n        },\r\n\r\n        should: {\r\n          trackChanges: function() {\r\n            if(methodInvoked) {\r\n              module.debug('One time query, no need to bind events');\r\n              return false;\r\n            }\r\n            module.debug('Callbacks being attached');\r\n            return true;\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          cache: function() {\r\n            module.cache = {\r\n              occurred : {},\r\n              screen   : {},\r\n              element  : {},\r\n            };\r\n          },\r\n          image: function() {\r\n            var\r\n              src = $module.data(metadata.src)\r\n            ;\r\n            if(src) {\r\n              module.verbose('Lazy loading image', src);\r\n              settings.once           = true;\r\n              settings.observeChanges = false;\r\n\r\n              // show when top visible\r\n              settings.onOnScreen = function() {\r\n                module.debug('Image on screen', element);\r\n                module.precache(src, function() {\r\n                  module.set.image(src, function() {\r\n                    loadedCount++;\r\n                    if(loadedCount == moduleCount) {\r\n                      settings.onAllLoaded.call(this);\r\n                    }\r\n                    settings.onLoad.call(this);\r\n                  });\r\n                });\r\n              };\r\n            }\r\n          },\r\n          fixed: function() {\r\n            module.debug('Setting up fixed');\r\n            settings.once           = false;\r\n            settings.observeChanges = false;\r\n            settings.initialCheck   = true;\r\n            settings.refreshOnLoad  = true;\r\n            if(!parameters.transition) {\r\n              settings.transition = false;\r\n            }\r\n            module.create.placeholder();\r\n            module.debug('Added placeholder', $placeholder);\r\n            settings.onTopPassed = function() {\r\n              module.debug('Element passed, adding fixed position', $module);\r\n              module.show.placeholder();\r\n              module.set.fixed();\r\n              if(settings.transition) {\r\n                if($.fn.transition !== undefined) {\r\n                  $module.transition(settings.transition, settings.duration);\r\n                }\r\n              }\r\n            };\r\n            settings.onTopPassedReverse = function() {\r\n              module.debug('Element returned to position, removing fixed', $module);\r\n              module.hide.placeholder();\r\n              module.remove.fixed();\r\n            };\r\n          }\r\n        },\r\n\r\n        create: {\r\n          placeholder: function() {\r\n            module.verbose('Creating fixed position placeholder');\r\n            $placeholder = $module\r\n              .clone(false)\r\n              .css('display', 'none')\r\n              .addClass(className.placeholder)\r\n              .insertAfter($module)\r\n            ;\r\n          }\r\n        },\r\n\r\n        show: {\r\n          placeholder: function() {\r\n            module.verbose('Showing placeholder');\r\n            $placeholder\r\n              .css('display', 'block')\r\n              .css('visibility', 'hidden')\r\n            ;\r\n          }\r\n        },\r\n        hide: {\r\n          placeholder: function() {\r\n            module.verbose('Hiding placeholder');\r\n            $placeholder\r\n              .css('display', 'none')\r\n              .css('visibility', '')\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          fixed: function() {\r\n            module.verbose('Setting element to fixed position');\r\n            $module\r\n              .addClass(className.fixed)\r\n              .css({\r\n                position : 'fixed',\r\n                top      : settings.offset + 'px',\r\n                left     : 'auto',\r\n                zIndex   : settings.zIndex\r\n              })\r\n            ;\r\n            settings.onFixed.call(element);\r\n          },\r\n          image: function(src, callback) {\r\n            $module\r\n              .attr('src', src)\r\n            ;\r\n            if(settings.transition) {\r\n              if( $.fn.transition !== undefined) {\r\n                if($module.hasClass(className.visible)) {\r\n                  module.debug('Transition already occurred on this image, skipping animation');\r\n                  return;\r\n                }\r\n                $module.transition(settings.transition, settings.duration, callback);\r\n              }\r\n              else {\r\n                $module.fadeIn(settings.duration, callback);\r\n              }\r\n            }\r\n            else {\r\n              $module.show();\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          onScreen: function() {\r\n            var\r\n              calculations   = module.get.elementCalculations()\r\n            ;\r\n            return calculations.onScreen;\r\n          },\r\n          offScreen: function() {\r\n            var\r\n              calculations   = module.get.elementCalculations()\r\n            ;\r\n            return calculations.offScreen;\r\n          },\r\n          visible: function() {\r\n            if(module.cache && module.cache.element) {\r\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\r\n            }\r\n            return false;\r\n          },\r\n          verticallyScrollableContext: function() {\r\n            var\r\n              overflowY = ($context.get(0) !== window)\r\n                ? $context.css('overflow-y')\r\n                : false\r\n            ;\r\n            return (overflowY == 'auto' || overflowY == 'scroll');\r\n          },\r\n          horizontallyScrollableContext: function() {\r\n            var\r\n              overflowX = ($context.get(0) !== window)\r\n                ? $context.css('overflow-x')\r\n                : false\r\n            ;\r\n            return (overflowX == 'auto' || overflowX == 'scroll');\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.debug('Refreshing constants (width/height)');\r\n          if(settings.type == 'fixed') {\r\n            module.resetFixed();\r\n          }\r\n          module.reset();\r\n          module.save.position();\r\n          if(settings.checkOnRefresh) {\r\n            module.checkVisibility();\r\n          }\r\n          settings.onRefresh.call(element);\r\n        },\r\n\r\n        resetFixed: function () {\r\n          module.remove.fixed();\r\n          module.remove.occurred();\r\n        },\r\n\r\n        reset: function() {\r\n          module.verbose('Resetting all cached values');\r\n          if( $.isPlainObject(module.cache) ) {\r\n            module.cache.screen = {};\r\n            module.cache.element = {};\r\n          }\r\n        },\r\n\r\n        checkVisibility: function(scroll) {\r\n          module.verbose('Checking visibility of element', module.cache.element);\r\n\r\n          if( !disabled && module.is.visible() ) {\r\n\r\n            // save scroll position\r\n            module.save.scroll(scroll);\r\n\r\n            // update calculations derived from scroll\r\n            module.save.calculations();\r\n\r\n            // percentage\r\n            module.passed();\r\n\r\n            // reverse (must be first)\r\n            module.passingReverse();\r\n            module.topVisibleReverse();\r\n            module.bottomVisibleReverse();\r\n            module.topPassedReverse();\r\n            module.bottomPassedReverse();\r\n\r\n            // one time\r\n            module.onScreen();\r\n            module.offScreen();\r\n            module.passing();\r\n            module.topVisible();\r\n            module.bottomVisible();\r\n            module.topPassed();\r\n            module.bottomPassed();\r\n\r\n            // on update callback\r\n            if(settings.onUpdate) {\r\n              settings.onUpdate.call(element, module.get.elementCalculations());\r\n            }\r\n          }\r\n        },\r\n\r\n        passed: function(amount, newCallback) {\r\n          var\r\n            calculations   = module.get.elementCalculations(),\r\n            amountInPixels\r\n          ;\r\n          // assign callback\r\n          if(amount && newCallback) {\r\n            settings.onPassed[amount] = newCallback;\r\n          }\r\n          else if(amount !== undefined) {\r\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\r\n          }\r\n          else if(calculations.passing) {\r\n            $.each(settings.onPassed, function(amount, callback) {\r\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\r\n                module.execute(callback, amount);\r\n              }\r\n              else if(!settings.once) {\r\n                module.remove.occurred(callback);\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        onScreen: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onOnScreen,\r\n            callbackName = 'onScreen'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for onScreen', newCallback);\r\n            settings.onOnScreen = newCallback;\r\n          }\r\n          if(calculations.onScreen) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.onOnScreen;\r\n          }\r\n        },\r\n\r\n        offScreen: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onOffScreen,\r\n            callbackName = 'offScreen'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for offScreen', newCallback);\r\n            settings.onOffScreen = newCallback;\r\n          }\r\n          if(calculations.offScreen) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.onOffScreen;\r\n          }\r\n        },\r\n\r\n        passing: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onPassing,\r\n            callbackName = 'passing'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for passing', newCallback);\r\n            settings.onPassing = newCallback;\r\n          }\r\n          if(calculations.passing) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.passing;\r\n          }\r\n        },\r\n\r\n\r\n        topVisible: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopVisible,\r\n            callbackName = 'topVisible'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top visible', newCallback);\r\n            settings.onTopVisible = newCallback;\r\n          }\r\n          if(calculations.topVisible) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.topVisible;\r\n          }\r\n        },\r\n\r\n        bottomVisible: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomVisible,\r\n            callbackName = 'bottomVisible'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom visible', newCallback);\r\n            settings.onBottomVisible = newCallback;\r\n          }\r\n          if(calculations.bottomVisible) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.bottomVisible;\r\n          }\r\n        },\r\n\r\n        topPassed: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopPassed,\r\n            callbackName = 'topPassed'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top passed', newCallback);\r\n            settings.onTopPassed = newCallback;\r\n          }\r\n          if(calculations.topPassed) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.topPassed;\r\n          }\r\n        },\r\n\r\n        bottomPassed: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomPassed,\r\n            callbackName = 'bottomPassed'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom passed', newCallback);\r\n            settings.onBottomPassed = newCallback;\r\n          }\r\n          if(calculations.bottomPassed) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.bottomPassed;\r\n          }\r\n        },\r\n\r\n        passingReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onPassingReverse,\r\n            callbackName = 'passingReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for passing reverse', newCallback);\r\n            settings.onPassingReverse = newCallback;\r\n          }\r\n          if(!calculations.passing) {\r\n            if(module.get.occurred('passing')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return !calculations.passing;\r\n          }\r\n        },\r\n\r\n\r\n        topVisibleReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopVisibleReverse,\r\n            callbackName = 'topVisibleReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top visible reverse', newCallback);\r\n            settings.onTopVisibleReverse = newCallback;\r\n          }\r\n          if(!calculations.topVisible) {\r\n            if(module.get.occurred('topVisible')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.topVisible;\r\n          }\r\n        },\r\n\r\n        bottomVisibleReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomVisibleReverse,\r\n            callbackName = 'bottomVisibleReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom visible reverse', newCallback);\r\n            settings.onBottomVisibleReverse = newCallback;\r\n          }\r\n          if(!calculations.bottomVisible) {\r\n            if(module.get.occurred('bottomVisible')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.bottomVisible;\r\n          }\r\n        },\r\n\r\n        topPassedReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopPassedReverse,\r\n            callbackName = 'topPassedReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top passed reverse', newCallback);\r\n            settings.onTopPassedReverse = newCallback;\r\n          }\r\n          if(!calculations.topPassed) {\r\n            if(module.get.occurred('topPassed')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.onTopPassed;\r\n          }\r\n        },\r\n\r\n        bottomPassedReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomPassedReverse,\r\n            callbackName = 'bottomPassedReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom passed reverse', newCallback);\r\n            settings.onBottomPassedReverse = newCallback;\r\n          }\r\n          if(!calculations.bottomPassed) {\r\n            if(module.get.occurred('bottomPassed')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.bottomPassed;\r\n          }\r\n        },\r\n\r\n        execute: function(callback, callbackName) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            screen       = module.get.screenCalculations()\r\n          ;\r\n          callback = callback || false;\r\n          if(callback) {\r\n            if(settings.continuous) {\r\n              module.debug('Callback being called continuously', callbackName, calculations);\r\n              callback.call(element, calculations, screen);\r\n            }\r\n            else if(!module.get.occurred(callbackName)) {\r\n              module.debug('Conditions met', callbackName, calculations);\r\n              callback.call(element, calculations, screen);\r\n            }\r\n          }\r\n          module.save.occurred(callbackName);\r\n        },\r\n\r\n        remove: {\r\n          fixed: function() {\r\n            module.debug('Removing fixed position');\r\n            $module\r\n              .removeClass(className.fixed)\r\n              .css({\r\n                position : '',\r\n                top      : '',\r\n                left     : '',\r\n                zIndex   : ''\r\n              })\r\n            ;\r\n            settings.onUnfixed.call(element);\r\n          },\r\n          placeholder: function() {\r\n            module.debug('Removing placeholder content');\r\n            if($placeholder) {\r\n              $placeholder.remove();\r\n            }\r\n          },\r\n          occurred: function(callback) {\r\n            if(callback) {\r\n              var\r\n                occurred = module.cache.occurred\r\n              ;\r\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\r\n                module.debug('Callback can now be called again', callback);\r\n                module.cache.occurred[callback] = false;\r\n              }\r\n            }\r\n            else {\r\n              module.cache.occurred = {};\r\n            }\r\n          }\r\n        },\r\n\r\n        save: {\r\n          calculations: function() {\r\n            module.verbose('Saving all calculations necessary to determine positioning');\r\n            module.save.direction();\r\n            module.save.screenCalculations();\r\n            module.save.elementCalculations();\r\n          },\r\n          occurred: function(callback) {\r\n            if(callback) {\r\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\r\n                module.verbose('Saving callback occurred', callback);\r\n                module.cache.occurred[callback] = true;\r\n              }\r\n            }\r\n          },\r\n          scroll: function(scrollPosition) {\r\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\r\n            module.cache.scroll = scrollPosition;\r\n          },\r\n          direction: function() {\r\n            var\r\n              scroll     = module.get.scroll(),\r\n              lastScroll = module.get.lastScroll(),\r\n              direction\r\n            ;\r\n            if(scroll > lastScroll && lastScroll) {\r\n              direction = 'down';\r\n            }\r\n            else if(scroll < lastScroll && lastScroll) {\r\n              direction = 'up';\r\n            }\r\n            else {\r\n              direction = 'static';\r\n            }\r\n            module.cache.direction = direction;\r\n            return module.cache.direction;\r\n          },\r\n          elementPosition: function() {\r\n            var\r\n              element = module.cache.element,\r\n              screen  = module.get.screenSize()\r\n            ;\r\n            module.verbose('Saving element position');\r\n            // (quicker than $.extend)\r\n            element.fits          = (element.height < screen.height);\r\n            element.offset        = $module.offset();\r\n            element.width         = $module.outerWidth();\r\n            element.height        = $module.outerHeight();\r\n            // compensate for scroll in context\r\n            if(module.is.verticallyScrollableContext()) {\r\n              element.offset.top += $context.scrollTop() - $context.offset().top;\r\n            }\r\n            if(module.is.horizontallyScrollableContext()) {\r\n              element.offset.left += $context.scrollLeft - $context.offset().left;\r\n            }\r\n            // store\r\n            module.cache.element = element;\r\n            return element;\r\n          },\r\n          elementCalculations: function() {\r\n            var\r\n              screen     = module.get.screenCalculations(),\r\n              element    = module.get.elementPosition()\r\n            ;\r\n            // offset\r\n            if(settings.includeMargin) {\r\n              element.margin        = {};\r\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\r\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\r\n              element.top    = element.offset.top - element.margin.top;\r\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\r\n            }\r\n            else {\r\n              element.top    = element.offset.top;\r\n              element.bottom = element.offset.top + element.height;\r\n            }\r\n\r\n            // visibility\r\n            element.topPassed        = (screen.top >= element.top);\r\n            element.bottomPassed     = (screen.top >= element.bottom);\r\n            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\r\n            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\r\n            element.pixelsPassed     = 0;\r\n            element.percentagePassed = 0;\r\n\r\n            // meta calculations\r\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\r\n            element.passing   = (element.topPassed && !element.bottomPassed);\r\n            element.offScreen = (!element.onScreen);\r\n\r\n            // passing calculations\r\n            if(element.passing) {\r\n              element.pixelsPassed     = (screen.top - element.top);\r\n              element.percentagePassed = (screen.top - element.top) / element.height;\r\n            }\r\n            module.cache.element = element;\r\n            module.verbose('Updated element calculations', element);\r\n            return element;\r\n          },\r\n          screenCalculations: function() {\r\n            var\r\n              scroll = module.get.scroll()\r\n            ;\r\n            module.save.direction();\r\n            module.cache.screen.top    = scroll;\r\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\r\n            return module.cache.screen;\r\n          },\r\n          screenSize: function() {\r\n            module.verbose('Saving window position');\r\n            module.cache.screen = {\r\n              height: $context.height()\r\n            };\r\n          },\r\n          position: function() {\r\n            module.save.screenSize();\r\n            module.save.elementPosition();\r\n          }\r\n        },\r\n\r\n        get: {\r\n          pixelsPassed: function(amount) {\r\n            var\r\n              element = module.get.elementCalculations()\r\n            ;\r\n            if(amount.search('%') > -1) {\r\n              return ( element.height * (parseInt(amount, 10) / 100) );\r\n            }\r\n            return parseInt(amount, 10);\r\n          },\r\n          occurred: function(callback) {\r\n            return (module.cache.occurred !== undefined)\r\n              ? module.cache.occurred[callback] || false\r\n              : false\r\n            ;\r\n          },\r\n          direction: function() {\r\n            if(module.cache.direction === undefined) {\r\n              module.save.direction();\r\n            }\r\n            return module.cache.direction;\r\n          },\r\n          elementPosition: function() {\r\n            if(module.cache.element === undefined) {\r\n              module.save.elementPosition();\r\n            }\r\n            return module.cache.element;\r\n          },\r\n          elementCalculations: function() {\r\n            if(module.cache.element === undefined) {\r\n              module.save.elementCalculations();\r\n            }\r\n            return module.cache.element;\r\n          },\r\n          screenCalculations: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.save.screenCalculations();\r\n            }\r\n            return module.cache.screen;\r\n          },\r\n          screenSize: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.save.screenSize();\r\n            }\r\n            return module.cache.screen;\r\n          },\r\n          scroll: function() {\r\n            if(module.cache.scroll === undefined) {\r\n              module.save.scroll();\r\n            }\r\n            return module.cache.scroll;\r\n          },\r\n          lastScroll: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.debug('First scroll event, no last scroll could be found');\r\n              return false;\r\n            }\r\n            return module.cache.screen.top;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        instance.save.scroll();\r\n        instance.save.calculations();\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.visibility.settings = {\r\n\r\n  name                   : 'Visibility',\r\n  namespace              : 'visibility',\r\n\r\n  debug                  : false,\r\n  verbose                : false,\r\n  performance            : true,\r\n\r\n  // whether to use mutation observers to follow changes\r\n  observeChanges         : true,\r\n\r\n  // check position immediately on init\r\n  initialCheck           : true,\r\n\r\n  // whether to refresh calculations after all page images load\r\n  refreshOnLoad          : true,\r\n\r\n  // whether to refresh calculations after page resize event\r\n  refreshOnResize        : true,\r\n\r\n  // should call callbacks on refresh event (resize, etc)\r\n  checkOnRefresh         : true,\r\n\r\n  // callback should only occur one time\r\n  once                   : true,\r\n\r\n  // callback should fire continuously whe evaluates to true\r\n  continuous             : false,\r\n\r\n  // offset to use with scroll top\r\n  offset                 : 0,\r\n\r\n  // whether to include margin in elements position\r\n  includeMargin          : false,\r\n\r\n  // scroll context for visibility checks\r\n  context                : window,\r\n\r\n  // visibility check delay in ms (defaults to animationFrame)\r\n  throttle               : false,\r\n\r\n  // special visibility type (image, fixed)\r\n  type                   : false,\r\n\r\n  // z-index to use with visibility 'fixed'\r\n  zIndex                 : '10',\r\n\r\n  // image only animation settings\r\n  transition             : 'fade in',\r\n  duration               : 1000,\r\n\r\n  // array of callbacks for percentage\r\n  onPassed               : {},\r\n\r\n  // standard callbacks\r\n  onOnScreen             : false,\r\n  onOffScreen            : false,\r\n  onPassing              : false,\r\n  onTopVisible           : false,\r\n  onBottomVisible        : false,\r\n  onTopPassed            : false,\r\n  onBottomPassed         : false,\r\n\r\n  // reverse callbacks\r\n  onPassingReverse       : false,\r\n  onTopVisibleReverse    : false,\r\n  onBottomVisibleReverse : false,\r\n  onTopPassedReverse     : false,\r\n  onBottomPassedReverse  : false,\r\n\r\n  // special callbacks for image\r\n  onLoad                 : function() {},\r\n  onAllLoaded            : function() {},\r\n\r\n  // special callbacks for fixed position\r\n  onFixed                : function() {},\r\n  onUnfixed              : function() {},\r\n\r\n  // utility callbacks\r\n  onUpdate               : false, // disabled by default for performance\r\n  onRefresh              : function(){},\r\n\r\n  metadata : {\r\n    src: 'src'\r\n  },\r\n\r\n  className: {\r\n    fixed       : 'fixed',\r\n    placeholder : 'placeholder',\r\n    visible     : 'visible'\r\n  },\r\n\r\n  error : {\r\n    method  : 'The method you called is not defined.',\r\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__semantic_dist_semantic_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_semantic_ui__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_semantic_ui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_semantic_ui__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__App__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(5);\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */].config.productionTip = false;\n\nnew __WEBPACK_IMPORTED_MODULE_2_vue__[\"a\" /* default */]({\n  el: '#app',\n  router: __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */],\n  template: '<App/>',\n  components: { App: __WEBPACK_IMPORTED_MODULE_3__App___default.a }\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'app'\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Message__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Message___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Message__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery__);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'channel',\n  data: function data() {\n    return {\n      messages: __WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].reactive.messages,\n      showMessageForm: false,\n      newMessageContent: ''\n    };\n  },\n\n  computed: {\n    autoGeneratedUserName: function autoGeneratedUserName() {\n      return __WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getRandomUserName();\n    },\n    autoSelectedAvatar: function autoSelectedAvatar() {\n      return __WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getRandomAvatarUrl();\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    if (!__WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].hasMessages()) {\n      __WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].setMessages([{\n        author: 'Mike Nolan',\n        avatar: 'https://semantic-ui.com/images/avatar/small/matt.jpg',\n        content: 'Gidday maaate!!',\n        likes: 2,\n        time: '2017-5-28 17:49:24',\n        replies: []\n      }]);\n    }\n\n    __WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].loadMessages();\n  },\n\n  methods: {\n    addMessage: function addMessage() {\n      var messageForm = __WEBPACK_IMPORTED_MODULE_3_jquery___default()('#messageForm');\n      messageForm.form({\n        inline: true,\n        fields: {\n          newMessageContent: {\n            identifier: 'newMessageContent',\n            rules: [{\n              type: 'empty',\n              prompt: 'Please enter your message'\n            }]\n          }\n        }\n      });\n      messageForm.form('validate form');\n\n      if (messageForm.form('is valid')) {\n        this.messages.unshift(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getNewMessage(this.autoGeneratedUserName, this.autoSelectedAvatar, this.newMessageContent));\n        this.toggleMessageForm();\n        __WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].saveState();\n      }\n    },\n    toggleMessageForm: function toggleMessageForm() {\n      this.showMessageForm = !this.showMessageForm;\n      this.newMessageContent = '';\n    },\n    removeChild: function removeChild(index) {\n      this.messages.splice(index, 1);\n      __WEBPACK_IMPORTED_MODULE_2__data__[\"a\" /* default */].saveState();\n    }\n  },\n  components: {\n    'message': __WEBPACK_IMPORTED_MODULE_1__Message___default.a\n  }\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__data__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'message',\n  props: {\n    replyAs: String,\n    replyAsAvatar: String,\n    model: Object\n  },\n  data: function data() {\n    return {\n      liked: false,\n      showReplyForm: false,\n      replyContent: ''\n    };\n  },\n\n  computed: {\n    replyFormIdentifier: function replyFormIdentifier() {\n      return __WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].guid();\n    },\n    currentUserOwnsComment: function currentUserOwnsComment() {\n      if (this.replyAs === this.model.author) {\n        return true;\n      }\n      return false;\n    }\n  },\n  methods: {\n    remove: function remove() {\n      if (!this.currentUserOwnsComment) {\n        return;\n      }\n\n      this.$emit('remove');\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    hasReplies: function hasReplies() {\n      return this.model.hasOwnProperty('replies') && this.model.replies.length > 0;\n    },\n    addLike: function addLike() {\n      this.liked = true;\n      this.model.likes++;\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    removeLike: function removeLike() {\n      this.liked = false;\n      this.model.likes--;\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    },\n    toggleReplyForm: function toggleReplyForm() {\n      this.showReplyForm = !this.showReplyForm;\n      this.replyContent = '';\n    },\n    addReply: function addReply() {\n      var replyForm = __WEBPACK_IMPORTED_MODULE_2_jquery___default()('#' + this.replyFormIdentifier);\n      replyForm.form({\n        inline: true,\n        fields: {\n          replyContent: {\n            identifier: 'replyContent',\n            rules: [{\n              type: 'empty',\n              prompt: 'Please enter your reply'\n            }]\n          }\n        }\n      });\n      replyForm.form('validate form');\n\n      if (replyForm.form('is valid')) {\n        this.model.replies.push(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* default */].getNewMessage(this.replyAs, this.replyAsAvatar, this.replyContent));\n        this.toggleReplyForm();\n        __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n      }\n    },\n    removeChild: function removeChild(index) {\n      this.model.replies.splice(index, 1);\n      __WEBPACK_IMPORTED_MODULE_1__data__[\"a\" /* default */].saveState();\n    }\n  }\n});\n\n/***/ }),\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(17)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(11),\n  /* template */\n  __webpack_require__(22),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(16)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(12),\n  /* template */\n  __webpack_require__(21),\n  /* scopeId */\n  \"data-v-6abf2ba2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"comment\"\n  }, [_c('a', {\n    staticClass: \"avatar\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.model.avatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('a', {\n    staticClass: \"author\"\n  }, [_vm._v(_vm._s(_vm.model.author))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"metadata\"\n  }, [_c('span', {\n    staticClass: \"date\"\n  }, [_vm._v(_vm._s(_vm.model.time))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('i', {\n    staticClass: \"thumbs up icon\"\n  }), _vm._v(\"\\n        \" + _vm._s(_vm.model.likes) + \" likes \\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm.model.content) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.showReplyForm) ? _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Reply\")]) : _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Cancel\")]), _vm._v(\" \"), (!_vm.liked) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addLike()\n      }\n    }\n  }, [_vm._v(\"Like\")]) : _c('a', {\n    staticClass: \"like active\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.removeLike()\n      }\n    }\n  }, [_vm._v(\"You like this\")]), _vm._v(\" \"), (_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.remove()\n      }\n    }\n  }, [_vm._v(\"Delete\")]) : _vm._e()])]), _vm._v(\" \"), (_vm.hasReplies()) ? _c('div', {\n    staticClass: \"comments\"\n  }, _vm._l((_vm.model.replies), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.replyAs,\n        \"reply-as-avatar\": _vm.replyAsAvatar\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })) : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showReplyForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": _vm.replyFormIdentifier\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.replyContent),\n      expression: \"replyContent\"\n    }],\n    staticClass: \"ui focus\",\n    attrs: {\n      \"name\": \"replyContent\"\n    },\n    domProps: {\n      \"value\": (_vm.replyContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.replyContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addReply()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Reply\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"\\n        Cancel \\n      \")])]) : _vm._e()])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui container\"\n  }, [_c('h2', [_vm._v(\"Yammerer\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui centered grid\"\n  }, [_c('div', {\n    staticClass: \"ten wide column\"\n  }, [_c('div', {\n    staticClass: \"ui threaded comments\"\n  }, [_c('div', {\n    staticClass: \"ui text menu\"\n  }, [_c('div', {\n    staticClass: \"ui item\"\n  }, [_c('a', {\n    staticClass: \"circular ui tiny image\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.autoSelectedAvatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"middle aligned content\"\n  }, [_c('div', {\n    staticClass: \"header\"\n  }, [_vm._v(\"\\n              \" + _vm._s(_vm.autoGeneratedUserName) + \"\\n            \")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"right menu\"\n  }, [_c('div', {\n    staticClass: \"item\"\n  }, [_c('div', {\n    staticClass: \"circular ui icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [(!_vm.showMessageForm) ? _c('i', {\n    staticClass: \"plus icon\"\n  }) : _c('i', {\n    staticClass: \"remove icon\"\n  })])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showMessageForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": \"messageForm\"\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.newMessageContent),\n      expression: \"newMessageContent\"\n    }],\n    attrs: {\n      \"name\": \"newMessageContent\"\n    },\n    domProps: {\n      \"value\": (_vm.newMessageContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.newMessageContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addMessage()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Message \\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [_vm._v(\"\\n              Cancel \\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider hidden\"\n  })]) : _vm._e()]), _vm._v(\" \"), _vm._l((_vm.messages), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.autoGeneratedUserName,\n        \"reply-as-avatar\": _vm.autoSelectedAvatar\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })], 2)])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('router-view')], 1)\n},staticRenderFns: []}\n\n/***/ })\n],[9]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.231eb470fe484311fc63.js","export default {\r\n    // Our persistent storage is not reactive.\r\n    // So, we need to provide an object which we can bind to.\r\n    reactive: {\r\n        messages: []\r\n    },\r\n    hasMessages() {\r\n        // Is this the first visit for this browser?\r\n        if (localStorage.getItem('messages') === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    saveState() {\r\n        // Persist the current messages.\r\n        this.setMessages(this.reactive.messages);\r\n    },\r\n    loadMessages() {\r\n        // Hydrate the reactive messages with the contents of localStorage.\r\n        let parsedMessages = JSON.parse(localStorage.getItem('messages'));\r\n        this.reactive.messages = parsedMessages;\r\n    },\r\n    setMessages(newMessages) {\r\n        // Write/Overwrite messages into localStorage\r\n        localStorage.setItem('messages', JSON.stringify(newMessages));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/index.js","export default {\r\n  getNewMessage (author, avatar, content) {\r\n    return {\r\n      author: author,\r\n      avatar: avatar,\r\n      content: content,\r\n      likes: 0,\r\n      replies: [],\r\n      time: (new Date()).toLocaleString()\r\n    };\r\n  },\r\n  getRandomUserName () {\r\n    let adjectives = [\r\n      'Noisy',\r\n      'Agreeable',\r\n      'Calm',\r\n      'Eager',\r\n      'Happy',\r\n      'Jolly',\r\n      'Kind',\r\n      'Nice',\r\n      'Relieved',\r\n      'Crazy',\r\n      'Victorious',\r\n      'Witty',\r\n      'Zealous'\r\n    ];\r\n    let nouns = [\r\n      'Cat',\r\n      'Dog',\r\n      'Mouse',\r\n      'Horse',\r\n      'Giraffe',\r\n      'Robin',\r\n      'Sparrow',\r\n      'Goat',\r\n      'Duck',\r\n      'Gull',\r\n      'Owl',\r\n      'Trout'\r\n    ];\r\n    return adjectives[Math.floor(Math.random() * adjectives.length)] + ' ' +\r\n            nouns[Math.floor(Math.random() * nouns.length)];\r\n  },\r\n  getRandomAvatarUrl () {\r\n    let avatars = [\r\n      'https://semantic-ui.com/images/avatar/small/elliot.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/jenny.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/joe.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/matt.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/helen.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/justen.jpg',\r\n      'https://semantic-ui.com/images/avatar/small/laura.jpg'\r\n    ];\r\n    return avatars[Math.floor(Math.random() * avatars.length)];\r\n  },\r\n  guid () {\r\n    function s4 () {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n      s4() + '-' + s4() + s4() + s4();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/index.js","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Channel from '@/components/Channel'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    { path: '/', name: 'Channel', component: Channel }\r\n  ]\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-ba1acd06\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ba1acd06\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 7\n// module chunks = 0"," /*\n * # Semantic UI - 2.2.10\n * https://github.com/Semantic-Org/Semantic-UI\n * http://www.semantic-ui.com/\n *\n * Copyright 2014 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n/*!\r\n * # Semantic UI 2.2.10 - Site\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n$.site = $.fn.site = function(parameters) {\r\n  var\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    settings        = ( $.isPlainObject(parameters) )\r\n      ? $.extend(true, {}, $.site.settings, parameters)\r\n      : $.extend({}, $.site.settings),\r\n\r\n    namespace       = settings.namespace,\r\n    error           = settings.error,\r\n\r\n    eventNamespace  = '.' + namespace,\r\n    moduleNamespace = 'module-' + namespace,\r\n\r\n    $document       = $(document),\r\n    $module         = $document,\r\n    element         = this,\r\n    instance        = $module.data(moduleNamespace),\r\n\r\n    module,\r\n    returnedValue\r\n  ;\r\n  module = {\r\n\r\n    initialize: function() {\r\n      module.instantiate();\r\n    },\r\n\r\n    instantiate: function() {\r\n      module.verbose('Storing instance of site', module);\r\n      instance = module;\r\n      $module\r\n        .data(moduleNamespace, module)\r\n      ;\r\n    },\r\n\r\n    normalize: function() {\r\n      module.fix.console();\r\n      module.fix.requestAnimationFrame();\r\n    },\r\n\r\n    fix: {\r\n      console: function() {\r\n        module.debug('Normalizing window.console');\r\n        if (console === undefined || console.log === undefined) {\r\n          module.verbose('Console not available, normalizing events');\r\n          module.disable.console();\r\n        }\r\n        if (typeof console.group == 'undefined' || typeof console.groupEnd == 'undefined' || typeof console.groupCollapsed == 'undefined') {\r\n          module.verbose('Console group not available, normalizing events');\r\n          window.console.group = function() {};\r\n          window.console.groupEnd = function() {};\r\n          window.console.groupCollapsed = function() {};\r\n        }\r\n        if (typeof console.markTimeline == 'undefined') {\r\n          module.verbose('Mark timeline not available, normalizing events');\r\n          window.console.markTimeline = function() {};\r\n        }\r\n      },\r\n      consoleClear: function() {\r\n        module.debug('Disabling programmatic console clearing');\r\n        window.console.clear = function() {};\r\n      },\r\n      requestAnimationFrame: function() {\r\n        module.debug('Normalizing requestAnimationFrame');\r\n        if(window.requestAnimationFrame === undefined) {\r\n          module.debug('RequestAnimationFrame not available, normalizing event');\r\n          window.requestAnimationFrame = window.requestAnimationFrame\r\n            || window.mozRequestAnimationFrame\r\n            || window.webkitRequestAnimationFrame\r\n            || window.msRequestAnimationFrame\r\n            || function(callback) { setTimeout(callback, 0); }\r\n          ;\r\n        }\r\n      }\r\n    },\r\n\r\n    moduleExists: function(name) {\r\n      return ($.fn[name] !== undefined && $.fn[name].settings !== undefined);\r\n    },\r\n\r\n    enabled: {\r\n      modules: function(modules) {\r\n        var\r\n          enabledModules = []\r\n        ;\r\n        modules = modules || settings.modules;\r\n        $.each(modules, function(index, name) {\r\n          if(module.moduleExists(name)) {\r\n            enabledModules.push(name);\r\n          }\r\n        });\r\n        return enabledModules;\r\n      }\r\n    },\r\n\r\n    disabled: {\r\n      modules: function(modules) {\r\n        var\r\n          disabledModules = []\r\n        ;\r\n        modules = modules || settings.modules;\r\n        $.each(modules, function(index, name) {\r\n          if(!module.moduleExists(name)) {\r\n            disabledModules.push(name);\r\n          }\r\n        });\r\n        return disabledModules;\r\n      }\r\n    },\r\n\r\n    change: {\r\n      setting: function(setting, value, modules, modifyExisting) {\r\n        modules = (typeof modules === 'string')\r\n          ? (modules === 'all')\r\n            ? settings.modules\r\n            : [modules]\r\n          : modules || settings.modules\r\n        ;\r\n        modifyExisting = (modifyExisting !== undefined)\r\n          ? modifyExisting\r\n          : true\r\n        ;\r\n        $.each(modules, function(index, name) {\r\n          var\r\n            namespace = (module.moduleExists(name))\r\n              ? $.fn[name].settings.namespace || false\r\n              : true,\r\n            $existingModules\r\n          ;\r\n          if(module.moduleExists(name)) {\r\n            module.verbose('Changing default setting', setting, value, name);\r\n            $.fn[name].settings[setting] = value;\r\n            if(modifyExisting && namespace) {\r\n              $existingModules = $(':data(module-' + namespace + ')');\r\n              if($existingModules.length > 0) {\r\n                module.verbose('Modifying existing settings', $existingModules);\r\n                $existingModules[name]('setting', setting, value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      },\r\n      settings: function(newSettings, modules, modifyExisting) {\r\n        modules = (typeof modules === 'string')\r\n          ? [modules]\r\n          : modules || settings.modules\r\n        ;\r\n        modifyExisting = (modifyExisting !== undefined)\r\n          ? modifyExisting\r\n          : true\r\n        ;\r\n        $.each(modules, function(index, name) {\r\n          var\r\n            $existingModules\r\n          ;\r\n          if(module.moduleExists(name)) {\r\n            module.verbose('Changing default setting', newSettings, name);\r\n            $.extend(true, $.fn[name].settings, newSettings);\r\n            if(modifyExisting && namespace) {\r\n              $existingModules = $(':data(module-' + namespace + ')');\r\n              if($existingModules.length > 0) {\r\n                module.verbose('Modifying existing settings', $existingModules);\r\n                $existingModules[name]('setting', newSettings);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    enable: {\r\n      console: function() {\r\n        module.console(true);\r\n      },\r\n      debug: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Enabling debug for modules', modules);\r\n        module.change.setting('debug', true, modules, modifyExisting);\r\n      },\r\n      verbose: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Enabling verbose debug for modules', modules);\r\n        module.change.setting('verbose', true, modules, modifyExisting);\r\n      }\r\n    },\r\n    disable: {\r\n      console: function() {\r\n        module.console(false);\r\n      },\r\n      debug: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Disabling debug for modules', modules);\r\n        module.change.setting('debug', false, modules, modifyExisting);\r\n      },\r\n      verbose: function(modules, modifyExisting) {\r\n        modules = modules || settings.modules;\r\n        module.debug('Disabling verbose debug for modules', modules);\r\n        module.change.setting('verbose', false, modules, modifyExisting);\r\n      }\r\n    },\r\n\r\n    console: function(enable) {\r\n      if(enable) {\r\n        if(instance.cache.console === undefined) {\r\n          module.error(error.console);\r\n          return;\r\n        }\r\n        module.debug('Restoring console function');\r\n        window.console = instance.cache.console;\r\n      }\r\n      else {\r\n        module.debug('Disabling console function');\r\n        instance.cache.console = window.console;\r\n        window.console = {\r\n          clear          : function(){},\r\n          error          : function(){},\r\n          group          : function(){},\r\n          groupCollapsed : function(){},\r\n          groupEnd       : function(){},\r\n          info           : function(){},\r\n          log            : function(){},\r\n          markTimeline   : function(){},\r\n          warn           : function(){}\r\n        };\r\n      }\r\n    },\r\n\r\n    destroy: function() {\r\n      module.verbose('Destroying previous site for', $module);\r\n      $module\r\n        .removeData(moduleNamespace)\r\n      ;\r\n    },\r\n\r\n    cache: {},\r\n\r\n    setting: function(name, value) {\r\n      if( $.isPlainObject(name) ) {\r\n        $.extend(true, settings, name);\r\n      }\r\n      else if(value !== undefined) {\r\n        settings[name] = value;\r\n      }\r\n      else {\r\n        return settings[name];\r\n      }\r\n    },\r\n    internal: function(name, value) {\r\n      if( $.isPlainObject(name) ) {\r\n        $.extend(true, module, name);\r\n      }\r\n      else if(value !== undefined) {\r\n        module[name] = value;\r\n      }\r\n      else {\r\n        return module[name];\r\n      }\r\n    },\r\n    debug: function() {\r\n      if(settings.debug) {\r\n        if(settings.performance) {\r\n          module.performance.log(arguments);\r\n        }\r\n        else {\r\n          module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n          module.debug.apply(console, arguments);\r\n        }\r\n      }\r\n    },\r\n    verbose: function() {\r\n      if(settings.verbose && settings.debug) {\r\n        if(settings.performance) {\r\n          module.performance.log(arguments);\r\n        }\r\n        else {\r\n          module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n          module.verbose.apply(console, arguments);\r\n        }\r\n      }\r\n    },\r\n    error: function() {\r\n      module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n      module.error.apply(console, arguments);\r\n    },\r\n    performance: {\r\n      log: function(message) {\r\n        var\r\n          currentTime,\r\n          executionTime,\r\n          previousTime\r\n        ;\r\n        if(settings.performance) {\r\n          currentTime   = new Date().getTime();\r\n          previousTime  = time || currentTime;\r\n          executionTime = currentTime - previousTime;\r\n          time          = currentTime;\r\n          performance.push({\r\n            'Element'        : element,\r\n            'Name'           : message[0],\r\n            'Arguments'      : [].slice.call(message, 1) || '',\r\n            'Execution Time' : executionTime\r\n          });\r\n        }\r\n        clearTimeout(module.performance.timer);\r\n        module.performance.timer = setTimeout(module.performance.display, 500);\r\n      },\r\n      display: function() {\r\n        var\r\n          title = settings.name + ':',\r\n          totalTime = 0\r\n        ;\r\n        time = false;\r\n        clearTimeout(module.performance.timer);\r\n        $.each(performance, function(index, data) {\r\n          totalTime += data['Execution Time'];\r\n        });\r\n        title += ' ' + totalTime + 'ms';\r\n        if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n          console.groupCollapsed(title);\r\n          if(console.table) {\r\n            console.table(performance);\r\n          }\r\n          else {\r\n            $.each(performance, function(index, data) {\r\n              console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n            });\r\n          }\r\n          console.groupEnd();\r\n        }\r\n        performance = [];\r\n      }\r\n    },\r\n    invoke: function(query, passedArguments, context) {\r\n      var\r\n        object = instance,\r\n        maxDepth,\r\n        found,\r\n        response\r\n      ;\r\n      passedArguments = passedArguments || queryArguments;\r\n      context         = element         || context;\r\n      if(typeof query == 'string' && object !== undefined) {\r\n        query    = query.split(/[\\. ]/);\r\n        maxDepth = query.length - 1;\r\n        $.each(query, function(depth, value) {\r\n          var camelCaseValue = (depth != maxDepth)\r\n            ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n            : query\r\n          ;\r\n          if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n            object = object[camelCaseValue];\r\n          }\r\n          else if( object[camelCaseValue] !== undefined ) {\r\n            found = object[camelCaseValue];\r\n            return false;\r\n          }\r\n          else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n            object = object[value];\r\n          }\r\n          else if( object[value] !== undefined ) {\r\n            found = object[value];\r\n            return false;\r\n          }\r\n          else {\r\n            module.error(error.method, query);\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n      if ( $.isFunction( found ) ) {\r\n        response = found.apply(context, passedArguments);\r\n      }\r\n      else if(found !== undefined) {\r\n        response = found;\r\n      }\r\n      if($.isArray(returnedValue)) {\r\n        returnedValue.push(response);\r\n      }\r\n      else if(returnedValue !== undefined) {\r\n        returnedValue = [returnedValue, response];\r\n      }\r\n      else if(response !== undefined) {\r\n        returnedValue = response;\r\n      }\r\n      return found;\r\n    }\r\n  };\r\n\r\n  if(methodInvoked) {\r\n    if(instance === undefined) {\r\n      module.initialize();\r\n    }\r\n    module.invoke(query);\r\n  }\r\n  else {\r\n    if(instance !== undefined) {\r\n      module.destroy();\r\n    }\r\n    module.initialize();\r\n  }\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.site.settings = {\r\n\r\n  name        : 'Site',\r\n  namespace   : 'site',\r\n\r\n  error : {\r\n    console : 'Console cannot be restored, most likely it was overwritten outside of module',\r\n    method : 'The method you called is not defined.'\r\n  },\r\n\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  modules: [\r\n    'accordion',\r\n    'api',\r\n    'checkbox',\r\n    'dimmer',\r\n    'dropdown',\r\n    'embed',\r\n    'form',\r\n    'modal',\r\n    'nag',\r\n    'popup',\r\n    'rating',\r\n    'shape',\r\n    'sidebar',\r\n    'state',\r\n    'sticky',\r\n    'tab',\r\n    'transition',\r\n    'visit',\r\n    'visibility'\r\n  ],\r\n\r\n  siteNamespace   : 'site',\r\n  namespaceStub   : {\r\n    cache     : {},\r\n    config    : {},\r\n    sections  : {},\r\n    section   : {},\r\n    utilities : {}\r\n  }\r\n\r\n};\r\n\r\n// allows for selection of elements with data attributes\r\n$.extend($.expr[ \":\" ], {\r\n  data: ($.expr.createPseudo)\r\n    ? $.expr.createPseudo(function(dataName) {\r\n        return function(elem) {\r\n          return !!$.data(elem, dataName);\r\n        };\r\n      })\r\n    : function(elem, i, match) {\r\n      // support: jQuery < 1.8\r\n      return !!$.data(elem, match[ 3 ]);\r\n    }\r\n});\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Form Validation\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.form = function(parameters) {\r\n  var\r\n    $allModules      = $(this),\r\n    moduleSelector   = $allModules.selector || '',\r\n\r\n    time             = new Date().getTime(),\r\n    performance      = [],\r\n\r\n    query            = arguments[0],\r\n    legacyParameters = arguments[1],\r\n    methodInvoked    = (typeof query == 'string'),\r\n    queryArguments   = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        $module     = $(this),\r\n        element     = this,\r\n\r\n        formErrors  = [],\r\n        keyHeldDown = false,\r\n\r\n        // set at run-time\r\n        $field,\r\n        $group,\r\n        $message,\r\n        $prompt,\r\n        $submit,\r\n        $clear,\r\n        $reset,\r\n\r\n        settings,\r\n        validation,\r\n\r\n        metadata,\r\n        selector,\r\n        className,\r\n        regExp,\r\n        error,\r\n\r\n        namespace,\r\n        moduleNamespace,\r\n        eventNamespace,\r\n\r\n        instance,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n\r\n          // settings grabbed at run time\r\n          module.get.settings();\r\n          if(methodInvoked) {\r\n            if(instance === undefined) {\r\n              module.instantiate();\r\n            }\r\n            module.invoke(query);\r\n          }\r\n          else {\r\n            if(instance !== undefined) {\r\n              instance.invoke('destroy');\r\n            }\r\n            module.verbose('Initializing form validation', $module, settings);\r\n            module.bindEvents();\r\n            module.set.defaults();\r\n            module.instantiate();\r\n          }\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', instance);\r\n          module.removeEvents();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $field      = $module.find(selector.field);\r\n          $group      = $module.find(selector.group);\r\n          $message    = $module.find(selector.message);\r\n          $prompt     = $module.find(selector.prompt);\r\n\r\n          $submit     = $module.find(selector.submit);\r\n          $clear      = $module.find(selector.clear);\r\n          $reset      = $module.find(selector.reset);\r\n        },\r\n\r\n        submit: function() {\r\n          module.verbose('Submitting form', $module);\r\n          $module\r\n            .submit()\r\n          ;\r\n        },\r\n\r\n        attachEvents: function(selector, action) {\r\n          action = action || 'submit';\r\n          $(selector)\r\n            .on('click' + eventNamespace, function(event) {\r\n              module[action]();\r\n              event.preventDefault();\r\n            })\r\n          ;\r\n        },\r\n\r\n        bindEvents: function() {\r\n          module.verbose('Attaching form events');\r\n          $module\r\n            .on('submit' + eventNamespace, module.validate.form)\r\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\r\n            .on('click'  + eventNamespace, selector.submit, module.submit)\r\n            .on('click'  + eventNamespace, selector.reset, module.reset)\r\n            .on('click'  + eventNamespace, selector.clear, module.clear)\r\n          ;\r\n          if(settings.keyboardShortcuts) {\r\n            $module\r\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\r\n            ;\r\n          }\r\n          $field\r\n            .each(function() {\r\n              var\r\n                $input     = $(this),\r\n                type       = $input.prop('type'),\r\n                inputEvent = module.get.changeEvent(type, $input)\r\n              ;\r\n              $(this)\r\n                .on(inputEvent + eventNamespace, module.event.field.change)\r\n              ;\r\n            })\r\n          ;\r\n        },\r\n\r\n        clear: function() {\r\n          $field\r\n            .each(function () {\r\n              var\r\n                $field       = $(this),\r\n                $element     = $field.parent(),\r\n                $fieldGroup  = $field.closest($group),\r\n                $prompt      = $fieldGroup.find(selector.prompt),\r\n                defaultValue = $field.data(metadata.defaultValue) || '',\r\n                isCheckbox   = $element.is(selector.uiCheckbox),\r\n                isDropdown   = $element.is(selector.uiDropdown),\r\n                isErrored    = $fieldGroup.hasClass(className.error)\r\n              ;\r\n              if(isErrored) {\r\n                module.verbose('Resetting error on field', $fieldGroup);\r\n                $fieldGroup.removeClass(className.error);\r\n                $prompt.remove();\r\n              }\r\n              if(isDropdown) {\r\n                module.verbose('Resetting dropdown value', $element, defaultValue);\r\n                $element.dropdown('clear');\r\n              }\r\n              else if(isCheckbox) {\r\n                $field.prop('checked', false);\r\n              }\r\n              else {\r\n                module.verbose('Resetting field value', $field, defaultValue);\r\n                $field.val('');\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        reset: function() {\r\n          $field\r\n            .each(function () {\r\n              var\r\n                $field       = $(this),\r\n                $element     = $field.parent(),\r\n                $fieldGroup  = $field.closest($group),\r\n                $prompt      = $fieldGroup.find(selector.prompt),\r\n                defaultValue = $field.data(metadata.defaultValue),\r\n                isCheckbox   = $element.is(selector.uiCheckbox),\r\n                isDropdown   = $element.is(selector.uiDropdown),\r\n                isErrored    = $fieldGroup.hasClass(className.error)\r\n              ;\r\n              if(defaultValue === undefined) {\r\n                return;\r\n              }\r\n              if(isErrored) {\r\n                module.verbose('Resetting error on field', $fieldGroup);\r\n                $fieldGroup.removeClass(className.error);\r\n                $prompt.remove();\r\n              }\r\n              if(isDropdown) {\r\n                module.verbose('Resetting dropdown value', $element, defaultValue);\r\n                $element.dropdown('restore defaults');\r\n              }\r\n              else if(isCheckbox) {\r\n                module.verbose('Resetting checkbox value', $element, defaultValue);\r\n                $field.prop('checked', defaultValue);\r\n              }\r\n              else {\r\n                module.verbose('Resetting field value', $field, defaultValue);\r\n                $field.val(defaultValue);\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        determine: {\r\n          isValid: function() {\r\n            var\r\n              allValid = true\r\n            ;\r\n            $.each(validation, function(fieldName, field) {\r\n              if( !( module.validate.field(field, fieldName, true) ) ) {\r\n                allValid = false;\r\n              }\r\n            });\r\n            return allValid;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          bracketedRule: function(rule) {\r\n            return (rule.type && rule.type.match(settings.regExp.bracket));\r\n          },\r\n          empty: function($field) {\r\n            if(!$field || $field.length === 0) {\r\n              return true;\r\n            }\r\n            else if($field.is('input[type=\"checkbox\"]')) {\r\n              return !$field.is(':checked');\r\n            }\r\n            else {\r\n              return module.is.blank($field);\r\n            }\r\n          },\r\n          blank: function($field) {\r\n            return $.trim($field.val()) === '';\r\n          },\r\n          valid: function(field) {\r\n            var\r\n              allValid = true\r\n            ;\r\n            if(field) {\r\n              module.verbose('Checking if field is valid', field);\r\n              return module.validate.field(validation[field], field, false);\r\n            }\r\n            else {\r\n              module.verbose('Checking if form is valid');\r\n              $.each(validation, function(fieldName, field) {\r\n                if( !module.is.valid(fieldName) ) {\r\n                  allValid = false;\r\n                }\r\n              });\r\n              return allValid;\r\n            }\r\n          }\r\n        },\r\n\r\n        removeEvents: function() {\r\n          $module\r\n            .off(eventNamespace)\r\n          ;\r\n          $field\r\n            .off(eventNamespace)\r\n          ;\r\n          $submit\r\n            .off(eventNamespace)\r\n          ;\r\n          $field\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        event: {\r\n          field: {\r\n            keydown: function(event) {\r\n              var\r\n                $field       = $(this),\r\n                key          = event.which,\r\n                isInput      = $field.is(selector.input),\r\n                isCheckbox   = $field.is(selector.checkbox),\r\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\r\n                keyCode      = {\r\n                  enter  : 13,\r\n                  escape : 27\r\n                }\r\n              ;\r\n              if( key == keyCode.escape) {\r\n                module.verbose('Escape key pressed blurring field');\r\n                $field\r\n                  .blur()\r\n                ;\r\n              }\r\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\r\n                if(!keyHeldDown) {\r\n                  $field\r\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\r\n                  ;\r\n                  module.submit();\r\n                  module.debug('Enter pressed on input submitting form');\r\n                }\r\n                keyHeldDown = true;\r\n              }\r\n            },\r\n            keyup: function() {\r\n              keyHeldDown = false;\r\n            },\r\n            blur: function(event) {\r\n              var\r\n                $field          = $(this),\r\n                $fieldGroup     = $field.closest($group),\r\n                validationRules = module.get.validation($field)\r\n              ;\r\n              if( $fieldGroup.hasClass(className.error) ) {\r\n                module.debug('Revalidating field', $field, validationRules);\r\n                if(validationRules) {\r\n                  module.validate.field( validationRules );\r\n                }\r\n              }\r\n              else if(settings.on == 'blur' || settings.on == 'change') {\r\n                if(validationRules) {\r\n                  module.validate.field( validationRules );\r\n                }\r\n              }\r\n            },\r\n            change: function(event) {\r\n              var\r\n                $field      = $(this),\r\n                $fieldGroup = $field.closest($group),\r\n                validationRules = module.get.validation($field)\r\n              ;\r\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\r\n                clearTimeout(module.timer);\r\n                module.timer = setTimeout(function() {\r\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\r\n                  module.validate.field( validationRules );\r\n                }, settings.delay);\r\n              }\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n          ancillaryValue: function(rule) {\r\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\r\n              return false;\r\n            }\r\n            return (rule.value !== undefined)\r\n              ? rule.value\r\n              : rule.type.match(settings.regExp.bracket)[1] + ''\r\n            ;\r\n          },\r\n          ruleName: function(rule) {\r\n            if( module.is.bracketedRule(rule) ) {\r\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\r\n            }\r\n            return rule.type;\r\n          },\r\n          changeEvent: function(type, $input) {\r\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\r\n              return 'change';\r\n            }\r\n            else {\r\n              return module.get.inputEvent();\r\n            }\r\n          },\r\n          inputEvent: function() {\r\n            return (document.createElement('input').oninput !== undefined)\r\n              ? 'input'\r\n              : (document.createElement('input').onpropertychange !== undefined)\r\n                ? 'propertychange'\r\n                : 'keyup'\r\n            ;\r\n          },\r\n          prompt: function(rule, field) {\r\n            var\r\n              ruleName      = module.get.ruleName(rule),\r\n              ancillary     = module.get.ancillaryValue(rule),\r\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\r\n              requiresValue = (prompt.search('{value}') !== -1),\r\n              requiresName  = (prompt.search('{name}') !== -1),\r\n              $label,\r\n              $field,\r\n              name\r\n            ;\r\n            if(requiresName || requiresValue) {\r\n              $field = module.get.field(field.identifier);\r\n            }\r\n            if(requiresValue) {\r\n              prompt = prompt.replace('{value}', $field.val());\r\n            }\r\n            if(requiresName) {\r\n              $label = $field.closest(selector.group).find('label').eq(0);\r\n              name = ($label.length == 1)\r\n                ? $label.text()\r\n                : $field.prop('placeholder') || settings.text.unspecifiedField\r\n              ;\r\n              prompt = prompt.replace('{name}', name);\r\n            }\r\n            prompt = prompt.replace('{identifier}', field.identifier);\r\n            prompt = prompt.replace('{ruleValue}', ancillary);\r\n            if(!rule.prompt) {\r\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\r\n            }\r\n            return prompt;\r\n          },\r\n          settings: function() {\r\n            if($.isPlainObject(parameters)) {\r\n              var\r\n                keys     = Object.keys(parameters),\r\n                isLegacySettings = (keys.length > 0)\r\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\r\n                  : false,\r\n                ruleKeys\r\n              ;\r\n              if(isLegacySettings) {\r\n                // 1.x (ducktyped)\r\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\r\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\r\n                module.error(settings.error.oldSyntax, element);\r\n                module.verbose('Extending settings from legacy parameters', validation, settings);\r\n              }\r\n              else {\r\n                // 2.x\r\n                if(parameters.fields) {\r\n                  ruleKeys = Object.keys(parameters.fields);\r\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\r\n                    $.each(parameters.fields, function(name, rules) {\r\n                      if(typeof rules == 'string') {\r\n                        rules = [rules];\r\n                      }\r\n                      parameters.fields[name] = {\r\n                        rules: []\r\n                      };\r\n                      $.each(rules, function(index, rule) {\r\n                        parameters.fields[name].rules.push({ type: rule });\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\r\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\r\n                module.verbose('Extending settings', validation, settings);\r\n              }\r\n            }\r\n            else {\r\n              settings   = $.fn.form.settings;\r\n              validation = $.fn.form.settings.defaults;\r\n              module.verbose('Using default form validation', validation, settings);\r\n            }\r\n\r\n            // shorthand\r\n            namespace       = settings.namespace;\r\n            metadata        = settings.metadata;\r\n            selector        = settings.selector;\r\n            className       = settings.className;\r\n            regExp          = settings.regExp;\r\n            error           = settings.error;\r\n            moduleNamespace = 'module-' + namespace;\r\n            eventNamespace  = '.' + namespace;\r\n\r\n            // grab instance\r\n            instance = $module.data(moduleNamespace);\r\n\r\n            // refresh selector cache\r\n            module.refresh();\r\n          },\r\n          field: function(identifier) {\r\n            module.verbose('Finding field with identifier', identifier);\r\n            identifier = module.escape.string(identifier);\r\n            if($field.filter('#' + identifier).length > 0 ) {\r\n              return $field.filter('#' + identifier);\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\r\n              return $field.filter('[name=\"' + identifier +'\"]');\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n              return $field.filter('[name=\"' + identifier +'[]\"]');\r\n            }\r\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\r\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\r\n            }\r\n            return $('<input/>');\r\n          },\r\n          fields: function(fields) {\r\n            var\r\n              $fields = $()\r\n            ;\r\n            $.each(fields, function(index, name) {\r\n              $fields = $fields.add( module.get.field(name) );\r\n            });\r\n            return $fields;\r\n          },\r\n          validation: function($field) {\r\n            var\r\n              fieldValidation,\r\n              identifier\r\n            ;\r\n            if(!validation) {\r\n              return false;\r\n            }\r\n            $.each(validation, function(fieldName, field) {\r\n              identifier = field.identifier || fieldName;\r\n              if( module.get.field(identifier)[0] == $field[0] ) {\r\n                field.identifier = identifier;\r\n                fieldValidation = field;\r\n              }\r\n            });\r\n            return fieldValidation || false;\r\n          },\r\n          value: function (field) {\r\n            var\r\n              fields = [],\r\n              results\r\n            ;\r\n            fields.push(field);\r\n            results = module.get.values.call(element, fields);\r\n            return results[field];\r\n          },\r\n          values: function (fields) {\r\n            var\r\n              $fields = $.isArray(fields)\r\n                ? module.get.fields(fields)\r\n                : $field,\r\n              values = {}\r\n            ;\r\n            $fields.each(function(index, field) {\r\n              var\r\n                $field     = $(field),\r\n                type       = $field.prop('type'),\r\n                name       = $field.prop('name'),\r\n                value      = $field.val(),\r\n                isCheckbox = $field.is(selector.checkbox),\r\n                isRadio    = $field.is(selector.radio),\r\n                isMultiple = (name.indexOf('[]') !== -1),\r\n                isChecked  = (isCheckbox)\r\n                  ? $field.is(':checked')\r\n                  : false\r\n              ;\r\n              if(name) {\r\n                if(isMultiple) {\r\n                  name = name.replace('[]', '');\r\n                  if(!values[name]) {\r\n                    values[name] = [];\r\n                  }\r\n                  if(isCheckbox) {\r\n                    if(isChecked) {\r\n                      values[name].push(value || true);\r\n                    }\r\n                    else {\r\n                      values[name].push(false);\r\n                    }\r\n                  }\r\n                  else {\r\n                    values[name].push(value);\r\n                  }\r\n                }\r\n                else {\r\n                  if(isRadio) {\r\n                    if(isChecked) {\r\n                      values[name] = value;\r\n                    }\r\n                  }\r\n                  else if(isCheckbox) {\r\n                    if(isChecked) {\r\n                      values[name] = value || true;\r\n                    }\r\n                    else {\r\n                      values[name] = false;\r\n                    }\r\n                  }\r\n                  else {\r\n                    values[name] = value;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n            return values;\r\n          }\r\n        },\r\n\r\n        has: {\r\n\r\n          field: function(identifier) {\r\n            module.verbose('Checking for existence of a field with identifier', identifier);\r\n            identifier = module.escape.string(identifier);\r\n            if(typeof identifier !== 'string') {\r\n              module.error(error.identifier, identifier);\r\n            }\r\n            if($field.filter('#' + identifier).length > 0 ) {\r\n              return true;\r\n            }\r\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\r\n              return true;\r\n            }\r\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }\r\n\r\n        },\r\n\r\n        escape: {\r\n          string: function(text) {\r\n            text =  String(text);\r\n            return text.replace(regExp.escape, '\\\\$&');\r\n          }\r\n        },\r\n\r\n        add: {\r\n          prompt: function(identifier, errors) {\r\n            var\r\n              $field       = module.get.field(identifier),\r\n              $fieldGroup  = $field.closest($group),\r\n              $prompt      = $fieldGroup.children(selector.prompt),\r\n              promptExists = ($prompt.length !== 0)\r\n            ;\r\n            errors = (typeof errors == 'string')\r\n              ? [errors]\r\n              : errors\r\n            ;\r\n            module.verbose('Adding field error state', identifier);\r\n            $fieldGroup\r\n              .addClass(className.error)\r\n            ;\r\n            if(settings.inline) {\r\n              if(!promptExists) {\r\n                $prompt = settings.templates.prompt(errors);\r\n                $prompt\r\n                  .appendTo($fieldGroup)\r\n                ;\r\n              }\r\n              $prompt\r\n                .html(errors[0])\r\n              ;\r\n              if(!promptExists) {\r\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                  module.verbose('Displaying error with css transition', settings.transition);\r\n                  $prompt.transition(settings.transition + ' in', settings.duration);\r\n                }\r\n                else {\r\n                  module.verbose('Displaying error with fallback javascript animation');\r\n                  $prompt\r\n                    .fadeIn(settings.duration)\r\n                  ;\r\n                }\r\n              }\r\n              else {\r\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\r\n              }\r\n            }\r\n          },\r\n          errors: function(errors) {\r\n            module.debug('Adding form error messages', errors);\r\n            module.set.error();\r\n            $message\r\n              .html( settings.templates.error(errors) )\r\n            ;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          prompt: function(identifier) {\r\n            var\r\n              $field      = module.get.field(identifier),\r\n              $fieldGroup = $field.closest($group),\r\n              $prompt     = $fieldGroup.children(selector.prompt)\r\n            ;\r\n            $fieldGroup\r\n              .removeClass(className.error)\r\n            ;\r\n            if(settings.inline && $prompt.is(':visible')) {\r\n              module.verbose('Removing prompt for field', identifier);\r\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\r\n                  $prompt.remove();\r\n                });\r\n              }\r\n              else {\r\n                $prompt\r\n                  .fadeOut(settings.duration, function(){\r\n                    $prompt.remove();\r\n                  })\r\n                ;\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        set: {\r\n          success: function() {\r\n            $module\r\n              .removeClass(className.error)\r\n              .addClass(className.success)\r\n            ;\r\n          },\r\n          defaults: function () {\r\n            $field\r\n              .each(function () {\r\n                var\r\n                  $field     = $(this),\r\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\r\n                  value      = (isCheckbox)\r\n                    ? $field.is(':checked')\r\n                    : $field.val()\r\n                ;\r\n                $field.data(metadata.defaultValue, value);\r\n              })\r\n            ;\r\n          },\r\n          error: function() {\r\n            $module\r\n              .removeClass(className.success)\r\n              .addClass(className.error)\r\n            ;\r\n          },\r\n          value: function (field, value) {\r\n            var\r\n              fields = {}\r\n            ;\r\n            fields[field] = value;\r\n            return module.set.values.call(element, fields);\r\n          },\r\n          values: function (fields) {\r\n            if($.isEmptyObject(fields)) {\r\n              return;\r\n            }\r\n            $.each(fields, function(key, value) {\r\n              var\r\n                $field      = module.get.field(key),\r\n                $element    = $field.parent(),\r\n                isMultiple  = $.isArray(value),\r\n                isCheckbox  = $element.is(selector.uiCheckbox),\r\n                isDropdown  = $element.is(selector.uiDropdown),\r\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\r\n                fieldExists = ($field.length > 0),\r\n                $multipleField\r\n              ;\r\n              if(fieldExists) {\r\n                if(isMultiple && isCheckbox) {\r\n                  module.verbose('Selecting multiple', value, $field);\r\n                  $element.checkbox('uncheck');\r\n                  $.each(value, function(index, value) {\r\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\r\n                    $element       = $multipleField.parent();\r\n                    if($multipleField.length > 0) {\r\n                      $element.checkbox('check');\r\n                    }\r\n                  });\r\n                }\r\n                else if(isRadio) {\r\n                  module.verbose('Selecting radio value', value, $field);\r\n                  $field.filter('[value=\"' + value + '\"]')\r\n                    .parent(selector.uiCheckbox)\r\n                      .checkbox('check')\r\n                  ;\r\n                }\r\n                else if(isCheckbox) {\r\n                  module.verbose('Setting checkbox value', value, $element);\r\n                  if(value === true) {\r\n                    $element.checkbox('check');\r\n                  }\r\n                  else {\r\n                    $element.checkbox('uncheck');\r\n                  }\r\n                }\r\n                else if(isDropdown) {\r\n                  module.verbose('Setting dropdown value', value, $element);\r\n                  $element.dropdown('set selected', value);\r\n                }\r\n                else {\r\n                  module.verbose('Setting field value', value, $field);\r\n                  $field.val(value);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        validate: {\r\n\r\n          form: function(event, ignoreCallbacks) {\r\n            var\r\n              values = module.get.values(),\r\n              apiRequest\r\n            ;\r\n\r\n            // input keydown event will fire submit repeatedly by browser default\r\n            if(keyHeldDown) {\r\n              return false;\r\n            }\r\n\r\n            // reset errors\r\n            formErrors = [];\r\n            if( module.determine.isValid() ) {\r\n              module.debug('Form has no validation errors, submitting');\r\n              module.set.success();\r\n              if(ignoreCallbacks !== true) {\r\n                return settings.onSuccess.call(element, event, values);\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Form has errors');\r\n              module.set.error();\r\n              if(!settings.inline) {\r\n                module.add.errors(formErrors);\r\n              }\r\n              // prevent ajax submit\r\n              if($module.data('moduleApi') !== undefined) {\r\n                event.stopImmediatePropagation();\r\n              }\r\n              if(ignoreCallbacks !== true) {\r\n                return settings.onFailure.call(element, formErrors, values);\r\n              }\r\n            }\r\n          },\r\n\r\n          // takes a validation object and returns whether field passes validation\r\n          field: function(field, fieldName, showErrors) {\r\n            showErrors = (showErrors !== undefined)\r\n              ? showErrors\r\n              : true\r\n            ;\r\n            if(typeof field == 'string') {\r\n              module.verbose('Validating field', field);\r\n              fieldName = field;\r\n              field = validation[field];\r\n            }\r\n            var\r\n              identifier    = field.identifier || fieldName,\r\n              $field        = module.get.field(identifier),\r\n              $dependsField = (field.depends)\r\n                ? module.get.field(field.depends)\r\n                : false,\r\n              fieldValid  = true,\r\n              fieldErrors = []\r\n            ;\r\n            if(!field.identifier) {\r\n              module.debug('Using field name as identifier', identifier);\r\n              field.identifier = identifier;\r\n            }\r\n            if($field.prop('disabled')) {\r\n              module.debug('Field is disabled. Skipping', identifier);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.optional && module.is.blank($field)){\r\n              module.debug('Field is optional and blank. Skipping', identifier);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.depends && module.is.empty($dependsField)) {\r\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\r\n              fieldValid = true;\r\n            }\r\n            else if(field.rules !== undefined) {\r\n              $.each(field.rules, function(index, rule) {\r\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\r\n                  module.debug('Field is invalid', identifier, rule.type);\r\n                  fieldErrors.push(module.get.prompt(rule, field));\r\n                  fieldValid = false;\r\n                }\r\n              });\r\n            }\r\n            if(fieldValid) {\r\n              if(showErrors) {\r\n                module.remove.prompt(identifier, fieldErrors);\r\n                settings.onValid.call($field);\r\n              }\r\n            }\r\n            else {\r\n              if(showErrors) {\r\n                formErrors = formErrors.concat(fieldErrors);\r\n                module.add.prompt(identifier, fieldErrors);\r\n                settings.onInvalid.call($field, fieldErrors);\r\n              }\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n\r\n          // takes validation rule and returns whether field passes rule\r\n          rule: function(field, rule) {\r\n            var\r\n              $field       = module.get.field(field.identifier),\r\n              type         = rule.type,\r\n              value        = $field.val(),\r\n              isValid      = true,\r\n              ancillary    = module.get.ancillaryValue(rule),\r\n              ruleName     = module.get.ruleName(rule),\r\n              ruleFunction = settings.rules[ruleName]\r\n            ;\r\n            if( !$.isFunction(ruleFunction) ) {\r\n              module.error(error.noRule, ruleName);\r\n              return;\r\n            }\r\n            // cast to string avoiding encoding special values\r\n            value = (value === undefined || value === '' || value === null)\r\n              ? ''\r\n              : $.trim(value + '')\r\n            ;\r\n            return ruleFunction.call($field, value, ancillary);\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      module.initialize();\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.form.settings = {\r\n\r\n  name              : 'Form',\r\n  namespace         : 'form',\r\n\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  fields            : false,\r\n\r\n  keyboardShortcuts : true,\r\n  on                : 'submit',\r\n  inline            : false,\r\n\r\n  delay             : 200,\r\n  revalidate        : true,\r\n\r\n  transition        : 'scale',\r\n  duration          : 200,\r\n\r\n  onValid           : function() {},\r\n  onInvalid         : function() {},\r\n  onSuccess         : function() { return true; },\r\n  onFailure         : function() { return false; },\r\n\r\n  metadata : {\r\n    defaultValue : 'default',\r\n    validate     : 'validate'\r\n  },\r\n\r\n  regExp: {\r\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\r\n    bracket : /\\[(.*)\\]/i,\r\n    decimal : /^\\d+\\.?\\d*$/,\r\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\r\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n    flags   : /^\\/(.*)\\/(.*)?/,\r\n    integer : /^\\-?\\d+$/,\r\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\r\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\r\n  },\r\n\r\n  text: {\r\n    unspecifiedRule  : 'Please enter a valid value',\r\n    unspecifiedField : 'This field'\r\n  },\r\n\r\n  prompt: {\r\n    empty                : '{name} must have a value',\r\n    checked              : '{name} must be checked',\r\n    email                : '{name} must be a valid e-mail',\r\n    url                  : '{name} must be a valid url',\r\n    regExp               : '{name} is not formatted correctly',\r\n    integer              : '{name} must be an integer',\r\n    decimal              : '{name} must be a decimal number',\r\n    number               : '{name} must be set to a number',\r\n    is                   : '{name} must be \"{ruleValue}\"',\r\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\r\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\r\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\r\n    contain              : '{name} cannot contain \"{ruleValue}\"',\r\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\r\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\r\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\r\n    minLength            : '{name} must be at least {ruleValue} characters',\r\n    length               : '{name} must be at least {ruleValue} characters',\r\n    exactLength          : '{name} must be exactly {ruleValue} characters',\r\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\r\n    match                : '{name} must match {ruleValue} field',\r\n    different            : '{name} must have a different value than {ruleValue} field',\r\n    creditCard           : '{name} must be a valid credit card number',\r\n    minCount             : '{name} must have at least {ruleValue} choices',\r\n    exactCount           : '{name} must have exactly {ruleValue} choices',\r\n    maxCount             : '{name} must have {ruleValue} or less choices'\r\n  },\r\n\r\n  selector : {\r\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\r\n    clear      : '.clear',\r\n    field      : 'input, textarea, select',\r\n    group      : '.field',\r\n    input      : 'input',\r\n    message    : '.error.message',\r\n    prompt     : '.prompt.label',\r\n    radio      : 'input[type=\"radio\"]',\r\n    reset      : '.reset:not([type=\"reset\"])',\r\n    submit     : '.submit:not([type=\"submit\"])',\r\n    uiCheckbox : '.ui.checkbox',\r\n    uiDropdown : '.ui.dropdown'\r\n  },\r\n\r\n  className : {\r\n    error   : 'error',\r\n    label   : 'ui prompt label',\r\n    pressed : 'down',\r\n    success : 'success'\r\n  },\r\n\r\n  error: {\r\n    identifier : 'You must specify a string identifier for each field',\r\n    method     : 'The method you called is not defined.',\r\n    noRule     : 'There is no rule matching the one you specified',\r\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\r\n  },\r\n\r\n  templates: {\r\n\r\n    // template that produces error message\r\n    error: function(errors) {\r\n      var\r\n        html = '<ul class=\"list\">'\r\n      ;\r\n      $.each(errors, function(index, value) {\r\n        html += '<li>' + value + '</li>';\r\n      });\r\n      html += '</ul>';\r\n      return $(html);\r\n    },\r\n\r\n    // template that produces label\r\n    prompt: function(errors) {\r\n      return $('<div/>')\r\n        .addClass('ui basic red pointing prompt label')\r\n        .html(errors[0])\r\n      ;\r\n    }\r\n  },\r\n\r\n  rules: {\r\n\r\n    // is not empty or blank string\r\n    empty: function(value) {\r\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\r\n    },\r\n\r\n    // checkbox checked\r\n    checked: function() {\r\n      return ($(this).filter(':checked').length > 0);\r\n    },\r\n\r\n    // is most likely an email\r\n    email: function(value){\r\n      return $.fn.form.settings.regExp.email.test(value);\r\n    },\r\n\r\n    // value is most likely url\r\n    url: function(value) {\r\n      return $.fn.form.settings.regExp.url.test(value);\r\n    },\r\n\r\n    // matches specified regExp\r\n    regExp: function(value, regExp) {\r\n      if(regExp instanceof RegExp) {\r\n        return value.match(regExp);\r\n      }\r\n      var\r\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\r\n        flags\r\n      ;\r\n      // regular expression specified as /baz/gi (flags)\r\n      if(regExpParts) {\r\n        regExp = (regExpParts.length >= 2)\r\n          ? regExpParts[1]\r\n          : regExp\r\n        ;\r\n        flags = (regExpParts.length >= 3)\r\n          ? regExpParts[2]\r\n          : ''\r\n        ;\r\n      }\r\n      return value.match( new RegExp(regExp, flags) );\r\n    },\r\n\r\n    // is valid integer or matches range\r\n    integer: function(value, range) {\r\n      var\r\n        intRegExp = $.fn.form.settings.regExp.integer,\r\n        min,\r\n        max,\r\n        parts\r\n      ;\r\n      if( !range || ['', '..'].indexOf(range) !== -1) {\r\n        // do nothing\r\n      }\r\n      else if(range.indexOf('..') == -1) {\r\n        if(intRegExp.test(range)) {\r\n          min = max = range - 0;\r\n        }\r\n      }\r\n      else {\r\n        parts = range.split('..', 2);\r\n        if(intRegExp.test(parts[0])) {\r\n          min = parts[0] - 0;\r\n        }\r\n        if(intRegExp.test(parts[1])) {\r\n          max = parts[1] - 0;\r\n        }\r\n      }\r\n      return (\r\n        intRegExp.test(value) &&\r\n        (min === undefined || value >= min) &&\r\n        (max === undefined || value <= max)\r\n      );\r\n    },\r\n\r\n    // is valid number (with decimal)\r\n    decimal: function(value) {\r\n      return $.fn.form.settings.regExp.decimal.test(value);\r\n    },\r\n\r\n    // is valid number\r\n    number: function(value) {\r\n      return $.fn.form.settings.regExp.number.test(value);\r\n    },\r\n\r\n    // is value (case insensitive)\r\n    is: function(value, text) {\r\n      text = (typeof text == 'string')\r\n        ? text.toLowerCase()\r\n        : text\r\n      ;\r\n      value = (typeof value == 'string')\r\n        ? value.toLowerCase()\r\n        : value\r\n      ;\r\n      return (value == text);\r\n    },\r\n\r\n    // is value\r\n    isExactly: function(value, text) {\r\n      return (value == text);\r\n    },\r\n\r\n    // value is not another value (case insensitive)\r\n    not: function(value, notValue) {\r\n      value = (typeof value == 'string')\r\n        ? value.toLowerCase()\r\n        : value\r\n      ;\r\n      notValue = (typeof notValue == 'string')\r\n        ? notValue.toLowerCase()\r\n        : notValue\r\n      ;\r\n      return (value != notValue);\r\n    },\r\n\r\n    // value is not another value (case sensitive)\r\n    notExactly: function(value, notValue) {\r\n      return (value != notValue);\r\n    },\r\n\r\n    // value contains text (insensitive)\r\n    contains: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text, 'i') ) !== -1);\r\n    },\r\n\r\n    // value contains text (case sensitive)\r\n    containsExactly: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text) ) !== -1);\r\n    },\r\n\r\n    // value contains text (insensitive)\r\n    doesntContain: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text, 'i') ) === -1);\r\n    },\r\n\r\n    // value contains text (case sensitive)\r\n    doesntContainExactly: function(value, text) {\r\n      // escape regex characters\r\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\r\n      return (value.search( new RegExp(text) ) === -1);\r\n    },\r\n\r\n    // is at least string length\r\n    minLength: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length >= requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\r\n    length: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length >= requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // is exactly length\r\n    exactLength: function(value, requiredLength) {\r\n      return (value !== undefined)\r\n        ? (value.length == requiredLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // is less than length\r\n    maxLength: function(value, maxLength) {\r\n      return (value !== undefined)\r\n        ? (value.length <= maxLength)\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // matches another field\r\n    match: function(value, identifier) {\r\n      var\r\n        $form = $(this),\r\n        matchingValue\r\n      ;\r\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\r\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\r\n      }\r\n      else if($('#' + identifier).length > 0) {\r\n        matchingValue = $('#' + identifier).val();\r\n      }\r\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\r\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\r\n      }\r\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\r\n      }\r\n      return (matchingValue !== undefined)\r\n        ? ( value.toString() == matchingValue.toString() )\r\n        : false\r\n      ;\r\n    },\r\n\r\n    // different than another field\r\n    different: function(value, identifier) {\r\n      // use either id or name of field\r\n      var\r\n        $form = $(this),\r\n        matchingValue\r\n      ;\r\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\r\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\r\n      }\r\n      else if($('#' + identifier).length > 0) {\r\n        matchingValue = $('#' + identifier).val();\r\n      }\r\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\r\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\r\n      }\r\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\r\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\r\n      }\r\n      return (matchingValue !== undefined)\r\n        ? ( value.toString() !== matchingValue.toString() )\r\n        : false\r\n      ;\r\n    },\r\n\r\n    creditCard: function(cardNumber, cardTypes) {\r\n      var\r\n        cards = {\r\n          visa: {\r\n            pattern : /^4/,\r\n            length  : [16]\r\n          },\r\n          amex: {\r\n            pattern : /^3[47]/,\r\n            length  : [15]\r\n          },\r\n          mastercard: {\r\n            pattern : /^5[1-5]/,\r\n            length  : [16]\r\n          },\r\n          discover: {\r\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\r\n            length  : [16]\r\n          },\r\n          unionPay: {\r\n            pattern : /^(62|88)/,\r\n            length  : [16, 17, 18, 19]\r\n          },\r\n          jcb: {\r\n            pattern : /^35(2[89]|[3-8][0-9])/,\r\n            length  : [16]\r\n          },\r\n          maestro: {\r\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\r\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\r\n          },\r\n          dinersClub: {\r\n            pattern : /^(30[0-5]|^36)/,\r\n            length  : [14]\r\n          },\r\n          laser: {\r\n            pattern : /^(6304|670[69]|6771)/,\r\n            length  : [16, 17, 18, 19]\r\n          },\r\n          visaElectron: {\r\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\r\n            length  : [16]\r\n          }\r\n        },\r\n        valid         = {},\r\n        validCard     = false,\r\n        requiredTypes = (typeof cardTypes == 'string')\r\n          ? cardTypes.split(',')\r\n          : false,\r\n        unionPay,\r\n        validation\r\n      ;\r\n\r\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\r\n        return;\r\n      }\r\n\r\n      // allow dashes in card\r\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\r\n\r\n      // verify card types\r\n      if(requiredTypes) {\r\n        $.each(requiredTypes, function(index, type){\r\n          // verify each card type\r\n          validation = cards[type];\r\n          if(validation) {\r\n            valid = {\r\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\r\n              pattern : (cardNumber.search(validation.pattern) !== -1)\r\n            };\r\n            if(valid.length && valid.pattern) {\r\n              validCard = true;\r\n            }\r\n          }\r\n        });\r\n\r\n        if(!validCard) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // skip luhn for UnionPay\r\n      unionPay = {\r\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\r\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\r\n      };\r\n      if(unionPay.number && unionPay.pattern) {\r\n        return true;\r\n      }\r\n\r\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\r\n      var\r\n        length        = cardNumber.length,\r\n        multiple      = 0,\r\n        producedValue = [\r\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\r\n        ],\r\n        sum           = 0\r\n      ;\r\n      while (length--) {\r\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\r\n        multiple ^= 1;\r\n      }\r\n      return (sum % 10 === 0 && sum > 0);\r\n    },\r\n\r\n    minCount: function(value, minCount) {\r\n      if(minCount == 0) {\r\n        return true;\r\n      }\r\n      if(minCount == 1) {\r\n        return (value !== '');\r\n      }\r\n      return (value.split(',').length >= minCount);\r\n    },\r\n\r\n    exactCount: function(value, exactCount) {\r\n      if(exactCount == 0) {\r\n        return (value === '');\r\n      }\r\n      if(exactCount == 1) {\r\n        return (value !== '' && value.search(',') === -1);\r\n      }\r\n      return (value.split(',').length == exactCount);\r\n    },\r\n\r\n    maxCount: function(value, maxCount) {\r\n      if(maxCount == 0) {\r\n        return false;\r\n      }\r\n      if(maxCount == 1) {\r\n        return (value.search(',') === -1);\r\n      }\r\n      return (value.split(',').length <= maxCount);\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Accordion\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.accordion = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\r\n          : $.extend({}, $.fn.accordion.settings),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n        moduleSelector  = $allModules.selector || '',\r\n\r\n        $module  = $(this),\r\n        $title   = $module.find(selector.title),\r\n        $content = $module.find(selector.content),\r\n\r\n        element  = this,\r\n        instance = $module.data(moduleNamespace),\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing', $module);\r\n          module.bind.events();\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying previous instance', $module);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          $title   = $module.find(selector.title);\r\n          $content = $module.find(selector.content);\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, updating selector cache');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.debug('Binding delegated events');\r\n            $module\r\n              .on(settings.on + eventNamespace, selector.trigger, module.event.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function() {\r\n            module.toggle.call(this);\r\n          }\r\n        },\r\n\r\n        toggle: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating = $activeContent.hasClass(className.animating),\r\n            isActive    = $activeContent.hasClass(className.active),\r\n            isOpen      = (isActive && !isAnimating),\r\n            isOpening   = (!isActive && isAnimating)\r\n          ;\r\n          module.debug('Toggling visibility of content', $activeTitle);\r\n          if(isOpen || isOpening) {\r\n            if(settings.collapsible) {\r\n              module.close.call($activeTitle);\r\n            }\r\n            else {\r\n              module.debug('Cannot close accordion content collapsing is disabled');\r\n            }\r\n          }\r\n          else {\r\n            module.open.call($activeTitle);\r\n          }\r\n        },\r\n\r\n        open: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating = $activeContent.hasClass(className.animating),\r\n            isActive    = $activeContent.hasClass(className.active),\r\n            isOpen      = (isActive || isAnimating)\r\n          ;\r\n          if(isOpen) {\r\n            module.debug('Accordion already open, skipping', $activeContent);\r\n            return;\r\n          }\r\n          module.debug('Opening accordion content', $activeTitle);\r\n          settings.onOpening.call($activeContent);\r\n          if(settings.exclusive) {\r\n            module.closeOthers.call($activeTitle);\r\n          }\r\n          $activeTitle\r\n            .addClass(className.active)\r\n          ;\r\n          $activeContent\r\n            .stop(true, true)\r\n            .addClass(className.animating)\r\n          ;\r\n          if(settings.animateChildren) {\r\n            if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n              $activeContent\r\n                .children()\r\n                  .transition({\r\n                    animation   : 'fade in',\r\n                    queue       : false,\r\n                    useFailSafe : true,\r\n                    debug       : settings.debug,\r\n                    verbose     : settings.verbose,\r\n                    duration    : settings.duration\r\n                  })\r\n              ;\r\n            }\r\n            else {\r\n              $activeContent\r\n                .children()\r\n                  .stop(true, true)\r\n                  .animate({\r\n                    opacity: 1\r\n                  }, settings.duration, module.resetOpacity)\r\n              ;\r\n            }\r\n          }\r\n          $activeContent\r\n            .slideDown(settings.duration, settings.easing, function() {\r\n              $activeContent\r\n                .removeClass(className.animating)\r\n                .addClass(className.active)\r\n              ;\r\n              module.reset.display.call(this);\r\n              settings.onOpen.call(this);\r\n              settings.onChange.call(this);\r\n            })\r\n          ;\r\n        },\r\n\r\n        close: function(query) {\r\n          var\r\n            $activeTitle = (query !== undefined)\r\n              ? (typeof query === 'number')\r\n                ? $title.eq(query)\r\n                : $(query).closest(selector.title)\r\n              : $(this).closest(selector.title),\r\n            $activeContent = $activeTitle.next($content),\r\n            isAnimating    = $activeContent.hasClass(className.animating),\r\n            isActive       = $activeContent.hasClass(className.active),\r\n            isOpening      = (!isActive && isAnimating),\r\n            isClosing      = (isActive && isAnimating)\r\n          ;\r\n          if((isActive || isOpening) && !isClosing) {\r\n            module.debug('Closing accordion content', $activeContent);\r\n            settings.onClosing.call($activeContent);\r\n            $activeTitle\r\n              .removeClass(className.active)\r\n            ;\r\n            $activeContent\r\n              .stop(true, true)\r\n              .addClass(className.animating)\r\n            ;\r\n            if(settings.animateChildren) {\r\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $activeContent\r\n                  .children()\r\n                    .transition({\r\n                      animation   : 'fade out',\r\n                      queue       : false,\r\n                      useFailSafe : true,\r\n                      debug       : settings.debug,\r\n                      verbose     : settings.verbose,\r\n                      duration    : settings.duration\r\n                    })\r\n                ;\r\n              }\r\n              else {\r\n                $activeContent\r\n                  .children()\r\n                    .stop(true, true)\r\n                    .animate({\r\n                      opacity: 0\r\n                    }, settings.duration, module.resetOpacity)\r\n                ;\r\n              }\r\n            }\r\n            $activeContent\r\n              .slideUp(settings.duration, settings.easing, function() {\r\n                $activeContent\r\n                  .removeClass(className.animating)\r\n                  .removeClass(className.active)\r\n                ;\r\n                module.reset.display.call(this);\r\n                settings.onClose.call(this);\r\n                settings.onChange.call(this);\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        closeOthers: function(index) {\r\n          var\r\n            $activeTitle = (index !== undefined)\r\n              ? $title.eq(index)\r\n              : $(this).closest(selector.title),\r\n            $parentTitles    = $activeTitle.parents(selector.content).prev(selector.title),\r\n            $activeAccordion = $activeTitle.closest(selector.accordion),\r\n            activeSelector   = selector.title + '.' + className.active + ':visible',\r\n            activeContent    = selector.content + '.' + className.active + ':visible',\r\n            $openTitles,\r\n            $nestedTitles,\r\n            $openContents\r\n          ;\r\n          if(settings.closeNested) {\r\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\r\n            $openContents = $openTitles.next($content);\r\n          }\r\n          else {\r\n            $openTitles   = $activeAccordion.find(activeSelector).not($parentTitles);\r\n            $nestedTitles = $activeAccordion.find(activeContent).find(activeSelector).not($parentTitles);\r\n            $openTitles   = $openTitles.not($nestedTitles);\r\n            $openContents = $openTitles.next($content);\r\n          }\r\n          if( ($openTitles.length > 0) ) {\r\n            module.debug('Exclusive enabled, closing other content', $openTitles);\r\n            $openTitles\r\n              .removeClass(className.active)\r\n            ;\r\n            $openContents\r\n              .removeClass(className.animating)\r\n              .stop(true, true)\r\n            ;\r\n            if(settings.animateChildren) {\r\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $openContents\r\n                  .children()\r\n                    .transition({\r\n                      animation   : 'fade out',\r\n                      useFailSafe : true,\r\n                      debug       : settings.debug,\r\n                      verbose     : settings.verbose,\r\n                      duration    : settings.duration\r\n                    })\r\n                ;\r\n              }\r\n              else {\r\n                $openContents\r\n                  .children()\r\n                    .stop(true, true)\r\n                    .animate({\r\n                      opacity: 0\r\n                    }, settings.duration, module.resetOpacity)\r\n                ;\r\n              }\r\n            }\r\n            $openContents\r\n              .slideUp(settings.duration , settings.easing, function() {\r\n                $(this).removeClass(className.active);\r\n                module.reset.display.call(this);\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        reset: {\r\n\r\n          display: function() {\r\n            module.verbose('Removing inline display from element', this);\r\n            $(this).css('display', '');\r\n            if( $(this).attr('style') === '') {\r\n              $(this)\r\n                .attr('style', '')\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          },\r\n\r\n          opacity: function() {\r\n            module.verbose('Removing inline opacity from element', this);\r\n            $(this).css('opacity', '');\r\n            if( $(this).attr('style') === '') {\r\n              $(this)\r\n                .attr('style', '')\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          },\r\n\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          module.debug('Changing internal', name, value);\r\n          if(value !== undefined) {\r\n            if( $.isPlainObject(name) ) {\r\n              $.extend(true, module, name);\r\n            }\r\n            else {\r\n              module[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.accordion.settings = {\r\n\r\n  name            : 'Accordion',\r\n  namespace       : 'accordion',\r\n\r\n  silent          : false,\r\n  debug           : false,\r\n  verbose         : false,\r\n  performance     : true,\r\n\r\n  on              : 'click', // event on title that opens accordion\r\n\r\n  observeChanges  : true,  // whether accordion should automatically refresh on DOM insertion\r\n\r\n  exclusive       : true,  // whether a single accordion content panel should be open at once\r\n  collapsible     : true,  // whether accordion content can be closed\r\n  closeNested     : false, // whether nested content should be closed when a panel is closed\r\n  animateChildren : true,  // whether children opacity should be animated\r\n\r\n  duration        : 350, // duration of animation\r\n  easing          : 'easeOutQuad', // easing equation for animation\r\n\r\n\r\n  onOpening       : function(){}, // callback before open animation\r\n  onOpen          : function(){}, // callback after open animation\r\n  onClosing       : function(){}, // callback before closing animation\r\n  onClose         : function(){}, // callback after closing animation\r\n  onChange        : function(){}, // callback after closing or opening animation\r\n\r\n  error: {\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  className   : {\r\n    active    : 'active',\r\n    animating : 'animating'\r\n  },\r\n\r\n  selector    : {\r\n    accordion : '.accordion',\r\n    title     : '.title',\r\n    trigger   : '.title',\r\n    content   : '.content'\r\n  }\r\n\r\n};\r\n\r\n// Adds easing\r\n$.extend( $.easing, {\r\n  easeOutQuad: function (x, t, b, c, d) {\r\n    return -c *(t/=d)*(t-2) + b;\r\n  }\r\n});\r\n\r\n})( jQuery, window, document );\r\n\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Checkbox\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.checkbox = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $label          = $(this).children(selector.label),\r\n        $input          = $(this).children(selector.input),\r\n        input           = $input[0],\r\n\r\n        initialLoad     = false,\r\n        shortcutPressed = false,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        observer,\r\n        element         = this,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing checkbox', settings);\r\n\r\n          module.create.label();\r\n          module.bind.events();\r\n\r\n          module.set.tabbable();\r\n          module.hide.input();\r\n\r\n          module.observeChanges();\r\n          module.instantiate();\r\n          module.setup();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying module');\r\n          module.unbind.events();\r\n          module.show.input();\r\n          $module.removeData(moduleNamespace);\r\n        },\r\n\r\n        fix: {\r\n          reference: function() {\r\n            if( $module.is(selector.input) ) {\r\n              module.debug('Behavior called on <input> adjusting invoked element');\r\n              $module = $module.closest(selector.checkbox);\r\n              module.refresh();\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: function() {\r\n          module.set.initialLoad();\r\n          if( module.is.indeterminate() ) {\r\n            module.debug('Initial value is indeterminate');\r\n            module.indeterminate();\r\n          }\r\n          else if( module.is.checked() ) {\r\n            module.debug('Initial value is checked');\r\n            module.check();\r\n          }\r\n          else {\r\n            module.debug('Initial value is unchecked');\r\n            module.uncheck();\r\n          }\r\n          module.remove.initialLoad();\r\n        },\r\n\r\n        refresh: function() {\r\n          $label = $module.children(selector.label);\r\n          $input = $module.children(selector.input);\r\n          input  = $input[0];\r\n        },\r\n\r\n        hide: {\r\n          input: function() {\r\n            module.verbose('Modifying <input> z-index to be unselectable');\r\n            $input.addClass(className.hidden);\r\n          }\r\n        },\r\n        show: {\r\n          input: function() {\r\n            module.verbose('Modifying <input> z-index to be selectable');\r\n            $input.removeClass(className.hidden);\r\n          }\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, updating selector cache');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $element = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($element.length > 0) {\r\n            module.debug('Attaching checkbox events to element', selector, event);\r\n            $element\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            var\r\n              $target = $(event.target)\r\n            ;\r\n            if( $target.is(selector.input) ) {\r\n              module.verbose('Using default check action on initialized checkbox');\r\n              return;\r\n            }\r\n            if( $target.is(selector.link) ) {\r\n              module.debug('Clicking link inside checkbox, skipping toggle');\r\n              return;\r\n            }\r\n            module.toggle();\r\n            $input.focus();\r\n            event.preventDefault();\r\n          },\r\n          keydown: function(event) {\r\n            var\r\n              key     = event.which,\r\n              keyCode = {\r\n                enter  : 13,\r\n                space  : 32,\r\n                escape : 27\r\n              }\r\n            ;\r\n            if(key == keyCode.escape) {\r\n              module.verbose('Escape key pressed blurring field');\r\n              $input.blur();\r\n              shortcutPressed = true;\r\n            }\r\n            else if(!event.ctrlKey && ( key == keyCode.space || key == keyCode.enter) ) {\r\n              module.verbose('Enter/space key pressed, toggling checkbox');\r\n              module.toggle();\r\n              shortcutPressed = true;\r\n            }\r\n            else {\r\n              shortcutPressed = false;\r\n            }\r\n          },\r\n          keyup: function(event) {\r\n            if(shortcutPressed) {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n        },\r\n\r\n        check: function() {\r\n          if( !module.should.allowCheck() ) {\r\n            return;\r\n          }\r\n          module.debug('Checking checkbox', $input);\r\n          module.set.checked();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onChecked.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        uncheck: function() {\r\n          if( !module.should.allowUncheck() ) {\r\n            return;\r\n          }\r\n          module.debug('Unchecking checkbox');\r\n          module.set.unchecked();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onUnchecked.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        indeterminate: function() {\r\n          if( module.should.allowIndeterminate() ) {\r\n            module.debug('Checkbox is already indeterminate');\r\n            return;\r\n          }\r\n          module.debug('Making checkbox indeterminate');\r\n          module.set.indeterminate();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onIndeterminate.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        determinate: function() {\r\n          if( module.should.allowDeterminate() ) {\r\n            module.debug('Checkbox is already determinate');\r\n            return;\r\n          }\r\n          module.debug('Making checkbox determinate');\r\n          module.set.determinate();\r\n          if( !module.should.ignoreCallbacks() ) {\r\n            settings.onDeterminate.call(input);\r\n            settings.onChange.call(input);\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          if( module.is.enabled() ) {\r\n            module.debug('Checkbox is already enabled');\r\n            return;\r\n          }\r\n          module.debug('Enabling checkbox');\r\n          module.set.enabled();\r\n          settings.onEnable.call(input);\r\n          // preserve legacy callbacks\r\n          settings.onEnabled.call(input);\r\n        },\r\n\r\n        disable: function() {\r\n          if( module.is.disabled() ) {\r\n            module.debug('Checkbox is already disabled');\r\n            return;\r\n          }\r\n          module.debug('Disabling checkbox');\r\n          module.set.disabled();\r\n          settings.onDisable.call(input);\r\n          // preserve legacy callbacks\r\n          settings.onDisabled.call(input);\r\n        },\r\n\r\n        get: {\r\n          radios: function() {\r\n            var\r\n              name = module.get.name()\r\n            ;\r\n            return $('input[name=\"' + name + '\"]').closest(selector.checkbox);\r\n          },\r\n          otherRadios: function() {\r\n            return module.get.radios().not($module);\r\n          },\r\n          name: function() {\r\n            return $input.attr('name');\r\n          }\r\n        },\r\n\r\n        is: {\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          },\r\n          radio: function() {\r\n            return ($input.hasClass(className.radio) || $input.attr('type') == 'radio');\r\n          },\r\n          indeterminate: function() {\r\n            return $input.prop('indeterminate') !== undefined && $input.prop('indeterminate');\r\n          },\r\n          checked: function() {\r\n            return $input.prop('checked') !== undefined && $input.prop('checked');\r\n          },\r\n          disabled: function() {\r\n            return $input.prop('disabled') !== undefined && $input.prop('disabled');\r\n          },\r\n          enabled: function() {\r\n            return !module.is.disabled();\r\n          },\r\n          determinate: function() {\r\n            return !module.is.indeterminate();\r\n          },\r\n          unchecked: function() {\r\n            return !module.is.checked();\r\n          }\r\n        },\r\n\r\n        should: {\r\n          allowCheck: function() {\r\n            if(module.is.determinate() && module.is.checked() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow check, checkbox is already checked');\r\n              return false;\r\n            }\r\n            if(settings.beforeChecked.apply(input) === false) {\r\n              module.debug('Should not allow check, beforeChecked cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowUncheck: function() {\r\n            if(module.is.determinate() && module.is.unchecked() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow uncheck, checkbox is already unchecked');\r\n              return false;\r\n            }\r\n            if(settings.beforeUnchecked.apply(input) === false) {\r\n              module.debug('Should not allow uncheck, beforeUnchecked cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowIndeterminate: function() {\r\n            if(module.is.indeterminate() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow indeterminate, checkbox is already indeterminate');\r\n              return false;\r\n            }\r\n            if(settings.beforeIndeterminate.apply(input) === false) {\r\n              module.debug('Should not allow indeterminate, beforeIndeterminate cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          allowDeterminate: function() {\r\n            if(module.is.determinate() && !module.should.forceCallbacks() ) {\r\n              module.debug('Should not allow determinate, checkbox is already determinate');\r\n              return false;\r\n            }\r\n            if(settings.beforeDeterminate.apply(input) === false) {\r\n              module.debug('Should not allow determinate, beforeDeterminate cancelled');\r\n              return false;\r\n            }\r\n            return true;\r\n          },\r\n          forceCallbacks: function() {\r\n            return (module.is.initialLoad() && settings.fireOnInit);\r\n          },\r\n          ignoreCallbacks: function() {\r\n            return (initialLoad && !settings.fireOnInit);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          change: function() {\r\n            return !( $module.hasClass(className.disabled) || $module.hasClass(className.readOnly) || $input.prop('disabled') || $input.prop('readonly') );\r\n          },\r\n          uncheck: function() {\r\n            return (typeof settings.uncheckable === 'boolean')\r\n              ? settings.uncheckable\r\n              : !module.is.radio()\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          initialLoad: function() {\r\n            initialLoad = true;\r\n          },\r\n          checked: function() {\r\n            module.verbose('Setting class to checked');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n              .addClass(className.checked)\r\n            ;\r\n            if( module.is.radio() ) {\r\n              module.uncheckOthers();\r\n            }\r\n            if(!module.is.indeterminate() && module.is.checked()) {\r\n              module.debug('Input is already checked, skipping input property change');\r\n              return;\r\n            }\r\n            module.verbose('Setting state to checked', input);\r\n            $input\r\n              .prop('indeterminate', false)\r\n              .prop('checked', true)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          unchecked: function() {\r\n            module.verbose('Removing checked class');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n              .removeClass(className.checked)\r\n            ;\r\n            if(!module.is.indeterminate() &&  module.is.unchecked() ) {\r\n              module.debug('Input is already unchecked');\r\n              return;\r\n            }\r\n            module.debug('Setting state to unchecked');\r\n            $input\r\n              .prop('indeterminate', false)\r\n              .prop('checked', false)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          indeterminate: function() {\r\n            module.verbose('Setting class to indeterminate');\r\n            $module\r\n              .addClass(className.indeterminate)\r\n            ;\r\n            if( module.is.indeterminate() ) {\r\n              module.debug('Input is already indeterminate, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to indeterminate');\r\n            $input\r\n              .prop('indeterminate', true)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          determinate: function() {\r\n            module.verbose('Removing indeterminate class');\r\n            $module\r\n              .removeClass(className.indeterminate)\r\n            ;\r\n            if( module.is.determinate() ) {\r\n              module.debug('Input is already determinate, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to determinate');\r\n            $input\r\n              .prop('indeterminate', false)\r\n            ;\r\n          },\r\n          disabled: function() {\r\n            module.verbose('Setting class to disabled');\r\n            $module\r\n              .addClass(className.disabled)\r\n            ;\r\n            if( module.is.disabled() ) {\r\n              module.debug('Input is already disabled, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to disabled');\r\n            $input\r\n              .prop('disabled', 'disabled')\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          enabled: function() {\r\n            module.verbose('Removing disabled class');\r\n            $module.removeClass(className.disabled);\r\n            if( module.is.enabled() ) {\r\n              module.debug('Input is already enabled, skipping input property change');\r\n              return;\r\n            }\r\n            module.debug('Setting state to enabled');\r\n            $input\r\n              .prop('disabled', false)\r\n            ;\r\n            module.trigger.change();\r\n          },\r\n          tabbable: function() {\r\n            module.verbose('Adding tabindex to checkbox');\r\n            if( $input.attr('tabindex') === undefined) {\r\n              $input.attr('tabindex', 0);\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          }\r\n        },\r\n\r\n        trigger: {\r\n          change: function() {\r\n            var\r\n              events       = document.createEvent('HTMLEvents'),\r\n              inputElement = $input[0]\r\n            ;\r\n            if(inputElement) {\r\n              module.verbose('Triggering native change event');\r\n              events.initEvent('change', true, false);\r\n              inputElement.dispatchEvent(events);\r\n            }\r\n          }\r\n        },\r\n\r\n\r\n        create: {\r\n          label: function() {\r\n            if($input.prevAll(selector.label).length > 0) {\r\n              $input.prev(selector.label).detach().insertAfter($input);\r\n              module.debug('Moving existing label', $label);\r\n            }\r\n            else if( !module.has.label() ) {\r\n              $label = $('<label>').insertAfter($input);\r\n              module.debug('Creating label', $label);\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          label: function() {\r\n            return ($label.length > 0);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Attaching checkbox events');\r\n            $module\r\n              .on('click'   + eventNamespace, module.event.click)\r\n              .on('keydown' + eventNamespace, selector.input, module.event.keydown)\r\n              .on('keyup'   + eventNamespace, selector.input, module.event.keyup)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            module.debug('Removing events');\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        uncheckOthers: function() {\r\n          var\r\n            $radios = module.get.otherRadios()\r\n          ;\r\n          module.debug('Unchecking other radios', $radios);\r\n          $radios.removeClass(className.checked);\r\n        },\r\n\r\n        toggle: function() {\r\n          if( !module.can.change() ) {\r\n            if(!module.is.radio()) {\r\n              module.debug('Checkbox is read-only or disabled, ignoring toggle');\r\n            }\r\n            return;\r\n          }\r\n          if( module.is.indeterminate() || module.is.unchecked() ) {\r\n            module.debug('Currently unchecked');\r\n            module.check();\r\n          }\r\n          else if( module.is.checked() && module.can.uncheck() ) {\r\n            module.debug('Currently checked');\r\n            module.uncheck();\r\n          }\r\n        },\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.checkbox.settings = {\r\n\r\n  name                : 'Checkbox',\r\n  namespace           : 'checkbox',\r\n\r\n  silent              : false,\r\n  debug               : false,\r\n  verbose             : true,\r\n  performance         : true,\r\n\r\n  // delegated event context\r\n  uncheckable         : 'auto',\r\n  fireOnInit          : false,\r\n\r\n  onChange            : function(){},\r\n\r\n  beforeChecked       : function(){},\r\n  beforeUnchecked     : function(){},\r\n  beforeDeterminate   : function(){},\r\n  beforeIndeterminate : function(){},\r\n\r\n  onChecked           : function(){},\r\n  onUnchecked         : function(){},\r\n\r\n  onDeterminate       : function() {},\r\n  onIndeterminate     : function() {},\r\n\r\n  onEnable            : function(){},\r\n  onDisable           : function(){},\r\n\r\n  // preserve misspelled callbacks (will be removed in 3.0)\r\n  onEnabled           : function(){},\r\n  onDisabled          : function(){},\r\n\r\n  className       : {\r\n    checked       : 'checked',\r\n    indeterminate : 'indeterminate',\r\n    disabled      : 'disabled',\r\n    hidden        : 'hidden',\r\n    radio         : 'radio',\r\n    readOnly      : 'read-only'\r\n  },\r\n\r\n  error     : {\r\n    method       : 'The method you called is not defined'\r\n  },\r\n\r\n  selector : {\r\n    checkbox : '.ui.checkbox',\r\n    label    : 'label, .box',\r\n    input    : 'input[type=\"checkbox\"], input[type=\"radio\"]',\r\n    link     : 'a[href]'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Dimmer\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.dimmer = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\r\n          : $.extend({}, $.fn.dimmer.settings),\r\n\r\n        selector        = settings.selector,\r\n        namespace       = settings.namespace,\r\n        className       = settings.className,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n        moduleSelector  = $allModules.selector || '',\r\n\r\n        clickEvent      = ('ontouchstart' in document.documentElement)\r\n          ? 'touchstart'\r\n          : 'click',\r\n\r\n        $module = $(this),\r\n        $dimmer,\r\n        $dimmable,\r\n\r\n        element   = this,\r\n        instance  = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        preinitialize: function() {\r\n          if( module.is.dimmer() ) {\r\n\r\n            $dimmable = $module.parent();\r\n            $dimmer   = $module;\r\n          }\r\n          else {\r\n            $dimmable = $module;\r\n            if( module.has.dimmer() ) {\r\n              if(settings.dimmerName) {\r\n                $dimmer = $dimmable.find(selector.dimmer).filter('.' + settings.dimmerName);\r\n              }\r\n              else {\r\n                $dimmer = $dimmable.find(selector.dimmer);\r\n              }\r\n            }\r\n            else {\r\n              $dimmer = module.create();\r\n            }\r\n            module.set.variation();\r\n          }\r\n        },\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing dimmer', settings);\r\n\r\n          module.bind.events();\r\n          module.set.dimmable();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', $dimmer);\r\n          module.unbind.events();\r\n          module.remove.variation();\r\n          $dimmable\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if(settings.on == 'hover') {\r\n              $dimmable\r\n                .on('mouseenter' + eventNamespace, module.show)\r\n                .on('mouseleave' + eventNamespace, module.hide)\r\n              ;\r\n            }\r\n            else if(settings.on == 'click') {\r\n              $dimmable\r\n                .on(clickEvent + eventNamespace, module.toggle)\r\n              ;\r\n            }\r\n            if( module.is.page() ) {\r\n              module.debug('Setting as a page dimmer', $dimmable);\r\n              module.set.pageDimmer();\r\n            }\r\n\r\n            if( module.is.closable() ) {\r\n              module.verbose('Adding dimmer close event', $dimmer);\r\n              $dimmable\r\n                .on(clickEvent + eventNamespace, selector.dimmer, module.event.click)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            $module\r\n              .removeData(moduleNamespace)\r\n            ;\r\n            $dimmable\r\n              .off(eventNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            module.verbose('Determining if event occured on dimmer', event);\r\n            if( $dimmer.find(event.target).length === 0 || $(event.target).is(selector.content) ) {\r\n              module.hide();\r\n              event.stopImmediatePropagation();\r\n            }\r\n          }\r\n        },\r\n\r\n        addContent: function(element) {\r\n          var\r\n            $content = $(element)\r\n          ;\r\n          module.debug('Add content to dimmer', $content);\r\n          if($content.parent()[0] !== $dimmer[0]) {\r\n            $content.detach().appendTo($dimmer);\r\n          }\r\n        },\r\n\r\n        create: function() {\r\n          var\r\n            $element = $( settings.template.dimmer() )\r\n          ;\r\n          if(settings.dimmerName) {\r\n            module.debug('Creating named dimmer', settings.dimmerName);\r\n            $element.addClass(settings.dimmerName);\r\n          }\r\n          $element\r\n            .appendTo($dimmable)\r\n          ;\r\n          return $element;\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.debug('Showing dimmer', $dimmer, settings);\r\n          if( (!module.is.dimmed() || module.is.animating()) && module.is.enabled() ) {\r\n            module.animate.show(callback);\r\n            settings.onShow.call(element);\r\n            settings.onChange.call(element);\r\n          }\r\n          else {\r\n            module.debug('Dimmer is already shown or disabled');\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.dimmed() || module.is.animating() ) {\r\n            module.debug('Hiding dimmer', $dimmer);\r\n            module.animate.hide(callback);\r\n            settings.onHide.call(element);\r\n            settings.onChange.call(element);\r\n          }\r\n          else {\r\n            module.debug('Dimmer is not visible');\r\n          }\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Toggling dimmer visibility', $dimmer);\r\n          if( !module.is.dimmed() ) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        animate: {\r\n          show: function(callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\r\n              if(settings.opacity !== 'auto') {\r\n                module.set.opacity();\r\n              }\r\n              $dimmer\r\n                .transition({\r\n                  animation   : settings.transition + ' in',\r\n                  queue       : false,\r\n                  duration    : module.get.duration(),\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    module.set.dimmed();\r\n                  },\r\n                  onComplete  : function() {\r\n                    module.set.active();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Showing dimmer animation with javascript');\r\n              module.set.dimmed();\r\n              if(settings.opacity == 'auto') {\r\n                settings.opacity = 0.8;\r\n              }\r\n              $dimmer\r\n                .stop()\r\n                .css({\r\n                  opacity : 0,\r\n                  width   : '100%',\r\n                  height  : '100%'\r\n                })\r\n                .fadeTo(module.get.duration(), settings.opacity, function() {\r\n                  $dimmer.removeAttr('style');\r\n                  module.set.active();\r\n                  callback();\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          hide: function(callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(settings.useCSS && $.fn.transition !== undefined && $dimmer.transition('is supported')) {\r\n              module.verbose('Hiding dimmer with css');\r\n              $dimmer\r\n                .transition({\r\n                  animation   : settings.transition + ' out',\r\n                  queue       : false,\r\n                  duration    : module.get.duration(),\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    module.remove.dimmed();\r\n                  },\r\n                  onComplete  : function() {\r\n                    module.remove.active();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Hiding dimmer with javascript');\r\n              module.remove.dimmed();\r\n              $dimmer\r\n                .stop()\r\n                .fadeOut(module.get.duration(), function() {\r\n                  module.remove.active();\r\n                  $dimmer.removeAttr('style');\r\n                  callback();\r\n                })\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        get: {\r\n          dimmer: function() {\r\n            return $dimmer;\r\n          },\r\n          duration: function() {\r\n            if(typeof settings.duration == 'object') {\r\n              if( module.is.active() ) {\r\n                return settings.duration.hide;\r\n              }\r\n              else {\r\n                return settings.duration.show;\r\n              }\r\n            }\r\n            return settings.duration;\r\n          }\r\n        },\r\n\r\n        has: {\r\n          dimmer: function() {\r\n            if(settings.dimmerName) {\r\n              return ($module.find(selector.dimmer).filter('.' + settings.dimmerName).length > 0);\r\n            }\r\n            else {\r\n              return ( $module.find(selector.dimmer).length > 0 );\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $dimmer.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.animating) );\r\n          },\r\n          closable: function() {\r\n            if(settings.closable == 'auto') {\r\n              if(settings.on == 'hover') {\r\n                return false;\r\n              }\r\n              return true;\r\n            }\r\n            return settings.closable;\r\n          },\r\n          dimmer: function() {\r\n            return $module.hasClass(className.dimmer);\r\n          },\r\n          dimmable: function() {\r\n            return $module.hasClass(className.dimmable);\r\n          },\r\n          dimmed: function() {\r\n            return $dimmable.hasClass(className.dimmed);\r\n          },\r\n          disabled: function() {\r\n            return $dimmable.hasClass(className.disabled);\r\n          },\r\n          enabled: function() {\r\n            return !module.is.disabled();\r\n          },\r\n          page: function () {\r\n            return $dimmable.is('body');\r\n          },\r\n          pageDimmer: function() {\r\n            return $dimmer.hasClass(className.pageDimmer);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          show: function() {\r\n            return !$dimmer.hasClass(className.disabled);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          opacity: function(opacity) {\r\n            var\r\n              color      = $dimmer.css('background-color'),\r\n              colorArray = color.split(','),\r\n              isRGB      = (colorArray && colorArray.length == 3),\r\n              isRGBA     = (colorArray && colorArray.length == 4)\r\n            ;\r\n            opacity    = settings.opacity === 0 ? 0 : settings.opacity || opacity;\r\n            if(isRGB || isRGBA) {\r\n              colorArray[3] = opacity + ')';\r\n              color         = colorArray.join(',');\r\n            }\r\n            else {\r\n              color = 'rgba(0, 0, 0, ' + opacity + ')';\r\n            }\r\n            module.debug('Setting opacity to', opacity);\r\n            $dimmer.css('background-color', color);\r\n          },\r\n          active: function() {\r\n            $dimmer.addClass(className.active);\r\n          },\r\n          dimmable: function() {\r\n            $dimmable.addClass(className.dimmable);\r\n          },\r\n          dimmed: function() {\r\n            $dimmable.addClass(className.dimmed);\r\n          },\r\n          pageDimmer: function() {\r\n            $dimmer.addClass(className.pageDimmer);\r\n          },\r\n          disabled: function() {\r\n            $dimmer.addClass(className.disabled);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || settings.variation;\r\n            if(variation) {\r\n              $dimmer.addClass(variation);\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $dimmer\r\n              .removeClass(className.active)\r\n            ;\r\n          },\r\n          dimmed: function() {\r\n            $dimmable.removeClass(className.dimmed);\r\n          },\r\n          disabled: function() {\r\n            $dimmer.removeClass(className.disabled);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || settings.variation;\r\n            if(variation) {\r\n              $dimmer.removeClass(variation);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      module.preinitialize();\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.dimmer.settings = {\r\n\r\n  name        : 'Dimmer',\r\n  namespace   : 'dimmer',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  // name to distinguish between multiple dimmers in context\r\n  dimmerName  : false,\r\n\r\n  // whether to add a variation type\r\n  variation   : false,\r\n\r\n  // whether to bind close events\r\n  closable    : 'auto',\r\n\r\n  // whether to use css animations\r\n  useCSS      : true,\r\n\r\n  // css animation to use\r\n  transition  : 'fade',\r\n\r\n  // event to bind to\r\n  on          : false,\r\n\r\n  // overriding opacity value\r\n  opacity     : 'auto',\r\n\r\n  // transition durations\r\n  duration    : {\r\n    show : 500,\r\n    hide : 500\r\n  },\r\n\r\n  onChange    : function(){},\r\n  onShow      : function(){},\r\n  onHide      : function(){},\r\n\r\n  error   : {\r\n    method   : 'The method you called is not defined.'\r\n  },\r\n\r\n  className : {\r\n    active     : 'active',\r\n    animating  : 'animating',\r\n    dimmable   : 'dimmable',\r\n    dimmed     : 'dimmed',\r\n    dimmer     : 'dimmer',\r\n    disabled   : 'disabled',\r\n    hide       : 'hide',\r\n    pageDimmer : 'page',\r\n    show       : 'show'\r\n  },\r\n\r\n  selector: {\r\n    dimmer   : '> .ui.dimmer',\r\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\r\n  },\r\n\r\n  template: {\r\n    dimmer: function() {\r\n     return $('<div />').attr('class', 'ui dimmer');\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Dropdown\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.dropdown = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $document      = $(document),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    hasTouch       = ('ontouchstart' in document.documentElement),\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function(elementIndex) {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\r\n          : $.extend({}, $.fn.dropdown.settings),\r\n\r\n        className       = settings.className,\r\n        message         = settings.message,\r\n        fields          = settings.fields,\r\n        keys            = settings.keys,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        regExp          = settings.regExp,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        templates       = settings.templates,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n        $text           = $module.find(selector.text),\r\n        $search         = $module.find(selector.search),\r\n        $sizer          = $module.find(selector.sizer),\r\n        $input          = $module.find(selector.input),\r\n        $icon           = $module.find(selector.icon),\r\n\r\n        $combo = ($module.prev().find(selector.text).length > 0)\r\n          ? $module.prev().find(selector.text)\r\n          : $module.prev(),\r\n\r\n        $menu           = $module.children(selector.menu),\r\n        $item           = $menu.find(selector.item),\r\n\r\n        activated       = false,\r\n        itemActivated   = false,\r\n        internalChange  = false,\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        initialLoad,\r\n        pageLostFocus,\r\n        willRefocus,\r\n        elementNamespace,\r\n        id,\r\n        selectObserver,\r\n        menuObserver,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing dropdown', settings);\r\n\r\n          if( module.is.alreadySetup() ) {\r\n            module.setup.reference();\r\n          }\r\n          else {\r\n            module.setup.layout();\r\n            module.refreshData();\r\n\r\n            module.save.defaults();\r\n            module.restore.selected();\r\n\r\n            module.create.id();\r\n            module.bind.events();\r\n\r\n            module.observeChanges();\r\n            module.instantiate();\r\n          }\r\n\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of dropdown', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous dropdown', $module);\r\n          module.remove.tabbable();\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n          $menu\r\n            .off(eventNamespace)\r\n          ;\r\n          $document\r\n            .off(elementNamespace)\r\n          ;\r\n          module.disconnect.menuObserver();\r\n          module.disconnect.selectObserver();\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            selectObserver = new MutationObserver(module.event.select.mutation);\r\n            menuObserver   = new MutationObserver(module.event.menu.mutation);\r\n            module.debug('Setting up mutation observer', selectObserver, menuObserver);\r\n            module.observe.select();\r\n            module.observe.menu();\r\n          }\r\n        },\r\n\r\n        disconnect: {\r\n          menuObserver: function() {\r\n            if(menuObserver) {\r\n              menuObserver.disconnect();\r\n            }\r\n          },\r\n          selectObserver: function() {\r\n            if(selectObserver) {\r\n              selectObserver.disconnect();\r\n            }\r\n          }\r\n        },\r\n        observe: {\r\n          select: function() {\r\n            if(module.has.input()) {\r\n              selectObserver.observe($input[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          },\r\n          menu: function() {\r\n            if(module.has.menu()) {\r\n              menuObserver.observe($menu[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        create: {\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2, 8);\r\n            elementNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          },\r\n          userChoice: function(values) {\r\n            var\r\n              $userChoices,\r\n              $userChoice,\r\n              isUserValue,\r\n              html\r\n            ;\r\n            values = values || module.get.userValues();\r\n            if(!values) {\r\n              return false;\r\n            }\r\n            values = $.isArray(values)\r\n              ? values\r\n              : [values]\r\n            ;\r\n            $.each(values, function(index, value) {\r\n              if(module.get.item(value) === false) {\r\n                html         = settings.templates.addition( module.add.variables(message.addResult, value) );\r\n                $userChoice  = $('<div />')\r\n                  .html(html)\r\n                  .attr('data-' + metadata.value, value)\r\n                  .attr('data-' + metadata.text, value)\r\n                  .addClass(className.addition)\r\n                  .addClass(className.item)\r\n                ;\r\n                if(settings.hideAdditions) {\r\n                  $userChoice.addClass(className.hidden);\r\n                }\r\n                $userChoices = ($userChoices === undefined)\r\n                  ? $userChoice\r\n                  : $userChoices.add($userChoice)\r\n                ;\r\n                module.verbose('Creating user choices for value', value, $userChoice);\r\n              }\r\n            });\r\n            return $userChoices;\r\n          },\r\n          userLabels: function(value) {\r\n            var\r\n              userValues = module.get.userValues()\r\n            ;\r\n            if(userValues) {\r\n              module.debug('Adding user labels', userValues);\r\n              $.each(userValues, function(index, value) {\r\n                module.verbose('Adding custom user value');\r\n                module.add.label(value, value);\r\n              });\r\n            }\r\n          },\r\n          menu: function() {\r\n            $menu = $('<div />')\r\n              .addClass(className.menu)\r\n              .appendTo($module)\r\n            ;\r\n          },\r\n          sizer: function() {\r\n            $sizer = $('<span />')\r\n              .addClass(className.sizer)\r\n              .insertAfter($search)\r\n            ;\r\n          }\r\n        },\r\n\r\n        search: function(query) {\r\n          query = (query !== undefined)\r\n            ? query\r\n            : module.get.query()\r\n          ;\r\n          module.verbose('Searching for query', query);\r\n          if(module.has.minCharacters(query)) {\r\n            module.filter(query);\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        select: {\r\n          firstUnfiltered: function() {\r\n            module.verbose('Selecting first non-filtered element');\r\n            module.remove.selectedItem();\r\n            $item\r\n              .not(selector.unselectable)\r\n              .not(selector.addition + selector.hidden)\r\n                .eq(0)\r\n                .addClass(className.selected)\r\n            ;\r\n          },\r\n          nextAvailable: function($selected) {\r\n            $selected = $selected.eq(0);\r\n            var\r\n              $nextAvailable = $selected.nextAll(selector.item).not(selector.unselectable).eq(0),\r\n              $prevAvailable = $selected.prevAll(selector.item).not(selector.unselectable).eq(0),\r\n              hasNext        = ($nextAvailable.length > 0)\r\n            ;\r\n            if(hasNext) {\r\n              module.verbose('Moving selection to', $nextAvailable);\r\n              $nextAvailable.addClass(className.selected);\r\n            }\r\n            else {\r\n              module.verbose('Moving selection to', $prevAvailable);\r\n              $prevAvailable.addClass(className.selected);\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          api: function() {\r\n            var\r\n              apiSettings = {\r\n                debug   : settings.debug,\r\n                urlData : {\r\n                  value : module.get.value(),\r\n                  query : module.get.query()\r\n                },\r\n                on    : false\r\n              }\r\n            ;\r\n            module.verbose('First request, initializing API');\r\n            $module\r\n              .api(apiSettings)\r\n            ;\r\n          },\r\n          layout: function() {\r\n            if( $module.is('select') ) {\r\n              module.setup.select();\r\n              module.setup.returnedObject();\r\n            }\r\n            if( !module.has.menu() ) {\r\n              module.create.menu();\r\n            }\r\n            if( module.is.search() && !module.has.search() ) {\r\n              module.verbose('Adding search input');\r\n              $search = $('<input />')\r\n                .addClass(className.search)\r\n                .prop('autocomplete', 'off')\r\n                .insertBefore($text)\r\n              ;\r\n            }\r\n            if( module.is.multiple() && module.is.searchSelection() && !module.has.sizer()) {\r\n              module.create.sizer();\r\n            }\r\n            if(settings.allowTab) {\r\n              module.set.tabbable();\r\n            }\r\n          },\r\n          select: function() {\r\n            var\r\n              selectValues  = module.get.selectValues()\r\n            ;\r\n            module.debug('Dropdown initialized on a select', selectValues);\r\n            if( $module.is('select') ) {\r\n              $input = $module;\r\n            }\r\n            // see if select is placed correctly already\r\n            if($input.parent(selector.dropdown).length > 0) {\r\n              module.debug('UI dropdown already exists. Creating dropdown menu only');\r\n              $module = $input.closest(selector.dropdown);\r\n              if( !module.has.menu() ) {\r\n                module.create.menu();\r\n              }\r\n              $menu = $module.children(selector.menu);\r\n              module.setup.menu(selectValues);\r\n            }\r\n            else {\r\n              module.debug('Creating entire dropdown from select');\r\n              $module = $('<div />')\r\n                .attr('class', $input.attr('class') )\r\n                .addClass(className.selection)\r\n                .addClass(className.dropdown)\r\n                .html( templates.dropdown(selectValues) )\r\n                .insertBefore($input)\r\n              ;\r\n              if($input.hasClass(className.multiple) && $input.prop('multiple') === false) {\r\n                module.error(error.missingMultiple);\r\n                $input.prop('multiple', true);\r\n              }\r\n              if($input.is('[multiple]')) {\r\n                module.set.multiple();\r\n              }\r\n              if ($input.prop('disabled')) {\r\n                module.debug('Disabling dropdown');\r\n                $module.addClass(className.disabled);\r\n              }\r\n              $input\r\n                .removeAttr('class')\r\n                .detach()\r\n                .prependTo($module)\r\n              ;\r\n            }\r\n            module.refresh();\r\n          },\r\n          menu: function(values) {\r\n            $menu.html( templates.menu(values, fields));\r\n            $item = $menu.find(selector.item);\r\n          },\r\n          reference: function() {\r\n            module.debug('Dropdown behavior was called on select, replacing with closest dropdown');\r\n            // replace module reference\r\n            $module = $module.parent(selector.dropdown);\r\n            module.refresh();\r\n            module.setup.returnedObject();\r\n            // invoke method in context of current instance\r\n            if(methodInvoked) {\r\n              instance = module;\r\n              module.invoke(query);\r\n            }\r\n          },\r\n          returnedObject: function() {\r\n            var\r\n              $firstModules = $allModules.slice(0, elementIndex),\r\n              $lastModules = $allModules.slice(elementIndex + 1)\r\n            ;\r\n            // adjust all modules to use correct reference\r\n            $allModules = $firstModules.add($module).add($lastModules);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.refreshSelectors();\r\n          module.refreshData();\r\n        },\r\n\r\n        refreshItems: function() {\r\n          $item = $menu.find(selector.item);\r\n        },\r\n\r\n        refreshSelectors: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $text   = $module.find(selector.text);\r\n          $search = $module.find(selector.search);\r\n          $input  = $module.find(selector.input);\r\n          $icon   = $module.find(selector.icon);\r\n          $combo  = ($module.prev().find(selector.text).length > 0)\r\n            ? $module.prev().find(selector.text)\r\n            : $module.prev()\r\n          ;\r\n          $menu    = $module.children(selector.menu);\r\n          $item    = $menu.find(selector.item);\r\n        },\r\n\r\n        refreshData: function() {\r\n          module.verbose('Refreshing cached metadata');\r\n          $item\r\n            .removeData(metadata.text)\r\n            .removeData(metadata.value)\r\n          ;\r\n        },\r\n\r\n        clearData: function() {\r\n          module.verbose('Clearing metadata');\r\n          $item\r\n            .removeData(metadata.text)\r\n            .removeData(metadata.value)\r\n          ;\r\n          $module\r\n            .removeData(metadata.defaultText)\r\n            .removeData(metadata.defaultValue)\r\n            .removeData(metadata.placeholderText)\r\n          ;\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Toggling menu visibility');\r\n          if( !module.is.active() ) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(!module.can.show() && module.is.remote()) {\r\n            module.debug('No API results retrieved, searching before show');\r\n            module.queryRemote(module.get.query(), module.show);\r\n          }\r\n          if( module.can.show() && !module.is.active() ) {\r\n            module.debug('Showing dropdown');\r\n            if(module.has.message() && !(module.has.maxSelections() || module.has.allResultsFiltered()) ) {\r\n              module.remove.message();\r\n            }\r\n            if(module.is.allFiltered()) {\r\n              return true;\r\n            }\r\n            if(settings.onShow.call(element) !== false) {\r\n              module.animate.show(function() {\r\n                if( module.can.click() ) {\r\n                  module.bind.intent();\r\n                }\r\n                if(module.has.menuSearch()) {\r\n                  module.focusSearch();\r\n                }\r\n                module.set.visible();\r\n                callback.call(element);\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.active() ) {\r\n            module.debug('Hiding dropdown');\r\n            if(settings.onHide.call(element) !== false) {\r\n              module.animate.hide(function() {\r\n                module.remove.visible();\r\n                callback.call(element);\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        hideOthers: function() {\r\n          module.verbose('Finding other dropdowns to hide');\r\n          $allModules\r\n            .not($module)\r\n              .has(selector.menu + '.' + className.visible)\r\n                .dropdown('hide')\r\n          ;\r\n        },\r\n\r\n        hideMenu: function() {\r\n          module.verbose('Hiding menu  instantaneously');\r\n          module.remove.active();\r\n          module.remove.visible();\r\n          $menu.transition('hide');\r\n        },\r\n\r\n        hideSubMenus: function() {\r\n          var\r\n            $subMenus = $menu.children(selector.item).find(selector.menu)\r\n          ;\r\n          module.verbose('Hiding sub menus', $subMenus);\r\n          $subMenus.transition('hide');\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if(hasTouch) {\r\n              module.bind.touchEvents();\r\n            }\r\n            module.bind.keyboardEvents();\r\n            module.bind.inputEvents();\r\n            module.bind.mouseEvents();\r\n          },\r\n          touchEvents: function() {\r\n            module.debug('Touch device detected binding additional touch events');\r\n            if( module.is.searchSelection() ) {\r\n              // do nothing special yet\r\n            }\r\n            else if( module.is.single() ) {\r\n              $module\r\n                .on('touchstart' + eventNamespace, module.event.test.toggle)\r\n              ;\r\n            }\r\n            $menu\r\n              .on('touchstart' + eventNamespace, selector.item, module.event.item.mouseenter)\r\n            ;\r\n          },\r\n          keyboardEvents: function() {\r\n            module.verbose('Binding keyboard events');\r\n            $module\r\n              .on('keydown' + eventNamespace, module.event.keydown)\r\n            ;\r\n            if( module.has.search() ) {\r\n              $module\r\n                .on(module.get.inputEvent() + eventNamespace, selector.search, module.event.input)\r\n              ;\r\n            }\r\n            if( module.is.multiple() ) {\r\n              $document\r\n                .on('keydown' + elementNamespace, module.event.document.keydown)\r\n              ;\r\n            }\r\n          },\r\n          inputEvents: function() {\r\n            module.verbose('Binding input change events');\r\n            $module\r\n              .on('change' + eventNamespace, selector.input, module.event.change)\r\n            ;\r\n          },\r\n          mouseEvents: function() {\r\n            module.verbose('Binding mouse events');\r\n            if(module.is.multiple()) {\r\n              $module\r\n                .on('click'   + eventNamespace, selector.label,  module.event.label.click)\r\n                .on('click'   + eventNamespace, selector.remove, module.event.remove.click)\r\n              ;\r\n            }\r\n            if( module.is.searchSelection() ) {\r\n              $module\r\n                .on('mousedown' + eventNamespace, module.event.mousedown)\r\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\r\n                .on('mousedown' + eventNamespace, selector.menu,   module.event.menu.mousedown)\r\n                .on('mouseup'   + eventNamespace, selector.menu,   module.event.menu.mouseup)\r\n                .on('click'     + eventNamespace, selector.icon,   module.event.icon.click)\r\n                .on('focus'     + eventNamespace, selector.search, module.event.search.focus)\r\n                .on('click'     + eventNamespace, selector.search, module.event.search.focus)\r\n                .on('blur'      + eventNamespace, selector.search, module.event.search.blur)\r\n                .on('click'     + eventNamespace, selector.text,   module.event.text.focus)\r\n              ;\r\n              if(module.is.multiple()) {\r\n                $module\r\n                  .on('click' + eventNamespace, module.event.click)\r\n                ;\r\n              }\r\n            }\r\n            else {\r\n              if(settings.on == 'click') {\r\n                $module\r\n                  .on('click' + eventNamespace, selector.icon, module.event.icon.click)\r\n                  .on('click' + eventNamespace, module.event.test.toggle)\r\n                ;\r\n              }\r\n              else if(settings.on == 'hover') {\r\n                $module\r\n                  .on('mouseenter' + eventNamespace, module.delay.show)\r\n                  .on('mouseleave' + eventNamespace, module.delay.hide)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .on(settings.on + eventNamespace, module.toggle)\r\n                ;\r\n              }\r\n              $module\r\n                .on('mousedown' + eventNamespace, module.event.mousedown)\r\n                .on('mouseup'   + eventNamespace, module.event.mouseup)\r\n                .on('focus'     + eventNamespace, module.event.focus)\r\n              ;\r\n              if(module.has.menuSearch() ) {\r\n                $module\r\n                  .on('blur' + eventNamespace, selector.search, module.event.search.blur)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .on('blur' + eventNamespace, module.event.blur)\r\n                ;\r\n              }\r\n            }\r\n            $menu\r\n              .on('mouseenter' + eventNamespace, selector.item, module.event.item.mouseenter)\r\n              .on('mouseleave' + eventNamespace, selector.item, module.event.item.mouseleave)\r\n              .on('click'      + eventNamespace, selector.item, module.event.item.click)\r\n            ;\r\n          },\r\n          intent: function() {\r\n            module.verbose('Binding hide intent event to document');\r\n            if(hasTouch) {\r\n              $document\r\n                .on('touchstart' + elementNamespace, module.event.test.touch)\r\n                .on('touchmove'  + elementNamespace, module.event.test.touch)\r\n              ;\r\n            }\r\n            $document\r\n              .on('click' + elementNamespace, module.event.test.hide)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          intent: function() {\r\n            module.verbose('Removing hide intent event from document');\r\n            if(hasTouch) {\r\n              $document\r\n                .off('touchstart' + elementNamespace)\r\n                .off('touchmove' + elementNamespace)\r\n              ;\r\n            }\r\n            $document\r\n              .off('click' + elementNamespace)\r\n            ;\r\n          }\r\n        },\r\n\r\n        filter: function(query) {\r\n          var\r\n            searchTerm = (query !== undefined)\r\n              ? query\r\n              : module.get.query(),\r\n            afterFiltered = function() {\r\n              if(module.is.multiple()) {\r\n                module.filterActive();\r\n              }\r\n              module.select.firstUnfiltered();\r\n              if( module.has.allResultsFiltered() ) {\r\n                if( settings.onNoResults.call(element, searchTerm) ) {\r\n                  if(settings.allowAdditions) {\r\n                    if(settings.hideAdditions) {\r\n                      module.verbose('User addition with no menu, setting empty style');\r\n                      module.set.empty();\r\n                      module.hideMenu();\r\n                    }\r\n                  }\r\n                  else {\r\n                    module.verbose('All items filtered, showing message', searchTerm);\r\n                    module.add.message(message.noResults);\r\n                  }\r\n                }\r\n                else {\r\n                  module.verbose('All items filtered, hiding dropdown', searchTerm);\r\n                  module.hideMenu();\r\n                }\r\n              }\r\n              else {\r\n                module.remove.empty();\r\n                module.remove.message();\r\n              }\r\n              if(settings.allowAdditions) {\r\n                module.add.userSuggestion(query);\r\n              }\r\n              if(module.is.searchSelection() && module.can.show() && module.is.focusedOnSearch() ) {\r\n                module.show();\r\n              }\r\n            }\r\n          ;\r\n          if(settings.useLabels && module.has.maxSelections()) {\r\n            return;\r\n          }\r\n          if(settings.apiSettings) {\r\n            if( module.can.useAPI() ) {\r\n              module.queryRemote(searchTerm, function() {\r\n                if(settings.filterRemoteData) {\r\n                  module.filterItems(searchTerm);\r\n                }\r\n                afterFiltered();\r\n              });\r\n            }\r\n            else {\r\n              module.error(error.noAPI);\r\n            }\r\n          }\r\n          else {\r\n            module.filterItems(searchTerm);\r\n            afterFiltered();\r\n          }\r\n        },\r\n\r\n        queryRemote: function(query, callback) {\r\n          var\r\n            apiSettings = {\r\n              errorDuration : false,\r\n              cache         : 'local',\r\n              throttle      : settings.throttle,\r\n              urlData       : {\r\n                query: query\r\n              },\r\n              onError: function() {\r\n                module.add.message(message.serverError);\r\n                callback();\r\n              },\r\n              onFailure: function() {\r\n                module.add.message(message.serverError);\r\n                callback();\r\n              },\r\n              onSuccess : function(response) {\r\n                module.remove.message();\r\n                module.setup.menu({\r\n                  values: response[fields.remoteValues]\r\n                });\r\n                callback();\r\n              }\r\n            }\r\n          ;\r\n          if( !$module.api('get request') ) {\r\n            module.setup.api();\r\n          }\r\n          apiSettings = $.extend(true, {}, apiSettings, settings.apiSettings);\r\n          $module\r\n            .api('setting', apiSettings)\r\n            .api('query')\r\n          ;\r\n        },\r\n\r\n        filterItems: function(query) {\r\n          var\r\n            searchTerm = (query !== undefined)\r\n              ? query\r\n              : module.get.query(),\r\n            results          =  null,\r\n            escapedTerm      = module.escape.string(searchTerm),\r\n            beginsWithRegExp = new RegExp('^' + escapedTerm, 'igm')\r\n          ;\r\n          // avoid loop if we're matching nothing\r\n          if( module.has.query() ) {\r\n            results = [];\r\n\r\n            module.verbose('Searching for matching values', searchTerm);\r\n            $item\r\n              .each(function(){\r\n                var\r\n                  $choice = $(this),\r\n                  text,\r\n                  value\r\n                ;\r\n                if(settings.match == 'both' || settings.match == 'text') {\r\n                  text = String(module.get.choiceText($choice, false));\r\n                  if(text.search(beginsWithRegExp) !== -1) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, text)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, text)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                }\r\n                if(settings.match == 'both' || settings.match == 'value') {\r\n                  value = String(module.get.choiceValue($choice, text));\r\n                  if(value.search(beginsWithRegExp) !== -1) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === 'exact' && module.exactSearch(searchTerm, value)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                  else if (settings.fullTextSearch === true && module.fuzzySearch(searchTerm, value)) {\r\n                    results.push(this);\r\n                    return true;\r\n                  }\r\n                }\r\n              })\r\n            ;\r\n          }\r\n          module.debug('Showing only matched items', searchTerm);\r\n          module.remove.filteredItem();\r\n          if(results) {\r\n            $item\r\n              .not(results)\r\n              .addClass(className.filtered)\r\n            ;\r\n          }\r\n        },\r\n\r\n        fuzzySearch: function(query, term) {\r\n          var\r\n            termLength  = term.length,\r\n            queryLength = query.length\r\n          ;\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(queryLength > termLength) {\r\n            return false;\r\n          }\r\n          if(queryLength === termLength) {\r\n            return (query === term);\r\n          }\r\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\r\n            var\r\n              queryCharacter = query.charCodeAt(characterIndex)\r\n            ;\r\n            while(nextCharacterIndex < termLength) {\r\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\r\n                continue search;\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n        exactSearch: function (query, term) {\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(term.indexOf(query) > -1) {\r\n             return true;\r\n          }\r\n          return false;\r\n        },\r\n        filterActive: function() {\r\n          if(settings.useLabels) {\r\n            $item.filter('.' + className.active)\r\n              .addClass(className.filtered)\r\n            ;\r\n          }\r\n        },\r\n\r\n        focusSearch: function(skipHandler) {\r\n          if( module.has.search() && !module.is.focusedOnSearch() ) {\r\n            if(skipHandler) {\r\n              $module.off('focus' + eventNamespace, selector.search);\r\n              $search.focus();\r\n              $module.on('focus'  + eventNamespace, selector.search, module.event.search.focus);\r\n            }\r\n            else {\r\n              $search.focus();\r\n            }\r\n          }\r\n        },\r\n\r\n        forceSelection: function() {\r\n          var\r\n            $currentlySelected = $item.not(className.filtered).filter('.' + className.selected).eq(0),\r\n            $activeItem        = $item.not(className.filtered).filter('.' + className.active).eq(0),\r\n            $selectedItem      = ($currentlySelected.length > 0)\r\n              ? $currentlySelected\r\n              : $activeItem,\r\n            hasSelected = ($selectedItem.length > 0)\r\n          ;\r\n          if(hasSelected && !module.is.multiple()) {\r\n            module.debug('Forcing partial selection to selected item', $selectedItem);\r\n            module.event.item.click.call($selectedItem, {}, true);\r\n            return;\r\n          }\r\n          else {\r\n            if(settings.allowAdditions) {\r\n              module.set.selected(module.get.query());\r\n              module.remove.searchTerm();\r\n            }\r\n            else {\r\n              module.remove.searchTerm();\r\n            }\r\n          }\r\n        },\r\n\r\n        event: {\r\n          change: function() {\r\n            if(!internalChange) {\r\n              module.debug('Input changed, updating selection');\r\n              module.set.selected();\r\n            }\r\n          },\r\n          focus: function() {\r\n            if(settings.showOnFocus && !activated && module.is.hidden() && !pageLostFocus) {\r\n              module.show();\r\n            }\r\n          },\r\n          blur: function(event) {\r\n            pageLostFocus = (document.activeElement === this);\r\n            if(!activated && !pageLostFocus) {\r\n              module.remove.activeLabel();\r\n              module.hide();\r\n            }\r\n          },\r\n          mousedown: function() {\r\n            if(module.is.searchSelection()) {\r\n              // prevent menu hiding on immediate re-focus\r\n              willRefocus = true;\r\n            }\r\n            else {\r\n              // prevents focus callback from occurring on mousedown\r\n              activated = true;\r\n            }\r\n          },\r\n          mouseup: function() {\r\n            if(module.is.searchSelection()) {\r\n              // prevent menu hiding on immediate re-focus\r\n              willRefocus = false;\r\n            }\r\n            else {\r\n              activated = false;\r\n            }\r\n          },\r\n          click: function(event) {\r\n            var\r\n              $target = $(event.target)\r\n            ;\r\n            // focus search\r\n            if($target.is($module)) {\r\n              if(!module.is.focusedOnSearch()) {\r\n                module.focusSearch();\r\n              }\r\n              else {\r\n                module.show();\r\n              }\r\n            }\r\n          },\r\n          search: {\r\n            focus: function() {\r\n              activated = true;\r\n              if(module.is.multiple()) {\r\n                module.remove.activeLabel();\r\n              }\r\n              if(settings.showOnFocus) {\r\n                module.search();\r\n              }\r\n            },\r\n            blur: function(event) {\r\n              pageLostFocus = (document.activeElement === this);\r\n              if(module.is.searchSelection() && !willRefocus) {\r\n                if(!itemActivated && !pageLostFocus) {\r\n                  if(settings.forceSelection) {\r\n                    module.forceSelection();\r\n                  }\r\n                  module.hide();\r\n                }\r\n              }\r\n              willRefocus = false;\r\n            }\r\n          },\r\n          icon: {\r\n            click: function(event) {\r\n              module.toggle();\r\n            }\r\n          },\r\n          text: {\r\n            focus: function(event) {\r\n              activated = true;\r\n              module.focusSearch();\r\n            }\r\n          },\r\n          input: function(event) {\r\n            if(module.is.multiple() || module.is.searchSelection()) {\r\n              module.set.filtered();\r\n            }\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.search, settings.delay.search);\r\n          },\r\n          label: {\r\n            click: function(event) {\r\n              var\r\n                $label        = $(this),\r\n                $labels       = $module.find(selector.label),\r\n                $activeLabels = $labels.filter('.' + className.active),\r\n                $nextActive   = $label.nextAll('.' + className.active),\r\n                $prevActive   = $label.prevAll('.' + className.active),\r\n                $range = ($nextActive.length > 0)\r\n                  ? $label.nextUntil($nextActive).add($activeLabels).add($label)\r\n                  : $label.prevUntil($prevActive).add($activeLabels).add($label)\r\n              ;\r\n              if(event.shiftKey) {\r\n                $activeLabels.removeClass(className.active);\r\n                $range.addClass(className.active);\r\n              }\r\n              else if(event.ctrlKey) {\r\n                $label.toggleClass(className.active);\r\n              }\r\n              else {\r\n                $activeLabels.removeClass(className.active);\r\n                $label.addClass(className.active);\r\n              }\r\n              settings.onLabelSelect.apply(this, $labels.filter('.' + className.active));\r\n            }\r\n          },\r\n          remove: {\r\n            click: function() {\r\n              var\r\n                $label = $(this).parent()\r\n              ;\r\n              if( $label.hasClass(className.active) ) {\r\n                // remove all selected labels\r\n                module.remove.activeLabels();\r\n              }\r\n              else {\r\n                // remove this label only\r\n                module.remove.activeLabels( $label );\r\n              }\r\n            }\r\n          },\r\n          test: {\r\n            toggle: function(event) {\r\n              var\r\n                toggleBehavior = (module.is.multiple())\r\n                  ? module.show\r\n                  : module.toggle\r\n              ;\r\n              if(module.is.bubbledLabelClick(event) || module.is.bubbledIconClick(event)) {\r\n                return;\r\n              }\r\n              if( module.determine.eventOnElement(event, toggleBehavior) ) {\r\n                event.preventDefault();\r\n              }\r\n            },\r\n            touch: function(event) {\r\n              module.determine.eventOnElement(event, function() {\r\n                if(event.type == 'touchstart') {\r\n                  module.timer = setTimeout(function() {\r\n                    module.hide();\r\n                  }, settings.delay.touch);\r\n                }\r\n                else if(event.type == 'touchmove') {\r\n                  clearTimeout(module.timer);\r\n                }\r\n              });\r\n              event.stopPropagation();\r\n            },\r\n            hide: function(event) {\r\n              module.determine.eventInModule(event, module.hide);\r\n            }\r\n          },\r\n          select: {\r\n            mutation: function(mutations) {\r\n              module.debug('<select> modified, recreating menu');\r\n              module.setup.select();\r\n            }\r\n          },\r\n          menu: {\r\n            mutation: function(mutations) {\r\n              var\r\n                mutation   = mutations[0],\r\n                $addedNode = mutation.addedNodes\r\n                  ? $(mutation.addedNodes[0])\r\n                  : $(false),\r\n                $removedNode = mutation.removedNodes\r\n                  ? $(mutation.removedNodes[0])\r\n                  : $(false),\r\n                $changedNodes  = $addedNode.add($removedNode),\r\n                isUserAddition = $changedNodes.is(selector.addition) || $changedNodes.closest(selector.addition).length > 0,\r\n                isMessage      = $changedNodes.is(selector.message)  || $changedNodes.closest(selector.message).length > 0\r\n              ;\r\n              if(isUserAddition || isMessage) {\r\n                module.debug('Updating item selector cache');\r\n                module.refreshItems();\r\n              }\r\n              else {\r\n                module.debug('Menu modified, updating selector cache');\r\n                module.refresh();\r\n              }\r\n            },\r\n            mousedown: function() {\r\n              itemActivated = true;\r\n            },\r\n            mouseup: function() {\r\n              itemActivated = false;\r\n            }\r\n          },\r\n          item: {\r\n            mouseenter: function(event) {\r\n              var\r\n                $target        = $(event.target),\r\n                $item          = $(this),\r\n                $subMenu       = $item.children(selector.menu),\r\n                $otherMenus    = $item.siblings(selector.item).children(selector.menu),\r\n                hasSubMenu     = ($subMenu.length > 0),\r\n                isBubbledEvent = ($subMenu.find($target).length > 0)\r\n              ;\r\n              if( !isBubbledEvent && hasSubMenu ) {\r\n                clearTimeout(module.itemTimer);\r\n                module.itemTimer = setTimeout(function() {\r\n                  module.verbose('Showing sub-menu', $subMenu);\r\n                  $.each($otherMenus, function() {\r\n                    module.animate.hide(false, $(this));\r\n                  });\r\n                  module.animate.show(false, $subMenu);\r\n                }, settings.delay.show);\r\n                event.preventDefault();\r\n              }\r\n            },\r\n            mouseleave: function(event) {\r\n              var\r\n                $subMenu = $(this).children(selector.menu)\r\n              ;\r\n              if($subMenu.length > 0) {\r\n                clearTimeout(module.itemTimer);\r\n                module.itemTimer = setTimeout(function() {\r\n                  module.verbose('Hiding sub-menu', $subMenu);\r\n                  module.animate.hide(false, $subMenu);\r\n                }, settings.delay.hide);\r\n              }\r\n            },\r\n            click: function (event, skipRefocus) {\r\n              var\r\n                $choice        = $(this),\r\n                $target        = (event)\r\n                  ? $(event.target)\r\n                  : $(''),\r\n                $subMenu       = $choice.find(selector.menu),\r\n                text           = module.get.choiceText($choice),\r\n                value          = module.get.choiceValue($choice, text),\r\n                hasSubMenu     = ($subMenu.length > 0),\r\n                isBubbledEvent = ($subMenu.find($target).length > 0)\r\n              ;\r\n              // prevents IE11 bug where menu receives focus even though `tabindex=-1`\r\n              if(module.has.menuSearch()) {\r\n                $(document.activeElement).blur();\r\n              }\r\n              if(!isBubbledEvent && (!hasSubMenu || settings.allowCategorySelection)) {\r\n                if(module.is.searchSelection()) {\r\n                  if(settings.allowAdditions) {\r\n                    module.remove.userAddition();\r\n                  }\r\n                  module.remove.searchTerm();\r\n                  if(!module.is.focusedOnSearch() && !(skipRefocus == true)) {\r\n                    module.focusSearch(true);\r\n                  }\r\n                }\r\n                if(!settings.useLabels) {\r\n                  module.remove.filteredItem();\r\n                  module.set.scrollPosition($choice);\r\n                }\r\n                module.determine.selectAction.call(this, text, value);\r\n              }\r\n            }\r\n          },\r\n\r\n          document: {\r\n            // label selection should occur even when element has no focus\r\n            keydown: function(event) {\r\n              var\r\n                pressedKey    = event.which,\r\n                isShortcutKey = module.is.inObject(pressedKey, keys)\r\n              ;\r\n              if(isShortcutKey) {\r\n                var\r\n                  $label            = $module.find(selector.label),\r\n                  $activeLabel      = $label.filter('.' + className.active),\r\n                  activeValue       = $activeLabel.data(metadata.value),\r\n                  labelIndex        = $label.index($activeLabel),\r\n                  labelCount        = $label.length,\r\n                  hasActiveLabel    = ($activeLabel.length > 0),\r\n                  hasMultipleActive = ($activeLabel.length > 1),\r\n                  isFirstLabel      = (labelIndex === 0),\r\n                  isLastLabel       = (labelIndex + 1 == labelCount),\r\n                  isSearch          = module.is.searchSelection(),\r\n                  isFocusedOnSearch = module.is.focusedOnSearch(),\r\n                  isFocused         = module.is.focused(),\r\n                  caretAtStart      = (isFocusedOnSearch && module.get.caretPosition() === 0),\r\n                  $nextLabel\r\n                ;\r\n                if(isSearch && !hasActiveLabel && !isFocusedOnSearch) {\r\n                  return;\r\n                }\r\n\r\n                if(pressedKey == keys.leftArrow) {\r\n                  // activate previous label\r\n                  if((isFocused || caretAtStart) && !hasActiveLabel) {\r\n                    module.verbose('Selecting previous label');\r\n                    $label.last().addClass(className.active);\r\n                  }\r\n                  else if(hasActiveLabel) {\r\n                    if(!event.shiftKey) {\r\n                      module.verbose('Selecting previous label');\r\n                      $label.removeClass(className.active);\r\n                    }\r\n                    else {\r\n                      module.verbose('Adding previous label to selection');\r\n                    }\r\n                    if(isFirstLabel && !hasMultipleActive) {\r\n                      $activeLabel.addClass(className.active);\r\n                    }\r\n                    else {\r\n                      $activeLabel.prev(selector.siblingLabel)\r\n                        .addClass(className.active)\r\n                        .end()\r\n                      ;\r\n                    }\r\n                    event.preventDefault();\r\n                  }\r\n                }\r\n                else if(pressedKey == keys.rightArrow) {\r\n                  // activate first label\r\n                  if(isFocused && !hasActiveLabel) {\r\n                    $label.first().addClass(className.active);\r\n                  }\r\n                  // activate next label\r\n                  if(hasActiveLabel) {\r\n                    if(!event.shiftKey) {\r\n                      module.verbose('Selecting next label');\r\n                      $label.removeClass(className.active);\r\n                    }\r\n                    else {\r\n                      module.verbose('Adding next label to selection');\r\n                    }\r\n                    if(isLastLabel) {\r\n                      if(isSearch) {\r\n                        if(!isFocusedOnSearch) {\r\n                          module.focusSearch();\r\n                        }\r\n                        else {\r\n                          $label.removeClass(className.active);\r\n                        }\r\n                      }\r\n                      else if(hasMultipleActive) {\r\n                        $activeLabel.next(selector.siblingLabel).addClass(className.active);\r\n                      }\r\n                      else {\r\n                        $activeLabel.addClass(className.active);\r\n                      }\r\n                    }\r\n                    else {\r\n                      $activeLabel.next(selector.siblingLabel).addClass(className.active);\r\n                    }\r\n                    event.preventDefault();\r\n                  }\r\n                }\r\n                else if(pressedKey == keys.deleteKey || pressedKey == keys.backspace) {\r\n                  if(hasActiveLabel) {\r\n                    module.verbose('Removing active labels');\r\n                    if(isLastLabel) {\r\n                      if(isSearch && !isFocusedOnSearch) {\r\n                        module.focusSearch();\r\n                      }\r\n                    }\r\n                    $activeLabel.last().next(selector.siblingLabel).addClass(className.active);\r\n                    module.remove.activeLabels($activeLabel);\r\n                    event.preventDefault();\r\n                  }\r\n                  else if(caretAtStart && !hasActiveLabel && pressedKey == keys.backspace) {\r\n                    module.verbose('Removing last label on input backspace');\r\n                    $activeLabel = $label.last().addClass(className.active);\r\n                    module.remove.activeLabels($activeLabel);\r\n                  }\r\n                }\r\n                else {\r\n                  $activeLabel.removeClass(className.active);\r\n                }\r\n              }\r\n            }\r\n          },\r\n\r\n          keydown: function(event) {\r\n            var\r\n              pressedKey    = event.which,\r\n              isShortcutKey = module.is.inObject(pressedKey, keys)\r\n            ;\r\n            if(isShortcutKey) {\r\n              var\r\n                $currentlySelected = $item.not(selector.unselectable).filter('.' + className.selected).eq(0),\r\n                $activeItem        = $menu.children('.' + className.active).eq(0),\r\n                $selectedItem      = ($currentlySelected.length > 0)\r\n                  ? $currentlySelected\r\n                  : $activeItem,\r\n                $visibleItems = ($selectedItem.length > 0)\r\n                  ? $selectedItem.siblings(':not(.' + className.filtered +')').addBack()\r\n                  : $menu.children(':not(.' + className.filtered +')'),\r\n                $subMenu              = $selectedItem.children(selector.menu),\r\n                $parentMenu           = $selectedItem.closest(selector.menu),\r\n                inVisibleMenu         = ($parentMenu.hasClass(className.visible) || $parentMenu.hasClass(className.animating) || $parentMenu.parent(selector.menu).length > 0),\r\n                hasSubMenu            = ($subMenu.length> 0),\r\n                hasSelectedItem       = ($selectedItem.length > 0),\r\n                selectedIsSelectable  = ($selectedItem.not(selector.unselectable).length > 0),\r\n                delimiterPressed      = (pressedKey == keys.delimiter && settings.allowAdditions && module.is.multiple()),\r\n                isAdditionWithoutMenu = (settings.allowAdditions && settings.hideAdditions && (pressedKey == keys.enter || delimiterPressed) && selectedIsSelectable),\r\n                $nextItem,\r\n                isSubMenuItem,\r\n                newIndex\r\n              ;\r\n              // allow selection with menu closed\r\n              if(isAdditionWithoutMenu) {\r\n                module.verbose('Selecting item from keyboard shortcut', $selectedItem);\r\n                module.event.item.click.call($selectedItem, event);\r\n                if(module.is.searchSelection()) {\r\n                  module.remove.searchTerm();\r\n                }\r\n              }\r\n\r\n              // visible menu keyboard shortcuts\r\n              if( module.is.visible() ) {\r\n\r\n                // enter (select or open sub-menu)\r\n                if(pressedKey == keys.enter || delimiterPressed) {\r\n                  if(pressedKey == keys.enter && hasSelectedItem && hasSubMenu && !settings.allowCategorySelection) {\r\n                    module.verbose('Pressed enter on unselectable category, opening sub menu');\r\n                    pressedKey = keys.rightArrow;\r\n                  }\r\n                  else if(selectedIsSelectable) {\r\n                    module.verbose('Selecting item from keyboard shortcut', $selectedItem);\r\n                    module.event.item.click.call($selectedItem, event);\r\n                    if(module.is.searchSelection()) {\r\n                      module.remove.searchTerm();\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // sub-menu actions\r\n                if(hasSelectedItem) {\r\n\r\n                  if(pressedKey == keys.leftArrow) {\r\n\r\n                    isSubMenuItem = ($parentMenu[0] !== $menu[0]);\r\n\r\n                    if(isSubMenuItem) {\r\n                      module.verbose('Left key pressed, closing sub-menu');\r\n                      module.animate.hide(false, $parentMenu);\r\n                      $selectedItem\r\n                        .removeClass(className.selected)\r\n                      ;\r\n                      $parentMenu\r\n                        .closest(selector.item)\r\n                          .addClass(className.selected)\r\n                      ;\r\n                      event.preventDefault();\r\n                    }\r\n                  }\r\n\r\n                  // right arrow (show sub-menu)\r\n                  if(pressedKey == keys.rightArrow) {\r\n                    if(hasSubMenu) {\r\n                      module.verbose('Right key pressed, opening sub-menu');\r\n                      module.animate.show(false, $subMenu);\r\n                      $selectedItem\r\n                        .removeClass(className.selected)\r\n                      ;\r\n                      $subMenu\r\n                        .find(selector.item).eq(0)\r\n                          .addClass(className.selected)\r\n                      ;\r\n                      event.preventDefault();\r\n                    }\r\n                  }\r\n                }\r\n\r\n                // up arrow (traverse menu up)\r\n                if(pressedKey == keys.upArrow) {\r\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\r\n                    ? $selectedItem.prevAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\r\n                    : $item.eq(0)\r\n                  ;\r\n                  if($visibleItems.index( $nextItem ) < 0) {\r\n                    module.verbose('Up key pressed but reached top of current menu');\r\n                    event.preventDefault();\r\n                    return;\r\n                  }\r\n                  else {\r\n                    module.verbose('Up key pressed, changing active item');\r\n                    $selectedItem\r\n                      .removeClass(className.selected)\r\n                    ;\r\n                    $nextItem\r\n                      .addClass(className.selected)\r\n                    ;\r\n                    module.set.scrollPosition($nextItem);\r\n                    if(settings.selectOnKeydown && module.is.single()) {\r\n                      module.set.selectedItem($nextItem);\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // down arrow (traverse menu down)\r\n                if(pressedKey == keys.downArrow) {\r\n                  $nextItem = (hasSelectedItem && inVisibleMenu)\r\n                    ? $nextItem = $selectedItem.nextAll(selector.item + ':not(' + selector.unselectable + ')').eq(0)\r\n                    : $item.eq(0)\r\n                  ;\r\n                  if($nextItem.length === 0) {\r\n                    module.verbose('Down key pressed but reached bottom of current menu');\r\n                    event.preventDefault();\r\n                    return;\r\n                  }\r\n                  else {\r\n                    module.verbose('Down key pressed, changing active item');\r\n                    $item\r\n                      .removeClass(className.selected)\r\n                    ;\r\n                    $nextItem\r\n                      .addClass(className.selected)\r\n                    ;\r\n                    module.set.scrollPosition($nextItem);\r\n                    if(settings.selectOnKeydown && module.is.single()) {\r\n                      module.set.selectedItem($nextItem);\r\n                    }\r\n                  }\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // page down (show next page)\r\n                if(pressedKey == keys.pageUp) {\r\n                  module.scrollPage('up');\r\n                  event.preventDefault();\r\n                }\r\n                if(pressedKey == keys.pageDown) {\r\n                  module.scrollPage('down');\r\n                  event.preventDefault();\r\n                }\r\n\r\n                // escape (close menu)\r\n                if(pressedKey == keys.escape) {\r\n                  module.verbose('Escape key pressed, closing dropdown');\r\n                  module.hide();\r\n                }\r\n\r\n              }\r\n              else {\r\n                // delimiter key\r\n                if(delimiterPressed) {\r\n                  event.preventDefault();\r\n                }\r\n                // down arrow (open menu)\r\n                if(pressedKey == keys.downArrow && !module.is.visible()) {\r\n                  module.verbose('Down key pressed, showing dropdown');\r\n                  module.select.firstUnfiltered();\r\n                  module.show();\r\n                  event.preventDefault();\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if( !module.has.search() ) {\r\n                module.set.selectedLetter( String.fromCharCode(pressedKey) );\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        trigger: {\r\n          change: function() {\r\n            var\r\n              events       = document.createEvent('HTMLEvents'),\r\n              inputElement = $input[0]\r\n            ;\r\n            if(inputElement) {\r\n              module.verbose('Triggering native change event');\r\n              events.initEvent('change', true, false);\r\n              inputElement.dispatchEvent(events);\r\n            }\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          selectAction: function(text, value) {\r\n            module.verbose('Determining action', settings.action);\r\n            if( $.isFunction( module.action[settings.action] ) ) {\r\n              module.verbose('Triggering preset action', settings.action, text, value);\r\n              module.action[ settings.action ].call(element, text, value, this);\r\n            }\r\n            else if( $.isFunction(settings.action) ) {\r\n              module.verbose('Triggering user action', settings.action, text, value);\r\n              settings.action.call(element, text, value, this);\r\n            }\r\n            else {\r\n              module.error(error.action, settings.action);\r\n            }\r\n          },\r\n          eventInModule: function(event, callback) {\r\n            var\r\n              $target    = $(event.target),\r\n              inDocument = ($target.closest(document.documentElement).length > 0),\r\n              inModule   = ($target.closest($module).length > 0)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(inDocument && !inModule) {\r\n              module.verbose('Triggering event', callback);\r\n              callback();\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Event occurred in dropdown, canceling callback');\r\n              return false;\r\n            }\r\n          },\r\n          eventOnElement: function(event, callback) {\r\n            var\r\n              $target      = $(event.target),\r\n              $label       = $target.closest(selector.siblingLabel),\r\n              inVisibleDOM = document.body.contains(event.target),\r\n              notOnLabel   = ($module.find($label).length === 0),\r\n              notInMenu    = ($target.closest($menu).length === 0)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if(inVisibleDOM && notOnLabel && notInMenu) {\r\n              module.verbose('Triggering event', callback);\r\n              callback();\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Event occurred in dropdown menu, canceling callback');\r\n              return false;\r\n            }\r\n          }\r\n        },\r\n\r\n        action: {\r\n\r\n          nothing: function() {},\r\n\r\n          activate: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            if( module.can.activate( $(element) ) ) {\r\n              module.set.selected(value, $(element));\r\n              if(module.is.multiple() && !module.is.allFiltered()) {\r\n                return;\r\n              }\r\n              else {\r\n                module.hideAndClear();\r\n              }\r\n            }\r\n          },\r\n\r\n          select: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            if( module.can.activate( $(element) ) ) {\r\n              module.set.value(value, $(element));\r\n              if(module.is.multiple() && !module.is.allFiltered()) {\r\n                return;\r\n              }\r\n              else {\r\n                module.hideAndClear();\r\n              }\r\n            }\r\n          },\r\n\r\n          combo: function(text, value, element) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : text\r\n            ;\r\n            module.set.selected(value, $(element));\r\n            module.hideAndClear();\r\n          },\r\n\r\n          hide: function(text, value, element) {\r\n            module.set.value(value, text);\r\n            module.hideAndClear();\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return id;\r\n          },\r\n          defaultText: function() {\r\n            return $module.data(metadata.defaultText);\r\n          },\r\n          defaultValue: function() {\r\n            return $module.data(metadata.defaultValue);\r\n          },\r\n          placeholderText: function() {\r\n            return $module.data(metadata.placeholderText) || '';\r\n          },\r\n          text: function() {\r\n            return $text.text();\r\n          },\r\n          query: function() {\r\n            return $.trim($search.val());\r\n          },\r\n          searchWidth: function(value) {\r\n            value = (value !== undefined)\r\n              ? value\r\n              : $search.val()\r\n            ;\r\n            $sizer.text(value);\r\n            // prevent rounding issues\r\n            return Math.ceil( $sizer.width() + 1);\r\n          },\r\n          selectionCount: function() {\r\n            var\r\n              values = module.get.values(),\r\n              count\r\n            ;\r\n            count = ( module.is.multiple() )\r\n              ? $.isArray(values)\r\n                ? values.length\r\n                : 0\r\n              : (module.get.value() !== '')\r\n                ? 1\r\n                : 0\r\n            ;\r\n            return count;\r\n          },\r\n          transition: function($subMenu) {\r\n            return (settings.transition == 'auto')\r\n              ? module.is.upward($subMenu)\r\n                ? 'slide up'\r\n                : 'slide down'\r\n              : settings.transition\r\n            ;\r\n          },\r\n          userValues: function() {\r\n            var\r\n              values = module.get.values()\r\n            ;\r\n            if(!values) {\r\n              return false;\r\n            }\r\n            values = $.isArray(values)\r\n              ? values\r\n              : [values]\r\n            ;\r\n            return $.grep(values, function(value) {\r\n              return (module.get.item(value) === false);\r\n            });\r\n          },\r\n          uniqueArray: function(array) {\r\n            return $.grep(array, function (value, index) {\r\n                return $.inArray(value, array) === index;\r\n            });\r\n          },\r\n          caretPosition: function() {\r\n            var\r\n              input = $search.get(0),\r\n              range,\r\n              rangeLength\r\n            ;\r\n            if('selectionStart' in input) {\r\n              return input.selectionStart;\r\n            }\r\n            else if (document.selection) {\r\n              input.focus();\r\n              range       = document.selection.createRange();\r\n              rangeLength = range.text.length;\r\n              range.moveStart('character', -input.value.length);\r\n              return range.text.length - rangeLength;\r\n            }\r\n          },\r\n          value: function() {\r\n            var\r\n              value = ($input.length > 0)\r\n                ? $input.val()\r\n                : $module.data(metadata.value),\r\n              isEmptyMultiselect = ($.isArray(value) && value.length === 1 && value[0] === '')\r\n            ;\r\n            // prevents placeholder element from being selected when multiple\r\n            return (value === undefined || isEmptyMultiselect)\r\n              ? ''\r\n              : value\r\n            ;\r\n          },\r\n          values: function() {\r\n            var\r\n              value = module.get.value()\r\n            ;\r\n            if(value === '') {\r\n              return '';\r\n            }\r\n            return ( !module.has.selectInput() && module.is.multiple() )\r\n              ? (typeof value == 'string') // delimited string\r\n                ? value.split(settings.delimiter)\r\n                : ''\r\n              : value\r\n            ;\r\n          },\r\n          remoteValues: function() {\r\n            var\r\n              values = module.get.values(),\r\n              remoteValues = false\r\n            ;\r\n            if(values) {\r\n              if(typeof values == 'string') {\r\n                values = [values];\r\n              }\r\n              $.each(values, function(index, value) {\r\n                var\r\n                  name = module.read.remoteData(value)\r\n                ;\r\n                module.verbose('Restoring value from session data', name, value);\r\n                if(name) {\r\n                  if(!remoteValues) {\r\n                    remoteValues = {};\r\n                  }\r\n                  remoteValues[value] = name;\r\n                }\r\n              });\r\n            }\r\n            return remoteValues;\r\n          },\r\n          choiceText: function($choice, preserveHTML) {\r\n            preserveHTML = (preserveHTML !== undefined)\r\n              ? preserveHTML\r\n              : settings.preserveHTML\r\n            ;\r\n            if($choice) {\r\n              if($choice.find(selector.menu).length > 0) {\r\n                module.verbose('Retrieving text of element with sub-menu');\r\n                $choice = $choice.clone();\r\n                $choice.find(selector.menu).remove();\r\n                $choice.find(selector.menuIcon).remove();\r\n              }\r\n              return ($choice.data(metadata.text) !== undefined)\r\n                ? $choice.data(metadata.text)\r\n                : (preserveHTML)\r\n                  ? $.trim($choice.html())\r\n                  : $.trim($choice.text())\r\n              ;\r\n            }\r\n          },\r\n          choiceValue: function($choice, choiceText) {\r\n            choiceText = choiceText || module.get.choiceText($choice);\r\n            if(!$choice) {\r\n              return false;\r\n            }\r\n            return ($choice.data(metadata.value) !== undefined)\r\n              ? String( $choice.data(metadata.value) )\r\n              : (typeof choiceText === 'string')\r\n                ? $.trim(choiceText.toLowerCase())\r\n                : String(choiceText)\r\n            ;\r\n          },\r\n          inputEvent: function() {\r\n            var\r\n              input = $search[0]\r\n            ;\r\n            if(input) {\r\n              return (input.oninput !== undefined)\r\n                ? 'input'\r\n                : (input.onpropertychange !== undefined)\r\n                  ? 'propertychange'\r\n                  : 'keyup'\r\n              ;\r\n            }\r\n            return false;\r\n          },\r\n          selectValues: function() {\r\n            var\r\n              select = {}\r\n            ;\r\n            select.values = [];\r\n            $module\r\n              .find('option')\r\n                .each(function() {\r\n                  var\r\n                    $option  = $(this),\r\n                    name     = $option.html(),\r\n                    disabled = $option.attr('disabled'),\r\n                    value    = ( $option.attr('value') !== undefined )\r\n                      ? $option.attr('value')\r\n                      : name\r\n                  ;\r\n                  if(settings.placeholder === 'auto' && value === '') {\r\n                    select.placeholder = name;\r\n                  }\r\n                  else {\r\n                    select.values.push({\r\n                      name     : name,\r\n                      value    : value,\r\n                      disabled : disabled\r\n                    });\r\n                  }\r\n                })\r\n            ;\r\n            if(settings.placeholder && settings.placeholder !== 'auto') {\r\n              module.debug('Setting placeholder value to', settings.placeholder);\r\n              select.placeholder = settings.placeholder;\r\n            }\r\n            if(settings.sortSelect) {\r\n              select.values.sort(function(a, b) {\r\n                return (a.name > b.name)\r\n                  ? 1\r\n                  : -1\r\n                ;\r\n              });\r\n              module.debug('Retrieved and sorted values from select', select);\r\n            }\r\n            else {\r\n              module.debug('Retrieved values from select', select);\r\n            }\r\n            return select;\r\n          },\r\n          activeItem: function() {\r\n            return $item.filter('.'  + className.active);\r\n          },\r\n          selectedItem: function() {\r\n            var\r\n              $selectedItem = $item.not(selector.unselectable).filter('.'  + className.selected)\r\n            ;\r\n            return ($selectedItem.length > 0)\r\n              ? $selectedItem\r\n              : $item.eq(0)\r\n            ;\r\n          },\r\n          itemWithAdditions: function(value) {\r\n            var\r\n              $items       = module.get.item(value),\r\n              $userItems   = module.create.userChoice(value),\r\n              hasUserItems = ($userItems && $userItems.length > 0)\r\n            ;\r\n            if(hasUserItems) {\r\n              $items = ($items.length > 0)\r\n                ? $items.add($userItems)\r\n                : $userItems\r\n              ;\r\n            }\r\n            return $items;\r\n          },\r\n          item: function(value, strict) {\r\n            var\r\n              $selectedItem = false,\r\n              shouldSearch,\r\n              isMultiple\r\n            ;\r\n            value = (value !== undefined)\r\n              ? value\r\n              : ( module.get.values() !== undefined)\r\n                ? module.get.values()\r\n                : module.get.text()\r\n            ;\r\n            shouldSearch = (isMultiple)\r\n              ? (value.length > 0)\r\n              : (value !== undefined && value !== null)\r\n            ;\r\n            isMultiple = (module.is.multiple() && $.isArray(value));\r\n            strict     = (value === '' || value === 0)\r\n              ? true\r\n              : strict || false\r\n            ;\r\n            if(shouldSearch) {\r\n              $item\r\n                .each(function() {\r\n                  var\r\n                    $choice       = $(this),\r\n                    optionText    = module.get.choiceText($choice),\r\n                    optionValue   = module.get.choiceValue($choice, optionText)\r\n                  ;\r\n                  // safe early exit\r\n                  if(optionValue === null || optionValue === undefined) {\r\n                    return;\r\n                  }\r\n                  if(isMultiple) {\r\n                    if($.inArray( String(optionValue), value) !== -1 || $.inArray(optionText, value) !== -1) {\r\n                      $selectedItem = ($selectedItem)\r\n                        ? $selectedItem.add($choice)\r\n                        : $choice\r\n                      ;\r\n                    }\r\n                  }\r\n                  else if(strict) {\r\n                    module.verbose('Ambiguous dropdown value using strict type check', $choice, value);\r\n                    if( optionValue === value || optionText === value) {\r\n                      $selectedItem = $choice;\r\n                      return true;\r\n                    }\r\n                  }\r\n                  else {\r\n                    if( String(optionValue) == String(value) || optionText == value) {\r\n                      module.verbose('Found select item by value', optionValue, value);\r\n                      $selectedItem = $choice;\r\n                      return true;\r\n                    }\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            return $selectedItem;\r\n          }\r\n        },\r\n\r\n        check: {\r\n          maxSelections: function(selectionCount) {\r\n            if(settings.maxSelections) {\r\n              selectionCount = (selectionCount !== undefined)\r\n                ? selectionCount\r\n                : module.get.selectionCount()\r\n              ;\r\n              if(selectionCount >= settings.maxSelections) {\r\n                module.debug('Maximum selection count reached');\r\n                if(settings.useLabels) {\r\n                  $item.addClass(className.filtered);\r\n                  module.add.message(message.maxSelections);\r\n                }\r\n                return true;\r\n              }\r\n              else {\r\n                module.verbose('No longer at maximum selection count');\r\n                module.remove.message();\r\n                module.remove.filteredItem();\r\n                if(module.is.searchSelection()) {\r\n                  module.filterItems();\r\n                }\r\n                return false;\r\n              }\r\n            }\r\n            return true;\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          defaults: function() {\r\n            module.clear();\r\n            module.restore.defaultText();\r\n            module.restore.defaultValue();\r\n          },\r\n          defaultText: function() {\r\n            var\r\n              defaultText     = module.get.defaultText(),\r\n              placeholderText = module.get.placeholderText\r\n            ;\r\n            if(defaultText === placeholderText) {\r\n              module.debug('Restoring default placeholder text', defaultText);\r\n              module.set.placeholderText(defaultText);\r\n            }\r\n            else {\r\n              module.debug('Restoring default text', defaultText);\r\n              module.set.text(defaultText);\r\n            }\r\n          },\r\n          placeholderText: function() {\r\n            module.set.placeholderText();\r\n          },\r\n          defaultValue: function() {\r\n            var\r\n              defaultValue = module.get.defaultValue()\r\n            ;\r\n            if(defaultValue !== undefined) {\r\n              module.debug('Restoring default value', defaultValue);\r\n              if(defaultValue !== '') {\r\n                module.set.value(defaultValue);\r\n                module.set.selected();\r\n              }\r\n              else {\r\n                module.remove.activeItem();\r\n                module.remove.selectedItem();\r\n              }\r\n            }\r\n          },\r\n          labels: function() {\r\n            if(settings.allowAdditions) {\r\n              if(!settings.useLabels) {\r\n                module.error(error.labels);\r\n                settings.useLabels = true;\r\n              }\r\n              module.debug('Restoring selected values');\r\n              module.create.userLabels();\r\n            }\r\n            module.check.maxSelections();\r\n          },\r\n          selected: function() {\r\n            module.restore.values();\r\n            if(module.is.multiple()) {\r\n              module.debug('Restoring previously selected values and labels');\r\n              module.restore.labels();\r\n            }\r\n            else {\r\n              module.debug('Restoring previously selected values');\r\n            }\r\n          },\r\n          values: function() {\r\n            // prevents callbacks from occurring on initial load\r\n            module.set.initialLoad();\r\n            if(settings.apiSettings && settings.saveRemoteData && module.get.remoteValues()) {\r\n              module.restore.remoteValues();\r\n            }\r\n            else {\r\n              module.set.selected();\r\n            }\r\n            module.remove.initialLoad();\r\n          },\r\n          remoteValues: function() {\r\n            var\r\n              values = module.get.remoteValues()\r\n            ;\r\n            module.debug('Recreating selected from session data', values);\r\n            if(values) {\r\n              if( module.is.single() ) {\r\n                $.each(values, function(value, name) {\r\n                  module.set.text(name);\r\n                });\r\n              }\r\n              else {\r\n                $.each(values, function(value, name) {\r\n                  module.add.label(value, name);\r\n                });\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        read: {\r\n          remoteData: function(value) {\r\n            var\r\n              name\r\n            ;\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            name = sessionStorage.getItem(value);\r\n            return (name !== undefined)\r\n              ? name\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          defaults: function() {\r\n            module.save.defaultText();\r\n            module.save.placeholderText();\r\n            module.save.defaultValue();\r\n          },\r\n          defaultValue: function() {\r\n            var\r\n              value = module.get.value()\r\n            ;\r\n            module.verbose('Saving default value as', value);\r\n            $module.data(metadata.defaultValue, value);\r\n          },\r\n          defaultText: function() {\r\n            var\r\n              text = module.get.text()\r\n            ;\r\n            module.verbose('Saving default text as', text);\r\n            $module.data(metadata.defaultText, text);\r\n          },\r\n          placeholderText: function() {\r\n            var\r\n              text\r\n            ;\r\n            if(settings.placeholder !== false && $text.hasClass(className.placeholder)) {\r\n              text = module.get.text();\r\n              module.verbose('Saving placeholder text as', text);\r\n              $module.data(metadata.placeholderText, text);\r\n            }\r\n          },\r\n          remoteData: function(name, value) {\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            module.verbose('Saving remote data to session storage', value, name);\r\n            sessionStorage.setItem(value, name);\r\n          }\r\n        },\r\n\r\n        clear: function() {\r\n          if(module.is.multiple() && settings.useLabels) {\r\n            module.remove.labels();\r\n          }\r\n          else {\r\n            module.remove.activeItem();\r\n            module.remove.selectedItem();\r\n          }\r\n          module.set.placeholderText();\r\n          module.clearValue();\r\n        },\r\n\r\n        clearValue: function() {\r\n          module.set.value('');\r\n        },\r\n\r\n        scrollPage: function(direction, $selectedItem) {\r\n          var\r\n            $currentItem  = $selectedItem || module.get.selectedItem(),\r\n            $menu         = $currentItem.closest(selector.menu),\r\n            menuHeight    = $menu.outerHeight(),\r\n            currentScroll = $menu.scrollTop(),\r\n            itemHeight    = $item.eq(0).outerHeight(),\r\n            itemsPerPage  = Math.floor(menuHeight / itemHeight),\r\n            maxScroll     = $menu.prop('scrollHeight'),\r\n            newScroll     = (direction == 'up')\r\n              ? currentScroll - (itemHeight * itemsPerPage)\r\n              : currentScroll + (itemHeight * itemsPerPage),\r\n            $selectableItem = $item.not(selector.unselectable),\r\n            isWithinRange,\r\n            $nextSelectedItem,\r\n            elementIndex\r\n          ;\r\n          elementIndex      = (direction == 'up')\r\n            ? $selectableItem.index($currentItem) - itemsPerPage\r\n            : $selectableItem.index($currentItem) + itemsPerPage\r\n          ;\r\n          isWithinRange = (direction == 'up')\r\n            ? (elementIndex >= 0)\r\n            : (elementIndex < $selectableItem.length)\r\n          ;\r\n          $nextSelectedItem = (isWithinRange)\r\n            ? $selectableItem.eq(elementIndex)\r\n            : (direction == 'up')\r\n              ? $selectableItem.first()\r\n              : $selectableItem.last()\r\n          ;\r\n          if($nextSelectedItem.length > 0) {\r\n            module.debug('Scrolling page', direction, $nextSelectedItem);\r\n            $currentItem\r\n              .removeClass(className.selected)\r\n            ;\r\n            $nextSelectedItem\r\n              .addClass(className.selected)\r\n            ;\r\n            if(settings.selectOnKeydown && module.is.single()) {\r\n              module.set.selectedItem($nextSelectedItem);\r\n            }\r\n            $menu\r\n              .scrollTop(newScroll)\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          filtered: function() {\r\n            var\r\n              isMultiple       = module.is.multiple(),\r\n              isSearch         = module.is.searchSelection(),\r\n              isSearchMultiple = (isMultiple && isSearch),\r\n              searchValue      = (isSearch)\r\n                ? module.get.query()\r\n                : '',\r\n              hasSearchValue   = (typeof searchValue === 'string' && searchValue.length > 0),\r\n              searchWidth      = module.get.searchWidth(),\r\n              valueIsSet       = searchValue !== ''\r\n            ;\r\n            if(isMultiple && hasSearchValue) {\r\n              module.verbose('Adjusting input width', searchWidth, settings.glyphWidth);\r\n              $search.css('width', searchWidth);\r\n            }\r\n            if(hasSearchValue || (isSearchMultiple && valueIsSet)) {\r\n              module.verbose('Hiding placeholder text');\r\n              $text.addClass(className.filtered);\r\n            }\r\n            else if(!isMultiple || (isSearchMultiple && !valueIsSet)) {\r\n              module.verbose('Showing placeholder text');\r\n              $text.removeClass(className.filtered);\r\n            }\r\n          },\r\n          empty: function() {\r\n            $module.addClass(className.empty);\r\n          },\r\n          loading: function() {\r\n            $module.addClass(className.loading);\r\n          },\r\n          placeholderText: function(text) {\r\n            text = text || module.get.placeholderText();\r\n            module.debug('Setting placeholder text', text);\r\n            module.set.text(text);\r\n            $text.addClass(className.placeholder);\r\n          },\r\n          tabbable: function() {\r\n            if( module.is.searchSelection() ) {\r\n              module.debug('Added tabindex to searchable dropdown');\r\n              $search\r\n                .val('')\r\n                .attr('tabindex', 0)\r\n              ;\r\n              $menu\r\n                .attr('tabindex', -1)\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Added tabindex to dropdown');\r\n              if( $module.attr('tabindex') === undefined) {\r\n                $module\r\n                  .attr('tabindex', 0)\r\n                ;\r\n                $menu\r\n                  .attr('tabindex', -1)\r\n                ;\r\n              }\r\n            }\r\n          },\r\n          initialLoad: function() {\r\n            module.verbose('Setting initial load');\r\n            initialLoad = true;\r\n          },\r\n          activeItem: function($item) {\r\n            if( settings.allowAdditions && $item.filter(selector.addition).length > 0 ) {\r\n              $item.addClass(className.filtered);\r\n            }\r\n            else {\r\n              $item.addClass(className.active);\r\n            }\r\n          },\r\n          partialSearch: function(text) {\r\n            var\r\n              length = module.get.query().length\r\n            ;\r\n            $search.val( text.substr(0 , length));\r\n          },\r\n          scrollPosition: function($item, forceScroll) {\r\n            var\r\n              edgeTolerance = 5,\r\n              $menu,\r\n              hasActive,\r\n              offset,\r\n              itemHeight,\r\n              itemOffset,\r\n              menuOffset,\r\n              menuScroll,\r\n              menuHeight,\r\n              abovePage,\r\n              belowPage\r\n            ;\r\n\r\n            $item       = $item || module.get.selectedItem();\r\n            $menu       = $item.closest(selector.menu);\r\n            hasActive   = ($item && $item.length > 0);\r\n            forceScroll = (forceScroll !== undefined)\r\n              ? forceScroll\r\n              : false\r\n            ;\r\n            if($item && $menu.length > 0 && hasActive) {\r\n              itemOffset = $item.position().top;\r\n\r\n              $menu.addClass(className.loading);\r\n              menuScroll = $menu.scrollTop();\r\n              menuOffset = $menu.offset().top;\r\n              itemOffset = $item.offset().top;\r\n              offset     = menuScroll - menuOffset + itemOffset;\r\n              if(!forceScroll) {\r\n                menuHeight = $menu.height();\r\n                belowPage  = menuScroll + menuHeight < (offset + edgeTolerance);\r\n                abovePage  = ((offset - edgeTolerance) < menuScroll);\r\n              }\r\n              module.debug('Scrolling to active item', offset);\r\n              if(forceScroll || abovePage || belowPage) {\r\n                $menu.scrollTop(offset);\r\n              }\r\n              $menu.removeClass(className.loading);\r\n            }\r\n          },\r\n          text: function(text) {\r\n            if(settings.action !== 'select') {\r\n              if(settings.action == 'combo') {\r\n                module.debug('Changing combo button text', text, $combo);\r\n                if(settings.preserveHTML) {\r\n                  $combo.html(text);\r\n                }\r\n                else {\r\n                  $combo.text(text);\r\n                }\r\n              }\r\n              else {\r\n                if(text !== module.get.placeholderText()) {\r\n                  $text.removeClass(className.placeholder);\r\n                }\r\n                module.debug('Changing text', text, $text);\r\n                $text\r\n                  .removeClass(className.filtered)\r\n                ;\r\n                if(settings.preserveHTML) {\r\n                  $text.html(text);\r\n                }\r\n                else {\r\n                  $text.text(text);\r\n                }\r\n              }\r\n            }\r\n          },\r\n          selectedItem: function($item) {\r\n            var\r\n              value      = module.get.choiceValue($item),\r\n              searchText = module.get.choiceText($item, false),\r\n              text       = module.get.choiceText($item, true)\r\n            ;\r\n            module.debug('Setting user selection to item', $item);\r\n            module.remove.activeItem();\r\n            module.set.partialSearch(searchText);\r\n            module.set.activeItem($item);\r\n            module.set.selected(value, $item);\r\n            module.set.text(text);\r\n          },\r\n          selectedLetter: function(letter) {\r\n            var\r\n              $selectedItem         = $item.filter('.' + className.selected),\r\n              alreadySelectedLetter = $selectedItem.length > 0 && module.has.firstLetter($selectedItem, letter),\r\n              $nextValue            = false,\r\n              $nextItem\r\n            ;\r\n            // check next of same letter\r\n            if(alreadySelectedLetter) {\r\n              $nextItem = $selectedItem.nextAll($item).eq(0);\r\n              if( module.has.firstLetter($nextItem, letter) ) {\r\n                $nextValue  = $nextItem;\r\n              }\r\n            }\r\n            // check all values\r\n            if(!$nextValue) {\r\n              $item\r\n                .each(function(){\r\n                  if(module.has.firstLetter($(this), letter)) {\r\n                    $nextValue = $(this);\r\n                    return false;\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            // set next value\r\n            if($nextValue) {\r\n              module.verbose('Scrolling to next value with letter', letter);\r\n              module.set.scrollPosition($nextValue);\r\n              $selectedItem.removeClass(className.selected);\r\n              $nextValue.addClass(className.selected);\r\n              if(settings.selectOnKeydown && module.is.single()) {\r\n                module.set.selectedItem($nextValue);\r\n              }\r\n            }\r\n          },\r\n          direction: function($menu) {\r\n            if(settings.direction == 'auto') {\r\n              if(module.is.onScreen($menu)) {\r\n                module.remove.upward($menu);\r\n              }\r\n              else {\r\n                module.set.upward($menu);\r\n              }\r\n            }\r\n            else if(settings.direction == 'upward') {\r\n              module.set.upward($menu);\r\n            }\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            $element.addClass(className.upward);\r\n          },\r\n          value: function(value, text, $selected) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              hasInput     = ($input.length > 0),\r\n              isAddition   = !module.has.value(value),\r\n              currentValue = module.get.values(),\r\n              stringValue  = (value !== undefined)\r\n                ? String(value)\r\n                : value,\r\n              newValue\r\n            ;\r\n            if(hasInput) {\r\n              if(!settings.allowReselection && stringValue == currentValue) {\r\n                module.verbose('Skipping value update already same value', value, currentValue);\r\n                if(!module.is.initialLoad()) {\r\n                  return;\r\n                }\r\n              }\r\n\r\n              if( module.is.single() && module.has.selectInput() && module.can.extendSelect() ) {\r\n                module.debug('Adding user option', value);\r\n                module.add.optionValue(value);\r\n              }\r\n              module.debug('Updating input value', escapedValue, currentValue);\r\n              internalChange = true;\r\n              $input\r\n                .val(escapedValue)\r\n              ;\r\n              if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n                module.debug('Input native change event ignored on initial load');\r\n              }\r\n              else {\r\n                module.trigger.change();\r\n              }\r\n              internalChange = false;\r\n            }\r\n            else {\r\n              module.verbose('Storing value in metadata', escapedValue, $input);\r\n              if(escapedValue !== currentValue) {\r\n                $module.data(metadata.value, stringValue);\r\n              }\r\n            }\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('No callback on initial load', settings.onChange);\r\n            }\r\n            else {\r\n              settings.onChange.call(element, value, text, $selected);\r\n            }\r\n          },\r\n          active: function() {\r\n            $module\r\n              .addClass(className.active)\r\n            ;\r\n          },\r\n          multiple: function() {\r\n            $module.addClass(className.multiple);\r\n          },\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          },\r\n          exactly: function(value, $selectedItem) {\r\n            module.debug('Setting selected to exact values');\r\n            module.clear();\r\n            module.set.selected(value, $selectedItem);\r\n          },\r\n          selected: function(value, $selectedItem) {\r\n            var\r\n              isMultiple = module.is.multiple(),\r\n              $userSelectedItem\r\n            ;\r\n            $selectedItem = (settings.allowAdditions)\r\n              ? $selectedItem || module.get.itemWithAdditions(value)\r\n              : $selectedItem || module.get.item(value)\r\n            ;\r\n            if(!$selectedItem) {\r\n              return;\r\n            }\r\n            module.debug('Setting selected menu item to', $selectedItem);\r\n            if(module.is.multiple()) {\r\n              module.remove.searchWidth();\r\n            }\r\n            if(module.is.single()) {\r\n              module.remove.activeItem();\r\n              module.remove.selectedItem();\r\n            }\r\n            else if(settings.useLabels) {\r\n              module.remove.selectedItem();\r\n            }\r\n            // select each item\r\n            $selectedItem\r\n              .each(function() {\r\n                var\r\n                  $selected      = $(this),\r\n                  selectedText   = module.get.choiceText($selected),\r\n                  selectedValue  = module.get.choiceValue($selected, selectedText),\r\n\r\n                  isFiltered     = $selected.hasClass(className.filtered),\r\n                  isActive       = $selected.hasClass(className.active),\r\n                  isUserValue    = $selected.hasClass(className.addition),\r\n                  shouldAnimate  = (isMultiple && $selectedItem.length == 1)\r\n                ;\r\n                if(isMultiple) {\r\n                  if(!isActive || isUserValue) {\r\n                    if(settings.apiSettings && settings.saveRemoteData) {\r\n                      module.save.remoteData(selectedText, selectedValue);\r\n                    }\r\n                    if(settings.useLabels) {\r\n                      module.add.value(selectedValue, selectedText, $selected);\r\n                      module.add.label(selectedValue, selectedText, shouldAnimate);\r\n                      module.set.activeItem($selected);\r\n                      module.filterActive();\r\n                      module.select.nextAvailable($selectedItem);\r\n                    }\r\n                    else {\r\n                      module.add.value(selectedValue, selectedText, $selected);\r\n                      module.set.text(module.add.variables(message.count));\r\n                      module.set.activeItem($selected);\r\n                    }\r\n                  }\r\n                  else if(!isFiltered) {\r\n                    module.debug('Selected active value, removing label');\r\n                    module.remove.selected(selectedValue);\r\n                  }\r\n                }\r\n                else {\r\n                  if(settings.apiSettings && settings.saveRemoteData) {\r\n                    module.save.remoteData(selectedText, selectedValue);\r\n                  }\r\n                  module.set.text(selectedText);\r\n                  module.set.value(selectedValue, selectedText, $selected);\r\n                  $selected\r\n                    .addClass(className.active)\r\n                    .addClass(className.selected)\r\n                  ;\r\n                }\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        add: {\r\n          label: function(value, text, shouldAnimate) {\r\n            var\r\n              $next  = module.is.searchSelection()\r\n                ? $search\r\n                : $text,\r\n              escapedValue = module.escape.value(value),\r\n              $label\r\n            ;\r\n            $label =  $('<a />')\r\n              .addClass(className.label)\r\n              .attr('data-' + metadata.value, escapedValue)\r\n              .html(templates.label(escapedValue, text))\r\n            ;\r\n            $label = settings.onLabelCreate.call($label, escapedValue, text);\r\n\r\n            if(module.has.label(value)) {\r\n              module.debug('Label already exists, skipping', escapedValue);\r\n              return;\r\n            }\r\n            if(settings.label.variation) {\r\n              $label.addClass(settings.label.variation);\r\n            }\r\n            if(shouldAnimate === true) {\r\n              module.debug('Animating in label', $label);\r\n              $label\r\n                .addClass(className.hidden)\r\n                .insertBefore($next)\r\n                .transition(settings.label.transition, settings.label.duration)\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Adding selection label', $label);\r\n              $label\r\n                .insertBefore($next)\r\n              ;\r\n            }\r\n          },\r\n          message: function(message) {\r\n            var\r\n              $message = $menu.children(selector.message),\r\n              html     = settings.templates.message(module.add.variables(message))\r\n            ;\r\n            if($message.length > 0) {\r\n              $message\r\n                .html(html)\r\n              ;\r\n            }\r\n            else {\r\n              $message = $('<div/>')\r\n                .html(html)\r\n                .addClass(className.message)\r\n                .appendTo($menu)\r\n              ;\r\n            }\r\n          },\r\n          optionValue: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\r\n              hasOption    = ($option.length > 0)\r\n            ;\r\n            if(hasOption) {\r\n              return;\r\n            }\r\n            // temporarily disconnect observer\r\n            module.disconnect.selectObserver();\r\n            if( module.is.single() ) {\r\n              module.verbose('Removing previous user addition');\r\n              $input.find('option.' + className.addition).remove();\r\n            }\r\n            $('<option/>')\r\n              .prop('value', escapedValue)\r\n              .addClass(className.addition)\r\n              .html(value)\r\n              .appendTo($input)\r\n            ;\r\n            module.verbose('Adding user addition as an <option>', value);\r\n            module.observe.select();\r\n          },\r\n          userSuggestion: function(value) {\r\n            var\r\n              $addition         = $menu.children(selector.addition),\r\n              $existingItem     = module.get.item(value),\r\n              alreadyHasValue   = $existingItem && $existingItem.not(selector.addition).length,\r\n              hasUserSuggestion = $addition.length > 0,\r\n              html\r\n            ;\r\n            if(settings.useLabels && module.has.maxSelections()) {\r\n              return;\r\n            }\r\n            if(value === '' || alreadyHasValue) {\r\n              $addition.remove();\r\n              return;\r\n            }\r\n            if(hasUserSuggestion) {\r\n              $addition\r\n                .data(metadata.value, value)\r\n                .data(metadata.text, value)\r\n                .attr('data-' + metadata.value, value)\r\n                .attr('data-' + metadata.text, value)\r\n                .removeClass(className.filtered)\r\n              ;\r\n              if(!settings.hideAdditions) {\r\n                html = settings.templates.addition( module.add.variables(message.addResult, value) );\r\n                $addition\r\n                  .html(html)\r\n                ;\r\n              }\r\n              module.verbose('Replacing user suggestion with new value', $addition);\r\n            }\r\n            else {\r\n              $addition = module.create.userChoice(value);\r\n              $addition\r\n                .prependTo($menu)\r\n              ;\r\n              module.verbose('Adding item choice to menu corresponding with user choice addition', $addition);\r\n            }\r\n            if(!settings.hideAdditions || module.is.allFiltered()) {\r\n              $addition\r\n                .addClass(className.selected)\r\n                .siblings()\r\n                .removeClass(className.selected)\r\n              ;\r\n            }\r\n            module.refreshItems();\r\n          },\r\n          variables: function(message, term) {\r\n            var\r\n              hasCount    = (message.search('{count}') !== -1),\r\n              hasMaxCount = (message.search('{maxCount}') !== -1),\r\n              hasTerm     = (message.search('{term}') !== -1),\r\n              values,\r\n              count,\r\n              query\r\n            ;\r\n            module.verbose('Adding templated variables to message', message);\r\n            if(hasCount) {\r\n              count  = module.get.selectionCount();\r\n              message = message.replace('{count}', count);\r\n            }\r\n            if(hasMaxCount) {\r\n              count  = module.get.selectionCount();\r\n              message = message.replace('{maxCount}', settings.maxSelections);\r\n            }\r\n            if(hasTerm) {\r\n              query   = term || module.get.query();\r\n              message = message.replace('{term}', query);\r\n            }\r\n            return message;\r\n          },\r\n          value: function(addedValue, addedText, $selectedItem) {\r\n            var\r\n              currentValue = module.get.values(),\r\n              newValue\r\n            ;\r\n            if(addedValue === '') {\r\n              module.debug('Cannot select blank values from multiselect');\r\n              return;\r\n            }\r\n            // extend current array\r\n            if($.isArray(currentValue)) {\r\n              newValue = currentValue.concat([addedValue]);\r\n              newValue = module.get.uniqueArray(newValue);\r\n            }\r\n            else {\r\n              newValue = [addedValue];\r\n            }\r\n            // add values\r\n            if( module.has.selectInput() ) {\r\n              if(module.can.extendSelect()) {\r\n                module.debug('Adding value to select', addedValue, newValue, $input);\r\n                module.add.optionValue(addedValue);\r\n              }\r\n            }\r\n            else {\r\n              newValue = newValue.join(settings.delimiter);\r\n              module.debug('Setting hidden input to delimited value', newValue, $input);\r\n            }\r\n\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('Skipping onadd callback on initial load', settings.onAdd);\r\n            }\r\n            else {\r\n              settings.onAdd.call(element, addedValue, addedText, $selectedItem);\r\n            }\r\n            module.set.value(newValue, addedValue, addedText, $selectedItem);\r\n            module.check.maxSelections();\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          activeLabel: function() {\r\n            $module.find(selector.label).removeClass(className.active);\r\n          },\r\n          empty: function() {\r\n            $module.removeClass(className.empty);\r\n          },\r\n          loading: function() {\r\n            $module.removeClass(className.loading);\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            $element.removeClass(className.upward);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          activeItem: function() {\r\n            $item.removeClass(className.active);\r\n          },\r\n          filteredItem: function() {\r\n            if(settings.useLabels && module.has.maxSelections() ) {\r\n              return;\r\n            }\r\n            if(settings.useLabels && module.is.multiple()) {\r\n              $item.not('.' + className.active).removeClass(className.filtered);\r\n            }\r\n            else {\r\n              $item.removeClass(className.filtered);\r\n            }\r\n            module.remove.empty();\r\n          },\r\n          optionValue: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $option      = $input.find('option[value=\"' + module.escape.string(escapedValue) + '\"]'),\r\n              hasOption    = ($option.length > 0)\r\n            ;\r\n            if(!hasOption || !$option.hasClass(className.addition)) {\r\n              return;\r\n            }\r\n            // temporarily disconnect observer\r\n            if(selectObserver) {\r\n              selectObserver.disconnect();\r\n              module.verbose('Temporarily disconnecting mutation observer');\r\n            }\r\n            $option.remove();\r\n            module.verbose('Removing user addition as an <option>', escapedValue);\r\n            if(selectObserver) {\r\n              selectObserver.observe($input[0], {\r\n                childList : true,\r\n                subtree   : true\r\n              });\r\n            }\r\n          },\r\n          message: function() {\r\n            $menu.children(selector.message).remove();\r\n          },\r\n          searchWidth: function() {\r\n            $search.css('width', '');\r\n          },\r\n          searchTerm: function() {\r\n            module.verbose('Cleared search term');\r\n            $search.val('');\r\n            module.set.filtered();\r\n          },\r\n          userAddition: function() {\r\n            $item.filter(selector.addition).remove();\r\n          },\r\n          selected: function(value, $selectedItem) {\r\n            $selectedItem = (settings.allowAdditions)\r\n              ? $selectedItem || module.get.itemWithAdditions(value)\r\n              : $selectedItem || module.get.item(value)\r\n            ;\r\n\r\n            if(!$selectedItem) {\r\n              return false;\r\n            }\r\n\r\n            $selectedItem\r\n              .each(function() {\r\n                var\r\n                  $selected     = $(this),\r\n                  selectedText  = module.get.choiceText($selected),\r\n                  selectedValue = module.get.choiceValue($selected, selectedText)\r\n                ;\r\n                if(module.is.multiple()) {\r\n                  if(settings.useLabels) {\r\n                    module.remove.value(selectedValue, selectedText, $selected);\r\n                    module.remove.label(selectedValue);\r\n                  }\r\n                  else {\r\n                    module.remove.value(selectedValue, selectedText, $selected);\r\n                    if(module.get.selectionCount() === 0) {\r\n                      module.set.placeholderText();\r\n                    }\r\n                    else {\r\n                      module.set.text(module.add.variables(message.count));\r\n                    }\r\n                  }\r\n                }\r\n                else {\r\n                  module.remove.value(selectedValue, selectedText, $selected);\r\n                }\r\n                $selected\r\n                  .removeClass(className.filtered)\r\n                  .removeClass(className.active)\r\n                ;\r\n                if(settings.useLabels) {\r\n                  $selected.removeClass(className.selected);\r\n                }\r\n              })\r\n            ;\r\n          },\r\n          selectedItem: function() {\r\n            $item.removeClass(className.selected);\r\n          },\r\n          value: function(removedValue, removedText, $removedItem) {\r\n            var\r\n              values = module.get.values(),\r\n              newValue\r\n            ;\r\n            if( module.has.selectInput() ) {\r\n              module.verbose('Input is <select> removing selected option', removedValue);\r\n              newValue = module.remove.arrayValue(removedValue, values);\r\n              module.remove.optionValue(removedValue);\r\n            }\r\n            else {\r\n              module.verbose('Removing from delimited values', removedValue);\r\n              newValue = module.remove.arrayValue(removedValue, values);\r\n              newValue = newValue.join(settings.delimiter);\r\n            }\r\n            if(settings.fireOnInit === false && module.is.initialLoad()) {\r\n              module.verbose('No callback on initial load', settings.onRemove);\r\n            }\r\n            else {\r\n              settings.onRemove.call(element, removedValue, removedText, $removedItem);\r\n            }\r\n            module.set.value(newValue, removedText, $removedItem);\r\n            module.check.maxSelections();\r\n          },\r\n          arrayValue: function(removedValue, values) {\r\n            if( !$.isArray(values) ) {\r\n              values = [values];\r\n            }\r\n            values = $.grep(values, function(value){\r\n              return (removedValue != value);\r\n            });\r\n            module.verbose('Removed value from delimited string', removedValue, values);\r\n            return values;\r\n          },\r\n          label: function(value, shouldAnimate) {\r\n            var\r\n              $labels       = $module.find(selector.label),\r\n              $removedLabel = $labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(value) +'\"]')\r\n            ;\r\n            module.verbose('Removing label', $removedLabel);\r\n            $removedLabel.remove();\r\n          },\r\n          activeLabels: function($activeLabels) {\r\n            $activeLabels = $activeLabels || $module.find(selector.label).filter('.' + className.active);\r\n            module.verbose('Removing active label selections', $activeLabels);\r\n            module.remove.labels($activeLabels);\r\n          },\r\n          labels: function($labels) {\r\n            $labels = $labels || $module.find(selector.label);\r\n            module.verbose('Removing labels', $labels);\r\n            $labels\r\n              .each(function(){\r\n                var\r\n                  $label      = $(this),\r\n                  value       = $label.data(metadata.value),\r\n                  stringValue = (value !== undefined)\r\n                    ? String(value)\r\n                    : value,\r\n                  isUserValue = module.is.userValue(stringValue)\r\n                ;\r\n                if(settings.onLabelRemove.call($label, value) === false) {\r\n                  module.debug('Label remove callback cancelled removal');\r\n                  return;\r\n                }\r\n                module.remove.message();\r\n                if(isUserValue) {\r\n                  module.remove.value(stringValue);\r\n                  module.remove.label(stringValue);\r\n                }\r\n                else {\r\n                  // selected will also remove label\r\n                  module.remove.selected(stringValue);\r\n                }\r\n              })\r\n            ;\r\n          },\r\n          tabbable: function() {\r\n            if( module.is.searchSelection() ) {\r\n              module.debug('Searchable dropdown initialized');\r\n              $search\r\n                .removeAttr('tabindex')\r\n              ;\r\n              $menu\r\n                .removeAttr('tabindex')\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Simple selection dropdown initialized');\r\n              $module\r\n                .removeAttr('tabindex')\r\n              ;\r\n              $menu\r\n                .removeAttr('tabindex')\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          menuSearch: function() {\r\n            return (module.has.search() && $search.closest($menu).length > 0);\r\n          },\r\n          search: function() {\r\n            return ($search.length > 0);\r\n          },\r\n          sizer: function() {\r\n            return ($sizer.length > 0);\r\n          },\r\n          selectInput: function() {\r\n            return ( $input.is('select') );\r\n          },\r\n          minCharacters: function(searchTerm) {\r\n            if(settings.minCharacters) {\r\n              searchTerm = (searchTerm !== undefined)\r\n                ? String(searchTerm)\r\n                : String(module.get.query())\r\n              ;\r\n              return (searchTerm.length >= settings.minCharacters);\r\n            }\r\n            return true;\r\n          },\r\n          firstLetter: function($item, letter) {\r\n            var\r\n              text,\r\n              firstLetter\r\n            ;\r\n            if(!$item || $item.length === 0 || typeof letter !== 'string') {\r\n              return false;\r\n            }\r\n            text        = module.get.choiceText($item, false);\r\n            letter      = letter.toLowerCase();\r\n            firstLetter = String(text).charAt(0).toLowerCase();\r\n            return (letter == firstLetter);\r\n          },\r\n          input: function() {\r\n            return ($input.length > 0);\r\n          },\r\n          items: function() {\r\n            return ($item.length > 0);\r\n          },\r\n          menu: function() {\r\n            return ($menu.length > 0);\r\n          },\r\n          message: function() {\r\n            return ($menu.children(selector.message).length !== 0);\r\n          },\r\n          label: function(value) {\r\n            var\r\n              escapedValue = module.escape.value(value),\r\n              $labels      = $module.find(selector.label)\r\n            ;\r\n            return ($labels.filter('[data-' + metadata.value + '=\"' + module.escape.string(escapedValue) +'\"]').length > 0);\r\n          },\r\n          maxSelections: function() {\r\n            return (settings.maxSelections && module.get.selectionCount() >= settings.maxSelections);\r\n          },\r\n          allResultsFiltered: function() {\r\n            var\r\n              $normalResults = $item.not(selector.addition)\r\n            ;\r\n            return ($normalResults.filter(selector.unselectable).length === $normalResults.length);\r\n          },\r\n          userSuggestion: function() {\r\n            return ($menu.children(selector.addition).length > 0);\r\n          },\r\n          query: function() {\r\n            return (module.get.query() !== '');\r\n          },\r\n          value: function(value) {\r\n            var\r\n              values   = module.get.values(),\r\n              hasValue = $.isArray(values)\r\n               ? values && ($.inArray(value, values) !== -1)\r\n               : (values == value)\r\n            ;\r\n            return (hasValue)\r\n              ? true\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          bubbledLabelClick: function(event) {\r\n            return $(event.target).is('select, input') && $module.closest('label').length > 0;\r\n          },\r\n          bubbledIconClick: function(event) {\r\n            return $(event.target).closest($icon).length > 0;\r\n          },\r\n          alreadySetup: function() {\r\n            return ($module.is('select') && $module.parent(selector.dropdown).length > 0  && $module.prev().length === 0);\r\n          },\r\n          animating: function($subMenu) {\r\n            return ($subMenu)\r\n              ? $subMenu.transition && $subMenu.transition('is animating')\r\n              : $menu.transition    && $menu.transition('is animating')\r\n            ;\r\n          },\r\n          disabled: function() {\r\n            return $module.hasClass(className.disabled);\r\n          },\r\n          focused: function() {\r\n            return (document.activeElement === $module[0]);\r\n          },\r\n          focusedOnSearch: function() {\r\n            return (document.activeElement === $search[0]);\r\n          },\r\n          allFiltered: function() {\r\n            return( (module.is.multiple() || module.has.search()) && !(settings.hideAdditions == false && module.has.userSuggestion()) && !module.has.message() && module.has.allResultsFiltered() );\r\n          },\r\n          hidden: function($subMenu) {\r\n            return !module.is.visible($subMenu);\r\n          },\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          },\r\n          onScreen: function($subMenu) {\r\n            var\r\n              $currentMenu   = $subMenu || $menu,\r\n              canOpenDownward = true,\r\n              onScreen = {},\r\n              calculations\r\n            ;\r\n            $currentMenu.addClass(className.loading);\r\n            calculations = {\r\n              context: {\r\n                scrollTop : $context.scrollTop(),\r\n                height    : $context.outerHeight()\r\n              },\r\n              menu : {\r\n                offset: $currentMenu.offset(),\r\n                height: $currentMenu.outerHeight()\r\n              }\r\n            };\r\n            if(module.is.verticallyScrollableContext()) {\r\n              calculations.menu.offset.top += calculations.context.scrollTop;\r\n            }\r\n            onScreen = {\r\n              above : (calculations.context.scrollTop) <= calculations.menu.offset.top - calculations.menu.height,\r\n              below : (calculations.context.scrollTop + calculations.context.height) >= calculations.menu.offset.top + calculations.menu.height\r\n            };\r\n            if(onScreen.below) {\r\n              module.verbose('Dropdown can fit in context downward', onScreen);\r\n              canOpenDownward = true;\r\n            }\r\n            else if(!onScreen.below && !onScreen.above) {\r\n              module.verbose('Dropdown cannot fit in either direction, favoring downward', onScreen);\r\n              canOpenDownward = true;\r\n            }\r\n            else {\r\n              module.verbose('Dropdown cannot fit below, opening upward', onScreen);\r\n              canOpenDownward = false;\r\n            }\r\n            $currentMenu.removeClass(className.loading);\r\n            return canOpenDownward;\r\n          },\r\n          inObject: function(needle, object) {\r\n            var\r\n              found = false\r\n            ;\r\n            $.each(object, function(index, property) {\r\n              if(property == needle) {\r\n                found = true;\r\n                return true;\r\n              }\r\n            });\r\n            return found;\r\n          },\r\n          multiple: function() {\r\n            return $module.hasClass(className.multiple);\r\n          },\r\n          remote: function() {\r\n            return settings.apiSettings && module.can.useAPI();\r\n          },\r\n          single: function() {\r\n            return !module.is.multiple();\r\n          },\r\n          selectMutation: function(mutations) {\r\n            var\r\n              selectChanged = false\r\n            ;\r\n            $.each(mutations, function(index, mutation) {\r\n              if(mutation.target && $(mutation.target).is('select')) {\r\n                selectChanged = true;\r\n                return true;\r\n              }\r\n            });\r\n            return selectChanged;\r\n          },\r\n          search: function() {\r\n            return $module.hasClass(className.search);\r\n          },\r\n          searchSelection: function() {\r\n            return ( module.has.search() && $search.parent(selector.dropdown).length === 1 );\r\n          },\r\n          selection: function() {\r\n            return $module.hasClass(className.selection);\r\n          },\r\n          userValue: function(value) {\r\n            return ($.inArray(value, module.get.userValues()) !== -1);\r\n          },\r\n          upward: function($menu) {\r\n            var $element = $menu || $module;\r\n            return $element.hasClass(className.upward);\r\n          },\r\n          visible: function($subMenu) {\r\n            return ($subMenu)\r\n              ? $subMenu.hasClass(className.visible)\r\n              : $menu.hasClass(className.visible)\r\n            ;\r\n          },\r\n          verticallyScrollableContext: function() {\r\n            var\r\n              overflowY = ($context.get(0) !== window)\r\n                ? $context.css('overflow-y')\r\n                : false\r\n            ;\r\n            return (overflowY == 'auto' || overflowY == 'scroll');\r\n          }\r\n        },\r\n\r\n        can: {\r\n          activate: function($item) {\r\n            if(settings.useLabels) {\r\n              return true;\r\n            }\r\n            if(!module.has.maxSelections()) {\r\n              return true;\r\n            }\r\n            if(module.has.maxSelections() && $item.hasClass(className.active)) {\r\n              return true;\r\n            }\r\n            return false;\r\n          },\r\n          click: function() {\r\n            return (hasTouch || settings.on == 'click');\r\n          },\r\n          extendSelect: function() {\r\n            return settings.allowAdditions || settings.apiSettings;\r\n          },\r\n          show: function() {\r\n            return !module.is.disabled() && (module.has.items() || module.has.message());\r\n          },\r\n          useAPI: function() {\r\n            return $.fn.api !== undefined;\r\n          }\r\n        },\r\n\r\n        animate: {\r\n          show: function(callback, $subMenu) {\r\n            var\r\n              $currentMenu = $subMenu || $menu,\r\n              start = ($subMenu)\r\n                ? function() {}\r\n                : function() {\r\n                  module.hideSubMenus();\r\n                  module.hideOthers();\r\n                  module.set.active();\r\n                },\r\n              transition\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            module.verbose('Doing menu show animation', $currentMenu);\r\n            module.set.direction($subMenu);\r\n            transition = module.get.transition($subMenu);\r\n            if( module.is.selection() ) {\r\n              module.set.scrollPosition(module.get.selectedItem(), true);\r\n            }\r\n            if( module.is.hidden($currentMenu) || module.is.animating($currentMenu) ) {\r\n              if(transition == 'none') {\r\n                start();\r\n                $currentMenu.transition('show');\r\n                callback.call(element);\r\n              }\r\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $currentMenu\r\n                  .transition({\r\n                    animation  : transition + ' in',\r\n                    debug      : settings.debug,\r\n                    verbose    : settings.verbose,\r\n                    duration   : settings.duration,\r\n                    queue      : true,\r\n                    onStart    : start,\r\n                    onComplete : function() {\r\n                      callback.call(element);\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.noTransition, transition);\r\n              }\r\n            }\r\n          },\r\n          hide: function(callback, $subMenu) {\r\n            var\r\n              $currentMenu = $subMenu || $menu,\r\n              duration = ($subMenu)\r\n                ? (settings.duration * 0.9)\r\n                : settings.duration,\r\n              start = ($subMenu)\r\n                ? function() {}\r\n                : function() {\r\n                  if( module.can.click() ) {\r\n                    module.unbind.intent();\r\n                  }\r\n                  module.remove.active();\r\n                },\r\n              transition = module.get.transition($subMenu)\r\n            ;\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if( module.is.visible($currentMenu) || module.is.animating($currentMenu) ) {\r\n              module.verbose('Doing menu hide animation', $currentMenu);\r\n\r\n              if(transition == 'none') {\r\n                start();\r\n                $currentMenu.transition('hide');\r\n                callback.call(element);\r\n              }\r\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\r\n                $currentMenu\r\n                  .transition({\r\n                    animation  : transition + ' out',\r\n                    duration   : settings.duration,\r\n                    debug      : settings.debug,\r\n                    verbose    : settings.verbose,\r\n                    queue      : true,\r\n                    onStart    : start,\r\n                    onComplete : function() {\r\n                      if(settings.direction == 'auto') {\r\n                        module.remove.upward($subMenu);\r\n                      }\r\n                      callback.call(element);\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.transition);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        hideAndClear: function() {\r\n          module.remove.searchTerm();\r\n          if( module.has.maxSelections() ) {\r\n            return;\r\n          }\r\n          if(module.has.search()) {\r\n            module.hide(function() {\r\n              module.remove.filteredItem();\r\n            });\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        delay: {\r\n          show: function() {\r\n            module.verbose('Delaying show event to ensure user intent');\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.show, settings.delay.show);\r\n          },\r\n          hide: function() {\r\n            module.verbose('Delaying hide event to ensure user intent');\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.hide, settings.delay.hide);\r\n          }\r\n        },\r\n\r\n        escape: {\r\n          value: function(value) {\r\n            var\r\n              multipleValues = $.isArray(value),\r\n              stringValue    = (typeof value === 'string'),\r\n              isUnparsable   = (!stringValue && !multipleValues),\r\n              hasQuotes      = (stringValue && value.search(regExp.quote) !== -1),\r\n              values         = []\r\n            ;\r\n            if(isUnparsable || !hasQuotes) {\r\n              return value;\r\n            }\r\n            module.debug('Encoding quote values for use in select', value);\r\n            if(multipleValues) {\r\n              $.each(value, function(index, value){\r\n                values.push(value.replace(regExp.quote, '&quot;'));\r\n              });\r\n              return values;\r\n            }\r\n            return value.replace(regExp.quote, '&quot;');\r\n          },\r\n          string: function(text) {\r\n            text =  String(text);\r\n            return text.replace(regExp.escape, '\\\\$&');\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : $allModules\r\n  ;\r\n};\r\n\r\n$.fn.dropdown.settings = {\r\n\r\n  silent                 : false,\r\n  debug                  : false,\r\n  verbose                : false,\r\n  performance            : true,\r\n\r\n  on                     : 'click',    // what event should show menu action on item selection\r\n  action                 : 'activate', // action on item selection (nothing, activate, select, combo, hide, function(){})\r\n\r\n\r\n  apiSettings            : false,\r\n  selectOnKeydown        : true,       // Whether selection should occur automatically when keyboard shortcuts used\r\n  minCharacters          : 0,          // Minimum characters required to trigger API call\r\n\r\n  filterRemoteData       : false,      // Whether API results should be filtered after being returned for query term\r\n  saveRemoteData         : true,       // Whether remote name/value pairs should be stored in sessionStorage to allow remote data to be restored on page refresh\r\n\r\n  throttle               : 200,        // How long to wait after last user input to search remotely\r\n\r\n  context                : window,     // Context to use when determining if on screen\r\n  direction              : 'auto',     // Whether dropdown should always open in one direction\r\n  keepOnScreen           : true,       // Whether dropdown should check whether it is on screen before showing\r\n\r\n  match                  : 'both',     // what to match against with search selection (both, text, or label)\r\n  fullTextSearch         : false,      // search anywhere in value (set to 'exact' to require exact matches)\r\n\r\n  placeholder            : 'auto',     // whether to convert blank <select> values to placeholder text\r\n  preserveHTML           : true,       // preserve html when selecting value\r\n  sortSelect             : false,      // sort selection on init\r\n\r\n  forceSelection         : true,       // force a choice on blur with search selection\r\n\r\n  allowAdditions         : false,      // whether multiple select should allow user added values\r\n  hideAdditions          : true,      // whether or not to hide special message prompting a user they can enter a value\r\n\r\n  maxSelections          : false,      // When set to a number limits the number of selections to this count\r\n  useLabels              : true,       // whether multiple select should filter currently active selections from choices\r\n  delimiter              : ',',        // when multiselect uses normal <input> the values will be delimited with this character\r\n\r\n  showOnFocus            : true,       // show menu on focus\r\n  allowReselection       : false,      // whether current value should trigger callbacks when reselected\r\n  allowTab               : true,       // add tabindex to element\r\n  allowCategorySelection : false,      // allow elements with sub-menus to be selected\r\n\r\n  fireOnInit             : false,      // Whether callbacks should fire when initializing dropdown values\r\n\r\n  transition             : 'auto',     // auto transition will slide down or up based on direction\r\n  duration               : 200,        // duration of transition\r\n\r\n  glyphWidth             : 1.037,      // widest glyph width in em (W is 1.037 em) used to calculate multiselect input width\r\n\r\n  // label settings on multi-select\r\n  label: {\r\n    transition : 'scale',\r\n    duration   : 200,\r\n    variation  : false\r\n  },\r\n\r\n  // delay before event\r\n  delay : {\r\n    hide   : 300,\r\n    show   : 200,\r\n    search : 20,\r\n    touch  : 50\r\n  },\r\n\r\n  /* Callbacks */\r\n  onChange      : function(value, text, $selected){},\r\n  onAdd         : function(value, text, $selected){},\r\n  onRemove      : function(value, text, $selected){},\r\n\r\n  onLabelSelect : function($selectedLabels){},\r\n  onLabelCreate : function(value, text) { return $(this); },\r\n  onLabelRemove : function(value) { return true; },\r\n  onNoResults   : function(searchTerm) { return true; },\r\n  onShow        : function(){},\r\n  onHide        : function(){},\r\n\r\n  /* Component */\r\n  name           : 'Dropdown',\r\n  namespace      : 'dropdown',\r\n\r\n  message: {\r\n    addResult     : 'Add <b>{term}</b>',\r\n    count         : '{count} selected',\r\n    maxSelections : 'Max {maxCount} selections',\r\n    noResults     : 'No results found.',\r\n    serverError   : 'There was an error contacting the server'\r\n  },\r\n\r\n  error : {\r\n    action          : 'You called a dropdown action that was not defined',\r\n    alreadySetup    : 'Once a select has been initialized behaviors must be called on the created ui dropdown',\r\n    labels          : 'Allowing user additions currently requires the use of labels.',\r\n    missingMultiple : '<select> requires multiple property to be set to correctly preserve multiple values',\r\n    method          : 'The method you called is not defined.',\r\n    noAPI           : 'The API module is required to load resources remotely',\r\n    noStorage       : 'Saving remote data requires session storage',\r\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>'\r\n  },\r\n\r\n  regExp : {\r\n    escape   : /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\r\n    quote    : /\"/g\r\n  },\r\n\r\n  metadata : {\r\n    defaultText     : 'defaultText',\r\n    defaultValue    : 'defaultValue',\r\n    placeholderText : 'placeholder',\r\n    text            : 'text',\r\n    value           : 'value'\r\n  },\r\n\r\n  // property names for remote query\r\n  fields: {\r\n    remoteValues : 'results',  // grouping for api results\r\n    values       : 'values',   // grouping for all dropdown values\r\n    disabled     : 'disabled', // whether value should be disabled\r\n    name         : 'name',     // displayed dropdown text\r\n    value        : 'value',    // actual dropdown value\r\n    text         : 'text'      // displayed text when selected\r\n  },\r\n\r\n  keys : {\r\n    backspace  : 8,\r\n    delimiter  : 188, // comma\r\n    deleteKey  : 46,\r\n    enter      : 13,\r\n    escape     : 27,\r\n    pageUp     : 33,\r\n    pageDown   : 34,\r\n    leftArrow  : 37,\r\n    upArrow    : 38,\r\n    rightArrow : 39,\r\n    downArrow  : 40\r\n  },\r\n\r\n  selector : {\r\n    addition     : '.addition',\r\n    dropdown     : '.ui.dropdown',\r\n    hidden       : '.hidden',\r\n    icon         : '> .dropdown.icon',\r\n    input        : '> input[type=\"hidden\"], > select',\r\n    item         : '.item',\r\n    label        : '> .label',\r\n    remove       : '> .label > .delete.icon',\r\n    siblingLabel : '.label',\r\n    menu         : '.menu',\r\n    message      : '.message',\r\n    menuIcon     : '.dropdown.icon',\r\n    search       : 'input.search, .menu > .search > input, .menu input.search',\r\n    sizer        : '> input.sizer',\r\n    text         : '> .text:not(.icon)',\r\n    unselectable : '.disabled, .filtered'\r\n  },\r\n\r\n  className : {\r\n    active      : 'active',\r\n    addition    : 'addition',\r\n    animating   : 'animating',\r\n    disabled    : 'disabled',\r\n    empty       : 'empty',\r\n    dropdown    : 'ui dropdown',\r\n    filtered    : 'filtered',\r\n    hidden      : 'hidden transition',\r\n    item        : 'item',\r\n    label       : 'ui label',\r\n    loading     : 'loading',\r\n    menu        : 'menu',\r\n    message     : 'message',\r\n    multiple    : 'multiple',\r\n    placeholder : 'default',\r\n    sizer       : 'sizer',\r\n    search      : 'search',\r\n    selected    : 'selected',\r\n    selection   : 'selection',\r\n    upward      : 'upward',\r\n    visible     : 'visible'\r\n  }\r\n\r\n};\r\n\r\n/* Templates */\r\n$.fn.dropdown.settings.templates = {\r\n\r\n  // generates dropdown from select values\r\n  dropdown: function(select) {\r\n    var\r\n      placeholder = select.placeholder || false,\r\n      values      = select.values || {},\r\n      html        = ''\r\n    ;\r\n    html +=  '<i class=\"dropdown icon\"></i>';\r\n    if(select.placeholder) {\r\n      html += '<div class=\"default text\">' + placeholder + '</div>';\r\n    }\r\n    else {\r\n      html += '<div class=\"text\"></div>';\r\n    }\r\n    html += '<div class=\"menu\">';\r\n    $.each(select.values, function(index, option) {\r\n      html += (option.disabled)\r\n        ? '<div class=\"disabled item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\r\n        : '<div class=\"item\" data-value=\"' + option.value + '\">' + option.name + '</div>'\r\n      ;\r\n    });\r\n    html += '</div>';\r\n    return html;\r\n  },\r\n\r\n  // generates just menu from select\r\n  menu: function(response, fields) {\r\n    var\r\n      values = response[fields.values] || {},\r\n      html   = ''\r\n    ;\r\n    $.each(values, function(index, option) {\r\n      var\r\n        maybeText = (option[fields.text])\r\n          ? 'data-text=\"' + option[fields.text] + '\"'\r\n          : '',\r\n        maybeDisabled = (option[fields.disabled])\r\n          ? 'disabled '\r\n          : ''\r\n      ;\r\n      html += '<div class=\"'+ maybeDisabled +'item\" data-value=\"' + option[fields.value] + '\"' + maybeText + '>'\r\n      html +=   option[fields.name];\r\n      html += '</div>';\r\n    });\r\n    return html;\r\n  },\r\n\r\n  // generates label for multiselect\r\n  label: function(value, text) {\r\n    return text + '<i class=\"delete icon\"></i>';\r\n  },\r\n\r\n\r\n  // generates messages like \"No results\"\r\n  message: function(message) {\r\n    return message;\r\n  },\r\n\r\n  // generates user addition to selection menu\r\n  addition: function(choice) {\r\n    return choice;\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Embed\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.embed = function(parameters) {\r\n\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.embed.settings, parameters)\r\n          : $.extend({}, $.fn.embed.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        sources         = settings.sources,\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        templates       = settings.templates,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $window         = $(window),\r\n        $module         = $(this),\r\n        $placeholder    = $module.find(selector.placeholder),\r\n        $icon           = $module.find(selector.icon),\r\n        $embed          = $module.find(selector.embed),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing embed');\r\n          module.determine.autoplay();\r\n          module.create();\r\n          module.bind.events();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance of embed');\r\n          module.reset();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $placeholder = $module.find(selector.placeholder);\r\n          $icon        = $module.find(selector.icon);\r\n          $embed       = $module.find(selector.embed);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            if( module.has.placeholder() ) {\r\n              module.debug('Adding placeholder events');\r\n              $module\r\n                .on('click' + eventNamespace, selector.placeholder, module.createAndShow)\r\n                .on('click' + eventNamespace, selector.icon, module.createAndShow)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        create: function() {\r\n          var\r\n            placeholder = module.get.placeholder()\r\n          ;\r\n          if(placeholder) {\r\n            module.createPlaceholder();\r\n          }\r\n          else {\r\n            module.createAndShow();\r\n          }\r\n        },\r\n\r\n        createPlaceholder: function(placeholder) {\r\n          var\r\n            icon  = module.get.icon(),\r\n            url   = module.get.url(),\r\n            embed = module.generate.embed(url)\r\n          ;\r\n          placeholder = placeholder || module.get.placeholder();\r\n          $module.html( templates.placeholder(placeholder, icon) );\r\n          module.debug('Creating placeholder for embed', placeholder, icon);\r\n        },\r\n\r\n        createEmbed: function(url) {\r\n          module.refresh();\r\n          url = url || module.get.url();\r\n          $embed = $('<div/>')\r\n            .addClass(className.embed)\r\n            .html( module.generate.embed(url) )\r\n            .appendTo($module)\r\n          ;\r\n          settings.onCreate.call(element, url);\r\n          module.debug('Creating embed object', $embed);\r\n        },\r\n\r\n        changeEmbed: function(url) {\r\n          $embed\r\n            .html( module.generate.embed(url) )\r\n          ;\r\n        },\r\n\r\n        createAndShow: function() {\r\n          module.createEmbed();\r\n          module.show();\r\n        },\r\n\r\n        // sets new embed\r\n        change: function(source, id, url) {\r\n          module.debug('Changing video to ', source, id, url);\r\n          $module\r\n            .data(metadata.source, source)\r\n            .data(metadata.id, id)\r\n          ;\r\n          if(url) {\r\n            $module.data(metadata.url, url);\r\n          }\r\n          else {\r\n            $module.removeData(metadata.url);\r\n          }\r\n          if(module.has.embed()) {\r\n            module.changeEmbed();\r\n          }\r\n          else {\r\n            module.create();\r\n          }\r\n        },\r\n\r\n        // clears embed\r\n        reset: function() {\r\n          module.debug('Clearing embed and showing placeholder');\r\n          module.remove.active();\r\n          module.remove.embed();\r\n          module.showPlaceholder();\r\n          settings.onReset.call(element);\r\n        },\r\n\r\n        // shows current embed\r\n        show: function() {\r\n          module.debug('Showing embed');\r\n          module.set.active();\r\n          settings.onDisplay.call(element);\r\n        },\r\n\r\n        hide: function() {\r\n          module.debug('Hiding embed');\r\n          module.showPlaceholder();\r\n        },\r\n\r\n        showPlaceholder: function() {\r\n          module.debug('Showing placeholder image');\r\n          module.remove.active();\r\n          settings.onPlaceholderDisplay.call(element);\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return settings.id || $module.data(metadata.id);\r\n          },\r\n          placeholder: function() {\r\n            return settings.placeholder || $module.data(metadata.placeholder);\r\n          },\r\n          icon: function() {\r\n            return (settings.icon)\r\n              ? settings.icon\r\n              : ($module.data(metadata.icon) !== undefined)\r\n                ? $module.data(metadata.icon)\r\n                : module.determine.icon()\r\n            ;\r\n          },\r\n          source: function(url) {\r\n            return (settings.source)\r\n              ? settings.source\r\n              : ($module.data(metadata.source) !== undefined)\r\n                ? $module.data(metadata.source)\r\n                : module.determine.source()\r\n            ;\r\n          },\r\n          type: function() {\r\n            var source = module.get.source();\r\n            return (sources[source] !== undefined)\r\n              ? sources[source].type\r\n              : false\r\n            ;\r\n          },\r\n          url: function() {\r\n            return (settings.url)\r\n              ? settings.url\r\n              : ($module.data(metadata.url) !== undefined)\r\n                ? $module.data(metadata.url)\r\n                : module.determine.url()\r\n            ;\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          autoplay: function() {\r\n            if(module.should.autoplay()) {\r\n              settings.autoplay = true;\r\n            }\r\n          },\r\n          source: function(url) {\r\n            var\r\n              matchedSource = false\r\n            ;\r\n            url = url || module.get.url();\r\n            if(url) {\r\n              $.each(sources, function(name, source) {\r\n                if(url.search(source.domain) !== -1) {\r\n                  matchedSource = name;\r\n                  return false;\r\n                }\r\n              });\r\n            }\r\n            return matchedSource;\r\n          },\r\n          icon: function() {\r\n            var\r\n              source = module.get.source()\r\n            ;\r\n            return (sources[source] !== undefined)\r\n              ? sources[source].icon\r\n              : false\r\n            ;\r\n          },\r\n          url: function() {\r\n            var\r\n              id     = settings.id     || $module.data(metadata.id),\r\n              source = settings.source || $module.data(metadata.source),\r\n              url\r\n            ;\r\n            url = (sources[source] !== undefined)\r\n              ? sources[source].url.replace('{id}', id)\r\n              : false\r\n            ;\r\n            if(url) {\r\n              $module.data(metadata.url, url);\r\n            }\r\n            return url;\r\n          }\r\n        },\r\n\r\n\r\n        set: {\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          embed: function() {\r\n            $embed.empty();\r\n          }\r\n        },\r\n\r\n        encode: {\r\n          parameters: function(parameters) {\r\n            var\r\n              urlString = [],\r\n              index\r\n            ;\r\n            for (index in parameters) {\r\n              urlString.push( encodeURIComponent(index) + '=' + encodeURIComponent( parameters[index] ) );\r\n            }\r\n            return urlString.join('&amp;');\r\n          }\r\n        },\r\n\r\n        generate: {\r\n          embed: function(url) {\r\n            module.debug('Generating embed html');\r\n            var\r\n              source = module.get.source(),\r\n              html,\r\n              parameters\r\n            ;\r\n            url = module.get.url(url);\r\n            if(url) {\r\n              parameters = module.generate.parameters(source);\r\n              html       = templates.iframe(url, parameters);\r\n            }\r\n            else {\r\n              module.error(error.noURL, $module);\r\n            }\r\n            return html;\r\n          },\r\n          parameters: function(source, extraParameters) {\r\n            var\r\n              parameters = (sources[source] && sources[source].parameters !== undefined)\r\n                ? sources[source].parameters(settings)\r\n                : {}\r\n            ;\r\n            extraParameters = extraParameters || settings.parameters;\r\n            if(extraParameters) {\r\n              parameters = $.extend({}, parameters, extraParameters);\r\n            }\r\n            parameters = settings.onEmbed(parameters);\r\n            return module.encode.parameters(parameters);\r\n          }\r\n        },\r\n\r\n        has: {\r\n          embed: function() {\r\n            return ($embed.length > 0);\r\n          },\r\n          placeholder: function() {\r\n            return settings.placeholder || $module.data(metadata.placeholder);\r\n          }\r\n        },\r\n\r\n        should: {\r\n          autoplay: function() {\r\n            return (settings.autoplay === 'auto')\r\n              ? (settings.placeholder || $module.data(metadata.placeholder) !== undefined)\r\n              : settings.autoplay\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          video: function() {\r\n            return module.get.type() == 'video';\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.embed.settings = {\r\n\r\n  name        : 'Embed',\r\n  namespace   : 'embed',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  icon     : false,\r\n  source   : false,\r\n  url      : false,\r\n  id       : false,\r\n\r\n  // standard video settings\r\n  autoplay  : 'auto',\r\n  color     : '#444444',\r\n  hd        : true,\r\n  brandedUI : false,\r\n\r\n  // additional parameters to include with the embed\r\n  parameters: false,\r\n\r\n  onDisplay            : function() {},\r\n  onPlaceholderDisplay : function() {},\r\n  onReset              : function() {},\r\n  onCreate             : function(url) {},\r\n  onEmbed              : function(parameters) {\r\n    return parameters;\r\n  },\r\n\r\n  metadata    : {\r\n    id          : 'id',\r\n    icon        : 'icon',\r\n    placeholder : 'placeholder',\r\n    source      : 'source',\r\n    url         : 'url'\r\n  },\r\n\r\n  error : {\r\n    noURL  : 'No URL specified',\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  className : {\r\n    active : 'active',\r\n    embed  : 'embed'\r\n  },\r\n\r\n  selector : {\r\n    embed       : '.embed',\r\n    placeholder : '.placeholder',\r\n    icon        : '.icon'\r\n  },\r\n\r\n  sources: {\r\n    youtube: {\r\n      name   : 'youtube',\r\n      type   : 'video',\r\n      icon   : 'video play',\r\n      domain : 'youtube.com',\r\n      url    : '//www.youtube.com/embed/{id}',\r\n      parameters: function(settings) {\r\n        return {\r\n          autohide       : !settings.brandedUI,\r\n          autoplay       : settings.autoplay,\r\n          color          : settings.color || undefined,\r\n          hq             : settings.hd,\r\n          jsapi          : settings.api,\r\n          modestbranding : !settings.brandedUI\r\n        };\r\n      }\r\n    },\r\n    vimeo: {\r\n      name   : 'vimeo',\r\n      type   : 'video',\r\n      icon   : 'video play',\r\n      domain : 'vimeo.com',\r\n      url    : '//player.vimeo.com/video/{id}',\r\n      parameters: function(settings) {\r\n        return {\r\n          api      : settings.api,\r\n          autoplay : settings.autoplay,\r\n          byline   : settings.brandedUI,\r\n          color    : settings.color || undefined,\r\n          portrait : settings.brandedUI,\r\n          title    : settings.brandedUI\r\n        };\r\n      }\r\n    }\r\n  },\r\n\r\n  templates: {\r\n    iframe : function(url, parameters) {\r\n      var src = url;\r\n      if (parameters) {\r\n          src += '?' + parameters;\r\n      }\r\n      return ''\r\n        + '<iframe src=\"' + src + '\"'\r\n        + ' width=\"100%\" height=\"100%\"'\r\n        + ' frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\r\n      ;\r\n    },\r\n    placeholder : function(image, icon) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(icon) {\r\n        html += '<i class=\"' + icon + ' icon\"></i>';\r\n      }\r\n      if(image) {\r\n        html += '<img class=\"placeholder\" src=\"' + image + '\">';\r\n      }\r\n      return html;\r\n    }\r\n  },\r\n\r\n  // NOT YET IMPLEMENTED\r\n  api     : false,\r\n  onPause : function() {},\r\n  onPlay  : function() {},\r\n  onStop  : function() {}\r\n\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Modal\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.modal = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $window        = $(window),\r\n    $document      = $(document),\r\n    $body          = $('body'),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings    = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\r\n          : $.extend({}, $.fn.modal.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n        $close          = $module.find(selector.close),\r\n\r\n        $allModals,\r\n        $otherModals,\r\n        $focusedElement,\r\n        $dimmable,\r\n        $dimmer,\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        ignoreRepeatedEvents = false,\r\n\r\n        elementEventNamespace,\r\n        id,\r\n        observer,\r\n        module\r\n      ;\r\n      module  = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing dimmer', $context);\r\n\r\n          module.create.id();\r\n          module.create.dimmer();\r\n          module.refreshModals();\r\n\r\n          module.bind.events();\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of modal');\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        create: {\r\n          dimmer: function() {\r\n            var\r\n              defaultSettings = {\r\n                debug      : settings.debug,\r\n                dimmerName : 'modals',\r\n                duration   : {\r\n                  show     : settings.duration,\r\n                  hide     : settings.duration\r\n                }\r\n              },\r\n              dimmerSettings = $.extend(true, defaultSettings, settings.dimmerSettings)\r\n            ;\r\n            if(settings.inverted) {\r\n              dimmerSettings.variation = (dimmerSettings.variation !== undefined)\r\n                ? dimmerSettings.variation + ' inverted'\r\n                : 'inverted'\r\n              ;\r\n            }\r\n            if($.fn.dimmer === undefined) {\r\n              module.error(error.dimmer);\r\n              return;\r\n            }\r\n            module.debug('Creating dimmer with settings', dimmerSettings);\r\n            $dimmable = $context.dimmer(dimmerSettings);\r\n            if(settings.detachable) {\r\n              module.verbose('Modal is detachable, moving content into dimmer');\r\n              $dimmable.dimmer('add content', $module);\r\n            }\r\n            else {\r\n              module.set.undetached();\r\n            }\r\n            if(settings.blurring) {\r\n              $dimmable.addClass(className.blurring);\r\n            }\r\n            $dimmer = $dimmable.dimmer('get dimmer');\r\n          },\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\r\n            elementEventNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          }\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous modal');\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n          $window.off(elementEventNamespace);\r\n          $dimmer.off(elementEventNamespace);\r\n          $close.off(eventNamespace);\r\n          $context.dimmer('destroy');\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            observer = new MutationObserver(function(mutations) {\r\n              module.debug('DOM tree modified, refreshing');\r\n              module.refresh();\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.remove.scrolling();\r\n          module.cacheSizes();\r\n          module.set.screenHeight();\r\n          module.set.type();\r\n          module.set.position();\r\n        },\r\n\r\n        refreshModals: function() {\r\n          $otherModals = $module.siblings(selector.modal);\r\n          $allModals   = $otherModals.add($module);\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $toggle = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($toggle.length > 0) {\r\n            module.debug('Attaching modal events to element', selector, event);\r\n            $toggle\r\n              .off(eventNamespace)\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound, selector);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Attaching events');\r\n            $module\r\n              .on('click' + eventNamespace, selector.close, module.event.close)\r\n              .on('click' + eventNamespace, selector.approve, module.event.approve)\r\n              .on('click' + eventNamespace, selector.deny, module.event.deny)\r\n            ;\r\n            $window\r\n              .on('resize' + elementEventNamespace, module.event.resize)\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          id: function() {\r\n            return (Math.random().toString(16) + '000000000').substr(2,8);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          approve: function() {\r\n            if(ignoreRepeatedEvents || settings.onApprove.call(element, $(this)) === false) {\r\n              module.verbose('Approve callback returned false cancelling hide');\r\n              return;\r\n            }\r\n            ignoreRepeatedEvents = true;\r\n            module.hide(function() {\r\n              ignoreRepeatedEvents = false;\r\n            });\r\n          },\r\n          deny: function() {\r\n            if(ignoreRepeatedEvents || settings.onDeny.call(element, $(this)) === false) {\r\n              module.verbose('Deny callback returned false cancelling hide');\r\n              return;\r\n            }\r\n            ignoreRepeatedEvents = true;\r\n            module.hide(function() {\r\n              ignoreRepeatedEvents = false;\r\n            });\r\n          },\r\n          close: function() {\r\n            module.hide();\r\n          },\r\n          click: function(event) {\r\n            var\r\n              $target   = $(event.target),\r\n              isInModal = ($target.closest(selector.modal).length > 0),\r\n              isInDOM   = $.contains(document.documentElement, event.target)\r\n            ;\r\n            if(!isInModal && isInDOM) {\r\n              module.debug('Dimmer clicked, hiding all modals');\r\n              if( module.is.active() ) {\r\n                module.remove.clickaway();\r\n                if(settings.allowMultiple) {\r\n                  module.hide();\r\n                }\r\n                else {\r\n                  module.hideAll();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          debounce: function(method, delay) {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(method, delay);\r\n          },\r\n          keyboard: function(event) {\r\n            var\r\n              keyCode   = event.which,\r\n              escapeKey = 27\r\n            ;\r\n            if(keyCode == escapeKey) {\r\n              if(settings.closable) {\r\n                module.debug('Escape key pressed hiding modal');\r\n                module.hide();\r\n              }\r\n              else {\r\n                module.debug('Escape key pressed, but closable is set to false');\r\n              }\r\n              event.preventDefault();\r\n            }\r\n          },\r\n          resize: function() {\r\n            if( $dimmable.dimmer('is active') ) {\r\n              requestAnimationFrame(module.refresh);\r\n            }\r\n          }\r\n        },\r\n\r\n        toggle: function() {\r\n          if( module.is.active() || module.is.animating() ) {\r\n            module.hide();\r\n          }\r\n          else {\r\n            module.show();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.refreshModals();\r\n          module.showModal(callback);\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.refreshModals();\r\n          module.hideModal(callback);\r\n        },\r\n\r\n        showModal: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.animating() || !module.is.active() ) {\r\n\r\n            module.showDimmer();\r\n            module.cacheSizes();\r\n            module.set.position();\r\n            module.set.screenHeight();\r\n            module.set.type();\r\n            module.set.clickaway();\r\n\r\n            if( !settings.allowMultiple && module.others.active() ) {\r\n              module.hideOthers(module.showModal);\r\n            }\r\n            else {\r\n              settings.onShow.call(element);\r\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n                module.debug('Showing modal with css animations');\r\n                $module\r\n                  .transition({\r\n                    debug       : settings.debug,\r\n                    animation   : settings.transition + ' in',\r\n                    queue       : settings.queue,\r\n                    duration    : settings.duration,\r\n                    useFailSafe : true,\r\n                    onComplete : function() {\r\n                      settings.onVisible.apply(element);\r\n                      if(settings.keyboardShortcuts) {\r\n                        module.add.keyboardShortcuts();\r\n                      }\r\n                      module.save.focus();\r\n                      module.set.active();\r\n                      if(settings.autofocus) {\r\n                        module.set.autofocus();\r\n                      }\r\n                      callback();\r\n                    }\r\n                  })\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.noTransition);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            module.debug('Modal is already visible');\r\n          }\r\n        },\r\n\r\n        hideModal: function(callback, keepDimmed) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.debug('Hiding modal');\r\n          if(settings.onHide.call(element, $(this)) === false) {\r\n            module.verbose('Hide callback returned false cancelling hide');\r\n            return;\r\n          }\r\n\r\n          if( module.is.animating() || module.is.active() ) {\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              module.remove.active();\r\n              $module\r\n                .transition({\r\n                  debug       : settings.debug,\r\n                  animation   : settings.transition + ' out',\r\n                  queue       : settings.queue,\r\n                  duration    : settings.duration,\r\n                  useFailSafe : true,\r\n                  onStart     : function() {\r\n                    if(!module.others.active() && !keepDimmed) {\r\n                      module.hideDimmer();\r\n                    }\r\n                    if(settings.keyboardShortcuts) {\r\n                      module.remove.keyboardShortcuts();\r\n                    }\r\n                  },\r\n                  onComplete : function() {\r\n                    settings.onHidden.call(element);\r\n                    module.restore.focus();\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          }\r\n        },\r\n\r\n        showDimmer: function() {\r\n          if($dimmable.dimmer('is animating') || !$dimmable.dimmer('is active') ) {\r\n            module.debug('Showing dimmer');\r\n            $dimmable.dimmer('show');\r\n          }\r\n          else {\r\n            module.debug('Dimmer already visible');\r\n          }\r\n        },\r\n\r\n        hideDimmer: function() {\r\n          if( $dimmable.dimmer('is animating') || ($dimmable.dimmer('is active')) ) {\r\n            $dimmable.dimmer('hide', function() {\r\n              module.remove.clickaway();\r\n              module.remove.screenHeight();\r\n            });\r\n          }\r\n          else {\r\n            module.debug('Dimmer is not visible cannot hide');\r\n            return;\r\n          }\r\n        },\r\n\r\n        hideAll: function(callback) {\r\n          var\r\n            $visibleModals = $allModals.filter('.' + className.active + ', .' + className.animating)\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( $visibleModals.length > 0 ) {\r\n            module.debug('Hiding all visible modals');\r\n            module.hideDimmer();\r\n            $visibleModals\r\n              .modal('hide modal', callback)\r\n            ;\r\n          }\r\n        },\r\n\r\n        hideOthers: function(callback) {\r\n          var\r\n            $visibleModals = $otherModals.filter('.' + className.active + ', .' + className.animating)\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( $visibleModals.length > 0 ) {\r\n            module.debug('Hiding other modals', $otherModals);\r\n            $visibleModals\r\n              .modal('hide modal', callback, true)\r\n            ;\r\n          }\r\n        },\r\n\r\n        others: {\r\n          active: function() {\r\n            return ($otherModals.filter('.' + className.active).length > 0);\r\n          },\r\n          animating: function() {\r\n            return ($otherModals.filter('.' + className.animating).length > 0);\r\n          }\r\n        },\r\n\r\n\r\n        add: {\r\n          keyboardShortcuts: function() {\r\n            module.verbose('Adding keyboard shortcuts');\r\n            $document\r\n              .on('keyup' + eventNamespace, module.event.keyboard)\r\n            ;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          focus: function() {\r\n            $focusedElement = $(document.activeElement).blur();\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          focus: function() {\r\n            if($focusedElement && $focusedElement.length > 0) {\r\n              $focusedElement.focus();\r\n            }\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          clickaway: function() {\r\n            if(settings.closable) {\r\n              $dimmer\r\n                .off('click' + elementEventNamespace)\r\n              ;\r\n            }\r\n          },\r\n          bodyStyle: function() {\r\n            if($body.attr('style') === '') {\r\n              module.verbose('Removing style attribute');\r\n              $body.removeAttr('style');\r\n            }\r\n          },\r\n          screenHeight: function() {\r\n            module.debug('Removing page height');\r\n            $body\r\n              .css('height', '')\r\n            ;\r\n          },\r\n          keyboardShortcuts: function() {\r\n            module.verbose('Removing keyboard shortcuts');\r\n            $document\r\n              .off('keyup' + eventNamespace)\r\n            ;\r\n          },\r\n          scrolling: function() {\r\n            $dimmable.removeClass(className.scrolling);\r\n            $module.removeClass(className.scrolling);\r\n          }\r\n        },\r\n\r\n        cacheSizes: function() {\r\n          var\r\n            modalHeight = $module.outerHeight()\r\n          ;\r\n          if(module.cache === undefined || modalHeight !== 0) {\r\n            module.cache = {\r\n              pageHeight    : $(document).outerHeight(),\r\n              height        : modalHeight + settings.offset,\r\n              contextHeight : (settings.context == 'body')\r\n                ? $(window).height()\r\n                : $dimmable.height()\r\n            };\r\n          }\r\n          module.debug('Caching modal and container sizes', module.cache);\r\n        },\r\n\r\n        can: {\r\n          fit: function() {\r\n            return ( ( module.cache.height + (settings.padding * 2) ) < module.cache.contextHeight);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return $module.transition('is supported')\r\n              ? $module.transition('is animating')\r\n              : $module.is(':visible')\r\n            ;\r\n          },\r\n          scrolling: function() {\r\n            return $dimmable.hasClass(className.scrolling);\r\n          },\r\n          modernBrowser: function() {\r\n            // appName for IE11 reports 'Netscape' can no longer use\r\n            return !(window.ActiveXObject || \"ActiveXObject\" in window);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          autofocus: function() {\r\n            var\r\n              $inputs    = $module.find('[tabindex], :input').filter(':visible'),\r\n              $autofocus = $inputs.filter('[autofocus]'),\r\n              $input     = ($autofocus.length > 0)\r\n                ? $autofocus.first()\r\n                : $inputs.first()\r\n            ;\r\n            if($input.length > 0) {\r\n              $input.focus();\r\n            }\r\n          },\r\n          clickaway: function() {\r\n            if(settings.closable) {\r\n              $dimmer\r\n                .on('click' + elementEventNamespace, module.event.click)\r\n              ;\r\n            }\r\n          },\r\n          screenHeight: function() {\r\n            if( module.can.fit() ) {\r\n              $body.css('height', '');\r\n            }\r\n            else {\r\n              module.debug('Modal is taller than page content, resizing page height');\r\n              $body\r\n                .css('height', module.cache.height + (settings.padding * 2) )\r\n              ;\r\n            }\r\n          },\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          },\r\n          scrolling: function() {\r\n            $dimmable.addClass(className.scrolling);\r\n            $module.addClass(className.scrolling);\r\n          },\r\n          type: function() {\r\n            if(module.can.fit()) {\r\n              module.verbose('Modal fits on screen');\r\n              if(!module.others.active() && !module.others.animating()) {\r\n                module.remove.scrolling();\r\n              }\r\n            }\r\n            else {\r\n              module.verbose('Modal cannot fit on screen setting to scrolling');\r\n              module.set.scrolling();\r\n            }\r\n          },\r\n          position: function() {\r\n            module.verbose('Centering modal on page', module.cache);\r\n            if(module.can.fit()) {\r\n              $module\r\n                .css({\r\n                  top: '',\r\n                  marginTop: -(module.cache.height / 2)\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              $module\r\n                .css({\r\n                  marginTop : '',\r\n                  top       : $document.scrollTop()\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          undetached: function() {\r\n            $dimmable.addClass(className.undetached);\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.modal.settings = {\r\n\r\n  name           : 'Modal',\r\n  namespace      : 'modal',\r\n\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : false,\r\n  performance    : true,\r\n\r\n  observeChanges : false,\r\n\r\n  allowMultiple  : false,\r\n  detachable     : true,\r\n  closable       : true,\r\n  autofocus      : true,\r\n\r\n  inverted       : false,\r\n  blurring       : false,\r\n\r\n  dimmerSettings : {\r\n    closable : false,\r\n    useCSS   : true\r\n  },\r\n\r\n  // whether to use keyboard shortcuts\r\n  keyboardShortcuts: true,\r\n\r\n  context    : 'body',\r\n\r\n  queue      : false,\r\n  duration   : 500,\r\n  offset     : 0,\r\n  transition : 'scale',\r\n\r\n  // padding with edge of page\r\n  padding    : 50,\r\n\r\n  // called before show animation\r\n  onShow     : function(){},\r\n\r\n  // called after show animation\r\n  onVisible  : function(){},\r\n\r\n  // called before hide animation\r\n  onHide     : function(){ return true; },\r\n\r\n  // called after hide animation\r\n  onHidden   : function(){},\r\n\r\n  // called after approve selector match\r\n  onApprove  : function(){ return true; },\r\n\r\n  // called after deny selector match\r\n  onDeny     : function(){ return true; },\r\n\r\n  selector    : {\r\n    close    : '> .close',\r\n    approve  : '.actions .positive, .actions .approve, .actions .ok',\r\n    deny     : '.actions .negative, .actions .deny, .actions .cancel',\r\n    modal    : '.ui.modal'\r\n  },\r\n  error : {\r\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\r\n    method    : 'The method you called is not defined.',\r\n    notFound  : 'The element you specified could not be found'\r\n  },\r\n  className : {\r\n    active     : 'active',\r\n    animating  : 'animating',\r\n    blurring   : 'blurring',\r\n    scrolling  : 'scrolling',\r\n    undetached : 'undetached'\r\n  }\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Nag\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.nag = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.nag.settings, parameters)\r\n          : $.extend({}, $.fn.nag.settings),\r\n\r\n        className       = settings.className,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        namespace       = settings.namespace,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = namespace + '-module',\r\n\r\n        $module         = $(this),\r\n\r\n        $close          = $module.find(selector.close),\r\n        $context        = (settings.context)\r\n          ? $(settings.context)\r\n          : $('body'),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        moduleOffset,\r\n        moduleHeight,\r\n\r\n        contextWidth,\r\n        contextHeight,\r\n        contextOffset,\r\n\r\n        yOffset,\r\n        yPosition,\r\n\r\n        timer,\r\n        module,\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); }\r\n      ;\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing element');\r\n\r\n          $module\r\n            .on('click' + eventNamespace, selector.close, module.dismiss)\r\n            .data(moduleNamespace, module)\r\n          ;\r\n\r\n          if(settings.detachable && $module.parent()[0] !== $context[0]) {\r\n            $module\r\n              .detach()\r\n              .prependTo($context)\r\n            ;\r\n          }\r\n\r\n          if(settings.displayTime > 0) {\r\n            setTimeout(module.hide, settings.displayTime);\r\n          }\r\n          module.show();\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying instance');\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        show: function() {\r\n          if( module.should.show() && !$module.is(':visible') ) {\r\n            module.debug('Showing nag', settings.animation.show);\r\n            if(settings.animation.show == 'fade') {\r\n              $module\r\n                .fadeIn(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            else {\r\n              $module\r\n                .slideDown(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        hide: function() {\r\n          module.debug('Showing nag', settings.animation.hide);\r\n          if(settings.animation.show == 'fade') {\r\n            $module\r\n              .fadeIn(settings.duration, settings.easing)\r\n            ;\r\n          }\r\n          else {\r\n            $module\r\n              .slideUp(settings.duration, settings.easing)\r\n            ;\r\n          }\r\n        },\r\n\r\n        onHide: function() {\r\n          module.debug('Removing nag', settings.animation.hide);\r\n          $module.remove();\r\n          if (settings.onHide) {\r\n            settings.onHide();\r\n          }\r\n        },\r\n\r\n        dismiss: function(event) {\r\n          if(settings.storageMethod) {\r\n            module.storage.set(settings.key, settings.value);\r\n          }\r\n          module.hide();\r\n          event.stopImmediatePropagation();\r\n          event.preventDefault();\r\n        },\r\n\r\n        should: {\r\n          show: function() {\r\n            if(settings.persist) {\r\n              module.debug('Persistent nag is set, can show nag');\r\n              return true;\r\n            }\r\n            if( module.storage.get(settings.key) != settings.value.toString() ) {\r\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.key));\r\n              return true;\r\n            }\r\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.key));\r\n            return false;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          storageOptions: function() {\r\n            var\r\n              options = {}\r\n            ;\r\n            if(settings.expires) {\r\n              options.expires = settings.expires;\r\n            }\r\n            if(settings.domain) {\r\n              options.domain = settings.domain;\r\n            }\r\n            if(settings.path) {\r\n              options.path = settings.path;\r\n            }\r\n            return options;\r\n          }\r\n        },\r\n\r\n        clear: function() {\r\n          module.storage.remove(settings.key);\r\n        },\r\n\r\n        storage: {\r\n          set: function(key, value) {\r\n            var\r\n              options = module.get.storageOptions()\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              window.localStorage.setItem(key, value);\r\n              module.debug('Value stored using local storage', key, value);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              window.sessionStorage.setItem(key, value);\r\n              module.debug('Value stored using session storage', key, value);\r\n            }\r\n            else if($.cookie !== undefined) {\r\n              $.cookie(key, value, options);\r\n              module.debug('Value stored using cookie', key, value, options);\r\n            }\r\n            else {\r\n              module.error(error.noCookieStorage);\r\n              return;\r\n            }\r\n          },\r\n          get: function(key, value) {\r\n            var\r\n              storedValue\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              storedValue = window.localStorage.getItem(key);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              storedValue = window.sessionStorage.getItem(key);\r\n            }\r\n            // get by cookie\r\n            else if($.cookie !== undefined) {\r\n              storedValue = $.cookie(key);\r\n            }\r\n            else {\r\n              module.error(error.noCookieStorage);\r\n            }\r\n            if(storedValue == 'undefined' || storedValue == 'null' || storedValue === undefined || storedValue === null) {\r\n              storedValue = undefined;\r\n            }\r\n            return storedValue;\r\n          },\r\n          remove: function(key) {\r\n            var\r\n              options = module.get.storageOptions()\r\n            ;\r\n            if(settings.storageMethod == 'localstorage' && window.localStorage !== undefined) {\r\n              window.localStorage.removeItem(key);\r\n            }\r\n            else if(settings.storageMethod == 'sessionstorage' && window.sessionStorage !== undefined) {\r\n              window.sessionStorage.removeItem(key);\r\n            }\r\n            // store by cookie\r\n            else if($.cookie !== undefined) {\r\n              $.removeCookie(key, options);\r\n            }\r\n            else {\r\n              module.error(error.noStorage);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.nag.settings = {\r\n\r\n  name        : 'Nag',\r\n\r\n  silent      : false,\r\n  debug       : false,\r\n  verbose     : false,\r\n  performance : true,\r\n\r\n  namespace   : 'Nag',\r\n\r\n  // allows cookie to be overridden\r\n  persist     : false,\r\n\r\n  // set to zero to require manually dismissal, otherwise hides on its own\r\n  displayTime : 0,\r\n\r\n  animation   : {\r\n    show : 'slide',\r\n    hide : 'slide'\r\n  },\r\n\r\n  context       : false,\r\n  detachable    : false,\r\n\r\n  expires       : 30,\r\n  domain        : false,\r\n  path          : '/',\r\n\r\n  // type of storage to use\r\n  storageMethod : 'cookie',\r\n\r\n  // value to store in dismissed localstorage/cookie\r\n  key           : 'nag',\r\n  value         : 'dismiss',\r\n\r\n  error: {\r\n    noCookieStorage : '$.cookie is not included. A storage solution is required.',\r\n    noStorage       : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\r\n    method          : 'The method you called is not defined.'\r\n  },\r\n\r\n  className     : {\r\n    bottom : 'bottom',\r\n    fixed  : 'fixed'\r\n  },\r\n\r\n  selector      : {\r\n    close : '.close.icon'\r\n  },\r\n\r\n  speed         : 500,\r\n  easing        : 'easeOutQuad',\r\n\r\n  onHide: function() {}\r\n\r\n};\r\n\r\n// Adds easing\r\n$.extend( $.easing, {\r\n  easeOutQuad: function (x, t, b, c, d) {\r\n    return -c *(t/=d)*(t-2) + b;\r\n  }\r\n});\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Popup\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.popup = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    $document      = $(document),\r\n    $window        = $(window),\r\n    $body          = $('body'),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    hasTouch       = (true),\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\r\n          : $.extend({}, $.fn.popup.settings),\r\n\r\n        selector           = settings.selector,\r\n        className          = settings.className,\r\n        error              = settings.error,\r\n        metadata           = settings.metadata,\r\n        namespace          = settings.namespace,\r\n\r\n        eventNamespace     = '.' + settings.namespace,\r\n        moduleNamespace    = 'module-' + namespace,\r\n\r\n        $module            = $(this),\r\n        $context           = $(settings.context),\r\n        $scrollContext     = $(settings.scrollContext),\r\n        $boundary          = $(settings.boundary),\r\n        $target            = (settings.target)\r\n          ? $(settings.target)\r\n          : $module,\r\n\r\n        $popup,\r\n        $offsetParent,\r\n\r\n        searchDepth        = 0,\r\n        triedPositions     = false,\r\n        openedWithTouch    = false,\r\n\r\n        element            = this,\r\n        instance           = $module.data(moduleNamespace),\r\n\r\n        documentObserver,\r\n        elementNamespace,\r\n        id,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        // binds events\r\n        initialize: function() {\r\n          module.debug('Initializing', $module);\r\n          module.createID();\r\n          module.bind.events();\r\n          if(!module.exists() && settings.preserve) {\r\n            module.create();\r\n          }\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            documentObserver = new MutationObserver(module.event.documentChanged);\r\n            documentObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', documentObserver);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          if(settings.popup) {\r\n            $popup = $(settings.popup).eq(0);\r\n          }\r\n          else {\r\n            if(settings.inline) {\r\n              $popup = $target.nextAll(selector.popup).eq(0);\r\n              settings.popup = $popup;\r\n            }\r\n          }\r\n          if(settings.popup) {\r\n            $popup.addClass(className.loading);\r\n            $offsetParent = module.get.offsetParent();\r\n            $popup.removeClass(className.loading);\r\n            if(settings.movePopup && module.has.popup() && module.get.offsetParent($popup)[0] !== $offsetParent[0]) {\r\n              module.debug('Moving popup to the same offset parent as activating element');\r\n              $popup\r\n                .detach()\r\n                .appendTo($offsetParent)\r\n              ;\r\n            }\r\n          }\r\n          else {\r\n            $offsetParent = (settings.inline)\r\n              ? module.get.offsetParent($target)\r\n              : module.has.popup()\r\n                ? module.get.offsetParent($popup)\r\n                : $body\r\n            ;\r\n          }\r\n          if( $offsetParent.is('html') && $offsetParent[0] !== $body[0] ) {\r\n            module.debug('Setting page as offset parent');\r\n            $offsetParent = $body;\r\n          }\r\n          if( module.get.variation() ) {\r\n            module.set.variation();\r\n          }\r\n        },\r\n\r\n        reposition: function() {\r\n          module.refresh();\r\n          module.set.position();\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying previous module');\r\n          if(documentObserver) {\r\n            documentObserver.disconnect();\r\n          }\r\n          // remove element only if was created dynamically\r\n          if($popup && !settings.preserve) {\r\n            module.removePopup();\r\n          }\r\n          // clear all timeouts\r\n          clearTimeout(module.hideTimer);\r\n          clearTimeout(module.showTimer);\r\n          // remove events\r\n          module.unbind.close();\r\n          module.unbind.events();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        event: {\r\n          start:  function(event) {\r\n            var\r\n              delay = ($.isPlainObject(settings.delay))\r\n                ? settings.delay.show\r\n                : settings.delay\r\n            ;\r\n            clearTimeout(module.hideTimer);\r\n            if(!openedWithTouch) {\r\n              module.showTimer = setTimeout(module.show, delay);\r\n            }\r\n          },\r\n          end:  function() {\r\n            var\r\n              delay = ($.isPlainObject(settings.delay))\r\n                ? settings.delay.hide\r\n                : settings.delay\r\n            ;\r\n            clearTimeout(module.showTimer);\r\n            module.hideTimer = setTimeout(module.hide, delay);\r\n          },\r\n          touchstart: function(event) {\r\n            openedWithTouch = true;\r\n            module.show();\r\n          },\r\n          resize: function() {\r\n            if( module.is.visible() ) {\r\n              module.set.position();\r\n            }\r\n          },\r\n          documentChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          hideGracefully: function(event) {\r\n            var\r\n              $target = $(event.target),\r\n              isInDOM = $.contains(document.documentElement, event.target),\r\n              inPopup = ($target.closest(selector.popup).length > 0)\r\n            ;\r\n            // don't close on clicks inside popup\r\n            if(event && !inPopup && isInDOM) {\r\n              module.debug('Click occurred outside popup hiding popup');\r\n              module.hide();\r\n            }\r\n            else {\r\n              module.debug('Click was inside popup, keeping popup open');\r\n            }\r\n          }\r\n        },\r\n\r\n        // generates popup html from metadata\r\n        create: function() {\r\n          var\r\n            html      = module.get.html(),\r\n            title     = module.get.title(),\r\n            content   = module.get.content()\r\n          ;\r\n\r\n          if(html || content || title) {\r\n            module.debug('Creating pop-up html');\r\n            if(!html) {\r\n              html = settings.templates.popup({\r\n                title   : title,\r\n                content : content\r\n              });\r\n            }\r\n            $popup = $('<div/>')\r\n              .addClass(className.popup)\r\n              .data(metadata.activator, $module)\r\n              .html(html)\r\n            ;\r\n            if(settings.inline) {\r\n              module.verbose('Inserting popup element inline', $popup);\r\n              $popup\r\n                .insertAfter($module)\r\n              ;\r\n            }\r\n            else {\r\n              module.verbose('Appending popup element to body', $popup);\r\n              $popup\r\n                .appendTo( $context )\r\n              ;\r\n            }\r\n            module.refresh();\r\n            module.set.variation();\r\n\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n            settings.onCreate.call($popup, element);\r\n          }\r\n          else if($target.next(selector.popup).length !== 0) {\r\n            module.verbose('Pre-existing popup found');\r\n            settings.inline = true;\r\n            settings.popup  = $target.next(selector.popup).data(metadata.activator, $module);\r\n            module.refresh();\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n          }\r\n          else if(settings.popup) {\r\n            $(settings.popup).data(metadata.activator, $module);\r\n            module.verbose('Used popup specified in settings');\r\n            module.refresh();\r\n            if(settings.hoverable) {\r\n              module.bind.popup();\r\n            }\r\n          }\r\n          else {\r\n            module.debug('No content specified skipping display', element);\r\n          }\r\n        },\r\n\r\n        createID: function() {\r\n          id = (Math.random().toString(16) + '000000000').substr(2, 8);\r\n          elementNamespace = '.' + id;\r\n          module.verbose('Creating unique id for element', id);\r\n        },\r\n\r\n        // determines popup state\r\n        toggle: function() {\r\n          module.debug('Toggling pop-up');\r\n          if( module.is.hidden() ) {\r\n            module.debug('Popup is hidden, showing pop-up');\r\n            module.unbind.close();\r\n            module.show();\r\n          }\r\n          else {\r\n            module.debug('Popup is visible, hiding pop-up');\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = callback || function(){};\r\n          module.debug('Showing pop-up', settings.transition);\r\n          if(module.is.hidden() && !( module.is.active() && module.is.dropdown()) ) {\r\n            if( !module.exists() ) {\r\n              module.create();\r\n            }\r\n            if(settings.onShow.call($popup, element) === false) {\r\n              module.debug('onShow callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            else if(!settings.preserve && !settings.popup) {\r\n              module.refresh();\r\n            }\r\n            if( $popup && module.set.position() ) {\r\n              module.save.conditions();\r\n              if(settings.exclusive) {\r\n                module.hideAll();\r\n              }\r\n              module.animate.show(callback);\r\n            }\r\n          }\r\n        },\r\n\r\n\r\n        hide: function(callback) {\r\n          callback = callback || function(){};\r\n          if( module.is.visible() || module.is.animating() ) {\r\n            if(settings.onHide.call($popup, element) === false) {\r\n              module.debug('onHide callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            module.remove.visible();\r\n            module.unbind.close();\r\n            module.restore.conditions();\r\n            module.animate.hide(callback);\r\n          }\r\n        },\r\n\r\n        hideAll: function() {\r\n          $(selector.popup)\r\n            .filter('.' + className.visible)\r\n            .each(function() {\r\n              $(this)\r\n                .data(metadata.activator)\r\n                  .popup('hide')\r\n              ;\r\n            })\r\n          ;\r\n        },\r\n        exists: function() {\r\n          if(!$popup) {\r\n            return false;\r\n          }\r\n          if(settings.inline || settings.popup) {\r\n            return ( module.has.popup() );\r\n          }\r\n          else {\r\n            return ( $popup.closest($context).length >= 1 )\r\n              ? true\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        removePopup: function() {\r\n          if( module.has.popup() && !settings.popup) {\r\n            module.debug('Removing popup', $popup);\r\n            $popup.remove();\r\n            $popup = undefined;\r\n            settings.onRemove.call($popup, element);\r\n          }\r\n        },\r\n\r\n        save: {\r\n          conditions: function() {\r\n            module.cache = {\r\n              title: $module.attr('title')\r\n            };\r\n            if (module.cache.title) {\r\n              $module.removeAttr('title');\r\n            }\r\n            module.verbose('Saving original attributes', module.cache.title);\r\n          }\r\n        },\r\n        restore: {\r\n          conditions: function() {\r\n            if(module.cache && module.cache.title) {\r\n              $module.attr('title', module.cache.title);\r\n              module.verbose('Restoring original attributes', module.cache.title);\r\n            }\r\n            return true;\r\n          }\r\n        },\r\n        supports: {\r\n          svg: function() {\r\n            return (typeof SVGGraphicsElement === undefined);\r\n          }\r\n        },\r\n        animate: {\r\n          show: function(callback) {\r\n            callback = $.isFunction(callback) ? callback : function(){};\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              module.set.visible();\r\n              $popup\r\n                .transition({\r\n                  animation  : settings.transition + ' in',\r\n                  queue      : false,\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    module.bind.close();\r\n                    callback.call($popup, element);\r\n                    settings.onVisible.call($popup, element);\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          },\r\n          hide: function(callback) {\r\n            callback = $.isFunction(callback) ? callback : function(){};\r\n            module.debug('Hiding pop-up');\r\n            if(settings.onHide.call($popup, element) === false) {\r\n              module.debug('onHide callback returned false, cancelling popup animation');\r\n              return;\r\n            }\r\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\r\n              $popup\r\n                .transition({\r\n                  animation  : settings.transition + ' out',\r\n                  queue      : false,\r\n                  duration   : settings.duration,\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  onComplete : function() {\r\n                    module.reset();\r\n                    callback.call($popup, element);\r\n                    settings.onHidden.call($popup, element);\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.error(error.noTransition);\r\n            }\r\n          }\r\n        },\r\n\r\n        change: {\r\n          content: function(html) {\r\n            $popup.html(html);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          html: function() {\r\n            $module.removeData(metadata.html);\r\n            return $module.data(metadata.html) || settings.html;\r\n          },\r\n          title: function() {\r\n            $module.removeData(metadata.title);\r\n            return $module.data(metadata.title) || settings.title;\r\n          },\r\n          content: function() {\r\n            $module.removeData(metadata.content);\r\n            return $module.data(metadata.content) || $module.attr('title') || settings.content;\r\n          },\r\n          variation: function() {\r\n            $module.removeData(metadata.variation);\r\n            return $module.data(metadata.variation) || settings.variation;\r\n          },\r\n          popup: function() {\r\n            return $popup;\r\n          },\r\n          popupOffset: function() {\r\n            return $popup.offset();\r\n          },\r\n          calculations: function() {\r\n            var\r\n              targetElement    = $target[0],\r\n              isWindow         = ($boundary[0] == window),\r\n              targetPosition   = (settings.inline || (settings.popup && settings.movePopup))\r\n                ? $target.position()\r\n                : $target.offset(),\r\n              screenPosition = (isWindow)\r\n                ? { top: 0, left: 0 }\r\n                : $boundary.offset(),\r\n              calculations   = {},\r\n              scroll = (isWindow)\r\n                ? { top: $window.scrollTop(), left: $window.scrollLeft() }\r\n                : { top: 0, left: 0},\r\n              screen\r\n            ;\r\n            calculations = {\r\n              // element which is launching popup\r\n              target : {\r\n                element : $target[0],\r\n                width   : $target.outerWidth(),\r\n                height  : $target.outerHeight(),\r\n                top     : targetPosition.top,\r\n                left    : targetPosition.left,\r\n                margin  : {}\r\n              },\r\n              // popup itself\r\n              popup : {\r\n                width  : $popup.outerWidth(),\r\n                height : $popup.outerHeight()\r\n              },\r\n              // offset container (or 3d context)\r\n              parent : {\r\n                width  : $offsetParent.outerWidth(),\r\n                height : $offsetParent.outerHeight()\r\n              },\r\n              // screen boundaries\r\n              screen : {\r\n                top  : screenPosition.top,\r\n                left : screenPosition.left,\r\n                scroll: {\r\n                  top  : scroll.top,\r\n                  left : scroll.left\r\n                },\r\n                width  : $boundary.width(),\r\n                height : $boundary.height()\r\n              }\r\n            };\r\n\r\n            // add in container calcs if fluid\r\n            if( settings.setFluidWidth && module.is.fluid() ) {\r\n              calculations.container = {\r\n                width: $popup.parent().outerWidth()\r\n              };\r\n              calculations.popup.width = calculations.container.width;\r\n            }\r\n\r\n            // add in margins if inline\r\n            calculations.target.margin.top = (settings.inline)\r\n              ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-top'), 10)\r\n              : 0\r\n            ;\r\n            calculations.target.margin.left = (settings.inline)\r\n              ? module.is.rtl()\r\n                ? parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-right'), 10)\r\n                : parseInt( window.getComputedStyle(targetElement).getPropertyValue('margin-left'), 10)\r\n              : 0\r\n            ;\r\n            // calculate screen boundaries\r\n            screen = calculations.screen;\r\n            calculations.boundary = {\r\n              top    : screen.top + screen.scroll.top,\r\n              bottom : screen.top + screen.scroll.top + screen.height,\r\n              left   : screen.left + screen.scroll.left,\r\n              right  : screen.left + screen.scroll.left + screen.width\r\n            };\r\n            return calculations;\r\n          },\r\n          id: function() {\r\n            return id;\r\n          },\r\n          startEvent: function() {\r\n            if(settings.on == 'hover') {\r\n              return 'mouseenter';\r\n            }\r\n            else if(settings.on == 'focus') {\r\n              return 'focus';\r\n            }\r\n            return false;\r\n          },\r\n          scrollEvent: function() {\r\n            return 'scroll';\r\n          },\r\n          endEvent: function() {\r\n            if(settings.on == 'hover') {\r\n              return 'mouseleave';\r\n            }\r\n            else if(settings.on == 'focus') {\r\n              return 'blur';\r\n            }\r\n            return false;\r\n          },\r\n          distanceFromBoundary: function(offset, calculations) {\r\n            var\r\n              distanceFromBoundary = {},\r\n              popup,\r\n              boundary\r\n            ;\r\n            calculations = calculations || module.get.calculations();\r\n\r\n            // shorthand\r\n            popup        = calculations.popup;\r\n            boundary     = calculations.boundary;\r\n\r\n            if(offset) {\r\n              distanceFromBoundary = {\r\n                top    : (offset.top - boundary.top),\r\n                left   : (offset.left - boundary.left),\r\n                right  : (boundary.right - (offset.left + popup.width) ),\r\n                bottom : (boundary.bottom - (offset.top + popup.height) )\r\n              };\r\n              module.verbose('Distance from boundaries determined', offset, distanceFromBoundary);\r\n            }\r\n            return distanceFromBoundary;\r\n          },\r\n          offsetParent: function($target) {\r\n            var\r\n              element = ($target !== undefined)\r\n                ? $target[0]\r\n                : $module[0],\r\n              parentNode = element.parentNode,\r\n              $node    = $(parentNode)\r\n            ;\r\n            if(parentNode) {\r\n              var\r\n                is2D     = ($node.css('transform') === 'none'),\r\n                isStatic = ($node.css('position') === 'static'),\r\n                isHTML   = $node.is('html')\r\n              ;\r\n              while(parentNode && !isHTML && isStatic && is2D) {\r\n                parentNode = parentNode.parentNode;\r\n                $node    = $(parentNode);\r\n                is2D     = ($node.css('transform') === 'none');\r\n                isStatic = ($node.css('position') === 'static');\r\n                isHTML   = $node.is('html');\r\n              }\r\n            }\r\n            return ($node && $node.length > 0)\r\n              ? $node\r\n              : $()\r\n            ;\r\n          },\r\n          positions: function() {\r\n            return {\r\n              'top left'      : false,\r\n              'top center'    : false,\r\n              'top right'     : false,\r\n              'bottom left'   : false,\r\n              'bottom center' : false,\r\n              'bottom right'  : false,\r\n              'left center'   : false,\r\n              'right center'  : false\r\n            };\r\n          },\r\n          nextPosition: function(position) {\r\n            var\r\n              positions          = position.split(' '),\r\n              verticalPosition   = positions[0],\r\n              horizontalPosition = positions[1],\r\n              opposite = {\r\n                top    : 'bottom',\r\n                bottom : 'top',\r\n                left   : 'right',\r\n                right  : 'left'\r\n              },\r\n              adjacent = {\r\n                left   : 'center',\r\n                center : 'right',\r\n                right  : 'left'\r\n              },\r\n              backup = {\r\n                'top left'      : 'top center',\r\n                'top center'    : 'top right',\r\n                'top right'     : 'right center',\r\n                'right center'  : 'bottom right',\r\n                'bottom right'  : 'bottom center',\r\n                'bottom center' : 'bottom left',\r\n                'bottom left'   : 'left center',\r\n                'left center'   : 'top left'\r\n              },\r\n              adjacentsAvailable = (verticalPosition == 'top' || verticalPosition == 'bottom'),\r\n              oppositeTried = false,\r\n              adjacentTried = false,\r\n              nextPosition  = false\r\n            ;\r\n            if(!triedPositions) {\r\n              module.verbose('All available positions available');\r\n              triedPositions = module.get.positions();\r\n            }\r\n\r\n            module.debug('Recording last position tried', position);\r\n            triedPositions[position] = true;\r\n\r\n            if(settings.prefer === 'opposite') {\r\n              nextPosition  = [opposite[verticalPosition], horizontalPosition];\r\n              nextPosition  = nextPosition.join(' ');\r\n              oppositeTried = (triedPositions[nextPosition] === true);\r\n              module.debug('Trying opposite strategy', nextPosition);\r\n            }\r\n            if((settings.prefer === 'adjacent') && adjacentsAvailable ) {\r\n              nextPosition  = [verticalPosition, adjacent[horizontalPosition]];\r\n              nextPosition  = nextPosition.join(' ');\r\n              adjacentTried = (triedPositions[nextPosition] === true);\r\n              module.debug('Trying adjacent strategy', nextPosition);\r\n            }\r\n            if(adjacentTried || oppositeTried) {\r\n              module.debug('Using backup position', nextPosition);\r\n              nextPosition = backup[position];\r\n            }\r\n            return nextPosition;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          position: function(position, calculations) {\r\n\r\n            // exit conditions\r\n            if($target.length === 0 || $popup.length === 0) {\r\n              module.error(error.notFound);\r\n              return;\r\n            }\r\n            var\r\n              offset,\r\n              distanceAway,\r\n              target,\r\n              popup,\r\n              parent,\r\n              positioning,\r\n              popupOffset,\r\n              distanceFromBoundary\r\n            ;\r\n\r\n            calculations = calculations || module.get.calculations();\r\n            position     = position     || $module.data(metadata.position) || settings.position;\r\n\r\n            offset       = $module.data(metadata.offset) || settings.offset;\r\n            distanceAway = settings.distanceAway;\r\n\r\n            // shorthand\r\n            target = calculations.target;\r\n            popup  = calculations.popup;\r\n            parent = calculations.parent;\r\n\r\n            if(target.width === 0 && target.height === 0 && !module.is.svg(target.element)) {\r\n              module.debug('Popup target is hidden, no action taken');\r\n              return false;\r\n            }\r\n\r\n            if(settings.inline) {\r\n              module.debug('Adding margin to calculation', target.margin);\r\n              if(position == 'left center' || position == 'right center') {\r\n                offset       +=  target.margin.top;\r\n                distanceAway += -target.margin.left;\r\n              }\r\n              else if (position == 'top left' || position == 'top center' || position == 'top right') {\r\n                offset       += target.margin.left;\r\n                distanceAway -= target.margin.top;\r\n              }\r\n              else {\r\n                offset       += target.margin.left;\r\n                distanceAway += target.margin.top;\r\n              }\r\n            }\r\n\r\n            module.debug('Determining popup position from calculations', position, calculations);\r\n\r\n            if (module.is.rtl()) {\r\n              position = position.replace(/left|right/g, function (match) {\r\n                return (match == 'left')\r\n                  ? 'right'\r\n                  : 'left'\r\n                ;\r\n              });\r\n              module.debug('RTL: Popup position updated', position);\r\n            }\r\n\r\n            // if last attempt use specified last resort position\r\n            if(searchDepth == settings.maxSearchDepth && typeof settings.lastResort === 'string') {\r\n              position = settings.lastResort;\r\n            }\r\n\r\n            switch (position) {\r\n              case 'top left':\r\n                positioning = {\r\n                  top    : 'auto',\r\n                  bottom : parent.height - target.top + distanceAway,\r\n                  left   : target.left + offset,\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'top center':\r\n                positioning = {\r\n                  bottom : parent.height - target.top + distanceAway,\r\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\r\n                  top    : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'top right':\r\n                positioning = {\r\n                  bottom :  parent.height - target.top + distanceAway,\r\n                  right  :  parent.width - target.left - target.width - offset,\r\n                  top    : 'auto',\r\n                  left   : 'auto'\r\n                };\r\n              break;\r\n              case 'left center':\r\n                positioning = {\r\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\r\n                  right  : parent.width - target.left + distanceAway,\r\n                  left   : 'auto',\r\n                  bottom : 'auto'\r\n                };\r\n              break;\r\n              case 'right center':\r\n                positioning = {\r\n                  top    : target.top + (target.height / 2) - (popup.height / 2) + offset,\r\n                  left   : target.left + target.width + distanceAway,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom left':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  left   : target.left + offset,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom center':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  left   : target.left + (target.width / 2) - (popup.width / 2) + offset,\r\n                  bottom : 'auto',\r\n                  right  : 'auto'\r\n                };\r\n              break;\r\n              case 'bottom right':\r\n                positioning = {\r\n                  top    : target.top + target.height + distanceAway,\r\n                  right  : parent.width - target.left  - target.width - offset,\r\n                  left   : 'auto',\r\n                  bottom : 'auto'\r\n                };\r\n              break;\r\n            }\r\n            if(positioning === undefined) {\r\n              module.error(error.invalidPosition, position);\r\n            }\r\n\r\n            module.debug('Calculated popup positioning values', positioning);\r\n\r\n            // tentatively place on stage\r\n            $popup\r\n              .css(positioning)\r\n              .removeClass(className.position)\r\n              .addClass(position)\r\n              .addClass(className.loading)\r\n            ;\r\n\r\n            popupOffset = module.get.popupOffset();\r\n\r\n            // see if any boundaries are surpassed with this tentative position\r\n            distanceFromBoundary = module.get.distanceFromBoundary(popupOffset, calculations);\r\n\r\n            if( module.is.offstage(distanceFromBoundary, position) ) {\r\n              module.debug('Position is outside viewport', position);\r\n              if(searchDepth < settings.maxSearchDepth) {\r\n                searchDepth++;\r\n                position = module.get.nextPosition(position);\r\n                module.debug('Trying new position', position);\r\n                return ($popup)\r\n                  ? module.set.position(position, calculations)\r\n                  : false\r\n                ;\r\n              }\r\n              else {\r\n                if(settings.lastResort) {\r\n                  module.debug('No position found, showing with last position');\r\n                }\r\n                else {\r\n                  module.debug('Popup could not find a position to display', $popup);\r\n                  module.error(error.cannotPlace, element);\r\n                  module.remove.attempts();\r\n                  module.remove.loading();\r\n                  module.reset();\r\n                  settings.onUnplaceable.call($popup, element);\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            module.debug('Position is on stage', position);\r\n            module.remove.attempts();\r\n            module.remove.loading();\r\n            if( settings.setFluidWidth && module.is.fluid() ) {\r\n              module.set.fluidWidth(calculations);\r\n            }\r\n            return true;\r\n          },\r\n\r\n          fluidWidth: function(calculations) {\r\n            calculations = calculations || module.get.calculations();\r\n            module.debug('Automatically setting element width to parent width', calculations.parent.width);\r\n            $popup.css('width', calculations.container.width);\r\n          },\r\n\r\n          variation: function(variation) {\r\n            variation = variation || module.get.variation();\r\n            if(variation && module.has.popup() ) {\r\n              module.verbose('Adding variation to popup', variation);\r\n              $popup.addClass(variation);\r\n            }\r\n          },\r\n\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          loading: function() {\r\n            $popup.removeClass(className.loading);\r\n          },\r\n          variation: function(variation) {\r\n            variation = variation || module.get.variation();\r\n            if(variation) {\r\n              module.verbose('Removing variation', variation);\r\n              $popup.removeClass(variation);\r\n            }\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          attempts: function() {\r\n            module.verbose('Resetting all searched positions');\r\n            searchDepth    = 0;\r\n            triedPositions = false;\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.debug('Binding popup events to module');\r\n            if(settings.on == 'click') {\r\n              $module\r\n                .on('click' + eventNamespace, module.toggle)\r\n              ;\r\n            }\r\n            if(settings.on == 'hover' && hasTouch) {\r\n              $module\r\n                .on('touchstart' + eventNamespace, module.event.touchstart)\r\n              ;\r\n            }\r\n            if( module.get.startEvent() ) {\r\n              $module\r\n                .on(module.get.startEvent() + eventNamespace, module.event.start)\r\n                .on(module.get.endEvent() + eventNamespace, module.event.end)\r\n              ;\r\n            }\r\n            if(settings.target) {\r\n              module.debug('Target set to element', $target);\r\n            }\r\n            $window.on('resize' + elementNamespace, module.event.resize);\r\n          },\r\n          popup: function() {\r\n            module.verbose('Allowing hover events on popup to prevent closing');\r\n            if( $popup && module.has.popup() ) {\r\n              $popup\r\n                .on('mouseenter' + eventNamespace, module.event.start)\r\n                .on('mouseleave' + eventNamespace, module.event.end)\r\n              ;\r\n            }\r\n          },\r\n          close: function() {\r\n            if(settings.hideOnScroll === true || (settings.hideOnScroll == 'auto' && settings.on != 'click')) {\r\n              $scrollContext\r\n                .one(module.get.scrollEvent() + elementNamespace, module.event.hideGracefully)\r\n              ;\r\n            }\r\n            if(settings.on == 'hover' && openedWithTouch) {\r\n              module.verbose('Binding popup close event to document');\r\n              $document\r\n                .on('touchstart' + elementNamespace, function(event) {\r\n                  module.verbose('Touched away from popup');\r\n                  module.event.hideGracefully.call(element, event);\r\n                })\r\n              ;\r\n            }\r\n            if(settings.on == 'click' && settings.closable) {\r\n              module.verbose('Binding popup close event to document');\r\n              $document\r\n                .on('click' + elementNamespace, function(event) {\r\n                  module.verbose('Clicked away from popup');\r\n                  module.event.hideGracefully.call(element, event);\r\n                })\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        unbind: {\r\n          events: function() {\r\n            $window\r\n              .off(elementNamespace)\r\n            ;\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          },\r\n          close: function() {\r\n            $document\r\n              .off(elementNamespace)\r\n            ;\r\n            $scrollContext\r\n              .off(elementNamespace)\r\n            ;\r\n          },\r\n        },\r\n\r\n        has: {\r\n          popup: function() {\r\n            return ($popup && $popup.length > 0);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          offstage: function(distanceFromBoundary, position) {\r\n            var\r\n              offstage = []\r\n            ;\r\n            // return boundaries that have been surpassed\r\n            $.each(distanceFromBoundary, function(direction, distance) {\r\n              if(distance < -settings.jitter) {\r\n                module.debug('Position exceeds allowable distance from edge', direction, distance, position);\r\n                offstage.push(direction);\r\n              }\r\n            });\r\n            if(offstage.length > 0) {\r\n              return true;\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          },\r\n          svg: function(element) {\r\n            return module.supports.svg() && (element instanceof SVGGraphicsElement);\r\n          },\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          animating: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.animating) );\r\n          },\r\n          fluid: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.fluid));\r\n          },\r\n          visible: function() {\r\n            return ($popup !== undefined && $popup.hasClass(className.visible));\r\n          },\r\n          dropdown: function() {\r\n            return $module.hasClass(className.dropdown);\r\n          },\r\n          hidden: function() {\r\n            return !module.is.visible();\r\n          },\r\n          rtl: function () {\r\n            return $module.css('direction') == 'rtl';\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.remove.visible();\r\n          if(settings.preserve) {\r\n            if($.fn.transition !== undefined) {\r\n              $popup\r\n                .transition('remove transition')\r\n              ;\r\n            }\r\n          }\r\n          else {\r\n            module.removePopup();\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.popup.settings = {\r\n\r\n  name           : 'Popup',\r\n\r\n  // module settings\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : false,\r\n  performance    : true,\r\n  namespace      : 'popup',\r\n\r\n  // whether it should use dom mutation observers\r\n  observeChanges : true,\r\n\r\n  // callback only when element added to dom\r\n  onCreate       : function(){},\r\n\r\n  // callback before element removed from dom\r\n  onRemove       : function(){},\r\n\r\n  // callback before show animation\r\n  onShow         : function(){},\r\n\r\n  // callback after show animation\r\n  onVisible      : function(){},\r\n\r\n  // callback before hide animation\r\n  onHide         : function(){},\r\n\r\n  // callback when popup cannot be positioned in visible screen\r\n  onUnplaceable  : function(){},\r\n\r\n  // callback after hide animation\r\n  onHidden       : function(){},\r\n\r\n  // when to show popup\r\n  on             : 'hover',\r\n\r\n  // element to use to determine if popup is out of boundary\r\n  boundary       : window,\r\n\r\n  // whether to add touchstart events when using hover\r\n  addTouchEvents : true,\r\n\r\n  // default position relative to element\r\n  position       : 'top left',\r\n\r\n  // name of variation to use\r\n  variation      : '',\r\n\r\n  // whether popup should be moved to context\r\n  movePopup      : true,\r\n\r\n  // element which popup should be relative to\r\n  target         : false,\r\n\r\n  // jq selector or element that should be used as popup\r\n  popup          : false,\r\n\r\n  // popup should remain inline next to activator\r\n  inline         : false,\r\n\r\n  // popup should be removed from page on hide\r\n  preserve       : false,\r\n\r\n  // popup should not close when being hovered on\r\n  hoverable      : false,\r\n\r\n  // explicitly set content\r\n  content        : false,\r\n\r\n  // explicitly set html\r\n  html           : false,\r\n\r\n  // explicitly set title\r\n  title          : false,\r\n\r\n  // whether automatically close on clickaway when on click\r\n  closable       : true,\r\n\r\n  // automatically hide on scroll\r\n  hideOnScroll   : 'auto',\r\n\r\n  // hide other popups on show\r\n  exclusive      : false,\r\n\r\n  // context to attach popups\r\n  context        : 'body',\r\n\r\n  // context for binding scroll events\r\n  scrollContext  : window,\r\n\r\n  // position to prefer when calculating new position\r\n  prefer         : 'opposite',\r\n\r\n  // specify position to appear even if it doesn't fit\r\n  lastResort     : false,\r\n\r\n  // delay used to prevent accidental refiring of animations due to user error\r\n  delay        : {\r\n    show : 50,\r\n    hide : 70\r\n  },\r\n\r\n  // whether fluid variation should assign width explicitly\r\n  setFluidWidth  : true,\r\n\r\n  // transition settings\r\n  duration       : 200,\r\n  transition     : 'scale',\r\n\r\n  // distance away from activating element in px\r\n  distanceAway   : 0,\r\n\r\n  // number of pixels an element is allowed to be \"offstage\" for a position to be chosen (allows for rounding)\r\n  jitter         : 2,\r\n\r\n  // offset on aligning axis from calculated position\r\n  offset         : 0,\r\n\r\n  // maximum times to look for a position before failing (9 positions total)\r\n  maxSearchDepth : 15,\r\n\r\n  error: {\r\n    invalidPosition : 'The position you specified is not a valid position',\r\n    cannotPlace     : 'Popup does not fit within the boundaries of the viewport',\r\n    method          : 'The method you called is not defined.',\r\n    noTransition    : 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>',\r\n    notFound        : 'The target or popup you specified does not exist on the page'\r\n  },\r\n\r\n  metadata: {\r\n    activator : 'activator',\r\n    content   : 'content',\r\n    html      : 'html',\r\n    offset    : 'offset',\r\n    position  : 'position',\r\n    title     : 'title',\r\n    variation : 'variation'\r\n  },\r\n\r\n  className   : {\r\n    active    : 'active',\r\n    animating : 'animating',\r\n    dropdown  : 'dropdown',\r\n    fluid     : 'fluid',\r\n    loading   : 'loading',\r\n    popup     : 'ui popup',\r\n    position  : 'top left center bottom right',\r\n    visible   : 'visible'\r\n  },\r\n\r\n  selector    : {\r\n    popup    : '.ui.popup'\r\n  },\r\n\r\n  templates: {\r\n    escape: function(string) {\r\n      var\r\n        badChars     = /[&<>\"'`]/g,\r\n        shouldEscape = /[&<>\"'`]/,\r\n        escape       = {\r\n          \"&\": \"&amp;\",\r\n          \"<\": \"&lt;\",\r\n          \">\": \"&gt;\",\r\n          '\"': \"&quot;\",\r\n          \"'\": \"&#x27;\",\r\n          \"`\": \"&#x60;\"\r\n        },\r\n        escapedChar  = function(chr) {\r\n          return escape[chr];\r\n        }\r\n      ;\r\n      if(shouldEscape.test(string)) {\r\n        return string.replace(badChars, escapedChar);\r\n      }\r\n      return string;\r\n    },\r\n    popup: function(text) {\r\n      var\r\n        html   = '',\r\n        escape = $.fn.popup.settings.templates.escape\r\n      ;\r\n      if(typeof text !== undefined) {\r\n        if(typeof text.title !== undefined && text.title) {\r\n          text.title = escape(text.title);\r\n          html += '<div class=\"header\">' + text.title + '</div>';\r\n        }\r\n        if(typeof text.content !== undefined && text.content) {\r\n          text.content = escape(text.content);\r\n          html += '<div class=\"content\">' + text.content + '</div>';\r\n        }\r\n      }\r\n      return html;\r\n    }\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Progress\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\nvar\r\n  global = (typeof window != 'undefined' && window.Math == Math)\r\n    ? window\r\n    : (typeof self != 'undefined' && self.Math == Math)\r\n      ? self\r\n      : Function('return this')()\r\n;\r\n\r\n$.fn.progress = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\r\n          : $.extend({}, $.fn.progress.settings),\r\n\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        namespace       = settings.namespace,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $bar            = $(this).find(selector.bar),\r\n        $progress       = $(this).find(selector.progress),\r\n        $label          = $(this).find(selector.label),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        animating = false,\r\n        transitionEnd,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing progress bar', settings);\r\n\r\n          module.set.duration();\r\n          module.set.transitionEvent();\r\n\r\n          module.read.metadata();\r\n          module.read.settings();\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of progress', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n        destroy: function() {\r\n          module.verbose('Destroying previous progress for', $module);\r\n          clearInterval(instance.interval);\r\n          module.remove.state();\r\n          $module.removeData(moduleNamespace);\r\n          instance = undefined;\r\n        },\r\n\r\n        reset: function() {\r\n          module.remove.nextValue();\r\n          module.update.progress(0);\r\n        },\r\n\r\n        complete: function() {\r\n          if(module.percent === undefined || module.percent < 100) {\r\n            module.remove.progressPoll();\r\n            module.set.percent(100);\r\n          }\r\n        },\r\n\r\n        read: {\r\n          metadata: function() {\r\n            var\r\n              data = {\r\n                percent : $module.data(metadata.percent),\r\n                total   : $module.data(metadata.total),\r\n                value   : $module.data(metadata.value)\r\n              }\r\n            ;\r\n            if(data.percent) {\r\n              module.debug('Current percent value set from metadata', data.percent);\r\n              module.set.percent(data.percent);\r\n            }\r\n            if(data.total) {\r\n              module.debug('Total value set from metadata', data.total);\r\n              module.set.total(data.total);\r\n            }\r\n            if(data.value) {\r\n              module.debug('Current value set from metadata', data.value);\r\n              module.set.value(data.value);\r\n              module.set.progress(data.value);\r\n            }\r\n          },\r\n          settings: function() {\r\n            if(settings.total !== false) {\r\n              module.debug('Current total set in settings', settings.total);\r\n              module.set.total(settings.total);\r\n            }\r\n            if(settings.value !== false) {\r\n              module.debug('Current value set in settings', settings.value);\r\n              module.set.value(settings.value);\r\n              module.set.progress(module.value);\r\n            }\r\n            if(settings.percent !== false) {\r\n              module.debug('Current percent set in settings', settings.percent);\r\n              module.set.percent(settings.percent);\r\n            }\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          transitionEnd: function(callback) {\r\n            var\r\n              transitionEnd = module.get.transitionEnd()\r\n            ;\r\n            $bar\r\n              .one(transitionEnd + eventNamespace, function(event) {\r\n                clearTimeout(module.failSafeTimer);\r\n                callback.call(this, event);\r\n              })\r\n            ;\r\n            module.failSafeTimer = setTimeout(function() {\r\n              $bar.triggerHandler(transitionEnd);\r\n            }, settings.duration + settings.failSafeDelay);\r\n            module.verbose('Adding fail safe timer', module.timer);\r\n          }\r\n        },\r\n\r\n        increment: function(incrementValue) {\r\n          var\r\n            maxValue,\r\n            startValue,\r\n            newValue\r\n          ;\r\n          if( module.has.total() ) {\r\n            startValue     = module.get.value();\r\n            incrementValue = incrementValue || 1;\r\n            newValue       = startValue + incrementValue;\r\n          }\r\n          else {\r\n            startValue     = module.get.percent();\r\n            incrementValue = incrementValue || module.get.randomValue();\r\n\r\n            newValue       = startValue + incrementValue;\r\n            maxValue       = 100;\r\n            module.debug('Incrementing percentage by', startValue, newValue);\r\n          }\r\n          newValue = module.get.normalizedValue(newValue);\r\n          module.set.progress(newValue);\r\n        },\r\n        decrement: function(decrementValue) {\r\n          var\r\n            total     = module.get.total(),\r\n            startValue,\r\n            newValue\r\n          ;\r\n          if(total) {\r\n            startValue     =  module.get.value();\r\n            decrementValue =  decrementValue || 1;\r\n            newValue       =  startValue - decrementValue;\r\n            module.debug('Decrementing value by', decrementValue, startValue);\r\n          }\r\n          else {\r\n            startValue     =  module.get.percent();\r\n            decrementValue =  decrementValue || module.get.randomValue();\r\n            newValue       =  startValue - decrementValue;\r\n            module.debug('Decrementing percentage by', decrementValue, startValue);\r\n          }\r\n          newValue = module.get.normalizedValue(newValue);\r\n          module.set.progress(newValue);\r\n        },\r\n\r\n        has: {\r\n          progressPoll: function() {\r\n            return module.progressPoll;\r\n          },\r\n          total: function() {\r\n            return (module.get.total() !== false);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          text: function(templateText) {\r\n            var\r\n              value   = module.value                || 0,\r\n              total   = module.total                || 0,\r\n              percent = (animating)\r\n                ? module.get.displayPercent()\r\n                : module.percent || 0,\r\n              left = (module.total > 0)\r\n                ? (total - value)\r\n                : (100 - percent)\r\n            ;\r\n            templateText = templateText || '';\r\n            templateText = templateText\r\n              .replace('{value}', value)\r\n              .replace('{total}', total)\r\n              .replace('{left}', left)\r\n              .replace('{percent}', percent)\r\n            ;\r\n            module.verbose('Adding variables to progress bar text', templateText);\r\n            return templateText;\r\n          },\r\n\r\n          normalizedValue: function(value) {\r\n            if(value < 0) {\r\n              module.debug('Value cannot decrement below 0');\r\n              return 0;\r\n            }\r\n            if(module.has.total()) {\r\n              if(value > module.total) {\r\n                module.debug('Value cannot increment above total', module.total);\r\n                return module.total;\r\n              }\r\n            }\r\n            else if(value > 100 ) {\r\n              module.debug('Value cannot increment above 100 percent');\r\n              return 100;\r\n            }\r\n            return value;\r\n          },\r\n\r\n          updateInterval: function() {\r\n            if(settings.updateInterval == 'auto') {\r\n              return settings.duration;\r\n            }\r\n            return settings.updateInterval;\r\n          },\r\n\r\n          randomValue: function() {\r\n            module.debug('Generating random increment percentage');\r\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\r\n          },\r\n\r\n          numericValue: function(value) {\r\n            return (typeof value === 'string')\r\n              ? (value.replace(/[^\\d.]/g, '') !== '')\r\n                ? +(value.replace(/[^\\d.]/g, ''))\r\n                : false\r\n              : value\r\n            ;\r\n          },\r\n\r\n          transitionEnd: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          },\r\n\r\n          // gets current displayed percentage (if animating values this is the intermediary value)\r\n          displayPercent: function() {\r\n            var\r\n              barWidth       = $bar.width(),\r\n              totalWidth     = $module.width(),\r\n              minDisplay     = parseInt($bar.css('min-width'), 10),\r\n              displayPercent = (barWidth > minDisplay)\r\n                ? (barWidth / totalWidth * 100)\r\n                : module.percent\r\n            ;\r\n            return (settings.precision > 0)\r\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\r\n              : Math.round(displayPercent)\r\n            ;\r\n          },\r\n\r\n          percent: function() {\r\n            return module.percent || 0;\r\n          },\r\n          value: function() {\r\n            return module.nextValue || module.value || 0;\r\n          },\r\n          total: function() {\r\n            return module.total || false;\r\n          }\r\n        },\r\n\r\n        create: {\r\n          progressPoll: function() {\r\n            module.progressPoll = setTimeout(function() {\r\n              module.update.toNextValue();\r\n              module.remove.progressPoll();\r\n            }, module.get.updateInterval());\r\n          },\r\n        },\r\n\r\n        is: {\r\n          complete: function() {\r\n            return module.is.success() || module.is.warning() || module.is.error();\r\n          },\r\n          success: function() {\r\n            return $module.hasClass(className.success);\r\n          },\r\n          warning: function() {\r\n            return $module.hasClass(className.warning);\r\n          },\r\n          error: function() {\r\n            return $module.hasClass(className.error);\r\n          },\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          visible: function() {\r\n            return $module.is(':visible');\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          progressPoll: function() {\r\n            module.verbose('Removing progress poll timer');\r\n            if(module.progressPoll) {\r\n              clearTimeout(module.progressPoll);\r\n              delete module.progressPoll;\r\n            }\r\n          },\r\n          nextValue: function() {\r\n            module.verbose('Removing progress value stored for next update');\r\n            delete module.nextValue;\r\n          },\r\n          state: function() {\r\n            module.verbose('Removing stored state');\r\n            delete module.total;\r\n            delete module.percent;\r\n            delete module.value;\r\n          },\r\n          active: function() {\r\n            module.verbose('Removing active state');\r\n            $module.removeClass(className.active);\r\n          },\r\n          success: function() {\r\n            module.verbose('Removing success state');\r\n            $module.removeClass(className.success);\r\n          },\r\n          warning: function() {\r\n            module.verbose('Removing warning state');\r\n            $module.removeClass(className.warning);\r\n          },\r\n          error: function() {\r\n            module.verbose('Removing error state');\r\n            $module.removeClass(className.error);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          barWidth: function(value) {\r\n            if(value > 100) {\r\n              module.error(error.tooHigh, value);\r\n            }\r\n            else if (value < 0) {\r\n              module.error(error.tooLow, value);\r\n            }\r\n            else {\r\n              $bar\r\n                .css('width', value + '%')\r\n              ;\r\n              $module\r\n                .attr('data-percent', parseInt(value, 10))\r\n              ;\r\n            }\r\n          },\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            module.verbose('Setting progress bar transition duration', duration);\r\n            $bar\r\n              .css({\r\n                'transition-duration':  duration\r\n              })\r\n            ;\r\n          },\r\n          percent: function(percent) {\r\n            percent = (typeof percent == 'string')\r\n              ? +(percent.replace('%', ''))\r\n              : percent\r\n            ;\r\n            // round display percentage\r\n            percent = (settings.precision > 0)\r\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\r\n              : Math.round(percent)\r\n            ;\r\n            module.percent = percent;\r\n            if( !module.has.total() ) {\r\n              module.value = (settings.precision > 0)\r\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\r\n                : Math.round( (percent / 100) * module.total * 10) / 10\r\n              ;\r\n              if(settings.limitValues) {\r\n                module.value = (module.value > 100)\r\n                  ? 100\r\n                  : (module.value < 0)\r\n                    ? 0\r\n                    : module.value\r\n                ;\r\n              }\r\n            }\r\n            module.set.barWidth(percent);\r\n            module.set.labelInterval();\r\n            module.set.labels();\r\n            settings.onChange.call(element, percent, module.value, module.total);\r\n          },\r\n          labelInterval: function() {\r\n            var\r\n              animationCallback = function() {\r\n                module.verbose('Bar finished animating, removing continuous label updates');\r\n                clearInterval(module.interval);\r\n                animating = false;\r\n                module.set.labels();\r\n              }\r\n            ;\r\n            clearInterval(module.interval);\r\n            module.bind.transitionEnd(animationCallback);\r\n            animating = true;\r\n            module.interval = setInterval(function() {\r\n              var\r\n                isInDOM = $.contains(document.documentElement, element)\r\n              ;\r\n              if(!isInDOM) {\r\n                clearInterval(module.interval);\r\n                animating = false;\r\n              }\r\n              module.set.labels();\r\n            }, settings.framerate);\r\n          },\r\n          labels: function() {\r\n            module.verbose('Setting both bar progress and outer label text');\r\n            module.set.barLabel();\r\n            module.set.state();\r\n          },\r\n          label: function(text) {\r\n            text = text || '';\r\n            if(text) {\r\n              text = module.get.text(text);\r\n              module.verbose('Setting label to text', text);\r\n              $label.text(text);\r\n            }\r\n          },\r\n          state: function(percent) {\r\n            percent = (percent !== undefined)\r\n              ? percent\r\n              : module.percent\r\n            ;\r\n            if(percent === 100) {\r\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\r\n                module.set.success();\r\n                module.debug('Automatically triggering success at 100%');\r\n              }\r\n              else {\r\n                module.verbose('Reached 100% removing active state');\r\n                module.remove.active();\r\n                module.remove.progressPoll();\r\n              }\r\n            }\r\n            else if(percent > 0) {\r\n              module.verbose('Adjusting active progress bar label', percent);\r\n              module.set.active();\r\n            }\r\n            else {\r\n              module.remove.active();\r\n              module.set.label(settings.text.active);\r\n            }\r\n          },\r\n          barLabel: function(text) {\r\n            if(text !== undefined) {\r\n              $progress.text( module.get.text(text) );\r\n            }\r\n            else if(settings.label == 'ratio' && module.total) {\r\n              module.verbose('Adding ratio to bar label');\r\n              $progress.text( module.get.text(settings.text.ratio) );\r\n            }\r\n            else if(settings.label == 'percent') {\r\n              module.verbose('Adding percentage to bar label');\r\n              $progress.text( module.get.text(settings.text.percent) );\r\n            }\r\n          },\r\n          active: function(text) {\r\n            text = text || settings.text.active;\r\n            module.debug('Setting active state');\r\n            if(settings.showActivity && !module.is.active() ) {\r\n              $module.addClass(className.active);\r\n            }\r\n            module.remove.warning();\r\n            module.remove.error();\r\n            module.remove.success();\r\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onActive.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          success : function(text) {\r\n            text = text || settings.text.success || settings.text.active;\r\n            module.debug('Setting success state');\r\n            $module.addClass(className.success);\r\n            module.remove.active();\r\n            module.remove.warning();\r\n            module.remove.error();\r\n            module.complete();\r\n            if(settings.text.success) {\r\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\r\n              module.set.label(text);\r\n            }\r\n            else {\r\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onSuccess.call(element, module.total);\r\n            });\r\n          },\r\n          warning : function(text) {\r\n            text = text || settings.text.warning;\r\n            module.debug('Setting warning state');\r\n            $module.addClass(className.warning);\r\n            module.remove.active();\r\n            module.remove.success();\r\n            module.remove.error();\r\n            module.complete();\r\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onWarning.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          error : function(text) {\r\n            text = text || settings.text.error;\r\n            module.debug('Setting error state');\r\n            $module.addClass(className.error);\r\n            module.remove.active();\r\n            module.remove.success();\r\n            module.remove.warning();\r\n            module.complete();\r\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\r\n            if(text) {\r\n              module.set.label(text);\r\n            }\r\n            module.bind.transitionEnd(function() {\r\n              settings.onError.call(element, module.value, module.total);\r\n            });\r\n          },\r\n          transitionEvent: function() {\r\n            transitionEnd = module.get.transitionEnd();\r\n          },\r\n          total: function(totalValue) {\r\n            module.total = totalValue;\r\n          },\r\n          value: function(value) {\r\n            module.value = value;\r\n          },\r\n          progress: function(value) {\r\n            if(!module.has.progressPoll()) {\r\n              module.debug('First update in progress update interval, immediately updating', value);\r\n              module.update.progress(value);\r\n              module.create.progressPoll();\r\n            }\r\n            else {\r\n              module.debug('Updated within interval, setting next update to use new value', value);\r\n              module.set.nextValue(value);\r\n            }\r\n          },\r\n          nextValue: function(value) {\r\n            module.nextValue = value;\r\n          }\r\n        },\r\n\r\n        update: {\r\n          toNextValue: function() {\r\n            var\r\n              nextValue = module.nextValue\r\n            ;\r\n            if(nextValue) {\r\n              module.debug('Update interval complete using last updated value', nextValue);\r\n              module.update.progress(nextValue);\r\n              module.remove.nextValue();\r\n            }\r\n          },\r\n          progress: function(value) {\r\n            var\r\n              percentComplete\r\n            ;\r\n            value = module.get.numericValue(value);\r\n            if(value === false) {\r\n              module.error(error.nonNumeric, value);\r\n            }\r\n            value = module.get.normalizedValue(value);\r\n            if( module.has.total() ) {\r\n              module.set.value(value);\r\n              percentComplete = (value / module.total) * 100;\r\n              module.debug('Calculating percent complete from total', percentComplete);\r\n              module.set.percent( percentComplete );\r\n            }\r\n            else {\r\n              percentComplete = value;\r\n              module.debug('Setting value to exact percentage value', percentComplete);\r\n              module.set.percent( percentComplete );\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.progress.settings = {\r\n\r\n  name         : 'Progress',\r\n  namespace    : 'progress',\r\n\r\n  silent       : false,\r\n  debug        : false,\r\n  verbose      : false,\r\n  performance  : true,\r\n\r\n  random       : {\r\n    min : 2,\r\n    max : 5\r\n  },\r\n\r\n  duration       : 300,\r\n\r\n  updateInterval : 'auto',\r\n\r\n  autoSuccess    : true,\r\n  showActivity   : true,\r\n  limitValues    : true,\r\n\r\n  label          : 'percent',\r\n  precision      : 0,\r\n  framerate      : (1000 / 30), /// 30 fps\r\n\r\n  percent        : false,\r\n  total          : false,\r\n  value          : false,\r\n\r\n  // delay in ms for fail safe animation callback\r\n  failSafeDelay : 100,\r\n\r\n  onLabelUpdate : function(state, text, value, total){\r\n    return text;\r\n  },\r\n  onChange      : function(percent, value, total){},\r\n  onSuccess     : function(total){},\r\n  onActive      : function(value, total){},\r\n  onError       : function(value, total){},\r\n  onWarning     : function(value, total){},\r\n\r\n  error    : {\r\n    method     : 'The method you called is not defined.',\r\n    nonNumeric : 'Progress value is non numeric',\r\n    tooHigh    : 'Value specified is above 100%',\r\n    tooLow     : 'Value specified is below 0%'\r\n  },\r\n\r\n  regExp: {\r\n    variable: /\\{\\$*[A-z0-9]+\\}/g\r\n  },\r\n\r\n  metadata: {\r\n    percent : 'percent',\r\n    total   : 'total',\r\n    value   : 'value'\r\n  },\r\n\r\n  selector : {\r\n    bar      : '> .bar',\r\n    label    : '> .label',\r\n    progress : '.bar > .progress'\r\n  },\r\n\r\n  text : {\r\n    active  : false,\r\n    error   : false,\r\n    success : false,\r\n    warning : false,\r\n    percent : '{percent}%',\r\n    ratio   : '{value} of {total}'\r\n  },\r\n\r\n  className : {\r\n    active  : 'active',\r\n    error   : 'error',\r\n    success : 'success',\r\n    warning : 'warning'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Rating\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.rating = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\r\n          : $.extend({}, $.fn.rating.settings),\r\n\r\n        namespace       = settings.namespace,\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        element         = this,\r\n        instance        = $(this).data(moduleNamespace),\r\n\r\n        $module         = $(this),\r\n        $icon           = $module.find(selector.icon),\r\n\r\n        initialLoad,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing rating module', settings);\r\n\r\n          if($icon.length === 0) {\r\n            module.setup.layout();\r\n          }\r\n\r\n          if(settings.interactive) {\r\n            module.enable();\r\n          }\r\n          else {\r\n            module.disable();\r\n          }\r\n          module.set.initialLoad();\r\n          module.set.rating( module.get.initialRating() );\r\n          module.remove.initialLoad();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Instantiating module', settings);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance', instance);\r\n          module.remove.events();\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          $icon   = $module.find(selector.icon);\r\n        },\r\n\r\n        setup: {\r\n          layout: function() {\r\n            var\r\n              maxRating = module.get.maxRating(),\r\n              html      = $.fn.rating.settings.templates.icon(maxRating)\r\n            ;\r\n            module.debug('Generating icon html dynamically');\r\n            $module\r\n              .html(html)\r\n            ;\r\n            module.refresh();\r\n          }\r\n        },\r\n\r\n        event: {\r\n          mouseenter: function() {\r\n            var\r\n              $activeIcon = $(this)\r\n            ;\r\n            $activeIcon\r\n              .nextAll()\r\n                .removeClass(className.selected)\r\n            ;\r\n            $module\r\n              .addClass(className.selected)\r\n            ;\r\n            $activeIcon\r\n              .addClass(className.selected)\r\n                .prevAll()\r\n                .addClass(className.selected)\r\n            ;\r\n          },\r\n          mouseleave: function() {\r\n            $module\r\n              .removeClass(className.selected)\r\n            ;\r\n            $icon\r\n              .removeClass(className.selected)\r\n            ;\r\n          },\r\n          click: function() {\r\n            var\r\n              $activeIcon   = $(this),\r\n              currentRating = module.get.rating(),\r\n              rating        = $icon.index($activeIcon) + 1,\r\n              canClear      = (settings.clearable == 'auto')\r\n               ? ($icon.length === 1)\r\n               : settings.clearable\r\n            ;\r\n            if(canClear && currentRating == rating) {\r\n              module.clearRating();\r\n            }\r\n            else {\r\n              module.set.rating( rating );\r\n            }\r\n          }\r\n        },\r\n\r\n        clearRating: function() {\r\n          module.debug('Clearing current rating');\r\n          module.set.rating(0);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding events');\r\n            $module\r\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\r\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\r\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          events: function() {\r\n            module.verbose('Removing events');\r\n            $module\r\n              .off(eventNamespace)\r\n            ;\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = false;\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          module.debug('Setting rating to interactive mode');\r\n          module.bind.events();\r\n          $module\r\n            .removeClass(className.disabled)\r\n          ;\r\n        },\r\n\r\n        disable: function() {\r\n          module.debug('Setting rating to read-only mode');\r\n          module.remove.events();\r\n          $module\r\n            .addClass(className.disabled)\r\n          ;\r\n        },\r\n\r\n        is: {\r\n          initialLoad: function() {\r\n            return initialLoad;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          initialRating: function() {\r\n            if($module.data(metadata.rating) !== undefined) {\r\n              $module.removeData(metadata.rating);\r\n              return $module.data(metadata.rating);\r\n            }\r\n            return settings.initialRating;\r\n          },\r\n          maxRating: function() {\r\n            if($module.data(metadata.maxRating) !== undefined) {\r\n              $module.removeData(metadata.maxRating);\r\n              return $module.data(metadata.maxRating);\r\n            }\r\n            return settings.maxRating;\r\n          },\r\n          rating: function() {\r\n            var\r\n              currentRating = $icon.filter('.' + className.active).length\r\n            ;\r\n            module.verbose('Current rating retrieved', currentRating);\r\n            return currentRating;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          rating: function(rating) {\r\n            var\r\n              ratingIndex = (rating - 1 >= 0)\r\n                ? (rating - 1)\r\n                : 0,\r\n              $activeIcon = $icon.eq(ratingIndex)\r\n            ;\r\n            $module\r\n              .removeClass(className.selected)\r\n            ;\r\n            $icon\r\n              .removeClass(className.selected)\r\n              .removeClass(className.active)\r\n            ;\r\n            if(rating > 0) {\r\n              module.verbose('Setting current rating to', rating);\r\n              $activeIcon\r\n                .prevAll()\r\n                .addBack()\r\n                  .addClass(className.active)\r\n              ;\r\n            }\r\n            if(!module.is.initialLoad()) {\r\n              settings.onRate.call(element, rating);\r\n            }\r\n          },\r\n          initialLoad: function() {\r\n            initialLoad = true;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.rating.settings = {\r\n\r\n  name          : 'Rating',\r\n  namespace     : 'rating',\r\n\r\n  slent         : false,\r\n  debug         : false,\r\n  verbose       : false,\r\n  performance   : true,\r\n\r\n  initialRating : 0,\r\n  interactive   : true,\r\n  maxRating     : 4,\r\n  clearable     : 'auto',\r\n\r\n  fireOnInit    : false,\r\n\r\n  onRate        : function(rating){},\r\n\r\n  error         : {\r\n    method    : 'The method you called is not defined',\r\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\r\n  },\r\n\r\n\r\n  metadata: {\r\n    rating    : 'rating',\r\n    maxRating : 'maxRating'\r\n  },\r\n\r\n  className : {\r\n    active   : 'active',\r\n    disabled : 'disabled',\r\n    selected : 'selected',\r\n    loading  : 'loading'\r\n  },\r\n\r\n  selector  : {\r\n    icon : '.icon'\r\n  },\r\n\r\n  templates: {\r\n    icon: function(maxRating) {\r\n      var\r\n        icon = 1,\r\n        html = ''\r\n      ;\r\n      while(icon <= maxRating) {\r\n        html += '<i class=\"icon\"></i>';\r\n        icon++;\r\n      }\r\n      return html;\r\n    }\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Search\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.search = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n  $(this)\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.search.settings, parameters)\r\n          : $.extend({}, $.fn.search.settings),\r\n\r\n        className        = settings.className,\r\n        metadata         = settings.metadata,\r\n        regExp           = settings.regExp,\r\n        fields           = settings.fields,\r\n        selector         = settings.selector,\r\n        error            = settings.error,\r\n        namespace        = settings.namespace,\r\n\r\n        eventNamespace   = '.' + namespace,\r\n        moduleNamespace  = namespace + '-module',\r\n\r\n        $module          = $(this),\r\n        $prompt          = $module.find(selector.prompt),\r\n        $searchButton    = $module.find(selector.searchButton),\r\n        $results         = $module.find(selector.results),\r\n        $result          = $module.find(selector.result),\r\n        $category        = $module.find(selector.category),\r\n\r\n        element          = this,\r\n        instance         = $module.data(moduleNamespace),\r\n\r\n        disabledBubbled  = false,\r\n        resultsDismissed = false,\r\n\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module');\r\n          module.determine.searchFields();\r\n          module.bind.events();\r\n          module.set.type();\r\n          module.create.results();\r\n          module.instantiate();\r\n        },\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n        destroy: function() {\r\n          module.verbose('Destroying instance');\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.debug('Refreshing selector cache');\r\n          $prompt         = $module.find(selector.prompt);\r\n          $searchButton   = $module.find(selector.searchButton);\r\n          $category       = $module.find(selector.category);\r\n          $results        = $module.find(selector.results);\r\n          $result         = $module.find(selector.result);\r\n        },\r\n\r\n        refreshResults: function() {\r\n          $results = $module.find(selector.results);\r\n          $result  = $module.find(selector.result);\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding events to search');\r\n            if(settings.automatic) {\r\n              $module\r\n                .on(module.get.inputEvent() + eventNamespace, selector.prompt, module.event.input)\r\n              ;\r\n              $prompt\r\n                .attr('autocomplete', 'off')\r\n              ;\r\n            }\r\n            $module\r\n              // prompt\r\n              .on('focus'     + eventNamespace, selector.prompt, module.event.focus)\r\n              .on('blur'      + eventNamespace, selector.prompt, module.event.blur)\r\n              .on('keydown'   + eventNamespace, selector.prompt, module.handleKeyboard)\r\n              // search button\r\n              .on('click'     + eventNamespace, selector.searchButton, module.query)\r\n              // results\r\n              .on('mousedown' + eventNamespace, selector.results, module.event.result.mousedown)\r\n              .on('mouseup'   + eventNamespace, selector.results, module.event.result.mouseup)\r\n              .on('click'     + eventNamespace, selector.result,  module.event.result.click)\r\n            ;\r\n          }\r\n        },\r\n\r\n        determine: {\r\n          searchFields: function() {\r\n            // this makes sure $.extend does not add specified search fields to default fields\r\n            // this is the only setting which should not extend defaults\r\n            if(parameters && parameters.searchFields !== undefined) {\r\n              settings.searchFields = parameters.searchFields;\r\n            }\r\n          }\r\n        },\r\n\r\n        event: {\r\n          input: function() {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(module.query, settings.searchDelay);\r\n          },\r\n          focus: function() {\r\n            module.set.focus();\r\n            if(settings.searchOnFocus && module.has.minimumCharacters() ) {\r\n              module.query(function() {\r\n                if(module.can.show() ) {\r\n                  module.showResults();\r\n                }\r\n              });\r\n            }\r\n          },\r\n          blur: function(event) {\r\n            var\r\n              pageLostFocus = (document.activeElement === this),\r\n              callback      = function() {\r\n                module.cancel.query();\r\n                module.remove.focus();\r\n                module.timer = setTimeout(module.hideResults, settings.hideDelay);\r\n              }\r\n            ;\r\n            if(pageLostFocus) {\r\n              return;\r\n            }\r\n            resultsDismissed = false;\r\n            if(module.resultsClicked) {\r\n              module.debug('Determining if user action caused search to close');\r\n              $module\r\n                .one('click.close' + eventNamespace, selector.results, function(event) {\r\n                  if(module.is.inMessage(event) || disabledBubbled) {\r\n                    $prompt.focus();\r\n                    return;\r\n                  }\r\n                  disabledBubbled = false;\r\n                  if( !module.is.animating() && !module.is.hidden()) {\r\n                    callback();\r\n                  }\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Input blurred without user action, closing results');\r\n              callback();\r\n            }\r\n          },\r\n          result: {\r\n            mousedown: function() {\r\n              module.resultsClicked = true;\r\n            },\r\n            mouseup: function() {\r\n              module.resultsClicked = false;\r\n            },\r\n            click: function(event) {\r\n              module.debug('Search result selected');\r\n              var\r\n                $result = $(this),\r\n                $title  = $result.find(selector.title).eq(0),\r\n                $link   = $result.is('a[href]')\r\n                  ? $result\r\n                  : $result.find('a[href]').eq(0),\r\n                href    = $link.attr('href')   || false,\r\n                target  = $link.attr('target') || false,\r\n                title   = $title.html(),\r\n                // title is used for result lookup\r\n                value   = ($title.length > 0)\r\n                  ? $title.text()\r\n                  : false,\r\n                results = module.get.results(),\r\n                result  = $result.data(metadata.result) || module.get.result(value, results),\r\n                returnedValue\r\n              ;\r\n              if( $.isFunction(settings.onSelect) ) {\r\n                if(settings.onSelect.call(element, result, results) === false) {\r\n                  module.debug('Custom onSelect callback cancelled default select action');\r\n                  disabledBubbled = true;\r\n                  return;\r\n                }\r\n              }\r\n              module.hideResults();\r\n              if(value) {\r\n                module.set.value(value);\r\n              }\r\n              if(href) {\r\n                module.verbose('Opening search link found in result', $link);\r\n                if(target == '_blank' || event.ctrlKey) {\r\n                  window.open(href);\r\n                }\r\n                else {\r\n                  window.location.href = (href);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        handleKeyboard: function(event) {\r\n          var\r\n            // force selector refresh\r\n            $result         = $module.find(selector.result),\r\n            $category       = $module.find(selector.category),\r\n            $activeResult   = $result.filter('.' + className.active),\r\n            currentIndex    = $result.index( $activeResult ),\r\n            resultSize      = $result.length,\r\n            hasActiveResult = $activeResult.length > 0,\r\n\r\n            keyCode         = event.which,\r\n            keys            = {\r\n              backspace : 8,\r\n              enter     : 13,\r\n              escape    : 27,\r\n              upArrow   : 38,\r\n              downArrow : 40\r\n            },\r\n            newIndex\r\n          ;\r\n          // search shortcuts\r\n          if(keyCode == keys.escape) {\r\n            module.verbose('Escape key pressed, blurring search field');\r\n            module.hideResults();\r\n            resultsDismissed = true;\r\n          }\r\n          if( module.is.visible() ) {\r\n            if(keyCode == keys.enter) {\r\n              module.verbose('Enter key pressed, selecting active result');\r\n              if( $result.filter('.' + className.active).length > 0 ) {\r\n                module.event.result.click.call($result.filter('.' + className.active), event);\r\n                event.preventDefault();\r\n                return false;\r\n              }\r\n            }\r\n            else if(keyCode == keys.upArrow && hasActiveResult) {\r\n              module.verbose('Up key pressed, changing active result');\r\n              newIndex = (currentIndex - 1 < 0)\r\n                ? currentIndex\r\n                : currentIndex - 1\r\n              ;\r\n              $category\r\n                .removeClass(className.active)\r\n              ;\r\n              $result\r\n                .removeClass(className.active)\r\n                .eq(newIndex)\r\n                  .addClass(className.active)\r\n                  .closest($category)\r\n                    .addClass(className.active)\r\n              ;\r\n              event.preventDefault();\r\n            }\r\n            else if(keyCode == keys.downArrow) {\r\n              module.verbose('Down key pressed, changing active result');\r\n              newIndex = (currentIndex + 1 >= resultSize)\r\n                ? currentIndex\r\n                : currentIndex + 1\r\n              ;\r\n              $category\r\n                .removeClass(className.active)\r\n              ;\r\n              $result\r\n                .removeClass(className.active)\r\n                .eq(newIndex)\r\n                  .addClass(className.active)\r\n                  .closest($category)\r\n                    .addClass(className.active)\r\n              ;\r\n              event.preventDefault();\r\n            }\r\n          }\r\n          else {\r\n            // query shortcuts\r\n            if(keyCode == keys.enter) {\r\n              module.verbose('Enter key pressed, executing query');\r\n              module.query();\r\n              module.set.buttonPressed();\r\n              $prompt.one('keyup', module.remove.buttonFocus);\r\n            }\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          api: function(searchTerm, callback) {\r\n            var\r\n              apiSettings = {\r\n                debug             : settings.debug,\r\n                on                : false,\r\n                cache             : true,\r\n                action            : 'search',\r\n                urlData           : {\r\n                  query : searchTerm\r\n                },\r\n                onSuccess         : function(response) {\r\n                  module.parse.response.call(element, response, searchTerm);\r\n                  callback();\r\n                },\r\n                onFailure         : function() {\r\n                  module.displayMessage(error.serverError);\r\n                  callback();\r\n                },\r\n                onAbort : function(response) {\r\n                },\r\n                onError           : module.error\r\n              },\r\n              searchHTML\r\n            ;\r\n            $.extend(true, apiSettings, settings.apiSettings);\r\n            module.verbose('Setting up API request', apiSettings);\r\n            $module.api(apiSettings);\r\n          }\r\n        },\r\n\r\n        can: {\r\n          useAPI: function() {\r\n            return $.fn.api !== undefined;\r\n          },\r\n          show: function() {\r\n            return module.is.focused() && !module.is.visible() && !module.is.empty();\r\n          },\r\n          transition: function() {\r\n            return settings.transition && $.fn.transition !== undefined && $module.transition('is supported');\r\n          }\r\n        },\r\n\r\n        is: {\r\n          animating: function() {\r\n            return $results.hasClass(className.animating);\r\n          },\r\n          hidden: function() {\r\n            return $results.hasClass(className.hidden);\r\n          },\r\n          inMessage: function(event) {\r\n            if(!event.target) {\r\n              return;\r\n            }\r\n            var\r\n              $target = $(event.target),\r\n              isInDOM = $.contains(document.documentElement, event.target)\r\n            ;\r\n            return (isInDOM && $target.closest(selector.message).length > 0);\r\n          },\r\n          empty: function() {\r\n            return ($results.html() === '');\r\n          },\r\n          visible: function() {\r\n            return ($results.filter(':visible').length > 0);\r\n          },\r\n          focused: function() {\r\n            return ($prompt.filter(':focus').length > 0);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          inputEvent: function() {\r\n            var\r\n              prompt = $prompt[0],\r\n              inputEvent   = (prompt !== undefined && prompt.oninput !== undefined)\r\n                ? 'input'\r\n                : (prompt !== undefined && prompt.onpropertychange !== undefined)\r\n                  ? 'propertychange'\r\n                  : 'keyup'\r\n            ;\r\n            return inputEvent;\r\n          },\r\n          value: function() {\r\n            return $prompt.val();\r\n          },\r\n          results: function() {\r\n            var\r\n              results = $module.data(metadata.results)\r\n            ;\r\n            return results;\r\n          },\r\n          result: function(value, results) {\r\n            var\r\n              lookupFields = ['title', 'id'],\r\n              result       = false\r\n            ;\r\n            value = (value !== undefined)\r\n              ? value\r\n              : module.get.value()\r\n            ;\r\n            results = (results !== undefined)\r\n              ? results\r\n              : module.get.results()\r\n            ;\r\n            if(settings.type === 'category') {\r\n              module.debug('Finding result that matches', value);\r\n              $.each(results, function(index, category) {\r\n                if($.isArray(category.results)) {\r\n                  result = module.search.object(value, category.results, lookupFields)[0];\r\n                  // don't continue searching if a result is found\r\n                  if(result) {\r\n                    return false;\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            else {\r\n              module.debug('Finding result in results object', value);\r\n              result = module.search.object(value, results, lookupFields)[0];\r\n            }\r\n            return result || false;\r\n          },\r\n        },\r\n\r\n        select: {\r\n          firstResult: function() {\r\n            module.verbose('Selecting first result');\r\n            $result.first().addClass(className.active);\r\n          }\r\n        },\r\n\r\n        set: {\r\n          focus: function() {\r\n            $module.addClass(className.focus);\r\n          },\r\n          loading: function() {\r\n            $module.addClass(className.loading);\r\n          },\r\n          value: function(value) {\r\n            module.verbose('Setting search input value', value);\r\n            $prompt\r\n              .val(value)\r\n            ;\r\n          },\r\n          type: function(type) {\r\n            type = type || settings.type;\r\n            if(settings.type == 'category') {\r\n              $module.addClass(settings.type);\r\n            }\r\n          },\r\n          buttonPressed: function() {\r\n            $searchButton.addClass(className.pressed);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          loading: function() {\r\n            $module.removeClass(className.loading);\r\n          },\r\n          focus: function() {\r\n            $module.removeClass(className.focus);\r\n          },\r\n          buttonPressed: function() {\r\n            $searchButton.removeClass(className.pressed);\r\n          }\r\n        },\r\n\r\n        query: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          var\r\n            searchTerm = module.get.value(),\r\n            cache = module.read.cache(searchTerm)\r\n          ;\r\n          callback = callback || function() {};\r\n          if( module.has.minimumCharacters() )  {\r\n            if(cache) {\r\n              module.debug('Reading result from cache', searchTerm);\r\n              module.save.results(cache.results);\r\n              module.addResults(cache.html);\r\n              module.inject.id(cache.results);\r\n              callback();\r\n            }\r\n            else {\r\n              module.debug('Querying for', searchTerm);\r\n              if($.isPlainObject(settings.source) || $.isArray(settings.source)) {\r\n                module.search.local(searchTerm);\r\n                callback();\r\n              }\r\n              else if( module.can.useAPI() ) {\r\n                module.search.remote(searchTerm, callback);\r\n              }\r\n              else {\r\n                module.error(error.source);\r\n                callback();\r\n              }\r\n            }\r\n            settings.onSearchQuery.call(element, searchTerm);\r\n          }\r\n          else {\r\n            module.hideResults();\r\n          }\r\n        },\r\n\r\n        search: {\r\n          local: function(searchTerm) {\r\n            var\r\n              results = module.search.object(searchTerm, settings.content),\r\n              searchHTML\r\n            ;\r\n            module.set.loading();\r\n            module.save.results(results);\r\n            module.debug('Returned local search results', results);\r\n\r\n            searchHTML = module.generateResults({\r\n              results: results\r\n            });\r\n            module.remove.loading();\r\n            module.addResults(searchHTML);\r\n            module.inject.id(results);\r\n            module.write.cache(searchTerm, {\r\n              html    : searchHTML,\r\n              results : results\r\n            });\r\n          },\r\n          remote: function(searchTerm, callback) {\r\n            callback = $.isFunction(callback)\r\n              ? callback\r\n              : function(){}\r\n            ;\r\n            if($module.api('is loading')) {\r\n              $module.api('abort');\r\n            }\r\n            module.setup.api(searchTerm, callback);\r\n            $module\r\n              .api('query')\r\n            ;\r\n          },\r\n          object: function(searchTerm, source, searchFields) {\r\n            var\r\n              results      = [],\r\n              fuzzyResults = [],\r\n              searchExp    = searchTerm.toString().replace(regExp.escape, '\\\\$&'),\r\n              matchRegExp  = new RegExp(regExp.beginsWith + searchExp, 'i'),\r\n\r\n              // avoid duplicates when pushing results\r\n              addResult = function(array, result) {\r\n                var\r\n                  notResult      = ($.inArray(result, results) == -1),\r\n                  notFuzzyResult = ($.inArray(result, fuzzyResults) == -1)\r\n                ;\r\n                if(notResult && notFuzzyResult) {\r\n                  array.push(result);\r\n                }\r\n              }\r\n            ;\r\n            source = source || settings.source;\r\n            searchFields = (searchFields !== undefined)\r\n              ? searchFields\r\n              : settings.searchFields\r\n            ;\r\n\r\n            // search fields should be array to loop correctly\r\n            if(!$.isArray(searchFields)) {\r\n              searchFields = [searchFields];\r\n            }\r\n\r\n            // exit conditions if no source\r\n            if(source === undefined || source === false) {\r\n              module.error(error.source);\r\n              return [];\r\n            }\r\n\r\n            // iterate through search fields looking for matches\r\n            $.each(searchFields, function(index, field) {\r\n              $.each(source, function(label, content) {\r\n                var\r\n                  fieldExists = (typeof content[field] == 'string')\r\n                ;\r\n                if(fieldExists) {\r\n                  if( content[field].search(matchRegExp) !== -1) {\r\n                    // content starts with value (first in results)\r\n                    addResult(results, content);\r\n                  }\r\n                  else if(settings.searchFullText && module.fuzzySearch(searchTerm, content[field]) ) {\r\n                    // content fuzzy matches (last in results)\r\n                    addResult(fuzzyResults, content);\r\n                  }\r\n                }\r\n              });\r\n            });\r\n            return $.merge(results, fuzzyResults);\r\n          }\r\n        },\r\n\r\n        fuzzySearch: function(query, term) {\r\n          var\r\n            termLength  = term.length,\r\n            queryLength = query.length\r\n          ;\r\n          if(typeof query !== 'string') {\r\n            return false;\r\n          }\r\n          query = query.toLowerCase();\r\n          term  = term.toLowerCase();\r\n          if(queryLength > termLength) {\r\n            return false;\r\n          }\r\n          if(queryLength === termLength) {\r\n            return (query === term);\r\n          }\r\n          search: for (var characterIndex = 0, nextCharacterIndex = 0; characterIndex < queryLength; characterIndex++) {\r\n            var\r\n              queryCharacter = query.charCodeAt(characterIndex)\r\n            ;\r\n            while(nextCharacterIndex < termLength) {\r\n              if(term.charCodeAt(nextCharacterIndex++) === queryCharacter) {\r\n                continue search;\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n\r\n        parse: {\r\n          response: function(response, searchTerm) {\r\n            var\r\n              searchHTML = module.generateResults(response)\r\n            ;\r\n            module.verbose('Parsing server response', response);\r\n            if(response !== undefined) {\r\n              if(searchTerm !== undefined && response[fields.results] !== undefined) {\r\n                module.addResults(searchHTML);\r\n                module.inject.id(response[fields.results]);\r\n                module.write.cache(searchTerm, {\r\n                  html    : searchHTML,\r\n                  results : response[fields.results]\r\n                });\r\n                module.save.results(response[fields.results]);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        cancel: {\r\n          query: function() {\r\n            if( module.can.useAPI() ) {\r\n              $module.api('abort');\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          minimumCharacters: function() {\r\n            var\r\n              searchTerm    = module.get.value(),\r\n              numCharacters = searchTerm.length\r\n            ;\r\n            return (numCharacters >= settings.minCharacters);\r\n          },\r\n          results: function() {\r\n            if($results.length === 0) {\r\n              return false;\r\n            }\r\n            var\r\n              html = $results.html()\r\n            ;\r\n            return html != '';\r\n          }\r\n        },\r\n\r\n        clear: {\r\n          cache: function(value) {\r\n            var\r\n              cache = $module.data(metadata.cache)\r\n            ;\r\n            if(!value) {\r\n              module.debug('Clearing cache', value);\r\n              $module.removeData(metadata.cache);\r\n            }\r\n            else if(value && cache && cache[value]) {\r\n              module.debug('Removing value from cache', value);\r\n              delete cache[value];\r\n              $module.data(metadata.cache, cache);\r\n            }\r\n          }\r\n        },\r\n\r\n        read: {\r\n          cache: function(name) {\r\n            var\r\n              cache = $module.data(metadata.cache)\r\n            ;\r\n            if(settings.cache) {\r\n              module.verbose('Checking cache for generated html for query', name);\r\n              return (typeof cache == 'object') && (cache[name] !== undefined)\r\n                ? cache[name]\r\n                : false\r\n              ;\r\n            }\r\n            return false;\r\n          }\r\n        },\r\n\r\n        create: {\r\n          id: function(resultIndex, categoryIndex) {\r\n            var\r\n              resultID      = (resultIndex + 1), // not zero indexed\r\n              categoryID    = (categoryIndex + 1),\r\n              firstCharCode,\r\n              letterID,\r\n              id\r\n            ;\r\n            if(categoryIndex !== undefined) {\r\n              // start char code for \"A\"\r\n              letterID = String.fromCharCode(97 + categoryIndex);\r\n              id          = letterID + resultID;\r\n              module.verbose('Creating category result id', id);\r\n            }\r\n            else {\r\n              id = resultID;\r\n              module.verbose('Creating result id', id);\r\n            }\r\n            return id;\r\n          },\r\n          results: function() {\r\n            if($results.length === 0) {\r\n              $results = $('<div />')\r\n                .addClass(className.results)\r\n                .appendTo($module)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        inject: {\r\n          result: function(result, resultIndex, categoryIndex) {\r\n            module.verbose('Injecting result into results');\r\n            var\r\n              $selectedResult = (categoryIndex !== undefined)\r\n                ? $results\r\n                    .children().eq(categoryIndex)\r\n                      .children(selector.result).eq(resultIndex)\r\n                : $results\r\n                    .children(selector.result).eq(resultIndex)\r\n            ;\r\n            module.verbose('Injecting results metadata', $selectedResult);\r\n            $selectedResult\r\n              .data(metadata.result, result)\r\n            ;\r\n          },\r\n          id: function(results) {\r\n            module.debug('Injecting unique ids into results');\r\n            var\r\n              // since results may be object, we must use counters\r\n              categoryIndex = 0,\r\n              resultIndex   = 0\r\n            ;\r\n            if(settings.type === 'category') {\r\n              // iterate through each category result\r\n              $.each(results, function(index, category) {\r\n                resultIndex = 0;\r\n                $.each(category.results, function(index, value) {\r\n                  var\r\n                    result = category.results[index]\r\n                  ;\r\n                  if(result.id === undefined) {\r\n                    result.id = module.create.id(resultIndex, categoryIndex);\r\n                  }\r\n                  module.inject.result(result, resultIndex, categoryIndex);\r\n                  resultIndex++;\r\n                });\r\n                categoryIndex++;\r\n              });\r\n            }\r\n            else {\r\n              // top level\r\n              $.each(results, function(index, value) {\r\n                var\r\n                  result = results[index]\r\n                ;\r\n                if(result.id === undefined) {\r\n                  result.id = module.create.id(resultIndex);\r\n                }\r\n                module.inject.result(result, resultIndex);\r\n                resultIndex++;\r\n              });\r\n            }\r\n            return results;\r\n          }\r\n        },\r\n\r\n        save: {\r\n          results: function(results) {\r\n            module.verbose('Saving current search results to metadata', results);\r\n            $module.data(metadata.results, results);\r\n          }\r\n        },\r\n\r\n        write: {\r\n          cache: function(name, value) {\r\n            var\r\n              cache = ($module.data(metadata.cache) !== undefined)\r\n                ? $module.data(metadata.cache)\r\n                : {}\r\n            ;\r\n            if(settings.cache) {\r\n              module.verbose('Writing generated html to cache', name, value);\r\n              cache[name] = value;\r\n              $module\r\n                .data(metadata.cache, cache)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        addResults: function(html) {\r\n          if( $.isFunction(settings.onResultsAdd) ) {\r\n            if( settings.onResultsAdd.call($results, html) === false ) {\r\n              module.debug('onResultsAdd callback cancelled default action');\r\n              return false;\r\n            }\r\n          }\r\n          if(html) {\r\n            $results\r\n              .html(html)\r\n            ;\r\n            module.refreshResults();\r\n            if(settings.selectFirstResult) {\r\n              module.select.firstResult();\r\n            }\r\n            module.showResults();\r\n          }\r\n          else {\r\n            module.hideResults(function() {\r\n              $results.empty();\r\n            });\r\n          }\r\n        },\r\n\r\n        showResults: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(resultsDismissed) {\r\n            return;\r\n          }\r\n          if(!module.is.visible() && module.has.results()) {\r\n            if( module.can.transition() ) {\r\n              module.debug('Showing results with css animations');\r\n              $results\r\n                .transition({\r\n                  animation  : settings.transition + ' in',\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    callback();\r\n                  },\r\n                  queue      : true\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Showing results with javascript');\r\n              $results\r\n                .stop()\r\n                .fadeIn(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            settings.onResultsOpen.call($results);\r\n          }\r\n        },\r\n        hideResults: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if( module.is.visible() ) {\r\n            if( module.can.transition() ) {\r\n              module.debug('Hiding results with css animations');\r\n              $results\r\n                .transition({\r\n                  animation  : settings.transition + ' out',\r\n                  debug      : settings.debug,\r\n                  verbose    : settings.verbose,\r\n                  duration   : settings.duration,\r\n                  onComplete : function() {\r\n                    callback();\r\n                  },\r\n                  queue      : true\r\n                })\r\n              ;\r\n            }\r\n            else {\r\n              module.debug('Hiding results with javascript');\r\n              $results\r\n                .stop()\r\n                .fadeOut(settings.duration, settings.easing)\r\n              ;\r\n            }\r\n            settings.onResultsClose.call($results);\r\n          }\r\n        },\r\n\r\n        generateResults: function(response) {\r\n          module.debug('Generating html from response', response);\r\n          var\r\n            template       = settings.templates[settings.type],\r\n            isProperObject = ($.isPlainObject(response[fields.results]) && !$.isEmptyObject(response[fields.results])),\r\n            isProperArray  = ($.isArray(response[fields.results]) && response[fields.results].length > 0),\r\n            html           = ''\r\n          ;\r\n          if(isProperObject || isProperArray ) {\r\n            if(settings.maxResults > 0) {\r\n              if(isProperObject) {\r\n                if(settings.type == 'standard') {\r\n                  module.error(error.maxResults);\r\n                }\r\n              }\r\n              else {\r\n                response[fields.results] = response[fields.results].slice(0, settings.maxResults);\r\n              }\r\n            }\r\n            if($.isFunction(template)) {\r\n              html = template(response, fields);\r\n            }\r\n            else {\r\n              module.error(error.noTemplate, false);\r\n            }\r\n          }\r\n          else if(settings.showNoResults) {\r\n            html = module.displayMessage(error.noResults, 'empty');\r\n          }\r\n          settings.onResults.call(element, response);\r\n          return html;\r\n        },\r\n\r\n        displayMessage: function(text, type) {\r\n          type = type || 'standard';\r\n          module.debug('Displaying message', text, type);\r\n          module.addResults( settings.templates.message(text, type) );\r\n          return settings.templates.message(text, type);\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.search.settings = {\r\n\r\n  name              : 'Search',\r\n  namespace         : 'search',\r\n\r\n  silent            : false,\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  // template to use (specified in settings.templates)\r\n  type              : 'standard',\r\n\r\n  // minimum characters required to search\r\n  minCharacters     : 1,\r\n\r\n  // whether to select first result after searching automatically\r\n  selectFirstResult : false,\r\n\r\n  // API config\r\n  apiSettings       : false,\r\n\r\n  // object to search\r\n  source            : false,\r\n\r\n  // Whether search should query current term on focus\r\n  searchOnFocus     : true,\r\n\r\n  // fields to search\r\n  searchFields   : [\r\n    'title',\r\n    'description'\r\n  ],\r\n\r\n  // field to display in standard results template\r\n  displayField   : '',\r\n\r\n  // whether to include fuzzy results in local search\r\n  searchFullText : true,\r\n\r\n  // whether to add events to prompt automatically\r\n  automatic      : true,\r\n\r\n  // delay before hiding menu after blur\r\n  hideDelay      : 0,\r\n\r\n  // delay before searching\r\n  searchDelay    : 200,\r\n\r\n  // maximum results returned from local\r\n  maxResults     : 7,\r\n\r\n  // whether to store lookups in local cache\r\n  cache          : true,\r\n\r\n  // whether no results errors should be shown\r\n  showNoResults  : true,\r\n\r\n  // transition settings\r\n  transition     : 'scale',\r\n  duration       : 200,\r\n  easing         : 'easeOutExpo',\r\n\r\n  // callbacks\r\n  onSelect       : false,\r\n  onResultsAdd   : false,\r\n\r\n  onSearchQuery  : function(query){},\r\n  onResults      : function(response){},\r\n\r\n  onResultsOpen  : function(){},\r\n  onResultsClose : function(){},\r\n\r\n  className: {\r\n    animating : 'animating',\r\n    active    : 'active',\r\n    empty     : 'empty',\r\n    focus     : 'focus',\r\n    hidden    : 'hidden',\r\n    loading   : 'loading',\r\n    results   : 'results',\r\n    pressed   : 'down'\r\n  },\r\n\r\n  error : {\r\n    source      : 'Cannot search. No source used, and Semantic API module was not included',\r\n    noResults   : 'Your search returned no results',\r\n    logging     : 'Error in debug logging, exiting.',\r\n    noEndpoint  : 'No search endpoint was specified',\r\n    noTemplate  : 'A valid template name was not specified.',\r\n    serverError : 'There was an issue querying the server.',\r\n    maxResults  : 'Results must be an array to use maxResults setting',\r\n    method      : 'The method you called is not defined.'\r\n  },\r\n\r\n  metadata: {\r\n    cache   : 'cache',\r\n    results : 'results',\r\n    result  : 'result'\r\n  },\r\n\r\n  regExp: {\r\n    escape     : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n    beginsWith : '(?:\\s|^)'\r\n  },\r\n\r\n  // maps api response attributes to internal representation\r\n  fields: {\r\n    categories      : 'results',     // array of categories (category view)\r\n    categoryName    : 'name',        // name of category (category view)\r\n    categoryResults : 'results',     // array of results (category view)\r\n    description     : 'description', // result description\r\n    image           : 'image',       // result image\r\n    price           : 'price',       // result price\r\n    results         : 'results',     // array of results (standard)\r\n    title           : 'title',       // result title\r\n    url             : 'url',         // result url\r\n    action          : 'action',      // \"view more\" object name\r\n    actionText      : 'text',        // \"view more\" text\r\n    actionURL       : 'url'          // \"view more\" url\r\n  },\r\n\r\n  selector : {\r\n    prompt       : '.prompt',\r\n    searchButton : '.search.button',\r\n    results      : '.results',\r\n    message      : '.results > .message',\r\n    category     : '.category',\r\n    result       : '.result',\r\n    title        : '.title, .name'\r\n  },\r\n\r\n  templates: {\r\n    escape: function(string) {\r\n      var\r\n        badChars     = /[&<>\"'`]/g,\r\n        shouldEscape = /[&<>\"'`]/,\r\n        escape       = {\r\n          \"&\": \"&amp;\",\r\n          \"<\": \"&lt;\",\r\n          \">\": \"&gt;\",\r\n          '\"': \"&quot;\",\r\n          \"'\": \"&#x27;\",\r\n          \"`\": \"&#x60;\"\r\n        },\r\n        escapedChar  = function(chr) {\r\n          return escape[chr];\r\n        }\r\n      ;\r\n      if(shouldEscape.test(string)) {\r\n        return string.replace(badChars, escapedChar);\r\n      }\r\n      return string;\r\n    },\r\n    message: function(message, type) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(message !== undefined && type !== undefined) {\r\n        html +=  ''\r\n          + '<div class=\"message ' + type + '\">'\r\n        ;\r\n        // message type\r\n        if(type == 'empty') {\r\n          html += ''\r\n            + '<div class=\"header\">No Results</div class=\"header\">'\r\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\r\n          ;\r\n        }\r\n        else {\r\n          html += ' <div class=\"description\">' + message + '</div>';\r\n        }\r\n        html += '</div>';\r\n      }\r\n      return html;\r\n    },\r\n    category: function(response, fields) {\r\n      var\r\n        html = '',\r\n        escape = $.fn.search.settings.templates.escape\r\n      ;\r\n      if(response[fields.categoryResults] !== undefined) {\r\n\r\n        // each category\r\n        $.each(response[fields.categoryResults], function(index, category) {\r\n          if(category[fields.results] !== undefined && category.results.length > 0) {\r\n\r\n            html  += '<div class=\"category\">';\r\n\r\n            if(category[fields.categoryName] !== undefined) {\r\n              html += '<div class=\"name\">' + category[fields.categoryName] + '</div>';\r\n            }\r\n\r\n            // each item inside category\r\n            $.each(category.results, function(index, result) {\r\n              if(result[fields.url]) {\r\n                html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\r\n              }\r\n              else {\r\n                html  += '<a class=\"result\">';\r\n              }\r\n              if(result[fields.image] !== undefined) {\r\n                html += ''\r\n                  + '<div class=\"image\">'\r\n                  + ' <img src=\"' + result[fields.image] + '\">'\r\n                  + '</div>'\r\n                ;\r\n              }\r\n              html += '<div class=\"content\">';\r\n              if(result[fields.price] !== undefined) {\r\n                html += '<div class=\"price\">' + result[fields.price] + '</div>';\r\n              }\r\n              if(result[fields.title] !== undefined) {\r\n                html += '<div class=\"title\">' + result[fields.title] + '</div>';\r\n              }\r\n              if(result[fields.description] !== undefined) {\r\n                html += '<div class=\"description\">' + result[fields.description] + '</div>';\r\n              }\r\n              html  += ''\r\n                + '</div>'\r\n              ;\r\n              html += '</a>';\r\n            });\r\n            html  += ''\r\n              + '</div>'\r\n            ;\r\n          }\r\n        });\r\n        if(response[fields.action]) {\r\n          html += ''\r\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\r\n          +   response[fields.action][fields.actionText]\r\n          + '</a>';\r\n        }\r\n        return html;\r\n      }\r\n      return false;\r\n    },\r\n    standard: function(response, fields) {\r\n      var\r\n        html = ''\r\n      ;\r\n      if(response[fields.results] !== undefined) {\r\n\r\n        // each result\r\n        $.each(response[fields.results], function(index, result) {\r\n          if(result[fields.url]) {\r\n            html  += '<a class=\"result\" href=\"' + result[fields.url] + '\">';\r\n          }\r\n          else {\r\n            html  += '<a class=\"result\">';\r\n          }\r\n          if(result[fields.image] !== undefined) {\r\n            html += ''\r\n              + '<div class=\"image\">'\r\n              + ' <img src=\"' + result[fields.image] + '\">'\r\n              + '</div>'\r\n            ;\r\n          }\r\n          html += '<div class=\"content\">';\r\n          if(result[fields.price] !== undefined) {\r\n            html += '<div class=\"price\">' + result[fields.price] + '</div>';\r\n          }\r\n          if(result[fields.title] !== undefined) {\r\n            html += '<div class=\"title\">' + result[fields.title] + '</div>';\r\n          }\r\n          if(result[fields.description] !== undefined) {\r\n            html += '<div class=\"description\">' + result[fields.description] + '</div>';\r\n          }\r\n          html  += ''\r\n            + '</div>'\r\n          ;\r\n          html += '</a>';\r\n        });\r\n\r\n        if(response[fields.action]) {\r\n          html += ''\r\n          + '<a href=\"' + response[fields.action][fields.actionURL] + '\" class=\"action\">'\r\n          +   response[fields.action][fields.actionText]\r\n          + '</a>';\r\n        }\r\n        return html;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Shape\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.shape = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    $body           = $('body'),\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        moduleSelector = $allModules.selector || '',\r\n        settings       = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.shape.settings, parameters)\r\n          : $.extend({}, $.fn.shape.settings),\r\n\r\n        // internal aliases\r\n        namespace     = settings.namespace,\r\n        selector      = settings.selector,\r\n        error         = settings.error,\r\n        className     = settings.className,\r\n\r\n        // define namespaces for modules\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        // selector cache\r\n        $module       = $(this),\r\n        $sides        = $module.find(selector.sides),\r\n        $side         = $module.find(selector.side),\r\n\r\n        // private variables\r\n        nextIndex = false,\r\n        $activeSide,\r\n        $nextSide,\r\n\r\n        // standard module\r\n        element       = this,\r\n        instance      = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module for', element);\r\n          module.set.defaultSide();\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache for', element);\r\n          $module = $(element);\r\n          $sides  = $(this).find(selector.shape);\r\n          $side   = $(this).find(selector.side);\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Forcing repaint event');\r\n          var\r\n            shape          = $sides[0] || document.createElement('div'),\r\n            fakeAssignment = shape.offsetWidth\r\n          ;\r\n        },\r\n\r\n        animate: function(propertyObject, callback) {\r\n          module.verbose('Animating box with properties', propertyObject);\r\n          callback = callback || function(event) {\r\n            module.verbose('Executing animation callback');\r\n            if(event !== undefined) {\r\n              event.stopPropagation();\r\n            }\r\n            module.reset();\r\n            module.set.active();\r\n          };\r\n          settings.beforeChange.call($nextSide[0]);\r\n          if(module.get.transitionEvent()) {\r\n            module.verbose('Starting CSS animation');\r\n            $module\r\n              .addClass(className.animating)\r\n            ;\r\n            $sides\r\n              .css(propertyObject)\r\n              .one(module.get.transitionEvent(), callback)\r\n            ;\r\n            module.set.duration(settings.duration);\r\n            requestAnimationFrame(function() {\r\n              $module\r\n                .addClass(className.animating)\r\n              ;\r\n              $activeSide\r\n                .addClass(className.hidden)\r\n              ;\r\n            });\r\n          }\r\n          else {\r\n            callback();\r\n          }\r\n        },\r\n\r\n        queue: function(method) {\r\n          module.debug('Queueing animation of', method);\r\n          $sides\r\n            .one(module.get.transitionEvent(), function() {\r\n              module.debug('Executing queued animation');\r\n              setTimeout(function(){\r\n                $module.shape(method);\r\n              }, 0);\r\n            })\r\n          ;\r\n        },\r\n\r\n        reset: function() {\r\n          module.verbose('Animating states reset');\r\n          $module\r\n            .removeClass(className.animating)\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n          // removeAttr style does not consistently work in safari\r\n          $sides\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n          $side\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n            .removeClass(className.hidden)\r\n          ;\r\n          $nextSide\r\n            .removeClass(className.animating)\r\n            .attr('style', '')\r\n            .removeAttr('style')\r\n          ;\r\n        },\r\n\r\n        is: {\r\n          complete: function() {\r\n            return ($side.filter('.' + className.active)[0] == $nextSide[0]);\r\n          },\r\n          animating: function() {\r\n            return $module.hasClass(className.animating);\r\n          }\r\n        },\r\n\r\n        set: {\r\n\r\n          defaultSide: function() {\r\n            $activeSide = $module.find('.' + settings.className.active);\r\n            $nextSide   = ( $activeSide.next(selector.side).length > 0 )\r\n              ? $activeSide.next(selector.side)\r\n              : $module.find(selector.side).first()\r\n            ;\r\n            nextIndex = false;\r\n            module.verbose('Active side set to', $activeSide);\r\n            module.verbose('Next side set to', $nextSide);\r\n          },\r\n\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            module.verbose('Setting animation duration', duration);\r\n            if(settings.duration || settings.duration === 0) {\r\n              $sides.add($side)\r\n                .css({\r\n                  '-webkit-transition-duration': duration,\r\n                  '-moz-transition-duration': duration,\r\n                  '-ms-transition-duration': duration,\r\n                  '-o-transition-duration': duration,\r\n                  'transition-duration': duration\r\n                })\r\n              ;\r\n            }\r\n          },\r\n\r\n          currentStageSize: function() {\r\n            var\r\n              $activeSide = $module.find('.' + settings.className.active),\r\n              width       = $activeSide.outerWidth(true),\r\n              height      = $activeSide.outerHeight(true)\r\n            ;\r\n            $module\r\n              .css({\r\n                width: width,\r\n                height: height\r\n              })\r\n            ;\r\n          },\r\n\r\n          stageSize: function() {\r\n            var\r\n              $clone      = $module.clone().addClass(className.loading),\r\n              $activeSide = $clone.find('.' + settings.className.active),\r\n              $nextSide   = (nextIndex)\r\n                ? $clone.find(selector.side).eq(nextIndex)\r\n                : ( $activeSide.next(selector.side).length > 0 )\r\n                  ? $activeSide.next(selector.side)\r\n                  : $clone.find(selector.side).first(),\r\n              newWidth    = (settings.width == 'next')\r\n                ? $nextSide.outerWidth(true)\r\n                : (settings.width == 'initial')\r\n                  ? $module.width()\r\n                  : settings.width,\r\n              newHeight    = (settings.height == 'next')\r\n                ? $nextSide.outerHeight(true)\r\n                : (settings.height == 'initial')\r\n                  ? $module.height()\r\n                  : settings.height\r\n            ;\r\n            $activeSide.removeClass(className.active);\r\n            $nextSide.addClass(className.active);\r\n            $clone.insertAfter($module);\r\n            $clone.remove();\r\n            if(settings.width != 'auto') {\r\n              $module.css('width', newWidth + settings.jitter);\r\n              module.verbose('Specifying width during animation', newWidth);\r\n            }\r\n            if(settings.height != 'auto') {\r\n              $module.css('height', newHeight + settings.jitter);\r\n              module.verbose('Specifying height during animation', newHeight);\r\n            }\r\n          },\r\n\r\n          nextSide: function(selector) {\r\n            nextIndex = selector;\r\n            $nextSide = $side.filter(selector);\r\n            nextIndex = $side.index($nextSide);\r\n            if($nextSide.length === 0) {\r\n              module.set.defaultSide();\r\n              module.error(error.side);\r\n            }\r\n            module.verbose('Next side manually set to', $nextSide);\r\n          },\r\n\r\n          active: function() {\r\n            module.verbose('Setting new side to active', $nextSide);\r\n            $side\r\n              .removeClass(className.active)\r\n            ;\r\n            $nextSide\r\n              .addClass(className.active)\r\n            ;\r\n            settings.onChange.call($nextSide[0]);\r\n            module.set.defaultSide();\r\n          }\r\n        },\r\n\r\n        flip: {\r\n\r\n          up: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping up', $nextSide);\r\n              var\r\n                transform = module.get.transform.up()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.above();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip up');\r\n            }\r\n          },\r\n\r\n          down: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping down', $nextSide);\r\n              var\r\n                transform = module.get.transform.down()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.below();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip down');\r\n            }\r\n          },\r\n\r\n          left: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping left', $nextSide);\r\n              var\r\n                transform = module.get.transform.left()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.left();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip left');\r\n            }\r\n          },\r\n\r\n          right: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping right', $nextSide);\r\n              var\r\n                transform = module.get.transform.right()\r\n              ;\r\n              module.set.stageSize();\r\n              module.stage.right();\r\n              module.animate(transform);\r\n            }\r\n            else {\r\n              module.queue('flip right');\r\n            }\r\n          },\r\n\r\n          over: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping over', $nextSide);\r\n              module.set.stageSize();\r\n              module.stage.behind();\r\n              module.animate(module.get.transform.over() );\r\n            }\r\n            else {\r\n              module.queue('flip over');\r\n            }\r\n          },\r\n\r\n          back: function() {\r\n            if(module.is.complete() && !module.is.animating() && !settings.allowRepeats) {\r\n              module.debug('Side already visible', $nextSide);\r\n              return;\r\n            }\r\n            if( !module.is.animating()) {\r\n              module.debug('Flipping back', $nextSide);\r\n              module.set.stageSize();\r\n              module.stage.behind();\r\n              module.animate(module.get.transform.back() );\r\n            }\r\n            else {\r\n              module.queue('flip back');\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        get: {\r\n\r\n          transform: {\r\n            up: function() {\r\n              var\r\n                translate = {\r\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                  z: -($activeSide.outerHeight(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\r\n              };\r\n            },\r\n\r\n            down: function() {\r\n              var\r\n                translate = {\r\n                  y: -(($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                  z: -($activeSide.outerHeight(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\r\n              };\r\n            },\r\n\r\n            left: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\r\n                  z : -($activeSide.outerWidth(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\r\n              };\r\n            },\r\n\r\n            right: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2),\r\n                  z : -($activeSide.outerWidth(true) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\r\n              };\r\n            },\r\n\r\n            over: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\r\n              };\r\n            },\r\n\r\n            back: function() {\r\n              var\r\n                translate = {\r\n                  x : -(($activeSide.outerWidth(true) - $nextSide.outerWidth(true)) / 2)\r\n                }\r\n              ;\r\n              return {\r\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\r\n              };\r\n            }\r\n          },\r\n\r\n          transitionEvent: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          },\r\n\r\n          nextSide: function() {\r\n            return ( $activeSide.next(selector.side).length > 0 )\r\n              ? $activeSide.next(selector.side)\r\n              : $module.find(selector.side).first()\r\n            ;\r\n          }\r\n\r\n        },\r\n\r\n        stage: {\r\n\r\n          above: function() {\r\n            var\r\n              box = {\r\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                depth  : {\r\n                  active : ($nextSide.outerHeight(true) / 2),\r\n                  next   : ($activeSide.outerHeight(true) / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'top'       : box.origin + 'px',\r\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          below: function() {\r\n            var\r\n              box = {\r\n                origin : (($activeSide.outerHeight(true) - $nextSide.outerHeight(true)) / 2),\r\n                depth  : {\r\n                  active : ($nextSide.outerHeight(true) / 2),\r\n                  next   : ($activeSide.outerHeight(true) / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'top'       : box.origin + 'px',\r\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          left: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          right: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\r\n            $sides\r\n              .css({\r\n                'transform' : 'translateZ(-' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\r\n              })\r\n            ;\r\n          },\r\n\r\n          behind: function() {\r\n            var\r\n              height = {\r\n                active : $activeSide.outerWidth(true),\r\n                next   : $nextSide.outerWidth(true)\r\n              },\r\n              box = {\r\n                origin : ( ( height.active - height.next ) / 2),\r\n                depth  : {\r\n                  active : (height.next / 2),\r\n                  next   : (height.active / 2)\r\n                }\r\n              }\r\n            ;\r\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\r\n            $activeSide\r\n              .css({\r\n                'transform' : 'rotateY(0deg)'\r\n              })\r\n            ;\r\n            $nextSide\r\n              .addClass(className.animating)\r\n              .css({\r\n                'left'      : box.origin + 'px',\r\n                'transform' : 'rotateY(-180deg)'\r\n              })\r\n            ;\r\n          }\r\n        },\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.shape.settings = {\r\n\r\n  // module info\r\n  name : 'Shape',\r\n\r\n  // hide all debug content\r\n  silent     : false,\r\n\r\n  // debug content outputted to console\r\n  debug      : false,\r\n\r\n  // verbose debug output\r\n  verbose    : false,\r\n\r\n  // fudge factor in pixels when swapping from 2d to 3d (can be useful to correct rounding errors)\r\n  jitter     : 0,\r\n\r\n  // performance data output\r\n  performance: true,\r\n\r\n  // event namespace\r\n  namespace  : 'shape',\r\n\r\n  // width during animation, can be set to 'auto', initial', 'next' or pixel amount\r\n  width: 'initial',\r\n\r\n  // height during animation, can be set to 'auto', 'initial', 'next' or pixel amount\r\n  height: 'initial',\r\n\r\n  // callback occurs on side change\r\n  beforeChange : function() {},\r\n  onChange     : function() {},\r\n\r\n  // allow animation to same side\r\n  allowRepeats: false,\r\n\r\n  // animation duration\r\n  duration   : false,\r\n\r\n  // possible errors\r\n  error: {\r\n    side   : 'You tried to switch to a side that does not exist.',\r\n    method : 'The method you called is not defined'\r\n  },\r\n\r\n  // classnames used\r\n  className   : {\r\n    animating : 'animating',\r\n    hidden    : 'hidden',\r\n    loading   : 'loading',\r\n    active    : 'active'\r\n  },\r\n\r\n  // selectors used\r\n  selector    : {\r\n    sides : '.sides',\r\n    side  : '.side'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Sidebar\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.sidebar = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n    $window         = $(window),\r\n    $document       = $(document),\r\n    $html           = $('html'),\r\n    $head           = $('head'),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\r\n          : $.extend({}, $.fn.sidebar.settings),\r\n\r\n        selector        = settings.selector,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        regExp          = settings.regExp,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n\r\n        $sidebars       = $module.children(selector.sidebar),\r\n        $fixed          = $context.children(selector.fixed),\r\n        $pusher         = $context.children(selector.pusher),\r\n        $style,\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        elementNamespace,\r\n        id,\r\n        currentScroll,\r\n        transitionEvent,\r\n\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing sidebar', parameters);\r\n\r\n          module.create.id();\r\n\r\n          transitionEvent = module.get.transitionEvent();\r\n\r\n          if(module.is.ios()) {\r\n            module.set.ios();\r\n          }\r\n\r\n          // avoids locking rendering if initialized in onReady\r\n          if(settings.delaySetup) {\r\n            requestAnimationFrame(module.setup.layout);\r\n          }\r\n          else {\r\n            module.setup.layout();\r\n          }\r\n\r\n          requestAnimationFrame(function() {\r\n            module.setup.cache();\r\n          });\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        create: {\r\n          id: function() {\r\n            id = (Math.random().toString(16) + '000000000').substr(2,8);\r\n            elementNamespace = '.' + id;\r\n            module.verbose('Creating unique id for element', id);\r\n          }\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', $module);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n          if(module.is.ios()) {\r\n            module.remove.ios();\r\n          }\r\n          // bound by uuid\r\n          $context.off(elementNamespace);\r\n          $window.off(elementNamespace);\r\n          $document.off(elementNamespace);\r\n        },\r\n\r\n        event: {\r\n          clickaway: function(event) {\r\n            var\r\n              clickedInPusher = ($pusher.find(event.target).length > 0 || $pusher.is(event.target)),\r\n              clickedContext  = ($context.is(event.target))\r\n            ;\r\n            if(clickedInPusher) {\r\n              module.verbose('User clicked on dimmed page');\r\n              module.hide();\r\n            }\r\n            if(clickedContext) {\r\n              module.verbose('User clicked on dimmable context (scaled out page)');\r\n              module.hide();\r\n            }\r\n          },\r\n          touch: function(event) {\r\n            //event.stopPropagation();\r\n          },\r\n          containScroll: function(event) {\r\n            if(element.scrollTop <= 0)  {\r\n              element.scrollTop = 1;\r\n            }\r\n            if((element.scrollTop + element.offsetHeight) >= element.scrollHeight) {\r\n              element.scrollTop = element.scrollHeight - element.offsetHeight - 1;\r\n            }\r\n          },\r\n          scroll: function(event) {\r\n            if( $(event.target).closest(selector.sidebar).length === 0 ) {\r\n              event.preventDefault();\r\n            }\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          clickaway: function() {\r\n            module.verbose('Adding clickaway events to context', $context);\r\n            if(settings.closable) {\r\n              $context\r\n                .on('click'    + elementNamespace, module.event.clickaway)\r\n                .on('touchend' + elementNamespace, module.event.clickaway)\r\n              ;\r\n            }\r\n          },\r\n          scrollLock: function() {\r\n            if(settings.scrollLock) {\r\n              module.debug('Disabling page scroll');\r\n              $window\r\n                .on('DOMMouseScroll' + elementNamespace, module.event.scroll)\r\n              ;\r\n            }\r\n            module.verbose('Adding events to contain sidebar scroll');\r\n            $document\r\n              .on('touchmove' + elementNamespace, module.event.touch)\r\n            ;\r\n            $module\r\n              .on('scroll' + eventNamespace, module.event.containScroll)\r\n            ;\r\n          }\r\n        },\r\n        unbind: {\r\n          clickaway: function() {\r\n            module.verbose('Removing clickaway events from context', $context);\r\n            $context.off(elementNamespace);\r\n          },\r\n          scrollLock: function() {\r\n            module.verbose('Removing scroll lock from page');\r\n            $document.off(elementNamespace);\r\n            $window.off(elementNamespace);\r\n            $module.off('scroll' + eventNamespace);\r\n          }\r\n        },\r\n\r\n        add: {\r\n          inlineCSS: function() {\r\n            var\r\n              width     = module.cache.width  || $module.outerWidth(),\r\n              height    = module.cache.height || $module.outerHeight(),\r\n              isRTL     = module.is.rtl(),\r\n              direction = module.get.direction(),\r\n              distance  = {\r\n                left   : width,\r\n                right  : -width,\r\n                top    : height,\r\n                bottom : -height\r\n              },\r\n              style\r\n            ;\r\n\r\n            if(isRTL){\r\n              module.verbose('RTL detected, flipping widths');\r\n              distance.left = -width;\r\n              distance.right = width;\r\n            }\r\n\r\n            style  = '<style>';\r\n\r\n            if(direction === 'left' || direction === 'right') {\r\n              module.debug('Adding CSS rules for animation distance', width);\r\n              style  += ''\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\r\n                + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n            else if(direction === 'top' || direction == 'bottom') {\r\n              style  += ''\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .fixed,'\r\n                + ' .ui.visible.' + direction + '.sidebar ~ .pusher {'\r\n                + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n\r\n            /* IE is only browser not to create context with transforms */\r\n            /* https://www.w3.org/Bugs/Public/show_bug.cgi?id=16328 */\r\n            if( module.is.ie() ) {\r\n              if(direction === 'left' || direction === 'right') {\r\n                module.debug('Adding CSS rules for animation distance', width);\r\n                style  += ''\r\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\r\n                  + '   -webkit-transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                  + '           transform: translate3d('+ distance[direction] + 'px, 0, 0);'\r\n                  + ' }'\r\n                ;\r\n              }\r\n              else if(direction === 'top' || direction == 'bottom') {\r\n                style  += ''\r\n                  + ' body.pushable > .ui.visible.' + direction + '.sidebar ~ .pusher:after {'\r\n                  + '   -webkit-transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                  + '           transform: translate3d(0, ' + distance[direction] + 'px, 0);'\r\n                  + ' }'\r\n                ;\r\n              }\r\n              /* opposite sides visible forces content overlay */\r\n              style += ''\r\n                + ' body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after,'\r\n                + ' body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {'\r\n                + '   -webkit-transform: translate3d(0px, 0, 0);'\r\n                + '           transform: translate3d(0px, 0, 0);'\r\n                + ' }'\r\n              ;\r\n            }\r\n            style += '</style>';\r\n            $style = $(style)\r\n              .appendTo($head)\r\n            ;\r\n            module.debug('Adding sizing css to head', $style);\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $context  = $(settings.context);\r\n          $sidebars = $context.children(selector.sidebar);\r\n          $pusher   = $context.children(selector.pusher);\r\n          $fixed    = $context.children(selector.fixed);\r\n          module.clear.cache();\r\n        },\r\n\r\n        refreshSidebars: function() {\r\n          module.verbose('Refreshing other sidebars');\r\n          $sidebars = $context.children(selector.sidebar);\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Forcing repaint event');\r\n          element.style.display = 'none';\r\n          var ignored = element.offsetHeight;\r\n          element.scrollTop = element.scrollTop;\r\n          element.style.display = '';\r\n        },\r\n\r\n        setup: {\r\n          cache: function() {\r\n            module.cache = {\r\n              width  : $module.outerWidth(),\r\n              height : $module.outerHeight(),\r\n              rtl    : ($module.css('direction') == 'rtl')\r\n            };\r\n          },\r\n          layout: function() {\r\n            if( $context.children(selector.pusher).length === 0 ) {\r\n              module.debug('Adding wrapper element for sidebar');\r\n              module.error(error.pusher);\r\n              $pusher = $('<div class=\"pusher\" />');\r\n              $context\r\n                .children()\r\n                  .not(selector.omitted)\r\n                  .not($sidebars)\r\n                  .wrapAll($pusher)\r\n              ;\r\n              module.refresh();\r\n            }\r\n            if($module.nextAll(selector.pusher).length === 0 || $module.nextAll(selector.pusher)[0] !== $pusher[0]) {\r\n              module.debug('Moved sidebar to correct parent element');\r\n              module.error(error.movedSidebar, element);\r\n              $module.detach().prependTo($context);\r\n              module.refresh();\r\n            }\r\n            module.clear.cache();\r\n            module.set.pushable();\r\n            module.set.direction();\r\n          }\r\n        },\r\n\r\n        attachEvents: function(selector, event) {\r\n          var\r\n            $toggle = $(selector)\r\n          ;\r\n          event = $.isFunction(module[event])\r\n            ? module[event]\r\n            : module.toggle\r\n          ;\r\n          if($toggle.length > 0) {\r\n            module.debug('Attaching sidebar events to element', selector, event);\r\n            $toggle\r\n              .on('click' + eventNamespace, event)\r\n            ;\r\n          }\r\n          else {\r\n            module.error(error.notFound, selector);\r\n          }\r\n        },\r\n\r\n        show: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(module.is.hidden()) {\r\n            module.refreshSidebars();\r\n            if(settings.overlay)  {\r\n              module.error(error.overlay);\r\n              settings.transition = 'overlay';\r\n            }\r\n            module.refresh();\r\n            if(module.othersActive()) {\r\n              module.debug('Other sidebars currently visible');\r\n              if(settings.exclusive) {\r\n                // if not overlay queue animation after hide\r\n                if(settings.transition != 'overlay') {\r\n                  module.hideOthers(module.show);\r\n                  return;\r\n                }\r\n                else {\r\n                  module.hideOthers();\r\n                }\r\n              }\r\n              else {\r\n                settings.transition = 'overlay';\r\n              }\r\n            }\r\n            module.pushPage(function() {\r\n              callback.call(element);\r\n              settings.onShow.call(element);\r\n            });\r\n            settings.onChange.call(element);\r\n            settings.onVisible.call(element);\r\n          }\r\n          else {\r\n            module.debug('Sidebar is already visible');\r\n          }\r\n        },\r\n\r\n        hide: function(callback) {\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(module.is.visible() || module.is.animating()) {\r\n            module.debug('Hiding sidebar', callback);\r\n            module.refreshSidebars();\r\n            module.pullPage(function() {\r\n              callback.call(element);\r\n              settings.onHidden.call(element);\r\n            });\r\n            settings.onChange.call(element);\r\n            settings.onHide.call(element);\r\n          }\r\n        },\r\n\r\n        othersAnimating: function() {\r\n          return ($sidebars.not($module).filter('.' + className.animating).length > 0);\r\n        },\r\n        othersVisible: function() {\r\n          return ($sidebars.not($module).filter('.' + className.visible).length > 0);\r\n        },\r\n        othersActive: function() {\r\n          return(module.othersVisible() || module.othersAnimating());\r\n        },\r\n\r\n        hideOthers: function(callback) {\r\n          var\r\n            $otherSidebars = $sidebars.not($module).filter('.' + className.visible),\r\n            sidebarCount   = $otherSidebars.length,\r\n            callbackCount  = 0\r\n          ;\r\n          callback = callback || function(){};\r\n          $otherSidebars\r\n            .sidebar('hide', function() {\r\n              callbackCount++;\r\n              if(callbackCount == sidebarCount) {\r\n                callback();\r\n              }\r\n            })\r\n          ;\r\n        },\r\n\r\n        toggle: function() {\r\n          module.verbose('Determining toggled direction');\r\n          if(module.is.hidden()) {\r\n            module.show();\r\n          }\r\n          else {\r\n            module.hide();\r\n          }\r\n        },\r\n\r\n        pushPage: function(callback) {\r\n          var\r\n            transition = module.get.transition(),\r\n            $transition = (transition === 'overlay' || module.othersActive())\r\n              ? $module\r\n              : $pusher,\r\n            animate,\r\n            dim,\r\n            transitionEnd\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          if(settings.transition == 'scale down') {\r\n            module.scrollToTop();\r\n          }\r\n          module.set.transition(transition);\r\n          module.repaint();\r\n          animate = function() {\r\n            module.bind.clickaway();\r\n            module.add.inlineCSS();\r\n            module.set.animating();\r\n            module.set.visible();\r\n          };\r\n          dim = function() {\r\n            module.set.dimmed();\r\n          };\r\n          transitionEnd = function(event) {\r\n            if( event.target == $transition[0] ) {\r\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\r\n              module.remove.animating();\r\n              module.bind.scrollLock();\r\n              callback.call(element);\r\n            }\r\n          };\r\n          $transition.off(transitionEvent + elementNamespace);\r\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\r\n          requestAnimationFrame(animate);\r\n          if(settings.dimPage && !module.othersVisible()) {\r\n            requestAnimationFrame(dim);\r\n          }\r\n        },\r\n\r\n        pullPage: function(callback) {\r\n          var\r\n            transition = module.get.transition(),\r\n            $transition = (transition == 'overlay' || module.othersActive())\r\n              ? $module\r\n              : $pusher,\r\n            animate,\r\n            transitionEnd\r\n          ;\r\n          callback = $.isFunction(callback)\r\n            ? callback\r\n            : function(){}\r\n          ;\r\n          module.verbose('Removing context push state', module.get.direction());\r\n\r\n          module.unbind.clickaway();\r\n          module.unbind.scrollLock();\r\n\r\n          animate = function() {\r\n            module.set.transition(transition);\r\n            module.set.animating();\r\n            module.remove.visible();\r\n            if(settings.dimPage && !module.othersVisible()) {\r\n              $pusher.removeClass(className.dimmed);\r\n            }\r\n          };\r\n          transitionEnd = function(event) {\r\n            if( event.target == $transition[0] ) {\r\n              $transition.off(transitionEvent + elementNamespace, transitionEnd);\r\n              module.remove.animating();\r\n              module.remove.transition();\r\n              module.remove.inlineCSS();\r\n              if(transition == 'scale down' || (settings.returnScroll && module.is.mobile()) ) {\r\n                module.scrollBack();\r\n              }\r\n              callback.call(element);\r\n            }\r\n          };\r\n          $transition.off(transitionEvent + elementNamespace);\r\n          $transition.on(transitionEvent + elementNamespace, transitionEnd);\r\n          requestAnimationFrame(animate);\r\n        },\r\n\r\n        scrollToTop: function() {\r\n          module.verbose('Scrolling to top of page to avoid animation issues');\r\n          currentScroll = $(window).scrollTop();\r\n          $module.scrollTop(0);\r\n          window.scrollTo(0, 0);\r\n        },\r\n\r\n        scrollBack: function() {\r\n          module.verbose('Scrolling back to original page position');\r\n          window.scrollTo(0, currentScroll);\r\n        },\r\n\r\n        clear: {\r\n          cache: function() {\r\n            module.verbose('Clearing cached dimensions');\r\n            module.cache = {};\r\n          }\r\n        },\r\n\r\n        set: {\r\n\r\n          // ios only (scroll on html not document). This prevent auto-resize canvas/scroll in ios\r\n          ios: function() {\r\n            $html.addClass(className.ios);\r\n          },\r\n\r\n          // container\r\n          pushed: function() {\r\n            $context.addClass(className.pushed);\r\n          },\r\n          pushable: function() {\r\n            $context.addClass(className.pushable);\r\n          },\r\n\r\n          // pusher\r\n          dimmed: function() {\r\n            $pusher.addClass(className.dimmed);\r\n          },\r\n\r\n          // sidebar\r\n          active: function() {\r\n            $module.addClass(className.active);\r\n          },\r\n          animating: function() {\r\n            $module.addClass(className.animating);\r\n          },\r\n          transition: function(transition) {\r\n            transition = transition || module.get.transition();\r\n            $module.addClass(transition);\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            $module.addClass(className[direction]);\r\n          },\r\n          visible: function() {\r\n            $module.addClass(className.visible);\r\n          },\r\n          overlay: function() {\r\n            $module.addClass(className.overlay);\r\n          }\r\n        },\r\n        remove: {\r\n\r\n          inlineCSS: function() {\r\n            module.debug('Removing inline css styles', $style);\r\n            if($style && $style.length > 0) {\r\n              $style.remove();\r\n            }\r\n          },\r\n\r\n          // ios scroll on html not document\r\n          ios: function() {\r\n            $html.removeClass(className.ios);\r\n          },\r\n\r\n          // context\r\n          pushed: function() {\r\n            $context.removeClass(className.pushed);\r\n          },\r\n          pushable: function() {\r\n            $context.removeClass(className.pushable);\r\n          },\r\n\r\n          // sidebar\r\n          active: function() {\r\n            $module.removeClass(className.active);\r\n          },\r\n          animating: function() {\r\n            $module.removeClass(className.animating);\r\n          },\r\n          transition: function(transition) {\r\n            transition = transition || module.get.transition();\r\n            $module.removeClass(transition);\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            $module.removeClass(className[direction]);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          overlay: function() {\r\n            $module.removeClass(className.overlay);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          direction: function() {\r\n            if($module.hasClass(className.top)) {\r\n              return className.top;\r\n            }\r\n            else if($module.hasClass(className.right)) {\r\n              return className.right;\r\n            }\r\n            else if($module.hasClass(className.bottom)) {\r\n              return className.bottom;\r\n            }\r\n            return className.left;\r\n          },\r\n          transition: function() {\r\n            var\r\n              direction = module.get.direction(),\r\n              transition\r\n            ;\r\n            transition = ( module.is.mobile() )\r\n              ? (settings.mobileTransition == 'auto')\r\n                ? settings.defaultTransition.mobile[direction]\r\n                : settings.mobileTransition\r\n              : (settings.transition == 'auto')\r\n                ? settings.defaultTransition.computer[direction]\r\n                : settings.transition\r\n            ;\r\n            module.verbose('Determined transition', transition);\r\n            return transition;\r\n          },\r\n          transitionEvent: function() {\r\n            var\r\n              element     = document.createElement('element'),\r\n              transitions = {\r\n                'transition'       :'transitionend',\r\n                'OTransition'      :'oTransitionEnd',\r\n                'MozTransition'    :'transitionend',\r\n                'WebkitTransition' :'webkitTransitionEnd'\r\n              },\r\n              transition\r\n            ;\r\n            for(transition in transitions){\r\n              if( element.style[transition] !== undefined ){\r\n                return transitions[transition];\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n\r\n          ie: function() {\r\n            var\r\n              isIE11 = (!(window.ActiveXObject) && 'ActiveXObject' in window),\r\n              isIE   = ('ActiveXObject' in window)\r\n            ;\r\n            return (isIE11 || isIE);\r\n          },\r\n\r\n          ios: function() {\r\n            var\r\n              userAgent      = navigator.userAgent,\r\n              isIOS          = userAgent.match(regExp.ios),\r\n              isMobileChrome = userAgent.match(regExp.mobileChrome)\r\n            ;\r\n            if(isIOS && !isMobileChrome) {\r\n              module.verbose('Browser was found to be iOS', userAgent);\r\n              return true;\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          },\r\n          mobile: function() {\r\n            var\r\n              userAgent    = navigator.userAgent,\r\n              isMobile     = userAgent.match(regExp.mobile)\r\n            ;\r\n            if(isMobile) {\r\n              module.verbose('Browser was found to be mobile', userAgent);\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('Browser is not mobile, using regular transition', userAgent);\r\n              return false;\r\n            }\r\n          },\r\n          hidden: function() {\r\n            return !module.is.visible();\r\n          },\r\n          visible: function() {\r\n            return $module.hasClass(className.visible);\r\n          },\r\n          // alias\r\n          open: function() {\r\n            return module.is.visible();\r\n          },\r\n          closed: function() {\r\n            return module.is.hidden();\r\n          },\r\n          vertical: function() {\r\n            return $module.hasClass(className.top);\r\n          },\r\n          animating: function() {\r\n            return $context.hasClass(className.animating);\r\n          },\r\n          rtl: function () {\r\n            if(module.cache.rtl === undefined) {\r\n              module.cache.rtl = ($module.css('direction') == 'rtl');\r\n            }\r\n            return module.cache.rtl;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      }\r\n    ;\r\n\r\n    if(methodInvoked) {\r\n      if(instance === undefined) {\r\n        module.initialize();\r\n      }\r\n      module.invoke(query);\r\n    }\r\n    else {\r\n      if(instance !== undefined) {\r\n        module.invoke('destroy');\r\n      }\r\n      module.initialize();\r\n    }\r\n  });\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.sidebar.settings = {\r\n\r\n  name              : 'Sidebar',\r\n  namespace         : 'sidebar',\r\n\r\n  silent            : false,\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  transition        : 'auto',\r\n  mobileTransition  : 'auto',\r\n\r\n  defaultTransition : {\r\n    computer: {\r\n      left   : 'uncover',\r\n      right  : 'uncover',\r\n      top    : 'overlay',\r\n      bottom : 'overlay'\r\n    },\r\n    mobile: {\r\n      left   : 'uncover',\r\n      right  : 'uncover',\r\n      top    : 'overlay',\r\n      bottom : 'overlay'\r\n    }\r\n  },\r\n\r\n  context           : 'body',\r\n  exclusive         : false,\r\n  closable          : true,\r\n  dimPage           : true,\r\n  scrollLock        : false,\r\n  returnScroll      : false,\r\n  delaySetup        : false,\r\n\r\n  duration          : 500,\r\n\r\n  onChange          : function(){},\r\n  onShow            : function(){},\r\n  onHide            : function(){},\r\n\r\n  onHidden          : function(){},\r\n  onVisible         : function(){},\r\n\r\n  className         : {\r\n    active    : 'active',\r\n    animating : 'animating',\r\n    dimmed    : 'dimmed',\r\n    ios       : 'ios',\r\n    pushable  : 'pushable',\r\n    pushed    : 'pushed',\r\n    right     : 'right',\r\n    top       : 'top',\r\n    left      : 'left',\r\n    bottom    : 'bottom',\r\n    visible   : 'visible'\r\n  },\r\n\r\n  selector: {\r\n    fixed   : '.fixed',\r\n    omitted : 'script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed',\r\n    pusher  : '.pusher',\r\n    sidebar : '.ui.sidebar'\r\n  },\r\n\r\n  regExp: {\r\n    ios          : /(iPad|iPhone|iPod)/g,\r\n    mobileChrome : /(CriOS)/g,\r\n    mobile       : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g\r\n  },\r\n\r\n  error   : {\r\n    method       : 'The method you called is not defined.',\r\n    pusher       : 'Had to add pusher element. For optimal performance make sure body content is inside a pusher element',\r\n    movedSidebar : 'Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag',\r\n    overlay      : 'The overlay setting is no longer supported, use animation: overlay',\r\n    notFound     : 'There were no elements that matched the specified selector'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Sticky\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.sticky = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings              = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.sticky.settings, parameters)\r\n          : $.extend({}, $.fn.sticky.settings),\r\n\r\n        className             = settings.className,\r\n        namespace             = settings.namespace,\r\n        error                 = settings.error,\r\n\r\n        eventNamespace        = '.' + namespace,\r\n        moduleNamespace       = 'module-' + namespace,\r\n\r\n        $module               = $(this),\r\n        $window               = $(window),\r\n        $scroll               = $(settings.scrollContext),\r\n        $container,\r\n        $context,\r\n\r\n        selector              = $module.selector || '',\r\n        instance              = $module.data(moduleNamespace),\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); },\r\n\r\n        element         = this,\r\n\r\n        documentObserver,\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module      = {\r\n\r\n        initialize: function() {\r\n\r\n          module.determineContainer();\r\n          module.determineContext();\r\n          module.verbose('Initializing sticky', settings, $container);\r\n\r\n          module.save.positions();\r\n          module.checkErrors();\r\n          module.bind.events();\r\n\r\n          if(settings.observeChanges) {\r\n            module.observeChanges();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous instance');\r\n          module.reset();\r\n          if(documentObserver) {\r\n            documentObserver.disconnect();\r\n          }\r\n          if(observer) {\r\n            observer.disconnect();\r\n          }\r\n          $window\r\n            .off('load' + eventNamespace, module.event.load)\r\n            .off('resize' + eventNamespace, module.event.resize)\r\n          ;\r\n          $scroll\r\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\r\n          ;\r\n          $module.removeData(moduleNamespace);\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            documentObserver = new MutationObserver(module.event.documentChanged);\r\n            observer         = new MutationObserver(module.event.changed);\r\n            documentObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe($context[0], {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        determineContainer: function() {\r\n          if(settings.container) {\r\n            $container = $(settings.container);\r\n          }\r\n          else {\r\n            $container = $module.offsetParent();\r\n          }\r\n        },\r\n\r\n        determineContext: function() {\r\n          if(settings.context) {\r\n            $context = $(settings.context);\r\n          }\r\n          else {\r\n            $context = $container;\r\n          }\r\n          if($context.length === 0) {\r\n            module.error(error.invalidContext, settings.context, $module);\r\n            return;\r\n          }\r\n        },\r\n\r\n        checkErrors: function() {\r\n          if( module.is.hidden() ) {\r\n            module.error(error.visible, $module);\r\n          }\r\n          if(module.cache.element.height > module.cache.context.height) {\r\n            module.reset();\r\n            module.error(error.elementSize, $module);\r\n            return;\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            $window\r\n              .on('load' + eventNamespace, module.event.load)\r\n              .on('resize' + eventNamespace, module.event.resize)\r\n            ;\r\n            // pub/sub pattern\r\n            $scroll\r\n              .off('scroll' + eventNamespace)\r\n              .on('scroll' + eventNamespace, module.event.scroll)\r\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          changed: function(mutations) {\r\n            clearTimeout(module.timer);\r\n            module.timer = setTimeout(function() {\r\n              module.verbose('DOM tree modified, updating sticky menu', mutations);\r\n              module.refresh();\r\n            }, 100);\r\n          },\r\n          documentChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          load: function() {\r\n            module.verbose('Page contents finished loading');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          resize: function() {\r\n            module.verbose('Window resized');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          scroll: function() {\r\n            requestAnimationFrame(function() {\r\n              $scroll.triggerHandler('scrollchange' + eventNamespace, $scroll.scrollTop() );\r\n            });\r\n          },\r\n          scrollchange: function(event, scrollPosition) {\r\n            module.stick(scrollPosition);\r\n            settings.onScroll.call(element);\r\n          }\r\n        },\r\n\r\n        refresh: function(hardRefresh) {\r\n          module.reset();\r\n          if(!settings.context) {\r\n            module.determineContext();\r\n          }\r\n          if(hardRefresh) {\r\n            module.determineContainer();\r\n          }\r\n          module.save.positions();\r\n          module.stick();\r\n          settings.onReposition.call(element);\r\n        },\r\n\r\n        supports: {\r\n          sticky: function() {\r\n            var\r\n              $element = $('<div/>'),\r\n              element = $element[0]\r\n            ;\r\n            $element.addClass(className.supported);\r\n            return($element.css('position').match('sticky'));\r\n          }\r\n        },\r\n\r\n        save: {\r\n          lastScroll: function(scroll) {\r\n            module.lastScroll = scroll;\r\n          },\r\n          elementScroll: function(scroll) {\r\n            module.elementScroll = scroll;\r\n          },\r\n          positions: function() {\r\n            var\r\n              scrollContext = {\r\n                height : $scroll.height()\r\n              },\r\n              element = {\r\n                margin: {\r\n                  top    : parseInt($module.css('margin-top'), 10),\r\n                  bottom : parseInt($module.css('margin-bottom'), 10),\r\n                },\r\n                offset : $module.offset(),\r\n                width  : $module.outerWidth(),\r\n                height : $module.outerHeight()\r\n              },\r\n              context = {\r\n                offset : $context.offset(),\r\n                height : $context.outerHeight()\r\n              },\r\n              container = {\r\n                height: $container.outerHeight()\r\n              }\r\n            ;\r\n            if( !module.is.standardScroll() ) {\r\n              module.debug('Non-standard scroll. Removing scroll offset from element offset');\r\n\r\n              scrollContext.top  = $scroll.scrollTop();\r\n              scrollContext.left = $scroll.scrollLeft();\r\n\r\n              element.offset.top  += scrollContext.top;\r\n              context.offset.top  += scrollContext.top;\r\n              element.offset.left += scrollContext.left;\r\n              context.offset.left += scrollContext.left;\r\n            }\r\n            module.cache = {\r\n              fits : ( element.height < scrollContext.height ),\r\n              scrollContext : {\r\n                height : scrollContext.height\r\n              },\r\n              element: {\r\n                margin : element.margin,\r\n                top    : element.offset.top - element.margin.top,\r\n                left   : element.offset.left,\r\n                width  : element.width,\r\n                height : element.height,\r\n                bottom : element.offset.top + element.height\r\n              },\r\n              context: {\r\n                top           : context.offset.top,\r\n                height        : context.height,\r\n                bottom        : context.offset.top + context.height\r\n              }\r\n            };\r\n            module.set.containerSize();\r\n            module.set.size();\r\n            module.stick();\r\n            module.debug('Caching element positions', module.cache);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          direction: function(scroll) {\r\n            var\r\n              direction = 'down'\r\n            ;\r\n            scroll = scroll || $scroll.scrollTop();\r\n            if(module.lastScroll !== undefined) {\r\n              if(module.lastScroll < scroll) {\r\n                direction = 'down';\r\n              }\r\n              else if(module.lastScroll > scroll) {\r\n                direction = 'up';\r\n              }\r\n            }\r\n            return direction;\r\n          },\r\n          scrollChange: function(scroll) {\r\n            scroll = scroll || $scroll.scrollTop();\r\n            return (module.lastScroll)\r\n              ? (scroll - module.lastScroll)\r\n              : 0\r\n            ;\r\n          },\r\n          currentElementScroll: function() {\r\n            if(module.elementScroll) {\r\n              return module.elementScroll;\r\n            }\r\n            return ( module.is.top() )\r\n              ? Math.abs(parseInt($module.css('top'), 10))    || 0\r\n              : Math.abs(parseInt($module.css('bottom'), 10)) || 0\r\n            ;\r\n          },\r\n\r\n          elementScroll: function(scroll) {\r\n            scroll = scroll || $scroll.scrollTop();\r\n            var\r\n              element        = module.cache.element,\r\n              scrollContext  = module.cache.scrollContext,\r\n              delta          = module.get.scrollChange(scroll),\r\n              maxScroll      = (element.height - scrollContext.height + settings.offset),\r\n              elementScroll  = module.get.currentElementScroll(),\r\n              possibleScroll = (elementScroll + delta)\r\n            ;\r\n            if(module.cache.fits || possibleScroll < 0) {\r\n              elementScroll = 0;\r\n            }\r\n            else if(possibleScroll > maxScroll ) {\r\n              elementScroll = maxScroll;\r\n            }\r\n            else {\r\n              elementScroll = possibleScroll;\r\n            }\r\n            return elementScroll;\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          lastScroll: function() {\r\n            delete module.lastScroll;\r\n          },\r\n          elementScroll: function(scroll) {\r\n            delete module.elementScroll;\r\n          },\r\n          offset: function() {\r\n            $module.css('margin-top', '');\r\n          }\r\n        },\r\n\r\n        set: {\r\n          offset: function() {\r\n            module.verbose('Setting offset on element', settings.offset);\r\n            $module\r\n              .css('margin-top', settings.offset)\r\n            ;\r\n          },\r\n          containerSize: function() {\r\n            var\r\n              tagName = $container.get(0).tagName\r\n            ;\r\n            if(tagName === 'HTML' || tagName == 'body') {\r\n              // this can trigger for too many reasons\r\n              //module.error(error.container, tagName, $module);\r\n              module.determineContainer();\r\n            }\r\n            else {\r\n              if( Math.abs($container.outerHeight() - module.cache.context.height) > settings.jitter) {\r\n                module.debug('Context has padding, specifying exact height for container', module.cache.context.height);\r\n                $container.css({\r\n                  height: module.cache.context.height\r\n                });\r\n              }\r\n            }\r\n          },\r\n          minimumSize: function() {\r\n            var\r\n              element   = module.cache.element\r\n            ;\r\n            $container\r\n              .css('min-height', element.height)\r\n            ;\r\n          },\r\n          scroll: function(scroll) {\r\n            module.debug('Setting scroll on element', scroll);\r\n            if(module.elementScroll == scroll) {\r\n              return;\r\n            }\r\n            if( module.is.top() ) {\r\n              $module\r\n                .css('bottom', '')\r\n                .css('top', -scroll)\r\n              ;\r\n            }\r\n            if( module.is.bottom() ) {\r\n              $module\r\n                .css('top', '')\r\n                .css('bottom', scroll)\r\n              ;\r\n            }\r\n          },\r\n          size: function() {\r\n            if(module.cache.element.height !== 0 && module.cache.element.width !== 0) {\r\n              element.style.setProperty('width',  module.cache.element.width  + 'px', 'important');\r\n              element.style.setProperty('height', module.cache.element.height + 'px', 'important');\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          standardScroll: function() {\r\n            return ($scroll[0] == window);\r\n          },\r\n          top: function() {\r\n            return $module.hasClass(className.top);\r\n          },\r\n          bottom: function() {\r\n            return $module.hasClass(className.bottom);\r\n          },\r\n          initialPosition: function() {\r\n            return (!module.is.fixed() && !module.is.bound());\r\n          },\r\n          hidden: function() {\r\n            return (!$module.is(':visible'));\r\n          },\r\n          bound: function() {\r\n            return $module.hasClass(className.bound);\r\n          },\r\n          fixed: function() {\r\n            return $module.hasClass(className.fixed);\r\n          }\r\n        },\r\n\r\n        stick: function(scroll) {\r\n          var\r\n            cachedPosition = scroll || $scroll.scrollTop(),\r\n            cache          = module.cache,\r\n            fits           = cache.fits,\r\n            element        = cache.element,\r\n            scrollContext  = cache.scrollContext,\r\n            context        = cache.context,\r\n            offset         = (module.is.bottom() && settings.pushing)\r\n              ? settings.bottomOffset\r\n              : settings.offset,\r\n            scroll         = {\r\n              top    : cachedPosition + offset,\r\n              bottom : cachedPosition + offset + scrollContext.height\r\n            },\r\n            direction      = module.get.direction(scroll.top),\r\n            elementScroll  = (fits)\r\n              ? 0\r\n              : module.get.elementScroll(scroll.top),\r\n\r\n            // shorthand\r\n            doesntFit      = !fits,\r\n            elementVisible = (element.height !== 0)\r\n          ;\r\n\r\n          if(elementVisible) {\r\n\r\n            if( module.is.initialPosition() ) {\r\n              if(scroll.top >= context.bottom) {\r\n                module.debug('Initial element position is bottom of container');\r\n                module.bindBottom();\r\n              }\r\n              else if(scroll.top > element.top) {\r\n                if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\r\n                  module.debug('Initial element position is bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                else {\r\n                  module.debug('Initial element position is fixed');\r\n                  module.fixTop();\r\n                }\r\n              }\r\n\r\n            }\r\n            else if( module.is.fixed() ) {\r\n\r\n              // currently fixed top\r\n              if( module.is.top() ) {\r\n                if( scroll.top <= element.top ) {\r\n                  module.debug('Fixed element reached top of container');\r\n                  module.setInitialPosition();\r\n                }\r\n                else if( (element.height + scroll.top - elementScroll) >= context.bottom ) {\r\n                  module.debug('Fixed element reached bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                // scroll element if larger than screen\r\n                else if(doesntFit) {\r\n                  module.set.scroll(elementScroll);\r\n                  module.save.lastScroll(scroll.top);\r\n                  module.save.elementScroll(elementScroll);\r\n                }\r\n              }\r\n\r\n              // currently fixed bottom\r\n              else if(module.is.bottom() ) {\r\n\r\n                // top edge\r\n                if( (scroll.bottom - element.height) <= element.top) {\r\n                  module.debug('Bottom fixed rail has reached top of container');\r\n                  module.setInitialPosition();\r\n                }\r\n                // bottom edge\r\n                else if(scroll.bottom >= context.bottom) {\r\n                  module.debug('Bottom fixed rail has reached bottom of container');\r\n                  module.bindBottom();\r\n                }\r\n                // scroll element if larger than screen\r\n                else if(doesntFit) {\r\n                  module.set.scroll(elementScroll);\r\n                  module.save.lastScroll(scroll.top);\r\n                  module.save.elementScroll(elementScroll);\r\n                }\r\n\r\n              }\r\n            }\r\n            else if( module.is.bottom() ) {\r\n              if( scroll.top <= element.top ) {\r\n                module.debug('Jumped from bottom fixed to top fixed, most likely used home/end button');\r\n                module.setInitialPosition();\r\n              }\r\n              else {\r\n                if(settings.pushing) {\r\n                  if(module.is.bound() && scroll.bottom <= context.bottom ) {\r\n                    module.debug('Fixing bottom attached element to bottom of browser.');\r\n                    module.fixBottom();\r\n                  }\r\n                }\r\n                else {\r\n                  if(module.is.bound() && (scroll.top <= context.bottom - element.height) ) {\r\n                    module.debug('Fixing bottom attached element to top of browser.');\r\n                    module.fixTop();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        bindTop: function() {\r\n          module.debug('Binding element to top of parent container');\r\n          module.remove.offset();\r\n          $module\r\n            .css({\r\n              left         : '',\r\n              top          : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.fixed)\r\n            .removeClass(className.bottom)\r\n            .addClass(className.bound)\r\n            .addClass(className.top)\r\n          ;\r\n          settings.onTop.call(element);\r\n          settings.onUnstick.call(element);\r\n        },\r\n        bindBottom: function() {\r\n          module.debug('Binding element to bottom of parent container');\r\n          module.remove.offset();\r\n          $module\r\n            .css({\r\n              left         : '',\r\n              top          : ''\r\n            })\r\n            .removeClass(className.fixed)\r\n            .removeClass(className.top)\r\n            .addClass(className.bound)\r\n            .addClass(className.bottom)\r\n          ;\r\n          settings.onBottom.call(element);\r\n          settings.onUnstick.call(element);\r\n        },\r\n\r\n        setInitialPosition: function() {\r\n          module.debug('Returning to initial position');\r\n          module.unfix();\r\n          module.unbind();\r\n        },\r\n\r\n\r\n        fixTop: function() {\r\n          module.debug('Fixing element to top of page');\r\n          module.set.minimumSize();\r\n          module.set.offset();\r\n          $module\r\n            .css({\r\n              left         : module.cache.element.left,\r\n              bottom       : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.bound)\r\n            .removeClass(className.bottom)\r\n            .addClass(className.fixed)\r\n            .addClass(className.top)\r\n          ;\r\n          settings.onStick.call(element);\r\n        },\r\n\r\n        fixBottom: function() {\r\n          module.debug('Sticking element to bottom of page');\r\n          module.set.minimumSize();\r\n          module.set.offset();\r\n          $module\r\n            .css({\r\n              left         : module.cache.element.left,\r\n              bottom       : '',\r\n              marginBottom : ''\r\n            })\r\n            .removeClass(className.bound)\r\n            .removeClass(className.top)\r\n            .addClass(className.fixed)\r\n            .addClass(className.bottom)\r\n          ;\r\n          settings.onStick.call(element);\r\n        },\r\n\r\n        unbind: function() {\r\n          if( module.is.bound() ) {\r\n            module.debug('Removing container bound position on element');\r\n            module.remove.offset();\r\n            $module\r\n              .removeClass(className.bound)\r\n              .removeClass(className.top)\r\n              .removeClass(className.bottom)\r\n            ;\r\n          }\r\n        },\r\n\r\n        unfix: function() {\r\n          if( module.is.fixed() ) {\r\n            module.debug('Removing fixed position on element');\r\n            module.remove.offset();\r\n            $module\r\n              .removeClass(className.fixed)\r\n              .removeClass(className.top)\r\n              .removeClass(className.bottom)\r\n            ;\r\n            settings.onUnstick.call(element);\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.debug('Resetting elements position');\r\n          module.unbind();\r\n          module.unfix();\r\n          module.resetCSS();\r\n          module.remove.offset();\r\n          module.remove.lastScroll();\r\n        },\r\n\r\n        resetCSS: function() {\r\n          $module\r\n            .css({\r\n              width  : '',\r\n              height : ''\r\n            })\r\n          ;\r\n          $container\r\n            .css({\r\n              height: ''\r\n            })\r\n          ;\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 0);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.sticky.settings = {\r\n\r\n  name           : 'Sticky',\r\n  namespace      : 'sticky',\r\n\r\n  silent         : false,\r\n  debug          : false,\r\n  verbose        : true,\r\n  performance    : true,\r\n\r\n  // whether to stick in the opposite direction on scroll up\r\n  pushing        : false,\r\n\r\n  context        : false,\r\n  container      : false,\r\n\r\n  // Context to watch scroll events\r\n  scrollContext  : window,\r\n\r\n  // Offset to adjust scroll\r\n  offset         : 0,\r\n\r\n  // Offset to adjust scroll when attached to bottom of screen\r\n  bottomOffset   : 0,\r\n\r\n  jitter         : 5, // will only set container height if difference between context and container is larger than this number\r\n\r\n  // Whether to automatically observe changes with Mutation Observers\r\n  observeChanges : false,\r\n\r\n  // Called when position is recalculated\r\n  onReposition   : function(){},\r\n\r\n  // Called on each scroll\r\n  onScroll       : function(){},\r\n\r\n  // Called when element is stuck to viewport\r\n  onStick        : function(){},\r\n\r\n  // Called when element is unstuck from viewport\r\n  onUnstick      : function(){},\r\n\r\n  // Called when element reaches top of context\r\n  onTop          : function(){},\r\n\r\n  // Called when element reaches bottom of context\r\n  onBottom       : function(){},\r\n\r\n  error         : {\r\n    container      : 'Sticky element must be inside a relative container',\r\n    visible        : 'Element is hidden, you must call refresh after element becomes visible. Use silent setting to surpress this warning in production.',\r\n    method         : 'The method you called is not defined.',\r\n    invalidContext : 'Context specified does not exist',\r\n    elementSize    : 'Sticky element is larger than its container, cannot create sticky.'\r\n  },\r\n\r\n  className : {\r\n    bound     : 'bound',\r\n    fixed     : 'fixed',\r\n    supported : 'native',\r\n    top       : 'top',\r\n    bottom    : 'bottom'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Tab\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.tab = function(parameters) {\r\n\r\n  var\r\n    // use window context if none specified\r\n    $allModules     = $.isFunction(this)\r\n        ? $(window)\r\n        : $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    initializedHistory = false,\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\r\n          : $.extend({}, $.fn.tab.settings),\r\n\r\n        className       = settings.className,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n\r\n        eventNamespace  = '.' + settings.namespace,\r\n        moduleNamespace = 'module-' + settings.namespace,\r\n\r\n        $module         = $(this),\r\n        $context,\r\n        $tabs,\r\n\r\n        cache           = {},\r\n        firstLoad       = true,\r\n        recursionDepth  = 0,\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        activeTabPath,\r\n        parameterArray,\r\n        module,\r\n\r\n        historyEvent\r\n\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing tab menu item', $module);\r\n          module.fix.callbacks();\r\n          module.determineTabs();\r\n\r\n          module.debug('Determining tabs', settings.context, $tabs);\r\n          // set up automatic routing\r\n          if(settings.auto) {\r\n            module.set.auto();\r\n          }\r\n          module.bind.events();\r\n\r\n          if(settings.history && !initializedHistory) {\r\n            module.initializeHistory();\r\n            initializedHistory = true;\r\n          }\r\n\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function () {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.debug('Destroying tabs', $module);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            // if using $.tab don't add events\r\n            if( !$.isWindow( element ) ) {\r\n              module.debug('Attaching tab activation events to element', $module);\r\n              $module\r\n                .on('click' + eventNamespace, module.event.click)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        determineTabs: function() {\r\n          var\r\n            $reference\r\n          ;\r\n\r\n          // determine tab context\r\n          if(settings.context === 'parent') {\r\n            if($module.closest(selector.ui).length > 0) {\r\n              $reference = $module.closest(selector.ui);\r\n              module.verbose('Using closest UI element as parent', $reference);\r\n            }\r\n            else {\r\n              $reference = $module;\r\n            }\r\n            $context = $reference.parent();\r\n            module.verbose('Determined parent element for creating context', $context);\r\n          }\r\n          else if(settings.context) {\r\n            $context = $(settings.context);\r\n            module.verbose('Using selector for tab context', settings.context, $context);\r\n          }\r\n          else {\r\n            $context = $('body');\r\n          }\r\n          // find tabs\r\n          if(settings.childrenOnly) {\r\n            $tabs = $context.children(selector.tabs);\r\n            module.debug('Searching tab context children for tabs', $context, $tabs);\r\n          }\r\n          else {\r\n            $tabs = $context.find(selector.tabs);\r\n            module.debug('Searching tab context for tabs', $context, $tabs);\r\n          }\r\n        },\r\n\r\n        fix: {\r\n          callbacks: function() {\r\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\r\n              if(parameters.onTabLoad) {\r\n                parameters.onLoad = parameters.onTabLoad;\r\n                delete parameters.onTabLoad;\r\n                module.error(error.legacyLoad, parameters.onLoad);\r\n              }\r\n              if(parameters.onTabInit) {\r\n                parameters.onFirstLoad = parameters.onTabInit;\r\n                delete parameters.onTabInit;\r\n                module.error(error.legacyInit, parameters.onFirstLoad);\r\n              }\r\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\r\n            }\r\n          }\r\n        },\r\n\r\n        initializeHistory: function() {\r\n          module.debug('Initializing page state');\r\n          if( $.address === undefined ) {\r\n            module.error(error.state);\r\n            return false;\r\n          }\r\n          else {\r\n            if(settings.historyType == 'state') {\r\n              module.debug('Using HTML5 to manage state');\r\n              if(settings.path !== false) {\r\n                $.address\r\n                  .history(true)\r\n                  .state(settings.path)\r\n                ;\r\n              }\r\n              else {\r\n                module.error(error.path);\r\n                return false;\r\n              }\r\n            }\r\n            $.address\r\n              .bind('change', module.event.history.change)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          click: function(event) {\r\n            var\r\n              tabPath = $(this).data(metadata.tab)\r\n            ;\r\n            if(tabPath !== undefined) {\r\n              if(settings.history) {\r\n                module.verbose('Updating page state', event);\r\n                $.address.value(tabPath);\r\n              }\r\n              else {\r\n                module.verbose('Changing tab', event);\r\n                module.changeTab(tabPath);\r\n              }\r\n              event.preventDefault();\r\n            }\r\n            else {\r\n              module.debug('No tab specified');\r\n            }\r\n          },\r\n          history: {\r\n            change: function(event) {\r\n              var\r\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\r\n                pageTitle = settings.templates.determineTitle(tabPath) || false\r\n              ;\r\n              module.performance.display();\r\n              module.debug('History change event', tabPath, event);\r\n              historyEvent = event;\r\n              if(tabPath !== undefined) {\r\n                module.changeTab(tabPath);\r\n              }\r\n              if(pageTitle) {\r\n                $.address.title(pageTitle);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          if(activeTabPath) {\r\n            module.debug('Refreshing tab', activeTabPath);\r\n            module.changeTab(activeTabPath);\r\n          }\r\n        },\r\n\r\n        cache: {\r\n\r\n          read: function(cacheKey) {\r\n            return (cacheKey !== undefined)\r\n              ? cache[cacheKey]\r\n              : false\r\n            ;\r\n          },\r\n          add: function(cacheKey, content) {\r\n            cacheKey = cacheKey || activeTabPath;\r\n            module.debug('Adding cached content for', cacheKey);\r\n            cache[cacheKey] = content;\r\n          },\r\n          remove: function(cacheKey) {\r\n            cacheKey = cacheKey || activeTabPath;\r\n            module.debug('Removing cached content for', cacheKey);\r\n            delete cache[cacheKey];\r\n          }\r\n        },\r\n\r\n        set: {\r\n          auto: function() {\r\n            var\r\n              url = (typeof settings.path == 'string')\r\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\r\n                : '/{$tab}'\r\n            ;\r\n            module.verbose('Setting up automatic tab retrieval from server', url);\r\n            if($.isPlainObject(settings.apiSettings)) {\r\n              settings.apiSettings.url = url;\r\n            }\r\n            else {\r\n              settings.apiSettings = {\r\n                url: url\r\n              };\r\n            }\r\n          },\r\n          loading: function(tabPath) {\r\n            var\r\n              $tab      = module.get.tabElement(tabPath),\r\n              isLoading = $tab.hasClass(className.loading)\r\n            ;\r\n            if(!isLoading) {\r\n              module.verbose('Setting loading state for', $tab);\r\n              $tab\r\n                .addClass(className.loading)\r\n                .siblings($tabs)\r\n                  .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n              if($tab.length > 0) {\r\n                settings.onRequest.call($tab[0], tabPath);\r\n              }\r\n            }\r\n          },\r\n          state: function(state) {\r\n            $.address.value(state);\r\n          }\r\n        },\r\n\r\n        changeTab: function(tabPath) {\r\n          var\r\n            pushStateAvailable = (window.history && window.history.pushState),\r\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\r\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\r\n            // only add default path if not remote content\r\n            pathArray = (remoteContent && !shouldIgnoreLoad)\r\n              ? module.utilities.pathToArray(tabPath)\r\n              : module.get.defaultPathArray(tabPath)\r\n          ;\r\n          tabPath = module.utilities.arrayToPath(pathArray);\r\n          $.each(pathArray, function(index, tab) {\r\n            var\r\n              currentPathArray   = pathArray.slice(0, index + 1),\r\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\r\n\r\n              isTab              = module.is.tab(currentPath),\r\n              isLastIndex        = (index + 1 == pathArray.length),\r\n\r\n              $tab               = module.get.tabElement(currentPath),\r\n              $anchor,\r\n              nextPathArray,\r\n              nextPath,\r\n              isLastTab\r\n            ;\r\n            module.verbose('Looking for tab', tab);\r\n            if(isTab) {\r\n              module.verbose('Tab was found', tab);\r\n              // scope up\r\n              activeTabPath  = currentPath;\r\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\r\n\r\n              if(isLastIndex) {\r\n                isLastTab = true;\r\n              }\r\n              else {\r\n                nextPathArray = pathArray.slice(0, index + 2);\r\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\r\n                isLastTab     = ( !module.is.tab(nextPath) );\r\n                if(isLastTab) {\r\n                  module.verbose('Tab parameters found', nextPathArray);\r\n                }\r\n              }\r\n              if(isLastTab && remoteContent) {\r\n                if(!shouldIgnoreLoad) {\r\n                  module.activate.navigation(currentPath);\r\n                  module.fetch.content(currentPath, tabPath);\r\n                }\r\n                else {\r\n                  module.debug('Ignoring remote content on first tab load', currentPath);\r\n                  firstLoad = false;\r\n                  module.cache.add(tabPath, $tab.html());\r\n                  module.activate.all(currentPath);\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                return false;\r\n              }\r\n              else {\r\n                module.debug('Opened local tab', currentPath);\r\n                module.activate.all(currentPath);\r\n                if( !module.cache.read(currentPath) ) {\r\n                  module.cache.add(currentPath, true);\r\n                  module.debug('First time tab loaded calling tab init');\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n              }\r\n\r\n            }\r\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\r\n              // look for in page anchor\r\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\r\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\r\n              $tab        = module.get.tabElement(currentPath);\r\n              // if anchor exists use parent tab\r\n              if($anchor && $anchor.length > 0 && currentPath) {\r\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\r\n                if( !$tab.hasClass(className.active) ) {\r\n                  setTimeout(function() {\r\n                    module.scrollTo($anchor);\r\n                  }, 0);\r\n                }\r\n                module.activate.all(currentPath);\r\n                if( !module.cache.read(currentPath) ) {\r\n                  module.cache.add(currentPath, true);\r\n                  module.debug('First time tab loaded calling tab init');\r\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                }\r\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\r\n                return false;\r\n              }\r\n            }\r\n            else {\r\n              module.error(error.missingTab, $module, $context, currentPath);\r\n              return false;\r\n            }\r\n          });\r\n        },\r\n\r\n        scrollTo: function($element) {\r\n          var\r\n            scrollOffset = ($element && $element.length > 0)\r\n              ? $element.offset().top\r\n              : false\r\n          ;\r\n          if(scrollOffset !== false) {\r\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\r\n            $(document).scrollTop(scrollOffset);\r\n          }\r\n        },\r\n\r\n        update: {\r\n          content: function(tabPath, html, evaluateScripts) {\r\n            var\r\n              $tab = module.get.tabElement(tabPath),\r\n              tab  = $tab[0]\r\n            ;\r\n            evaluateScripts = (evaluateScripts !== undefined)\r\n              ? evaluateScripts\r\n              : settings.evaluateScripts\r\n            ;\r\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\r\n              $tab\r\n                .empty()\r\n                .append($(html).clone(true))\r\n              ;\r\n            }\r\n            else {\r\n              if(evaluateScripts) {\r\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\r\n                $tab.html(html);\r\n              }\r\n              else {\r\n                module.debug('Updating HTML', tabPath, html);\r\n                tab.innerHTML = html;\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        fetch: {\r\n\r\n          content: function(tabPath, fullTabPath) {\r\n            var\r\n              $tab        = module.get.tabElement(tabPath),\r\n              apiSettings = {\r\n                dataType         : 'html',\r\n                encodeParameters : false,\r\n                on               : 'now',\r\n                cache            : settings.alwaysRefresh,\r\n                headers          : {\r\n                  'X-Remote': true\r\n                },\r\n                onSuccess : function(response) {\r\n                  if(settings.cacheType == 'response') {\r\n                    module.cache.add(fullTabPath, response);\r\n                  }\r\n                  module.update.content(tabPath, response);\r\n                  if(tabPath == activeTabPath) {\r\n                    module.debug('Content loaded', tabPath);\r\n                    module.activate.tab(tabPath);\r\n                  }\r\n                  else {\r\n                    module.debug('Content loaded in background', tabPath);\r\n                  }\r\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n\r\n                  if(settings.loadOnce) {\r\n                    module.cache.add(fullTabPath, true);\r\n                  }\r\n                  else if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\r\n                    setTimeout(function() {\r\n                      var\r\n                        $clone = $tab.children().clone(true)\r\n                      ;\r\n                      $clone = $clone.not('script');\r\n                      module.cache.add(fullTabPath, $clone);\r\n                    }, 0);\r\n                  }\r\n                  else {\r\n                    module.cache.add(fullTabPath, $tab.html());\r\n                  }\r\n                },\r\n                urlData: {\r\n                  tab: fullTabPath\r\n                }\r\n              },\r\n              request         = $tab.api('get request') || false,\r\n              existingRequest = ( request && request.state() === 'pending' ),\r\n              requestSettings,\r\n              cachedContent\r\n            ;\r\n\r\n            fullTabPath   = fullTabPath || tabPath;\r\n            cachedContent = module.cache.read(fullTabPath);\r\n\r\n\r\n            if(settings.cache && cachedContent) {\r\n              module.activate.tab(tabPath);\r\n              module.debug('Adding cached content', fullTabPath);\r\n              if(!settings.loadOnce) {\r\n                if(settings.evaluateScripts == 'once') {\r\n                  module.update.content(tabPath, cachedContent, false);\r\n                }\r\n                else {\r\n                  module.update.content(tabPath, cachedContent);\r\n                }\r\n              }\r\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\r\n            }\r\n            else if(existingRequest) {\r\n              module.set.loading(tabPath);\r\n              module.debug('Content is already loading', fullTabPath);\r\n            }\r\n            else if($.api !== undefined) {\r\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\r\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\r\n              module.set.loading(tabPath);\r\n              $tab.api(requestSettings);\r\n            }\r\n            else {\r\n              module.error(error.api);\r\n            }\r\n          }\r\n        },\r\n\r\n        activate: {\r\n          all: function(tabPath) {\r\n            module.activate.tab(tabPath);\r\n            module.activate.navigation(tabPath);\r\n          },\r\n          tab: function(tabPath) {\r\n            var\r\n              $tab          = module.get.tabElement(tabPath),\r\n              $deactiveTabs = (settings.deactivate == 'siblings')\r\n                ? $tab.siblings($tabs)\r\n                : $tabs.not($tab),\r\n              isActive      = $tab.hasClass(className.active)\r\n            ;\r\n            module.verbose('Showing tab content for', $tab);\r\n            if(!isActive) {\r\n              $tab\r\n                .addClass(className.active)\r\n              ;\r\n              $deactiveTabs\r\n                .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n              if($tab.length > 0) {\r\n                settings.onVisible.call($tab[0], tabPath);\r\n              }\r\n            }\r\n          },\r\n          navigation: function(tabPath) {\r\n            var\r\n              $navigation         = module.get.navElement(tabPath),\r\n              $deactiveNavigation = (settings.deactivate == 'siblings')\r\n                ? $navigation.siblings($allModules)\r\n                : $allModules.not($navigation),\r\n              isActive    = $navigation.hasClass(className.active)\r\n            ;\r\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\r\n            if(!isActive) {\r\n              $navigation\r\n                .addClass(className.active)\r\n              ;\r\n              $deactiveNavigation\r\n                .removeClass(className.active + ' ' + className.loading)\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        deactivate: {\r\n          all: function() {\r\n            module.deactivate.navigation();\r\n            module.deactivate.tabs();\r\n          },\r\n          navigation: function() {\r\n            $allModules\r\n              .removeClass(className.active)\r\n            ;\r\n          },\r\n          tabs: function() {\r\n            $tabs\r\n              .removeClass(className.active + ' ' + className.loading)\r\n            ;\r\n          }\r\n        },\r\n\r\n        is: {\r\n          tab: function(tabName) {\r\n            return (tabName !== undefined)\r\n              ? ( module.get.tabElement(tabName).length > 0 )\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          initialPath: function() {\r\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\r\n          },\r\n          path: function() {\r\n            return $.address.value();\r\n          },\r\n          // adds default tabs to tab path\r\n          defaultPathArray: function(tabPath) {\r\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\r\n          },\r\n          defaultPath: function(tabPath) {\r\n            var\r\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\r\n              defaultTab  = $defaultNav.data(metadata.tab) || false\r\n            ;\r\n            if( defaultTab ) {\r\n              module.debug('Found default tab', defaultTab);\r\n              if(recursionDepth < settings.maxDepth) {\r\n                recursionDepth++;\r\n                return module.get.defaultPath(defaultTab);\r\n              }\r\n              module.error(error.recursion);\r\n            }\r\n            else {\r\n              module.debug('No default tabs found for', tabPath, $tabs);\r\n            }\r\n            recursionDepth = 0;\r\n            return tabPath;\r\n          },\r\n          navElement: function(tabPath) {\r\n            tabPath = tabPath || activeTabPath;\r\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\r\n          },\r\n          tabElement: function(tabPath) {\r\n            var\r\n              $fullPathTab,\r\n              $simplePathTab,\r\n              tabPathArray,\r\n              lastTab\r\n            ;\r\n            tabPath        = tabPath || activeTabPath;\r\n            tabPathArray   = module.utilities.pathToArray(tabPath);\r\n            lastTab        = module.utilities.last(tabPathArray);\r\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\r\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\r\n            return ($fullPathTab.length > 0)\r\n              ? $fullPathTab\r\n              : $simplePathTab\r\n            ;\r\n          },\r\n          tab: function() {\r\n            return activeTabPath;\r\n          }\r\n        },\r\n\r\n        utilities: {\r\n          filterArray: function(keepArray, removeArray) {\r\n            return $.grep(keepArray, function(keepValue) {\r\n              return ( $.inArray(keepValue, removeArray) == -1);\r\n            });\r\n          },\r\n          last: function(array) {\r\n            return $.isArray(array)\r\n              ? array[ array.length - 1]\r\n              : false\r\n            ;\r\n          },\r\n          pathToArray: function(pathName) {\r\n            if(pathName === undefined) {\r\n              pathName = activeTabPath;\r\n            }\r\n            return typeof pathName == 'string'\r\n              ? pathName.split('/')\r\n              : [pathName]\r\n            ;\r\n          },\r\n          arrayToPath: function(pathArray) {\r\n            return $.isArray(pathArray)\r\n              ? pathArray.join('/')\r\n              : false\r\n            ;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n\r\n};\r\n\r\n// shortcut for tabbed content with no defined navigation\r\n$.tab = function() {\r\n  $(window).tab.apply(this, arguments);\r\n};\r\n\r\n$.fn.tab.settings = {\r\n\r\n  name            : 'Tab',\r\n  namespace       : 'tab',\r\n\r\n  silent          : false,\r\n  debug           : false,\r\n  verbose         : false,\r\n  performance     : true,\r\n\r\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\r\n  history         : false,      // use browser history\r\n  historyType     : 'hash',     // #/ or html5 state\r\n  path            : false,      // base path of url\r\n\r\n  context         : false,      // specify a context that tabs must appear inside\r\n  childrenOnly    : false,      // use only tabs that are children of context\r\n  maxDepth        : 25,         // max depth a tab can be nested\r\n\r\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\r\n\r\n  alwaysRefresh   : false,      // load tab content new every tab click\r\n  cache           : true,       // cache the content requests to pull locally\r\n  loadOnce        : false,      // Whether tab data should only be loaded once when using remote content\r\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\r\n  ignoreFirstLoad : false,      // don't load remote content on first load\r\n\r\n  apiSettings     : false,      // settings for api call\r\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\r\n\r\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\r\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\r\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\r\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\r\n\r\n  templates : {\r\n    determineTitle: function(tabArray) {} // returns page title for path\r\n  },\r\n\r\n  error: {\r\n    api        : 'You attempted to load content without API module',\r\n    method     : 'The method you called is not defined',\r\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\r\n    noContent  : 'The tab you specified is missing a content url.',\r\n    path       : 'History enabled, but no path was specified',\r\n    recursion  : 'Max recursive depth reached',\r\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\r\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\r\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\r\n  },\r\n\r\n  metadata : {\r\n    tab    : 'tab',\r\n    loaded : 'loaded',\r\n    promise: 'promise'\r\n  },\r\n\r\n  className   : {\r\n    loading : 'loading',\r\n    active  : 'active'\r\n  },\r\n\r\n  selector    : {\r\n    tabs : '.ui.tab',\r\n    ui   : '.ui'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Transition\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.transition = function() {\r\n  var\r\n    $allModules     = $(this),\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    moduleArguments = arguments,\r\n    query           = moduleArguments[0],\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n    methodInvoked   = (typeof query === 'string'),\r\n\r\n    requestAnimationFrame = window.requestAnimationFrame\r\n      || window.mozRequestAnimationFrame\r\n      || window.webkitRequestAnimationFrame\r\n      || window.msRequestAnimationFrame\r\n      || function(callback) { setTimeout(callback, 0); },\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function(index) {\r\n      var\r\n        $module  = $(this),\r\n        element  = this,\r\n\r\n        // set at run time\r\n        settings,\r\n        instance,\r\n\r\n        error,\r\n        className,\r\n        metadata,\r\n        animationEnd,\r\n        animationName,\r\n\r\n        namespace,\r\n        moduleNamespace,\r\n        eventNamespace,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n\r\n          // get full settings\r\n          settings        = module.get.settings.apply(element, moduleArguments);\r\n\r\n          // shorthand\r\n          className       = settings.className;\r\n          error           = settings.error;\r\n          metadata        = settings.metadata;\r\n\r\n          // define namespace\r\n          eventNamespace  = '.' + settings.namespace;\r\n          moduleNamespace = 'module-' + settings.namespace;\r\n          instance        = $module.data(moduleNamespace) || module;\r\n\r\n          // get vendor specific events\r\n          animationEnd    = module.get.animationEndEvent();\r\n\r\n          if(methodInvoked) {\r\n            methodInvoked = module.invoke(query);\r\n          }\r\n\r\n          // method not invoked, lets run an animation\r\n          if(methodInvoked === false) {\r\n            module.verbose('Converted arguments into settings object', settings);\r\n            if(settings.interval) {\r\n              module.delay(settings.animate);\r\n            }\r\n            else  {\r\n              module.animate();\r\n            }\r\n            module.instantiate();\r\n          }\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing display type on next animation');\r\n          delete module.displayType;\r\n        },\r\n\r\n        forceRepaint: function() {\r\n          module.verbose('Forcing element repaint');\r\n          var\r\n            $parentElement = $module.parent(),\r\n            $nextElement = $module.next()\r\n          ;\r\n          if($nextElement.length === 0) {\r\n            $module.detach().appendTo($parentElement);\r\n          }\r\n          else {\r\n            $module.detach().insertBefore($nextElement);\r\n          }\r\n        },\r\n\r\n        repaint: function() {\r\n          module.verbose('Repainting element');\r\n          var\r\n            fakeAssignment = element.offsetWidth\r\n          ;\r\n        },\r\n\r\n        delay: function(interval) {\r\n          var\r\n            direction = module.get.animationDirection(),\r\n            shouldReverse,\r\n            delay\r\n          ;\r\n          if(!direction) {\r\n            direction = module.can.transition()\r\n              ? module.get.direction()\r\n              : 'static'\r\n            ;\r\n          }\r\n          interval = (interval !== undefined)\r\n            ? interval\r\n            : settings.interval\r\n          ;\r\n          shouldReverse = (settings.reverse == 'auto' && direction == className.outward);\r\n          delay = (shouldReverse || settings.reverse == true)\r\n            ? ($allModules.length - index) * settings.interval\r\n            : index * settings.interval\r\n          ;\r\n          module.debug('Delaying animation by', delay);\r\n          setTimeout(module.animate, delay);\r\n        },\r\n\r\n        animate: function(overrideSettings) {\r\n          settings = overrideSettings || settings;\r\n          if(!module.is.supported()) {\r\n            module.error(error.support);\r\n            return false;\r\n          }\r\n          module.debug('Preparing animation', settings.animation);\r\n          if(module.is.animating()) {\r\n            if(settings.queue) {\r\n              if(!settings.allowRepeats && module.has.direction() && module.is.occurring() && module.queuing !== true) {\r\n                module.debug('Animation is currently occurring, preventing queueing same animation', settings.animation);\r\n              }\r\n              else {\r\n                module.queue(settings.animation);\r\n              }\r\n              return false;\r\n            }\r\n            else if(!settings.allowRepeats && module.is.occurring()) {\r\n              module.debug('Animation is already occurring, will not execute repeated animation', settings.animation);\r\n              return false;\r\n            }\r\n            else {\r\n              module.debug('New animation started, completing previous early', settings.animation);\r\n              instance.complete();\r\n            }\r\n          }\r\n          if( module.can.animate() ) {\r\n            module.set.animating(settings.animation);\r\n          }\r\n          else {\r\n            module.error(error.noAnimation, settings.animation, element);\r\n          }\r\n        },\r\n\r\n        reset: function() {\r\n          module.debug('Resetting animation to beginning conditions');\r\n          module.remove.animationCallbacks();\r\n          module.restore.conditions();\r\n          module.remove.animating();\r\n        },\r\n\r\n        queue: function(animation) {\r\n          module.debug('Queueing animation of', animation);\r\n          module.queuing = true;\r\n          $module\r\n            .one(animationEnd + '.queue' + eventNamespace, function() {\r\n              module.queuing = false;\r\n              module.repaint();\r\n              module.animate.apply(this, settings);\r\n            })\r\n          ;\r\n        },\r\n\r\n        complete: function (event) {\r\n          module.debug('Animation complete', settings.animation);\r\n          module.remove.completeCallback();\r\n          module.remove.failSafe();\r\n          if(!module.is.looping()) {\r\n            if( module.is.outward() ) {\r\n              module.verbose('Animation is outward, hiding element');\r\n              module.restore.conditions();\r\n              module.hide();\r\n            }\r\n            else if( module.is.inward() ) {\r\n              module.verbose('Animation is outward, showing element');\r\n              module.restore.conditions();\r\n              module.show();\r\n            }\r\n            else {\r\n              module.verbose('Static animation completed');\r\n              module.restore.conditions();\r\n              settings.onComplete.call(element);\r\n            }\r\n          }\r\n        },\r\n\r\n        force: {\r\n          visible: function() {\r\n            var\r\n              style          = $module.attr('style'),\r\n              userStyle      = module.get.userStyle(),\r\n              displayType    = module.get.displayType(),\r\n              overrideStyle  = userStyle + 'display: ' + displayType + ' !important;',\r\n              currentDisplay = $module.css('display'),\r\n              emptyStyle     = (style === undefined || style === '')\r\n            ;\r\n            if(currentDisplay !== displayType) {\r\n              module.verbose('Overriding default display to show element', displayType);\r\n              $module\r\n                .attr('style', overrideStyle)\r\n              ;\r\n            }\r\n            else if(emptyStyle) {\r\n              $module.removeAttr('style');\r\n            }\r\n          },\r\n          hidden: function() {\r\n            var\r\n              style          = $module.attr('style'),\r\n              currentDisplay = $module.css('display'),\r\n              emptyStyle     = (style === undefined || style === '')\r\n            ;\r\n            if(currentDisplay !== 'none' && !module.is.hidden()) {\r\n              module.verbose('Overriding default display to hide element');\r\n              $module\r\n                .css('display', 'none')\r\n              ;\r\n            }\r\n            else if(emptyStyle) {\r\n              $module\r\n                .removeAttr('style')\r\n              ;\r\n            }\r\n          }\r\n        },\r\n\r\n        has: {\r\n          direction: function(animation) {\r\n            var\r\n              hasDirection = false\r\n            ;\r\n            animation = animation || settings.animation;\r\n            if(typeof animation === 'string') {\r\n              animation = animation.split(' ');\r\n              $.each(animation, function(index, word){\r\n                if(word === className.inward || word === className.outward) {\r\n                  hasDirection = true;\r\n                }\r\n              });\r\n            }\r\n            return hasDirection;\r\n          },\r\n          inlineDisplay: function() {\r\n            var\r\n              style = $module.attr('style') || ''\r\n            ;\r\n            return $.isArray(style.match(/display.*?;/, ''));\r\n          }\r\n        },\r\n\r\n        set: {\r\n          animating: function(animation) {\r\n            var\r\n              animationClass,\r\n              direction\r\n            ;\r\n            // remove previous callbacks\r\n            module.remove.completeCallback();\r\n\r\n            // determine exact animation\r\n            animation      = animation || settings.animation;\r\n            animationClass = module.get.animationClass(animation);\r\n\r\n            // save animation class in cache to restore class names\r\n            module.save.animation(animationClass);\r\n\r\n            // override display if necessary so animation appears visibly\r\n            module.force.visible();\r\n\r\n            module.remove.hidden();\r\n            module.remove.direction();\r\n\r\n            module.start.animation(animationClass);\r\n\r\n          },\r\n          duration: function(animationName, duration) {\r\n            duration = duration || settings.duration;\r\n            duration = (typeof duration == 'number')\r\n              ? duration + 'ms'\r\n              : duration\r\n            ;\r\n            if(duration || duration === 0) {\r\n              module.verbose('Setting animation duration', duration);\r\n              $module\r\n                .css({\r\n                  'animation-duration':  duration\r\n                })\r\n              ;\r\n            }\r\n          },\r\n          direction: function(direction) {\r\n            direction = direction || module.get.direction();\r\n            if(direction == className.inward) {\r\n              module.set.inward();\r\n            }\r\n            else {\r\n              module.set.outward();\r\n            }\r\n          },\r\n          looping: function() {\r\n            module.debug('Transition set to loop');\r\n            $module\r\n              .addClass(className.looping)\r\n            ;\r\n          },\r\n          hidden: function() {\r\n            $module\r\n              .addClass(className.transition)\r\n              .addClass(className.hidden)\r\n            ;\r\n          },\r\n          inward: function() {\r\n            module.debug('Setting direction to inward');\r\n            $module\r\n              .removeClass(className.outward)\r\n              .addClass(className.inward)\r\n            ;\r\n          },\r\n          outward: function() {\r\n            module.debug('Setting direction to outward');\r\n            $module\r\n              .removeClass(className.inward)\r\n              .addClass(className.outward)\r\n            ;\r\n          },\r\n          visible: function() {\r\n            $module\r\n              .addClass(className.transition)\r\n              .addClass(className.visible)\r\n            ;\r\n          }\r\n        },\r\n\r\n        start: {\r\n          animation: function(animationClass) {\r\n            animationClass = animationClass || module.get.animationClass();\r\n            module.debug('Starting tween', animationClass);\r\n            $module\r\n              .addClass(animationClass)\r\n              .one(animationEnd + '.complete' + eventNamespace, module.complete)\r\n            ;\r\n            if(settings.useFailSafe) {\r\n              module.add.failSafe();\r\n            }\r\n            module.set.duration(settings.duration);\r\n            settings.onStart.call(element);\r\n          }\r\n        },\r\n\r\n        save: {\r\n          animation: function(animation) {\r\n            if(!module.cache) {\r\n              module.cache = {};\r\n            }\r\n            module.cache.animation = animation;\r\n          },\r\n          displayType: function(displayType) {\r\n            if(displayType !== 'none') {\r\n              $module.data(metadata.displayType, displayType);\r\n            }\r\n          },\r\n          transitionExists: function(animation, exists) {\r\n            $.fn.transition.exists[animation] = exists;\r\n            module.verbose('Saving existence of transition', animation, exists);\r\n          }\r\n        },\r\n\r\n        restore: {\r\n          conditions: function() {\r\n            var\r\n              animation = module.get.currentAnimation()\r\n            ;\r\n            if(animation) {\r\n              $module\r\n                .removeClass(animation)\r\n              ;\r\n              module.verbose('Removing animation class', module.cache);\r\n            }\r\n            module.remove.duration();\r\n          }\r\n        },\r\n\r\n        add: {\r\n          failSafe: function() {\r\n            var\r\n              duration = module.get.duration()\r\n            ;\r\n            module.timer = setTimeout(function() {\r\n              $module.triggerHandler(animationEnd);\r\n            }, duration + settings.failSafeDelay);\r\n            module.verbose('Adding fail safe timer', module.timer);\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          animating: function() {\r\n            $module.removeClass(className.animating);\r\n          },\r\n          animationCallbacks: function() {\r\n            module.remove.queueCallback();\r\n            module.remove.completeCallback();\r\n          },\r\n          queueCallback: function() {\r\n            $module.off('.queue' + eventNamespace);\r\n          },\r\n          completeCallback: function() {\r\n            $module.off('.complete' + eventNamespace);\r\n          },\r\n          display: function() {\r\n            $module.css('display', '');\r\n          },\r\n          direction: function() {\r\n            $module\r\n              .removeClass(className.inward)\r\n              .removeClass(className.outward)\r\n            ;\r\n          },\r\n          duration: function() {\r\n            $module\r\n              .css('animation-duration', '')\r\n            ;\r\n          },\r\n          failSafe: function() {\r\n            module.verbose('Removing fail safe timer', module.timer);\r\n            if(module.timer) {\r\n              clearTimeout(module.timer);\r\n            }\r\n          },\r\n          hidden: function() {\r\n            $module.removeClass(className.hidden);\r\n          },\r\n          visible: function() {\r\n            $module.removeClass(className.visible);\r\n          },\r\n          looping: function() {\r\n            module.debug('Transitions are no longer looping');\r\n            if( module.is.looping() ) {\r\n              module.reset();\r\n              $module\r\n                .removeClass(className.looping)\r\n              ;\r\n            }\r\n          },\r\n          transition: function() {\r\n            $module\r\n              .removeClass(className.visible)\r\n              .removeClass(className.hidden)\r\n            ;\r\n          }\r\n        },\r\n        get: {\r\n          settings: function(animation, duration, onComplete) {\r\n            // single settings object\r\n            if(typeof animation == 'object') {\r\n              return $.extend(true, {}, $.fn.transition.settings, animation);\r\n            }\r\n            // all arguments provided\r\n            else if(typeof onComplete == 'function') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation  : animation,\r\n                onComplete : onComplete,\r\n                duration   : duration\r\n              });\r\n            }\r\n            // only duration provided\r\n            else if(typeof duration == 'string' || typeof duration == 'number') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation : animation,\r\n                duration  : duration\r\n              });\r\n            }\r\n            // duration is actually settings object\r\n            else if(typeof duration == 'object') {\r\n              return $.extend({}, $.fn.transition.settings, duration, {\r\n                animation : animation\r\n              });\r\n            }\r\n            // duration is actually callback\r\n            else if(typeof duration == 'function') {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation  : animation,\r\n                onComplete : duration\r\n              });\r\n            }\r\n            // only animation provided\r\n            else {\r\n              return $.extend({}, $.fn.transition.settings, {\r\n                animation : animation\r\n              });\r\n            }\r\n          },\r\n          animationClass: function(animation) {\r\n            var\r\n              animationClass = animation || settings.animation,\r\n              directionClass = (module.can.transition() && !module.has.direction())\r\n                ? module.get.direction() + ' '\r\n                : ''\r\n            ;\r\n            return className.animating + ' '\r\n              + className.transition + ' '\r\n              + directionClass\r\n              + animationClass\r\n            ;\r\n          },\r\n          currentAnimation: function() {\r\n            return (module.cache && module.cache.animation !== undefined)\r\n              ? module.cache.animation\r\n              : false\r\n            ;\r\n          },\r\n          currentDirection: function() {\r\n            return module.is.inward()\r\n              ? className.inward\r\n              : className.outward\r\n            ;\r\n          },\r\n          direction: function() {\r\n            return module.is.hidden() || !module.is.visible()\r\n              ? className.inward\r\n              : className.outward\r\n            ;\r\n          },\r\n          animationDirection: function(animation) {\r\n            var\r\n              direction\r\n            ;\r\n            animation = animation || settings.animation;\r\n            if(typeof animation === 'string') {\r\n              animation = animation.split(' ');\r\n              // search animation name for out/in class\r\n              $.each(animation, function(index, word){\r\n                if(word === className.inward) {\r\n                  direction = className.inward;\r\n                }\r\n                else if(word === className.outward) {\r\n                  direction = className.outward;\r\n                }\r\n              });\r\n            }\r\n            // return found direction\r\n            if(direction) {\r\n              return direction;\r\n            }\r\n            return false;\r\n          },\r\n          duration: function(duration) {\r\n            duration = duration || settings.duration;\r\n            if(duration === false) {\r\n              duration = $module.css('animation-duration') || 0;\r\n            }\r\n            return (typeof duration === 'string')\r\n              ? (duration.indexOf('ms') > -1)\r\n                ? parseFloat(duration)\r\n                : parseFloat(duration) * 1000\r\n              : duration\r\n            ;\r\n          },\r\n          displayType: function(shouldDetermine) {\r\n            shouldDetermine = (shouldDetermine !== undefined)\r\n              ? shouldDetermine\r\n              : true\r\n            ;\r\n            if(settings.displayType) {\r\n              return settings.displayType;\r\n            }\r\n            if(shouldDetermine && $module.data(metadata.displayType) === undefined) {\r\n              // create fake element to determine display state\r\n              module.can.transition(true);\r\n            }\r\n            return $module.data(metadata.displayType);\r\n          },\r\n          userStyle: function(style) {\r\n            style = style || $module.attr('style') || '';\r\n            return style.replace(/display.*?;/, '');\r\n          },\r\n          transitionExists: function(animation) {\r\n            return $.fn.transition.exists[animation];\r\n          },\r\n          animationStartEvent: function() {\r\n            var\r\n              element     = document.createElement('div'),\r\n              animations  = {\r\n                'animation'       :'animationstart',\r\n                'OAnimation'      :'oAnimationStart',\r\n                'MozAnimation'    :'mozAnimationStart',\r\n                'WebkitAnimation' :'webkitAnimationStart'\r\n              },\r\n              animation\r\n            ;\r\n            for(animation in animations){\r\n              if( element.style[animation] !== undefined ){\r\n                return animations[animation];\r\n              }\r\n            }\r\n            return false;\r\n          },\r\n          animationEndEvent: function() {\r\n            var\r\n              element     = document.createElement('div'),\r\n              animations  = {\r\n                'animation'       :'animationend',\r\n                'OAnimation'      :'oAnimationEnd',\r\n                'MozAnimation'    :'mozAnimationEnd',\r\n                'WebkitAnimation' :'webkitAnimationEnd'\r\n              },\r\n              animation\r\n            ;\r\n            for(animation in animations){\r\n              if( element.style[animation] !== undefined ){\r\n                return animations[animation];\r\n              }\r\n            }\r\n            return false;\r\n          }\r\n\r\n        },\r\n\r\n        can: {\r\n          transition: function(forced) {\r\n            var\r\n              animation         = settings.animation,\r\n              transitionExists  = module.get.transitionExists(animation),\r\n              displayType       = module.get.displayType(false),\r\n              elementClass,\r\n              tagName,\r\n              $clone,\r\n              currentAnimation,\r\n              inAnimation,\r\n              directionExists\r\n            ;\r\n            if( transitionExists === undefined || forced) {\r\n              module.verbose('Determining whether animation exists');\r\n              elementClass = $module.attr('class');\r\n              tagName      = $module.prop('tagName');\r\n\r\n              $clone = $('<' + tagName + ' />').addClass( elementClass ).insertAfter($module);\r\n              currentAnimation = $clone\r\n                .addClass(animation)\r\n                .removeClass(className.inward)\r\n                .removeClass(className.outward)\r\n                .addClass(className.animating)\r\n                .addClass(className.transition)\r\n                .css('animationName')\r\n              ;\r\n              inAnimation = $clone\r\n                .addClass(className.inward)\r\n                .css('animationName')\r\n              ;\r\n              if(!displayType) {\r\n                displayType = $clone\r\n                  .attr('class', elementClass)\r\n                  .removeAttr('style')\r\n                  .removeClass(className.hidden)\r\n                  .removeClass(className.visible)\r\n                  .show()\r\n                  .css('display')\r\n                ;\r\n                module.verbose('Determining final display state', displayType);\r\n                module.save.displayType(displayType);\r\n              }\r\n\r\n              $clone.remove();\r\n              if(currentAnimation != inAnimation) {\r\n                module.debug('Direction exists for animation', animation);\r\n                directionExists = true;\r\n              }\r\n              else if(currentAnimation == 'none' || !currentAnimation) {\r\n                module.debug('No animation defined in css', animation);\r\n                return;\r\n              }\r\n              else {\r\n                module.debug('Static animation found', animation, displayType);\r\n                directionExists = false;\r\n              }\r\n              module.save.transitionExists(animation, directionExists);\r\n            }\r\n            return (transitionExists !== undefined)\r\n              ? transitionExists\r\n              : directionExists\r\n            ;\r\n          },\r\n          animate: function() {\r\n            // can transition does not return a value if animation does not exist\r\n            return (module.can.transition() !== undefined);\r\n          }\r\n        },\r\n\r\n        is: {\r\n          animating: function() {\r\n            return $module.hasClass(className.animating);\r\n          },\r\n          inward: function() {\r\n            return $module.hasClass(className.inward);\r\n          },\r\n          outward: function() {\r\n            return $module.hasClass(className.outward);\r\n          },\r\n          looping: function() {\r\n            return $module.hasClass(className.looping);\r\n          },\r\n          occurring: function(animation) {\r\n            animation = animation || settings.animation;\r\n            animation = '.' + animation.replace(' ', '.');\r\n            return ( $module.filter(animation).length > 0 );\r\n          },\r\n          visible: function() {\r\n            return $module.is(':visible');\r\n          },\r\n          hidden: function() {\r\n            return $module.css('visibility') === 'hidden';\r\n          },\r\n          supported: function() {\r\n            return(animationEnd !== false);\r\n          }\r\n        },\r\n\r\n        hide: function() {\r\n          module.verbose('Hiding element');\r\n          if( module.is.animating() ) {\r\n            module.reset();\r\n          }\r\n          element.blur(); // IE will trigger focus change if element is not blurred before hiding\r\n          module.remove.display();\r\n          module.remove.visible();\r\n          module.set.hidden();\r\n          module.force.hidden();\r\n          settings.onHide.call(element);\r\n          settings.onComplete.call(element);\r\n          // module.repaint();\r\n        },\r\n\r\n        show: function(display) {\r\n          module.verbose('Showing element', display);\r\n          module.remove.hidden();\r\n          module.set.visible();\r\n          module.force.visible();\r\n          settings.onShow.call(element);\r\n          settings.onComplete.call(element);\r\n          // module.repaint();\r\n        },\r\n\r\n        toggle: function() {\r\n          if( module.is.visible() ) {\r\n            module.hide();\r\n          }\r\n          else {\r\n            module.show();\r\n          }\r\n        },\r\n\r\n        stop: function() {\r\n          module.debug('Stopping current animation');\r\n          $module.triggerHandler(animationEnd);\r\n        },\r\n\r\n        stopAll: function() {\r\n          module.debug('Stopping all animation');\r\n          module.remove.queueCallback();\r\n          $module.triggerHandler(animationEnd);\r\n        },\r\n\r\n        clear: {\r\n          queue: function() {\r\n            module.debug('Clearing animation queue');\r\n            module.remove.queueCallback();\r\n          }\r\n        },\r\n\r\n        enable: function() {\r\n          module.verbose('Starting animation');\r\n          $module.removeClass(className.disabled);\r\n        },\r\n\r\n        disable: function() {\r\n          module.debug('Stopping animation');\r\n          $module.addClass(className.disabled);\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if($allModules.length > 1) {\r\n              title += ' ' + '(' + $allModules.length + ')';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        // modified for transition to return invoke success\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return (found !== undefined)\r\n            ? found\r\n            : false\r\n          ;\r\n        }\r\n      };\r\n      module.initialize();\r\n    })\r\n  ;\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n// Records if CSS transition is available\r\n$.fn.transition.exists = {};\r\n\r\n$.fn.transition.settings = {\r\n\r\n  // module info\r\n  name          : 'Transition',\r\n\r\n  // hide all output from this component regardless of other settings\r\n  silent        : false,\r\n\r\n  // debug content outputted to console\r\n  debug         : false,\r\n\r\n  // verbose debug output\r\n  verbose       : false,\r\n\r\n  // performance data output\r\n  performance   : true,\r\n\r\n  // event namespace\r\n  namespace     : 'transition',\r\n\r\n  // delay between animations in group\r\n  interval      : 0,\r\n\r\n  // whether group animations should be reversed\r\n  reverse       : 'auto',\r\n\r\n  // animation callback event\r\n  onStart       : function() {},\r\n  onComplete    : function() {},\r\n  onShow        : function() {},\r\n  onHide        : function() {},\r\n\r\n  // whether timeout should be used to ensure callback fires in cases animationend does not\r\n  useFailSafe   : true,\r\n\r\n  // delay in ms for fail safe\r\n  failSafeDelay : 100,\r\n\r\n  // whether EXACT animation can occur twice in a row\r\n  allowRepeats  : false,\r\n\r\n  // Override final display type on visible\r\n  displayType   : false,\r\n\r\n  // animation duration\r\n  animation     : 'fade',\r\n  duration      : false,\r\n\r\n  // new animations will occur after previous ones\r\n  queue         : true,\r\n\r\n  metadata : {\r\n    displayType: 'display'\r\n  },\r\n\r\n  className   : {\r\n    animating  : 'animating',\r\n    disabled   : 'disabled',\r\n    hidden     : 'hidden',\r\n    inward     : 'in',\r\n    loading    : 'loading',\r\n    looping    : 'looping',\r\n    outward    : 'out',\r\n    transition : 'transition',\r\n    visible    : 'visible'\r\n  },\r\n\r\n  // possible errors\r\n  error: {\r\n    noAnimation : 'Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.',\r\n    repeated    : 'That animation is already occurring, cancelling repeated animation',\r\n    method      : 'The method you called is not defined',\r\n    support     : 'This browser does not support CSS animations'\r\n  }\r\n\r\n};\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - API\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nvar\r\n  window = (typeof window != 'undefined' && window.Math == Math)\r\n    ? window\r\n    : (typeof self != 'undefined' && self.Math == Math)\r\n      ? self\r\n      : Function('return this')()\r\n;\r\n\r\n$.api = $.fn.api = function(parameters) {\r\n\r\n  var\r\n    // use window context if none specified\r\n    $allModules     = $.isFunction(this)\r\n        ? $(window)\r\n        : $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.api.settings, parameters)\r\n          : $.extend({}, $.fn.api.settings),\r\n\r\n        // internal aliases\r\n        namespace       = settings.namespace,\r\n        metadata        = settings.metadata,\r\n        selector        = settings.selector,\r\n        error           = settings.error,\r\n        className       = settings.className,\r\n\r\n        // define namespaces for modules\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        // element that creates request\r\n        $module         = $(this),\r\n        $form           = $module.closest(selector.form),\r\n\r\n        // context used for state\r\n        $context        = (settings.stateContext)\r\n          ? $(settings.stateContext)\r\n          : $module,\r\n\r\n        // request details\r\n        ajaxSettings,\r\n        requestSettings,\r\n        url,\r\n        data,\r\n        requestStartTime,\r\n\r\n        // standard module\r\n        element         = this,\r\n        context         = $context[0],\r\n        instance        = $module.data(moduleNamespace),\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          if(!methodInvoked) {\r\n            module.bind.events();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, instance)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module for', element);\r\n          $module\r\n            .removeData(moduleNamespace)\r\n            .off(eventNamespace)\r\n          ;\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            var\r\n              triggerEvent = module.get.event()\r\n            ;\r\n            if( triggerEvent ) {\r\n              module.verbose('Attaching API events to element', triggerEvent);\r\n              $module\r\n                .on(triggerEvent + eventNamespace, module.event.trigger)\r\n              ;\r\n            }\r\n            else if(settings.on == 'now') {\r\n              module.debug('Querying API endpoint immediately');\r\n              module.query();\r\n            }\r\n          }\r\n        },\r\n\r\n        decode: {\r\n          json: function(response) {\r\n            if(response !== undefined && typeof response == 'string') {\r\n              try {\r\n               response = JSON.parse(response);\r\n              }\r\n              catch(e) {\r\n                // isnt json string\r\n              }\r\n            }\r\n            return response;\r\n          }\r\n        },\r\n\r\n        read: {\r\n          cachedResponse: function(url) {\r\n            var\r\n              response\r\n            ;\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            response = sessionStorage.getItem(url);\r\n            module.debug('Using cached response', url, response);\r\n            response = module.decode.json(response);\r\n            return response;\r\n          }\r\n        },\r\n        write: {\r\n          cachedResponse: function(url, response) {\r\n            if(response && response === '') {\r\n              module.debug('Response empty, not caching', response);\r\n              return;\r\n            }\r\n            if(window.Storage === undefined) {\r\n              module.error(error.noStorage);\r\n              return;\r\n            }\r\n            if( $.isPlainObject(response) ) {\r\n              response = JSON.stringify(response);\r\n            }\r\n            sessionStorage.setItem(url, response);\r\n            module.verbose('Storing cached response for url', url, response);\r\n          }\r\n        },\r\n\r\n        query: function() {\r\n\r\n          if(module.is.disabled()) {\r\n            module.debug('Element is disabled API request aborted');\r\n            return;\r\n          }\r\n\r\n          if(module.is.loading()) {\r\n            if(settings.interruptRequests) {\r\n              module.debug('Interrupting previous request');\r\n              module.abort();\r\n            }\r\n            else {\r\n              module.debug('Cancelling request, previous request is still pending');\r\n              return;\r\n            }\r\n          }\r\n\r\n          // pass element metadata to url (value, text)\r\n          if(settings.defaultData) {\r\n            $.extend(true, settings.urlData, module.get.defaultData());\r\n          }\r\n\r\n          // Add form content\r\n          if(settings.serializeForm) {\r\n            settings.data = module.add.formData(settings.data);\r\n          }\r\n\r\n          // call beforesend and get any settings changes\r\n          requestSettings = module.get.settings();\r\n\r\n          // check if before send cancelled request\r\n          if(requestSettings === false) {\r\n            module.cancelled = true;\r\n            module.error(error.beforeSend);\r\n            return;\r\n          }\r\n          else {\r\n            module.cancelled = false;\r\n          }\r\n\r\n          // get url\r\n          url = module.get.templatedURL();\r\n\r\n          if(!url && !module.is.mocked()) {\r\n            module.error(error.missingURL);\r\n            return;\r\n          }\r\n\r\n          // replace variables\r\n          url = module.add.urlData( url );\r\n          // missing url parameters\r\n          if( !url && !module.is.mocked()) {\r\n            return;\r\n          }\r\n\r\n          requestSettings.url = settings.base + url;\r\n\r\n          // look for jQuery ajax parameters in settings\r\n          ajaxSettings = $.extend(true, {}, settings, {\r\n            type       : settings.method || settings.type,\r\n            data       : data,\r\n            url        : settings.base + url,\r\n            beforeSend : settings.beforeXHR,\r\n            success    : function() {},\r\n            failure    : function() {},\r\n            complete   : function() {}\r\n          });\r\n\r\n          module.debug('Querying URL', ajaxSettings.url);\r\n          module.verbose('Using AJAX settings', ajaxSettings);\r\n          if(settings.cache === 'local' && module.read.cachedResponse(url)) {\r\n            module.debug('Response returned from local cache');\r\n            module.request = module.create.request();\r\n            module.request.resolveWith(context, [ module.read.cachedResponse(url) ]);\r\n            return;\r\n          }\r\n\r\n          if( !settings.throttle ) {\r\n            module.debug('Sending request', data, ajaxSettings.method);\r\n            module.send.request();\r\n          }\r\n          else {\r\n            if(!settings.throttleFirstRequest && !module.timer) {\r\n              module.debug('Sending request', data, ajaxSettings.method);\r\n              module.send.request();\r\n              module.timer = setTimeout(function(){}, settings.throttle);\r\n            }\r\n            else {\r\n              module.debug('Throttling request', settings.throttle);\r\n              clearTimeout(module.timer);\r\n              module.timer = setTimeout(function() {\r\n                if(module.timer) {\r\n                  delete module.timer;\r\n                }\r\n                module.debug('Sending throttled request', data, ajaxSettings.method);\r\n                module.send.request();\r\n              }, settings.throttle);\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        should: {\r\n          removeError: function() {\r\n            return ( settings.hideError === true || (settings.hideError === 'auto' && !module.is.form()) );\r\n          }\r\n        },\r\n\r\n        is: {\r\n          disabled: function() {\r\n            return ($module.filter(selector.disabled).length > 0);\r\n          },\r\n          expectingJSON: function() {\r\n            return settings.dataType === 'json' || settings.dataType === 'jsonp';\r\n          },\r\n          form: function() {\r\n            return $module.is('form') || $context.is('form');\r\n          },\r\n          mocked: function() {\r\n            return (settings.mockResponse || settings.mockResponseAsync || settings.response || settings.responseAsync);\r\n          },\r\n          input: function() {\r\n            return $module.is('input');\r\n          },\r\n          loading: function() {\r\n            return (module.request)\r\n              ? (module.request.state() == 'pending')\r\n              : false\r\n            ;\r\n          },\r\n          abortedRequest: function(xhr) {\r\n            if(xhr && xhr.readyState !== undefined && xhr.readyState === 0) {\r\n              module.verbose('XHR request determined to be aborted');\r\n              return true;\r\n            }\r\n            else {\r\n              module.verbose('XHR request was not aborted');\r\n              return false;\r\n            }\r\n          },\r\n          validResponse: function(response) {\r\n            if( (!module.is.expectingJSON()) || !$.isFunction(settings.successTest) ) {\r\n              module.verbose('Response is not JSON, skipping validation', settings.successTest, response);\r\n              return true;\r\n            }\r\n            module.debug('Checking JSON returned success', settings.successTest, response);\r\n            if( settings.successTest(response) ) {\r\n              module.debug('Response passed success test', response);\r\n              return true;\r\n            }\r\n            else {\r\n              module.debug('Response failed success test', response);\r\n              return false;\r\n            }\r\n          }\r\n        },\r\n\r\n        was: {\r\n          cancelled: function() {\r\n            return (module.cancelled || false);\r\n          },\r\n          succesful: function() {\r\n            return (module.request && module.request.state() == 'resolved');\r\n          },\r\n          failure: function() {\r\n            return (module.request && module.request.state() == 'rejected');\r\n          },\r\n          complete: function() {\r\n            return (module.request && (module.request.state() == 'resolved' || module.request.state() == 'rejected') );\r\n          }\r\n        },\r\n\r\n        add: {\r\n          urlData: function(url, urlData) {\r\n            var\r\n              requiredVariables,\r\n              optionalVariables\r\n            ;\r\n            if(url) {\r\n              requiredVariables = url.match(settings.regExp.required);\r\n              optionalVariables = url.match(settings.regExp.optional);\r\n              urlData           = urlData || settings.urlData;\r\n              if(requiredVariables) {\r\n                module.debug('Looking for required URL variables', requiredVariables);\r\n                $.each(requiredVariables, function(index, templatedString) {\r\n                  var\r\n                    // allow legacy {$var} style\r\n                    variable = (templatedString.indexOf('$') !== -1)\r\n                      ? templatedString.substr(2, templatedString.length - 3)\r\n                      : templatedString.substr(1, templatedString.length - 2),\r\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\r\n                      ? urlData[variable]\r\n                      : ($module.data(variable) !== undefined)\r\n                        ? $module.data(variable)\r\n                        : ($context.data(variable) !== undefined)\r\n                          ? $context.data(variable)\r\n                          : urlData[variable]\r\n                  ;\r\n                  // remove value\r\n                  if(value === undefined) {\r\n                    module.error(error.requiredParameter, variable, url);\r\n                    url = false;\r\n                    return false;\r\n                  }\r\n                  else {\r\n                    module.verbose('Found required variable', variable, value);\r\n                    value = (settings.encodeParameters)\r\n                      ? module.get.urlEncodedValue(value)\r\n                      : value\r\n                    ;\r\n                    url = url.replace(templatedString, value);\r\n                  }\r\n                });\r\n              }\r\n              if(optionalVariables) {\r\n                module.debug('Looking for optional URL variables', requiredVariables);\r\n                $.each(optionalVariables, function(index, templatedString) {\r\n                  var\r\n                    // allow legacy {/$var} style\r\n                    variable = (templatedString.indexOf('$') !== -1)\r\n                      ? templatedString.substr(3, templatedString.length - 4)\r\n                      : templatedString.substr(2, templatedString.length - 3),\r\n                    value   = ($.isPlainObject(urlData) && urlData[variable] !== undefined)\r\n                      ? urlData[variable]\r\n                      : ($module.data(variable) !== undefined)\r\n                        ? $module.data(variable)\r\n                        : ($context.data(variable) !== undefined)\r\n                          ? $context.data(variable)\r\n                          : urlData[variable]\r\n                  ;\r\n                  // optional replacement\r\n                  if(value !== undefined) {\r\n                    module.verbose('Optional variable Found', variable, value);\r\n                    url = url.replace(templatedString, value);\r\n                  }\r\n                  else {\r\n                    module.verbose('Optional variable not found', variable);\r\n                    // remove preceding slash if set\r\n                    if(url.indexOf('/' + templatedString) !== -1) {\r\n                      url = url.replace('/' + templatedString, '');\r\n                    }\r\n                    else {\r\n                      url = url.replace(templatedString, '');\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n            return url;\r\n          },\r\n          formData: function(data) {\r\n            var\r\n              canSerialize = ($.fn.serializeObject !== undefined),\r\n              formData     = (canSerialize)\r\n                ? $form.serializeObject()\r\n                : $form.serialize(),\r\n              hasOtherData\r\n            ;\r\n            data         = data || settings.data;\r\n            hasOtherData = $.isPlainObject(data);\r\n\r\n            if(hasOtherData) {\r\n              if(canSerialize) {\r\n                module.debug('Extending existing data with form data', data, formData);\r\n                data = $.extend(true, {}, data, formData);\r\n              }\r\n              else {\r\n                module.error(error.missingSerialize);\r\n                module.debug('Cant extend data. Replacing data with form data', data, formData);\r\n                data = formData;\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Adding form data', formData);\r\n              data = formData;\r\n            }\r\n            return data;\r\n          }\r\n        },\r\n\r\n        send: {\r\n          request: function() {\r\n            module.set.loading();\r\n            module.request = module.create.request();\r\n            if( module.is.mocked() ) {\r\n              module.mockedXHR = module.create.mockedXHR();\r\n            }\r\n            else {\r\n              module.xhr = module.create.xhr();\r\n            }\r\n            settings.onRequest.call(context, module.request, module.xhr);\r\n          }\r\n        },\r\n\r\n        event: {\r\n          trigger: function(event) {\r\n            module.query();\r\n            if(event.type == 'submit' || event.type == 'click') {\r\n              event.preventDefault();\r\n            }\r\n          },\r\n          xhr: {\r\n            always: function() {\r\n              // nothing special\r\n            },\r\n            done: function(response, textStatus, xhr) {\r\n              var\r\n                context            = this,\r\n                elapsedTime        = (new Date().getTime() - requestStartTime),\r\n                timeLeft           = (settings.loadingDuration - elapsedTime),\r\n                translatedResponse = ( $.isFunction(settings.onResponse) )\r\n                  ? module.is.expectingJSON()\r\n                    ? settings.onResponse.call(context, $.extend(true, {}, response))\r\n                    : settings.onResponse.call(context, response)\r\n                  : false\r\n              ;\r\n              timeLeft = (timeLeft > 0)\r\n                ? timeLeft\r\n                : 0\r\n              ;\r\n              if(translatedResponse) {\r\n                module.debug('Modified API response in onResponse callback', settings.onResponse, translatedResponse, response);\r\n                response = translatedResponse;\r\n              }\r\n              if(timeLeft > 0) {\r\n                module.debug('Response completed early delaying state change by', timeLeft);\r\n              }\r\n              setTimeout(function() {\r\n                if( module.is.validResponse(response) ) {\r\n                  module.request.resolveWith(context, [response, xhr]);\r\n                }\r\n                else {\r\n                  module.request.rejectWith(context, [xhr, 'invalid']);\r\n                }\r\n              }, timeLeft);\r\n            },\r\n            fail: function(xhr, status, httpMessage) {\r\n              var\r\n                context     = this,\r\n                elapsedTime = (new Date().getTime() - requestStartTime),\r\n                timeLeft    = (settings.loadingDuration - elapsedTime)\r\n              ;\r\n              timeLeft = (timeLeft > 0)\r\n                ? timeLeft\r\n                : 0\r\n              ;\r\n              if(timeLeft > 0) {\r\n                module.debug('Response completed early delaying state change by', timeLeft);\r\n              }\r\n              setTimeout(function() {\r\n                if( module.is.abortedRequest(xhr) ) {\r\n                  module.request.rejectWith(context, [xhr, 'aborted', httpMessage]);\r\n                }\r\n                else {\r\n                  module.request.rejectWith(context, [xhr, 'error', status, httpMessage]);\r\n                }\r\n              }, timeLeft);\r\n            }\r\n          },\r\n          request: {\r\n            done: function(response, xhr) {\r\n              module.debug('Successful API Response', response);\r\n              if(settings.cache === 'local' && url) {\r\n                module.write.cachedResponse(url, response);\r\n                module.debug('Saving server response locally', module.cache);\r\n              }\r\n              settings.onSuccess.call(context, response, $module, xhr);\r\n            },\r\n            complete: function(firstParameter, secondParameter) {\r\n              var\r\n                xhr,\r\n                response\r\n              ;\r\n              // have to guess callback parameters based on request success\r\n              if( module.was.succesful() ) {\r\n                response = firstParameter;\r\n                xhr      = secondParameter;\r\n              }\r\n              else {\r\n                xhr      = firstParameter;\r\n                response = module.get.responseFromXHR(xhr);\r\n              }\r\n              module.remove.loading();\r\n              settings.onComplete.call(context, response, $module, xhr);\r\n            },\r\n            fail: function(xhr, status, httpMessage) {\r\n              var\r\n                // pull response from xhr if available\r\n                response     = module.get.responseFromXHR(xhr),\r\n                errorMessage = module.get.errorFromRequest(response, status, httpMessage)\r\n              ;\r\n              if(status == 'aborted') {\r\n                module.debug('XHR Aborted (Most likely caused by page navigation or CORS Policy)', status, httpMessage);\r\n                settings.onAbort.call(context, status, $module, xhr);\r\n                return true;\r\n              }\r\n              else if(status == 'invalid') {\r\n                module.debug('JSON did not pass success test. A server-side error has most likely occurred', response);\r\n              }\r\n              else if(status == 'error') {\r\n                if(xhr !== undefined) {\r\n                  module.debug('XHR produced a server error', status, httpMessage);\r\n                  // make sure we have an error to display to console\r\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\r\n                    module.error(error.statusMessage + httpMessage, ajaxSettings.url);\r\n                  }\r\n                  settings.onError.call(context, errorMessage, $module, xhr);\r\n                }\r\n              }\r\n\r\n              if(settings.errorDuration && status !== 'aborted') {\r\n                module.debug('Adding error state');\r\n                module.set.error();\r\n                if( module.should.removeError() ) {\r\n                  setTimeout(module.remove.error, settings.errorDuration);\r\n                }\r\n              }\r\n              module.debug('API Request failed', errorMessage, xhr);\r\n              settings.onFailure.call(context, response, $module, xhr);\r\n            }\r\n          }\r\n        },\r\n\r\n        create: {\r\n\r\n          request: function() {\r\n            // api request promise\r\n            return $.Deferred()\r\n              .always(module.event.request.complete)\r\n              .done(module.event.request.done)\r\n              .fail(module.event.request.fail)\r\n            ;\r\n          },\r\n\r\n          mockedXHR: function () {\r\n            var\r\n              // xhr does not simulate these properties of xhr but must return them\r\n              textStatus     = false,\r\n              status         = false,\r\n              httpMessage    = false,\r\n              responder      = settings.mockResponse      || settings.response,\r\n              asyncResponder = settings.mockResponseAsync || settings.responseAsync,\r\n              asyncCallback,\r\n              response,\r\n              mockedXHR\r\n            ;\r\n\r\n            mockedXHR = $.Deferred()\r\n              .always(module.event.xhr.complete)\r\n              .done(module.event.xhr.done)\r\n              .fail(module.event.xhr.fail)\r\n            ;\r\n\r\n            if(responder) {\r\n              if( $.isFunction(responder) ) {\r\n                module.debug('Using specified synchronous callback', responder);\r\n                response = responder.call(context, requestSettings);\r\n              }\r\n              else {\r\n                module.debug('Using settings specified response', responder);\r\n                response = responder;\r\n              }\r\n              // simulating response\r\n              mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\r\n            }\r\n            else if( $.isFunction(asyncResponder) ) {\r\n              asyncCallback = function(response) {\r\n                module.debug('Async callback returned response', response);\r\n\r\n                if(response) {\r\n                  mockedXHR.resolveWith(context, [ response, textStatus, { responseText: response }]);\r\n                }\r\n                else {\r\n                  mockedXHR.rejectWith(context, [{ responseText: response }, status, httpMessage]);\r\n                }\r\n              };\r\n              module.debug('Using specified async response callback', asyncResponder);\r\n              asyncResponder.call(context, requestSettings, asyncCallback);\r\n            }\r\n            return mockedXHR;\r\n          },\r\n\r\n          xhr: function() {\r\n            var\r\n              xhr\r\n            ;\r\n            // ajax request promise\r\n            xhr = $.ajax(ajaxSettings)\r\n              .always(module.event.xhr.always)\r\n              .done(module.event.xhr.done)\r\n              .fail(module.event.xhr.fail)\r\n            ;\r\n            module.verbose('Created server request', xhr, ajaxSettings);\r\n            return xhr;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          error: function() {\r\n            module.verbose('Adding error state to element', $context);\r\n            $context.addClass(className.error);\r\n          },\r\n          loading: function() {\r\n            module.verbose('Adding loading state to element', $context);\r\n            $context.addClass(className.loading);\r\n            requestStartTime = new Date().getTime();\r\n          }\r\n        },\r\n\r\n        remove: {\r\n          error: function() {\r\n            module.verbose('Removing error state from element', $context);\r\n            $context.removeClass(className.error);\r\n          },\r\n          loading: function() {\r\n            module.verbose('Removing loading state from element', $context);\r\n            $context.removeClass(className.loading);\r\n          }\r\n        },\r\n\r\n        get: {\r\n          responseFromXHR: function(xhr) {\r\n            return $.isPlainObject(xhr)\r\n              ? (module.is.expectingJSON())\r\n                ? module.decode.json(xhr.responseText)\r\n                : xhr.responseText\r\n              : false\r\n            ;\r\n          },\r\n          errorFromRequest: function(response, status, httpMessage) {\r\n            return ($.isPlainObject(response) && response.error !== undefined)\r\n              ? response.error // use json error message\r\n              : (settings.error[status] !== undefined) // use server error message\r\n                ? settings.error[status]\r\n                : httpMessage\r\n            ;\r\n          },\r\n          request: function() {\r\n            return module.request || false;\r\n          },\r\n          xhr: function() {\r\n            return module.xhr || false;\r\n          },\r\n          settings: function() {\r\n            var\r\n              runSettings\r\n            ;\r\n            runSettings = settings.beforeSend.call(context, settings);\r\n            if(runSettings) {\r\n              if(runSettings.success !== undefined) {\r\n                module.debug('Legacy success callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.success);\r\n                runSettings.onSuccess = runSettings.success;\r\n              }\r\n              if(runSettings.failure !== undefined) {\r\n                module.debug('Legacy failure callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.failure);\r\n                runSettings.onFailure = runSettings.failure;\r\n              }\r\n              if(runSettings.complete !== undefined) {\r\n                module.debug('Legacy complete callback detected', runSettings);\r\n                module.error(error.legacyParameters, runSettings.complete);\r\n                runSettings.onComplete = runSettings.complete;\r\n              }\r\n            }\r\n            if(runSettings === undefined) {\r\n              module.error(error.noReturnedValue);\r\n            }\r\n            if(runSettings === false) {\r\n              return runSettings;\r\n            }\r\n            return (runSettings !== undefined)\r\n              ? $.extend(true, {}, runSettings)\r\n              : $.extend(true, {}, settings)\r\n            ;\r\n          },\r\n          urlEncodedValue: function(value) {\r\n            var\r\n              decodedValue   = window.decodeURIComponent(value),\r\n              encodedValue   = window.encodeURIComponent(value),\r\n              alreadyEncoded = (decodedValue !== value)\r\n            ;\r\n            if(alreadyEncoded) {\r\n              module.debug('URL value is already encoded, avoiding double encoding', value);\r\n              return value;\r\n            }\r\n            module.verbose('Encoding value using encodeURIComponent', value, encodedValue);\r\n            return encodedValue;\r\n          },\r\n          defaultData: function() {\r\n            var\r\n              data = {}\r\n            ;\r\n            if( !$.isWindow(element) ) {\r\n              if( module.is.input() ) {\r\n                data.value = $module.val();\r\n              }\r\n              else if( module.is.form() ) {\r\n\r\n              }\r\n              else {\r\n                data.text = $module.text();\r\n              }\r\n            }\r\n            return data;\r\n          },\r\n          event: function() {\r\n            if( $.isWindow(element) || settings.on == 'now' ) {\r\n              module.debug('API called without element, no events attached');\r\n              return false;\r\n            }\r\n            else if(settings.on == 'auto') {\r\n              if( $module.is('input') ) {\r\n                return (element.oninput !== undefined)\r\n                  ? 'input'\r\n                  : (element.onpropertychange !== undefined)\r\n                    ? 'propertychange'\r\n                    : 'keyup'\r\n                ;\r\n              }\r\n              else if( $module.is('form') ) {\r\n                return 'submit';\r\n              }\r\n              else {\r\n                return 'click';\r\n              }\r\n            }\r\n            else {\r\n              return settings.on;\r\n            }\r\n          },\r\n          templatedURL: function(action) {\r\n            action = action || $module.data(metadata.action) || settings.action || false;\r\n            url    = $module.data(metadata.url) || settings.url || false;\r\n            if(url) {\r\n              module.debug('Using specified url', url);\r\n              return url;\r\n            }\r\n            if(action) {\r\n              module.debug('Looking up url for action', action, settings.api);\r\n              if(settings.api[action] === undefined && !module.is.mocked()) {\r\n                module.error(error.missingAction, settings.action, settings.api);\r\n                return;\r\n              }\r\n              url = settings.api[action];\r\n            }\r\n            else if( module.is.form() ) {\r\n              url = $module.attr('action') || $context.attr('action') || false;\r\n              module.debug('No url or action specified, defaulting to form action', url);\r\n            }\r\n            return url;\r\n          }\r\n        },\r\n\r\n        abort: function() {\r\n          var\r\n            xhr = module.get.xhr()\r\n          ;\r\n          if( xhr && xhr.state() !== 'resolved') {\r\n            module.debug('Cancelling API request');\r\n            xhr.abort();\r\n          }\r\n        },\r\n\r\n        // reset state\r\n        reset: function() {\r\n          module.remove.error();\r\n          module.remove.loading();\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                //'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.api.settings = {\r\n\r\n  name              : 'API',\r\n  namespace         : 'api',\r\n\r\n  debug             : false,\r\n  verbose           : false,\r\n  performance       : true,\r\n\r\n  // object containing all templates endpoints\r\n  api               : {},\r\n\r\n  // whether to cache responses\r\n  cache             : true,\r\n\r\n  // whether new requests should abort previous requests\r\n  interruptRequests : true,\r\n\r\n  // event binding\r\n  on                : 'auto',\r\n\r\n  // context for applying state classes\r\n  stateContext      : false,\r\n\r\n  // duration for loading state\r\n  loadingDuration   : 0,\r\n\r\n  // whether to hide errors after a period of time\r\n  hideError         : 'auto',\r\n\r\n  // duration for error state\r\n  errorDuration     : 2000,\r\n\r\n  // whether parameters should be encoded with encodeURIComponent\r\n  encodeParameters  : true,\r\n\r\n  // API action to use\r\n  action            : false,\r\n\r\n  // templated URL to use\r\n  url               : false,\r\n\r\n  // base URL to apply to all endpoints\r\n  base              : '',\r\n\r\n  // data that will\r\n  urlData           : {},\r\n\r\n  // whether to add default data to url data\r\n  defaultData          : true,\r\n\r\n  // whether to serialize closest form\r\n  serializeForm        : false,\r\n\r\n  // how long to wait before request should occur\r\n  throttle             : 0,\r\n\r\n  // whether to throttle first request or only repeated\r\n  throttleFirstRequest : true,\r\n\r\n  // standard ajax settings\r\n  method            : 'get',\r\n  data              : {},\r\n  dataType          : 'json',\r\n\r\n  // mock response\r\n  mockResponse      : false,\r\n  mockResponseAsync : false,\r\n\r\n  // aliases for mock\r\n  response          : false,\r\n  responseAsync     : false,\r\n\r\n  // callbacks before request\r\n  beforeSend  : function(settings) { return settings; },\r\n  beforeXHR   : function(xhr) {},\r\n  onRequest   : function(promise, xhr) {},\r\n\r\n  // after request\r\n  onResponse  : false, // function(response) { },\r\n\r\n  // response was successful, if JSON passed validation\r\n  onSuccess   : function(response, $module) {},\r\n\r\n  // request finished without aborting\r\n  onComplete  : function(response, $module) {},\r\n\r\n  // failed JSON success test\r\n  onFailure   : function(response, $module) {},\r\n\r\n  // server error\r\n  onError     : function(errorMessage, $module) {},\r\n\r\n  // request aborted\r\n  onAbort     : function(errorMessage, $module) {},\r\n\r\n  successTest : false,\r\n\r\n  // errors\r\n  error : {\r\n    beforeSend        : 'The before send function has aborted the request',\r\n    error             : 'There was an error with your request',\r\n    exitConditions    : 'API Request Aborted. Exit conditions met',\r\n    JSONParse         : 'JSON could not be parsed during error handling',\r\n    legacyParameters  : 'You are using legacy API success callback names',\r\n    method            : 'The method you called is not defined',\r\n    missingAction     : 'API action used but no url was defined',\r\n    missingSerialize  : 'jquery-serialize-object is required to add form data to an existing data object',\r\n    missingURL        : 'No URL specified for api event',\r\n    noReturnedValue   : 'The beforeSend callback must return a settings object, beforeSend ignored.',\r\n    noStorage         : 'Caching responses locally requires session storage',\r\n    parseError        : 'There was an error parsing your request',\r\n    requiredParameter : 'Missing a required URL parameter: ',\r\n    statusMessage     : 'Server gave an error: ',\r\n    timeout           : 'Your request timed out'\r\n  },\r\n\r\n  regExp  : {\r\n    required : /\\{\\$*[A-z0-9]+\\}/g,\r\n    optional : /\\{\\/\\$*[A-z0-9]+\\}/g,\r\n  },\r\n\r\n  className: {\r\n    loading : 'loading',\r\n    error   : 'error'\r\n  },\r\n\r\n  selector: {\r\n    disabled : '.disabled',\r\n    form      : 'form'\r\n  },\r\n\r\n  metadata: {\r\n    action  : 'action',\r\n    url     : 'url'\r\n  }\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - State\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.state = function(parameters) {\r\n  var\r\n    $allModules     = $(this),\r\n\r\n    moduleSelector  = $allModules.selector || '',\r\n\r\n    hasTouch        = ('ontouchstart' in document.documentElement),\r\n    time            = new Date().getTime(),\r\n    performance     = [],\r\n\r\n    query           = arguments[0],\r\n    methodInvoked   = (typeof query == 'string'),\r\n    queryArguments  = [].slice.call(arguments, 1),\r\n\r\n    returnedValue\r\n  ;\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings          = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.state.settings, parameters)\r\n          : $.extend({}, $.fn.state.settings),\r\n\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        states          = settings.states,\r\n        text            = settings.text,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = namespace + '-module',\r\n\r\n        $module         = $(this),\r\n\r\n        element         = this,\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        module\r\n      ;\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.verbose('Initializing module');\r\n\r\n          // allow module to guess desired state based on element\r\n          if(settings.automatic) {\r\n            module.add.defaults();\r\n          }\r\n\r\n          // bind events with delegated events\r\n          if(settings.context && moduleSelector !== '') {\r\n            $(settings.context)\r\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\r\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\r\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\r\n            ;\r\n          }\r\n          else {\r\n            $module\r\n              .on('mouseenter' + eventNamespace, module.change.text)\r\n              .on('mouseleave' + eventNamespace, module.reset.text)\r\n              .on('click'      + eventNamespace, module.toggle.state)\r\n            ;\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.verbose('Storing instance of module', module);\r\n          instance = module;\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module', instance);\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        refresh: function() {\r\n          module.verbose('Refreshing selector cache');\r\n          $module = $(element);\r\n        },\r\n\r\n        add: {\r\n          defaults: function() {\r\n            var\r\n              userStates = parameters && $.isPlainObject(parameters.states)\r\n                ? parameters.states\r\n                : {}\r\n            ;\r\n            $.each(settings.defaults, function(type, typeStates) {\r\n              if( module.is[type] !== undefined && module.is[type]() ) {\r\n                module.verbose('Adding default states', type, element);\r\n                $.extend(settings.states, typeStates, userStates);\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        is: {\r\n\r\n          active: function() {\r\n            return $module.hasClass(className.active);\r\n          },\r\n          loading: function() {\r\n            return $module.hasClass(className.loading);\r\n          },\r\n          inactive: function() {\r\n            return !( $module.hasClass(className.active) );\r\n          },\r\n          state: function(state) {\r\n            if(className[state] === undefined) {\r\n              return false;\r\n            }\r\n            return $module.hasClass( className[state] );\r\n          },\r\n\r\n          enabled: function() {\r\n            return !( $module.is(settings.filter.active) );\r\n          },\r\n          disabled: function() {\r\n            return ( $module.is(settings.filter.active) );\r\n          },\r\n          textEnabled: function() {\r\n            return !( $module.is(settings.filter.text) );\r\n          },\r\n\r\n          // definitions for automatic type detection\r\n          button: function() {\r\n            return $module.is('.button:not(a, .submit)');\r\n          },\r\n          input: function() {\r\n            return $module.is('input');\r\n          },\r\n          progress: function() {\r\n            return $module.is('.ui.progress');\r\n          }\r\n        },\r\n\r\n        allow: function(state) {\r\n          module.debug('Now allowing state', state);\r\n          states[state] = true;\r\n        },\r\n        disallow: function(state) {\r\n          module.debug('No longer allowing', state);\r\n          states[state] = false;\r\n        },\r\n\r\n        allows: function(state) {\r\n          return states[state] || false;\r\n        },\r\n\r\n        enable: function() {\r\n          $module.removeClass(className.disabled);\r\n        },\r\n\r\n        disable: function() {\r\n          $module.addClass(className.disabled);\r\n        },\r\n\r\n        setState: function(state) {\r\n          if(module.allows(state)) {\r\n            $module.addClass( className[state] );\r\n          }\r\n        },\r\n\r\n        removeState: function(state) {\r\n          if(module.allows(state)) {\r\n            $module.removeClass( className[state] );\r\n          }\r\n        },\r\n\r\n        toggle: {\r\n          state: function() {\r\n            var\r\n              apiRequest,\r\n              requestCancelled\r\n            ;\r\n            if( module.allows('active') && module.is.enabled() ) {\r\n              module.refresh();\r\n              if($.fn.api !== undefined) {\r\n                apiRequest       = $module.api('get request');\r\n                requestCancelled = $module.api('was cancelled');\r\n                if( requestCancelled ) {\r\n                  module.debug('API Request cancelled by beforesend');\r\n                  settings.activateTest   = function(){ return false; };\r\n                  settings.deactivateTest = function(){ return false; };\r\n                }\r\n                else if(apiRequest) {\r\n                  module.listenTo(apiRequest);\r\n                  return;\r\n                }\r\n              }\r\n              module.change.state();\r\n            }\r\n          }\r\n        },\r\n\r\n        listenTo: function(apiRequest) {\r\n          module.debug('API request detected, waiting for state signal', apiRequest);\r\n          if(apiRequest) {\r\n            if(text.loading) {\r\n              module.update.text(text.loading);\r\n            }\r\n            $.when(apiRequest)\r\n              .then(function() {\r\n                if(apiRequest.state() == 'resolved') {\r\n                  module.debug('API request succeeded');\r\n                  settings.activateTest   = function(){ return true; };\r\n                  settings.deactivateTest = function(){ return true; };\r\n                }\r\n                else {\r\n                  module.debug('API request failed');\r\n                  settings.activateTest   = function(){ return false; };\r\n                  settings.deactivateTest = function(){ return false; };\r\n                }\r\n                module.change.state();\r\n              })\r\n            ;\r\n          }\r\n        },\r\n\r\n        // checks whether active/inactive state can be given\r\n        change: {\r\n\r\n          state: function() {\r\n            module.debug('Determining state change direction');\r\n            // inactive to active change\r\n            if( module.is.inactive() ) {\r\n              module.activate();\r\n            }\r\n            else {\r\n              module.deactivate();\r\n            }\r\n            if(settings.sync) {\r\n              module.sync();\r\n            }\r\n            settings.onChange.call(element);\r\n          },\r\n\r\n          text: function() {\r\n            if( module.is.textEnabled() ) {\r\n              if(module.is.disabled() ) {\r\n                module.verbose('Changing text to disabled text', text.hover);\r\n                module.update.text(text.disabled);\r\n              }\r\n              else if( module.is.active() ) {\r\n                if(text.hover) {\r\n                  module.verbose('Changing text to hover text', text.hover);\r\n                  module.update.text(text.hover);\r\n                }\r\n                else if(text.deactivate) {\r\n                  module.verbose('Changing text to deactivating text', text.deactivate);\r\n                  module.update.text(text.deactivate);\r\n                }\r\n              }\r\n              else {\r\n                if(text.hover) {\r\n                  module.verbose('Changing text to hover text', text.hover);\r\n                  module.update.text(text.hover);\r\n                }\r\n                else if(text.activate){\r\n                  module.verbose('Changing text to activating text', text.activate);\r\n                  module.update.text(text.activate);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        },\r\n\r\n        activate: function() {\r\n          if( settings.activateTest.call(element) ) {\r\n            module.debug('Setting state to active');\r\n            $module\r\n              .addClass(className.active)\r\n            ;\r\n            module.update.text(text.active);\r\n            settings.onActivate.call(element);\r\n          }\r\n        },\r\n\r\n        deactivate: function() {\r\n          if( settings.deactivateTest.call(element) ) {\r\n            module.debug('Setting state to inactive');\r\n            $module\r\n              .removeClass(className.active)\r\n            ;\r\n            module.update.text(text.inactive);\r\n            settings.onDeactivate.call(element);\r\n          }\r\n        },\r\n\r\n        sync: function() {\r\n          module.verbose('Syncing other buttons to current state');\r\n          if( module.is.active() ) {\r\n            $allModules\r\n              .not($module)\r\n                .state('activate');\r\n          }\r\n          else {\r\n            $allModules\r\n              .not($module)\r\n                .state('deactivate')\r\n            ;\r\n          }\r\n        },\r\n\r\n        get: {\r\n          text: function() {\r\n            return (settings.selector.text)\r\n              ? $module.find(settings.selector.text).text()\r\n              : $module.html()\r\n            ;\r\n          },\r\n          textFor: function(state) {\r\n            return text[state] || false;\r\n          }\r\n        },\r\n\r\n        flash: {\r\n          text: function(text, duration, callback) {\r\n            var\r\n              previousText = module.get.text()\r\n            ;\r\n            module.debug('Flashing text message', text, duration);\r\n            text     = text     || settings.text.flash;\r\n            duration = duration || settings.flashDuration;\r\n            callback = callback || function() {};\r\n            module.update.text(text);\r\n            setTimeout(function(){\r\n              module.update.text(previousText);\r\n              callback.call(element);\r\n            }, duration);\r\n          }\r\n        },\r\n\r\n        reset: {\r\n          // on mouseout sets text to previous value\r\n          text: function() {\r\n            var\r\n              activeText   = text.active   || $module.data(metadata.storedText),\r\n              inactiveText = text.inactive || $module.data(metadata.storedText)\r\n            ;\r\n            if( module.is.textEnabled() ) {\r\n              if( module.is.active() && activeText) {\r\n                module.verbose('Resetting active text', activeText);\r\n                module.update.text(activeText);\r\n              }\r\n              else if(inactiveText) {\r\n                module.verbose('Resetting inactive text', activeText);\r\n                module.update.text(inactiveText);\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        update: {\r\n          text: function(text) {\r\n            var\r\n              currentText = module.get.text()\r\n            ;\r\n            if(text && text !== currentText) {\r\n              module.debug('Updating text', text);\r\n              if(settings.selector.text) {\r\n                $module\r\n                  .data(metadata.storedText, text)\r\n                  .find(settings.selector.text)\r\n                    .text(text)\r\n                ;\r\n              }\r\n              else {\r\n                $module\r\n                  .data(metadata.storedText, text)\r\n                  .html(text)\r\n                ;\r\n              }\r\n            }\r\n            else {\r\n              module.debug('Text is already set, ignoring update', text);\r\n            }\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          module.debug('Changing setting', name, value);\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            if($.isPlainObject(settings[name])) {\r\n              $.extend(true, settings[name], value);\r\n            }\r\n            else {\r\n              settings[name] = value;\r\n            }\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.state.settings = {\r\n\r\n  // module info\r\n  name           : 'State',\r\n\r\n  // debug output\r\n  debug          : false,\r\n\r\n  // verbose debug output\r\n  verbose        : false,\r\n\r\n  // namespace for events\r\n  namespace      : 'state',\r\n\r\n  // debug data includes performance\r\n  performance    : true,\r\n\r\n  // callback occurs on state change\r\n  onActivate     : function() {},\r\n  onDeactivate   : function() {},\r\n  onChange       : function() {},\r\n\r\n  // state test functions\r\n  activateTest   : function() { return true; },\r\n  deactivateTest : function() { return true; },\r\n\r\n  // whether to automatically map default states\r\n  automatic      : true,\r\n\r\n  // activate / deactivate changes all elements instantiated at same time\r\n  sync           : false,\r\n\r\n  // default flash text duration, used for temporarily changing text of an element\r\n  flashDuration  : 1000,\r\n\r\n  // selector filter\r\n  filter     : {\r\n    text   : '.loading, .disabled',\r\n    active : '.disabled'\r\n  },\r\n\r\n  context    : false,\r\n\r\n  // error\r\n  error: {\r\n    beforeSend : 'The before send function has cancelled state change',\r\n    method     : 'The method you called is not defined.'\r\n  },\r\n\r\n  // metadata\r\n  metadata: {\r\n    promise    : 'promise',\r\n    storedText : 'stored-text'\r\n  },\r\n\r\n  // change class on state\r\n  className: {\r\n    active   : 'active',\r\n    disabled : 'disabled',\r\n    error    : 'error',\r\n    loading  : 'loading',\r\n    success  : 'success',\r\n    warning  : 'warning'\r\n  },\r\n\r\n  selector: {\r\n    // selector for text node\r\n    text: false\r\n  },\r\n\r\n  defaults : {\r\n    input: {\r\n      disabled : true,\r\n      loading  : true,\r\n      active   : true\r\n    },\r\n    button: {\r\n      disabled : true,\r\n      loading  : true,\r\n      active   : true,\r\n    },\r\n    progress: {\r\n      active   : true,\r\n      success  : true,\r\n      warning  : true,\r\n      error    : true\r\n    }\r\n  },\r\n\r\n  states     : {\r\n    active   : true,\r\n    disabled : true,\r\n    error    : true,\r\n    loading  : true,\r\n    success  : true,\r\n    warning  : true\r\n  },\r\n\r\n  text     : {\r\n    disabled   : false,\r\n    flash      : false,\r\n    hover      : false,\r\n    active     : false,\r\n    inactive   : false,\r\n    activate   : false,\r\n    deactivate : false\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n})( jQuery, window, document );\r\n\n/*!\r\n * # Semantic UI 2.2.10 - Visibility\r\n * http://github.com/semantic-org/semantic-ui/\r\n *\r\n *\r\n * Released under the MIT license\r\n * http://opensource.org/licenses/MIT\r\n *\r\n */\r\n\r\n;(function ($, window, document, undefined) {\r\n\r\n\"use strict\";\r\n\r\nwindow = (typeof window != 'undefined' && window.Math == Math)\r\n  ? window\r\n  : (typeof self != 'undefined' && self.Math == Math)\r\n    ? self\r\n    : Function('return this')()\r\n;\r\n\r\n$.fn.visibility = function(parameters) {\r\n  var\r\n    $allModules    = $(this),\r\n    moduleSelector = $allModules.selector || '',\r\n\r\n    time           = new Date().getTime(),\r\n    performance    = [],\r\n\r\n    query          = arguments[0],\r\n    methodInvoked  = (typeof query == 'string'),\r\n    queryArguments = [].slice.call(arguments, 1),\r\n    returnedValue,\r\n\r\n    moduleCount    = $allModules.length,\r\n    loadedCount    = 0\r\n  ;\r\n\r\n  $allModules\r\n    .each(function() {\r\n      var\r\n        settings        = ( $.isPlainObject(parameters) )\r\n          ? $.extend(true, {}, $.fn.visibility.settings, parameters)\r\n          : $.extend({}, $.fn.visibility.settings),\r\n\r\n        className       = settings.className,\r\n        namespace       = settings.namespace,\r\n        error           = settings.error,\r\n        metadata        = settings.metadata,\r\n\r\n        eventNamespace  = '.' + namespace,\r\n        moduleNamespace = 'module-' + namespace,\r\n\r\n        $window         = $(window),\r\n\r\n        $module         = $(this),\r\n        $context        = $(settings.context),\r\n\r\n        $placeholder,\r\n\r\n        selector        = $module.selector || '',\r\n        instance        = $module.data(moduleNamespace),\r\n\r\n        requestAnimationFrame = window.requestAnimationFrame\r\n          || window.mozRequestAnimationFrame\r\n          || window.webkitRequestAnimationFrame\r\n          || window.msRequestAnimationFrame\r\n          || function(callback) { setTimeout(callback, 0); },\r\n\r\n        element         = this,\r\n        disabled        = false,\r\n\r\n        contextObserver,\r\n        observer,\r\n        module\r\n      ;\r\n\r\n      module = {\r\n\r\n        initialize: function() {\r\n          module.debug('Initializing', settings);\r\n\r\n          module.setup.cache();\r\n\r\n          if( module.should.trackChanges() ) {\r\n\r\n            if(settings.type == 'image') {\r\n              module.setup.image();\r\n            }\r\n            if(settings.type == 'fixed') {\r\n              module.setup.fixed();\r\n            }\r\n\r\n            if(settings.observeChanges) {\r\n              module.observeChanges();\r\n            }\r\n            module.bind.events();\r\n          }\r\n\r\n          module.save.position();\r\n          if( !module.is.visible() ) {\r\n            module.error(error.visible, $module);\r\n          }\r\n\r\n          if(settings.initialCheck) {\r\n            module.checkVisibility();\r\n          }\r\n          module.instantiate();\r\n        },\r\n\r\n        instantiate: function() {\r\n          module.debug('Storing instance', module);\r\n          $module\r\n            .data(moduleNamespace, module)\r\n          ;\r\n          instance = module;\r\n        },\r\n\r\n        destroy: function() {\r\n          module.verbose('Destroying previous module');\r\n          if(observer) {\r\n            observer.disconnect();\r\n          }\r\n          if(contextObserver) {\r\n            contextObserver.disconnect();\r\n          }\r\n          $window\r\n            .off('load'   + eventNamespace, module.event.load)\r\n            .off('resize' + eventNamespace, module.event.resize)\r\n          ;\r\n          $context\r\n            .off('scroll'       + eventNamespace, module.event.scroll)\r\n            .off('scrollchange' + eventNamespace, module.event.scrollchange)\r\n          ;\r\n          if(settings.type == 'fixed') {\r\n            module.resetFixed();\r\n            module.remove.placeholder();\r\n          }\r\n          $module\r\n            .off(eventNamespace)\r\n            .removeData(moduleNamespace)\r\n          ;\r\n        },\r\n\r\n        observeChanges: function() {\r\n          if('MutationObserver' in window) {\r\n            contextObserver = new MutationObserver(module.event.contextChanged);\r\n            observer        = new MutationObserver(module.event.changed);\r\n            contextObserver.observe(document, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            observer.observe(element, {\r\n              childList : true,\r\n              subtree   : true\r\n            });\r\n            module.debug('Setting up mutation observer', observer);\r\n          }\r\n        },\r\n\r\n        bind: {\r\n          events: function() {\r\n            module.verbose('Binding visibility events to scroll and resize');\r\n            if(settings.refreshOnLoad) {\r\n              $window\r\n                .on('load'   + eventNamespace, module.event.load)\r\n              ;\r\n            }\r\n            $window\r\n              .on('resize' + eventNamespace, module.event.resize)\r\n            ;\r\n            // pub/sub pattern\r\n            $context\r\n              .off('scroll'      + eventNamespace)\r\n              .on('scroll'       + eventNamespace, module.event.scroll)\r\n              .on('scrollchange' + eventNamespace, module.event.scrollchange)\r\n            ;\r\n          }\r\n        },\r\n\r\n        event: {\r\n          changed: function(mutations) {\r\n            module.verbose('DOM tree modified, updating visibility calculations');\r\n            module.timer = setTimeout(function() {\r\n              module.verbose('DOM tree modified, updating sticky menu');\r\n              module.refresh();\r\n            }, 100);\r\n          },\r\n          contextChanged: function(mutations) {\r\n            [].forEach.call(mutations, function(mutation) {\r\n              if(mutation.removedNodes) {\r\n                [].forEach.call(mutation.removedNodes, function(node) {\r\n                  if(node == element || $(node).find(element).length > 0) {\r\n                    module.debug('Element removed from DOM, tearing down events');\r\n                    module.destroy();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          },\r\n          resize: function() {\r\n            module.debug('Window resized');\r\n            if(settings.refreshOnResize) {\r\n              requestAnimationFrame(module.refresh);\r\n            }\r\n          },\r\n          load: function() {\r\n            module.debug('Page finished loading');\r\n            requestAnimationFrame(module.refresh);\r\n          },\r\n          // publishes scrollchange event on one scroll\r\n          scroll: function() {\r\n            if(settings.throttle) {\r\n              clearTimeout(module.timer);\r\n              module.timer = setTimeout(function() {\r\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\r\n              }, settings.throttle);\r\n            }\r\n            else {\r\n              requestAnimationFrame(function() {\r\n                $context.triggerHandler('scrollchange' + eventNamespace, [ $context.scrollTop() ]);\r\n              });\r\n            }\r\n          },\r\n          // subscribes to scrollchange\r\n          scrollchange: function(event, scrollPosition) {\r\n            module.checkVisibility(scrollPosition);\r\n          },\r\n        },\r\n\r\n        precache: function(images, callback) {\r\n          if (!(images instanceof Array)) {\r\n            images = [images];\r\n          }\r\n          var\r\n            imagesLength  = images.length,\r\n            loadedCounter = 0,\r\n            cache         = [],\r\n            cacheImage    = document.createElement('img'),\r\n            handleLoad    = function() {\r\n              loadedCounter++;\r\n              if (loadedCounter >= images.length) {\r\n                if ($.isFunction(callback)) {\r\n                  callback();\r\n                }\r\n              }\r\n            }\r\n          ;\r\n          while (imagesLength--) {\r\n            cacheImage         = document.createElement('img');\r\n            cacheImage.onload  = handleLoad;\r\n            cacheImage.onerror = handleLoad;\r\n            cacheImage.src     = images[imagesLength];\r\n            cache.push(cacheImage);\r\n          }\r\n        },\r\n\r\n        enableCallbacks: function() {\r\n          module.debug('Allowing callbacks to occur');\r\n          disabled = false;\r\n        },\r\n\r\n        disableCallbacks: function() {\r\n          module.debug('Disabling all callbacks temporarily');\r\n          disabled = true;\r\n        },\r\n\r\n        should: {\r\n          trackChanges: function() {\r\n            if(methodInvoked) {\r\n              module.debug('One time query, no need to bind events');\r\n              return false;\r\n            }\r\n            module.debug('Callbacks being attached');\r\n            return true;\r\n          }\r\n        },\r\n\r\n        setup: {\r\n          cache: function() {\r\n            module.cache = {\r\n              occurred : {},\r\n              screen   : {},\r\n              element  : {},\r\n            };\r\n          },\r\n          image: function() {\r\n            var\r\n              src = $module.data(metadata.src)\r\n            ;\r\n            if(src) {\r\n              module.verbose('Lazy loading image', src);\r\n              settings.once           = true;\r\n              settings.observeChanges = false;\r\n\r\n              // show when top visible\r\n              settings.onOnScreen = function() {\r\n                module.debug('Image on screen', element);\r\n                module.precache(src, function() {\r\n                  module.set.image(src, function() {\r\n                    loadedCount++;\r\n                    if(loadedCount == moduleCount) {\r\n                      settings.onAllLoaded.call(this);\r\n                    }\r\n                    settings.onLoad.call(this);\r\n                  });\r\n                });\r\n              };\r\n            }\r\n          },\r\n          fixed: function() {\r\n            module.debug('Setting up fixed');\r\n            settings.once           = false;\r\n            settings.observeChanges = false;\r\n            settings.initialCheck   = true;\r\n            settings.refreshOnLoad  = true;\r\n            if(!parameters.transition) {\r\n              settings.transition = false;\r\n            }\r\n            module.create.placeholder();\r\n            module.debug('Added placeholder', $placeholder);\r\n            settings.onTopPassed = function() {\r\n              module.debug('Element passed, adding fixed position', $module);\r\n              module.show.placeholder();\r\n              module.set.fixed();\r\n              if(settings.transition) {\r\n                if($.fn.transition !== undefined) {\r\n                  $module.transition(settings.transition, settings.duration);\r\n                }\r\n              }\r\n            };\r\n            settings.onTopPassedReverse = function() {\r\n              module.debug('Element returned to position, removing fixed', $module);\r\n              module.hide.placeholder();\r\n              module.remove.fixed();\r\n            };\r\n          }\r\n        },\r\n\r\n        create: {\r\n          placeholder: function() {\r\n            module.verbose('Creating fixed position placeholder');\r\n            $placeholder = $module\r\n              .clone(false)\r\n              .css('display', 'none')\r\n              .addClass(className.placeholder)\r\n              .insertAfter($module)\r\n            ;\r\n          }\r\n        },\r\n\r\n        show: {\r\n          placeholder: function() {\r\n            module.verbose('Showing placeholder');\r\n            $placeholder\r\n              .css('display', 'block')\r\n              .css('visibility', 'hidden')\r\n            ;\r\n          }\r\n        },\r\n        hide: {\r\n          placeholder: function() {\r\n            module.verbose('Hiding placeholder');\r\n            $placeholder\r\n              .css('display', 'none')\r\n              .css('visibility', '')\r\n            ;\r\n          }\r\n        },\r\n\r\n        set: {\r\n          fixed: function() {\r\n            module.verbose('Setting element to fixed position');\r\n            $module\r\n              .addClass(className.fixed)\r\n              .css({\r\n                position : 'fixed',\r\n                top      : settings.offset + 'px',\r\n                left     : 'auto',\r\n                zIndex   : settings.zIndex\r\n              })\r\n            ;\r\n            settings.onFixed.call(element);\r\n          },\r\n          image: function(src, callback) {\r\n            $module\r\n              .attr('src', src)\r\n            ;\r\n            if(settings.transition) {\r\n              if( $.fn.transition !== undefined) {\r\n                if($module.hasClass(className.visible)) {\r\n                  module.debug('Transition already occurred on this image, skipping animation');\r\n                  return;\r\n                }\r\n                $module.transition(settings.transition, settings.duration, callback);\r\n              }\r\n              else {\r\n                $module.fadeIn(settings.duration, callback);\r\n              }\r\n            }\r\n            else {\r\n              $module.show();\r\n            }\r\n          }\r\n        },\r\n\r\n        is: {\r\n          onScreen: function() {\r\n            var\r\n              calculations   = module.get.elementCalculations()\r\n            ;\r\n            return calculations.onScreen;\r\n          },\r\n          offScreen: function() {\r\n            var\r\n              calculations   = module.get.elementCalculations()\r\n            ;\r\n            return calculations.offScreen;\r\n          },\r\n          visible: function() {\r\n            if(module.cache && module.cache.element) {\r\n              return !(module.cache.element.width === 0 && module.cache.element.offset.top === 0);\r\n            }\r\n            return false;\r\n          },\r\n          verticallyScrollableContext: function() {\r\n            var\r\n              overflowY = ($context.get(0) !== window)\r\n                ? $context.css('overflow-y')\r\n                : false\r\n            ;\r\n            return (overflowY == 'auto' || overflowY == 'scroll');\r\n          },\r\n          horizontallyScrollableContext: function() {\r\n            var\r\n              overflowX = ($context.get(0) !== window)\r\n                ? $context.css('overflow-x')\r\n                : false\r\n            ;\r\n            return (overflowX == 'auto' || overflowX == 'scroll');\r\n          }\r\n        },\r\n\r\n        refresh: function() {\r\n          module.debug('Refreshing constants (width/height)');\r\n          if(settings.type == 'fixed') {\r\n            module.resetFixed();\r\n          }\r\n          module.reset();\r\n          module.save.position();\r\n          if(settings.checkOnRefresh) {\r\n            module.checkVisibility();\r\n          }\r\n          settings.onRefresh.call(element);\r\n        },\r\n\r\n        resetFixed: function () {\r\n          module.remove.fixed();\r\n          module.remove.occurred();\r\n        },\r\n\r\n        reset: function() {\r\n          module.verbose('Resetting all cached values');\r\n          if( $.isPlainObject(module.cache) ) {\r\n            module.cache.screen = {};\r\n            module.cache.element = {};\r\n          }\r\n        },\r\n\r\n        checkVisibility: function(scroll) {\r\n          module.verbose('Checking visibility of element', module.cache.element);\r\n\r\n          if( !disabled && module.is.visible() ) {\r\n\r\n            // save scroll position\r\n            module.save.scroll(scroll);\r\n\r\n            // update calculations derived from scroll\r\n            module.save.calculations();\r\n\r\n            // percentage\r\n            module.passed();\r\n\r\n            // reverse (must be first)\r\n            module.passingReverse();\r\n            module.topVisibleReverse();\r\n            module.bottomVisibleReverse();\r\n            module.topPassedReverse();\r\n            module.bottomPassedReverse();\r\n\r\n            // one time\r\n            module.onScreen();\r\n            module.offScreen();\r\n            module.passing();\r\n            module.topVisible();\r\n            module.bottomVisible();\r\n            module.topPassed();\r\n            module.bottomPassed();\r\n\r\n            // on update callback\r\n            if(settings.onUpdate) {\r\n              settings.onUpdate.call(element, module.get.elementCalculations());\r\n            }\r\n          }\r\n        },\r\n\r\n        passed: function(amount, newCallback) {\r\n          var\r\n            calculations   = module.get.elementCalculations(),\r\n            amountInPixels\r\n          ;\r\n          // assign callback\r\n          if(amount && newCallback) {\r\n            settings.onPassed[amount] = newCallback;\r\n          }\r\n          else if(amount !== undefined) {\r\n            return (module.get.pixelsPassed(amount) > calculations.pixelsPassed);\r\n          }\r\n          else if(calculations.passing) {\r\n            $.each(settings.onPassed, function(amount, callback) {\r\n              if(calculations.bottomVisible || calculations.pixelsPassed > module.get.pixelsPassed(amount)) {\r\n                module.execute(callback, amount);\r\n              }\r\n              else if(!settings.once) {\r\n                module.remove.occurred(callback);\r\n              }\r\n            });\r\n          }\r\n        },\r\n\r\n        onScreen: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onOnScreen,\r\n            callbackName = 'onScreen'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for onScreen', newCallback);\r\n            settings.onOnScreen = newCallback;\r\n          }\r\n          if(calculations.onScreen) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.onOnScreen;\r\n          }\r\n        },\r\n\r\n        offScreen: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onOffScreen,\r\n            callbackName = 'offScreen'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for offScreen', newCallback);\r\n            settings.onOffScreen = newCallback;\r\n          }\r\n          if(calculations.offScreen) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.onOffScreen;\r\n          }\r\n        },\r\n\r\n        passing: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onPassing,\r\n            callbackName = 'passing'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for passing', newCallback);\r\n            settings.onPassing = newCallback;\r\n          }\r\n          if(calculations.passing) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return calculations.passing;\r\n          }\r\n        },\r\n\r\n\r\n        topVisible: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopVisible,\r\n            callbackName = 'topVisible'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top visible', newCallback);\r\n            settings.onTopVisible = newCallback;\r\n          }\r\n          if(calculations.topVisible) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.topVisible;\r\n          }\r\n        },\r\n\r\n        bottomVisible: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomVisible,\r\n            callbackName = 'bottomVisible'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom visible', newCallback);\r\n            settings.onBottomVisible = newCallback;\r\n          }\r\n          if(calculations.bottomVisible) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.bottomVisible;\r\n          }\r\n        },\r\n\r\n        topPassed: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopPassed,\r\n            callbackName = 'topPassed'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top passed', newCallback);\r\n            settings.onTopPassed = newCallback;\r\n          }\r\n          if(calculations.topPassed) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.topPassed;\r\n          }\r\n        },\r\n\r\n        bottomPassed: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomPassed,\r\n            callbackName = 'bottomPassed'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom passed', newCallback);\r\n            settings.onBottomPassed = newCallback;\r\n          }\r\n          if(calculations.bottomPassed) {\r\n            module.execute(callback, callbackName);\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return calculations.bottomPassed;\r\n          }\r\n        },\r\n\r\n        passingReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onPassingReverse,\r\n            callbackName = 'passingReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for passing reverse', newCallback);\r\n            settings.onPassingReverse = newCallback;\r\n          }\r\n          if(!calculations.passing) {\r\n            if(module.get.occurred('passing')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback !== undefined) {\r\n            return !calculations.passing;\r\n          }\r\n        },\r\n\r\n\r\n        topVisibleReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopVisibleReverse,\r\n            callbackName = 'topVisibleReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top visible reverse', newCallback);\r\n            settings.onTopVisibleReverse = newCallback;\r\n          }\r\n          if(!calculations.topVisible) {\r\n            if(module.get.occurred('topVisible')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.topVisible;\r\n          }\r\n        },\r\n\r\n        bottomVisibleReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomVisibleReverse,\r\n            callbackName = 'bottomVisibleReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom visible reverse', newCallback);\r\n            settings.onBottomVisibleReverse = newCallback;\r\n          }\r\n          if(!calculations.bottomVisible) {\r\n            if(module.get.occurred('bottomVisible')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.bottomVisible;\r\n          }\r\n        },\r\n\r\n        topPassedReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onTopPassedReverse,\r\n            callbackName = 'topPassedReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for top passed reverse', newCallback);\r\n            settings.onTopPassedReverse = newCallback;\r\n          }\r\n          if(!calculations.topPassed) {\r\n            if(module.get.occurred('topPassed')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.onTopPassed;\r\n          }\r\n        },\r\n\r\n        bottomPassedReverse: function(newCallback) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            callback     = newCallback || settings.onBottomPassedReverse,\r\n            callbackName = 'bottomPassedReverse'\r\n          ;\r\n          if(newCallback) {\r\n            module.debug('Adding callback for bottom passed reverse', newCallback);\r\n            settings.onBottomPassedReverse = newCallback;\r\n          }\r\n          if(!calculations.bottomPassed) {\r\n            if(module.get.occurred('bottomPassed')) {\r\n              module.execute(callback, callbackName);\r\n            }\r\n          }\r\n          else if(!settings.once) {\r\n            module.remove.occurred(callbackName);\r\n          }\r\n          if(newCallback === undefined) {\r\n            return !calculations.bottomPassed;\r\n          }\r\n        },\r\n\r\n        execute: function(callback, callbackName) {\r\n          var\r\n            calculations = module.get.elementCalculations(),\r\n            screen       = module.get.screenCalculations()\r\n          ;\r\n          callback = callback || false;\r\n          if(callback) {\r\n            if(settings.continuous) {\r\n              module.debug('Callback being called continuously', callbackName, calculations);\r\n              callback.call(element, calculations, screen);\r\n            }\r\n            else if(!module.get.occurred(callbackName)) {\r\n              module.debug('Conditions met', callbackName, calculations);\r\n              callback.call(element, calculations, screen);\r\n            }\r\n          }\r\n          module.save.occurred(callbackName);\r\n        },\r\n\r\n        remove: {\r\n          fixed: function() {\r\n            module.debug('Removing fixed position');\r\n            $module\r\n              .removeClass(className.fixed)\r\n              .css({\r\n                position : '',\r\n                top      : '',\r\n                left     : '',\r\n                zIndex   : ''\r\n              })\r\n            ;\r\n            settings.onUnfixed.call(element);\r\n          },\r\n          placeholder: function() {\r\n            module.debug('Removing placeholder content');\r\n            if($placeholder) {\r\n              $placeholder.remove();\r\n            }\r\n          },\r\n          occurred: function(callback) {\r\n            if(callback) {\r\n              var\r\n                occurred = module.cache.occurred\r\n              ;\r\n              if(occurred[callback] !== undefined && occurred[callback] === true) {\r\n                module.debug('Callback can now be called again', callback);\r\n                module.cache.occurred[callback] = false;\r\n              }\r\n            }\r\n            else {\r\n              module.cache.occurred = {};\r\n            }\r\n          }\r\n        },\r\n\r\n        save: {\r\n          calculations: function() {\r\n            module.verbose('Saving all calculations necessary to determine positioning');\r\n            module.save.direction();\r\n            module.save.screenCalculations();\r\n            module.save.elementCalculations();\r\n          },\r\n          occurred: function(callback) {\r\n            if(callback) {\r\n              if(module.cache.occurred[callback] === undefined || (module.cache.occurred[callback] !== true)) {\r\n                module.verbose('Saving callback occurred', callback);\r\n                module.cache.occurred[callback] = true;\r\n              }\r\n            }\r\n          },\r\n          scroll: function(scrollPosition) {\r\n            scrollPosition      = scrollPosition + settings.offset || $context.scrollTop() + settings.offset;\r\n            module.cache.scroll = scrollPosition;\r\n          },\r\n          direction: function() {\r\n            var\r\n              scroll     = module.get.scroll(),\r\n              lastScroll = module.get.lastScroll(),\r\n              direction\r\n            ;\r\n            if(scroll > lastScroll && lastScroll) {\r\n              direction = 'down';\r\n            }\r\n            else if(scroll < lastScroll && lastScroll) {\r\n              direction = 'up';\r\n            }\r\n            else {\r\n              direction = 'static';\r\n            }\r\n            module.cache.direction = direction;\r\n            return module.cache.direction;\r\n          },\r\n          elementPosition: function() {\r\n            var\r\n              element = module.cache.element,\r\n              screen  = module.get.screenSize()\r\n            ;\r\n            module.verbose('Saving element position');\r\n            // (quicker than $.extend)\r\n            element.fits          = (element.height < screen.height);\r\n            element.offset        = $module.offset();\r\n            element.width         = $module.outerWidth();\r\n            element.height        = $module.outerHeight();\r\n            // compensate for scroll in context\r\n            if(module.is.verticallyScrollableContext()) {\r\n              element.offset.top += $context.scrollTop() - $context.offset().top;\r\n            }\r\n            if(module.is.horizontallyScrollableContext()) {\r\n              element.offset.left += $context.scrollLeft - $context.offset().left;\r\n            }\r\n            // store\r\n            module.cache.element = element;\r\n            return element;\r\n          },\r\n          elementCalculations: function() {\r\n            var\r\n              screen     = module.get.screenCalculations(),\r\n              element    = module.get.elementPosition()\r\n            ;\r\n            // offset\r\n            if(settings.includeMargin) {\r\n              element.margin        = {};\r\n              element.margin.top    = parseInt($module.css('margin-top'), 10);\r\n              element.margin.bottom = parseInt($module.css('margin-bottom'), 10);\r\n              element.top    = element.offset.top - element.margin.top;\r\n              element.bottom = element.offset.top + element.height + element.margin.bottom;\r\n            }\r\n            else {\r\n              element.top    = element.offset.top;\r\n              element.bottom = element.offset.top + element.height;\r\n            }\r\n\r\n            // visibility\r\n            element.topPassed        = (screen.top >= element.top);\r\n            element.bottomPassed     = (screen.top >= element.bottom);\r\n            element.topVisible       = (screen.bottom >= element.top) && !element.bottomPassed;\r\n            element.bottomVisible    = (screen.bottom >= element.bottom) && !element.topPassed;\r\n            element.pixelsPassed     = 0;\r\n            element.percentagePassed = 0;\r\n\r\n            // meta calculations\r\n            element.onScreen  = (element.topVisible && !element.bottomPassed);\r\n            element.passing   = (element.topPassed && !element.bottomPassed);\r\n            element.offScreen = (!element.onScreen);\r\n\r\n            // passing calculations\r\n            if(element.passing) {\r\n              element.pixelsPassed     = (screen.top - element.top);\r\n              element.percentagePassed = (screen.top - element.top) / element.height;\r\n            }\r\n            module.cache.element = element;\r\n            module.verbose('Updated element calculations', element);\r\n            return element;\r\n          },\r\n          screenCalculations: function() {\r\n            var\r\n              scroll = module.get.scroll()\r\n            ;\r\n            module.save.direction();\r\n            module.cache.screen.top    = scroll;\r\n            module.cache.screen.bottom = scroll + module.cache.screen.height;\r\n            return module.cache.screen;\r\n          },\r\n          screenSize: function() {\r\n            module.verbose('Saving window position');\r\n            module.cache.screen = {\r\n              height: $context.height()\r\n            };\r\n          },\r\n          position: function() {\r\n            module.save.screenSize();\r\n            module.save.elementPosition();\r\n          }\r\n        },\r\n\r\n        get: {\r\n          pixelsPassed: function(amount) {\r\n            var\r\n              element = module.get.elementCalculations()\r\n            ;\r\n            if(amount.search('%') > -1) {\r\n              return ( element.height * (parseInt(amount, 10) / 100) );\r\n            }\r\n            return parseInt(amount, 10);\r\n          },\r\n          occurred: function(callback) {\r\n            return (module.cache.occurred !== undefined)\r\n              ? module.cache.occurred[callback] || false\r\n              : false\r\n            ;\r\n          },\r\n          direction: function() {\r\n            if(module.cache.direction === undefined) {\r\n              module.save.direction();\r\n            }\r\n            return module.cache.direction;\r\n          },\r\n          elementPosition: function() {\r\n            if(module.cache.element === undefined) {\r\n              module.save.elementPosition();\r\n            }\r\n            return module.cache.element;\r\n          },\r\n          elementCalculations: function() {\r\n            if(module.cache.element === undefined) {\r\n              module.save.elementCalculations();\r\n            }\r\n            return module.cache.element;\r\n          },\r\n          screenCalculations: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.save.screenCalculations();\r\n            }\r\n            return module.cache.screen;\r\n          },\r\n          screenSize: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.save.screenSize();\r\n            }\r\n            return module.cache.screen;\r\n          },\r\n          scroll: function() {\r\n            if(module.cache.scroll === undefined) {\r\n              module.save.scroll();\r\n            }\r\n            return module.cache.scroll;\r\n          },\r\n          lastScroll: function() {\r\n            if(module.cache.screen === undefined) {\r\n              module.debug('First scroll event, no last scroll could be found');\r\n              return false;\r\n            }\r\n            return module.cache.screen.top;\r\n          }\r\n        },\r\n\r\n        setting: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, settings, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            settings[name] = value;\r\n          }\r\n          else {\r\n            return settings[name];\r\n          }\r\n        },\r\n        internal: function(name, value) {\r\n          if( $.isPlainObject(name) ) {\r\n            $.extend(true, module, name);\r\n          }\r\n          else if(value !== undefined) {\r\n            module[name] = value;\r\n          }\r\n          else {\r\n            return module[name];\r\n          }\r\n        },\r\n        debug: function() {\r\n          if(!settings.silent && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.debug.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        verbose: function() {\r\n          if(!settings.silent && settings.verbose && settings.debug) {\r\n            if(settings.performance) {\r\n              module.performance.log(arguments);\r\n            }\r\n            else {\r\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\r\n              module.verbose.apply(console, arguments);\r\n            }\r\n          }\r\n        },\r\n        error: function() {\r\n          if(!settings.silent) {\r\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\r\n            module.error.apply(console, arguments);\r\n          }\r\n        },\r\n        performance: {\r\n          log: function(message) {\r\n            var\r\n              currentTime,\r\n              executionTime,\r\n              previousTime\r\n            ;\r\n            if(settings.performance) {\r\n              currentTime   = new Date().getTime();\r\n              previousTime  = time || currentTime;\r\n              executionTime = currentTime - previousTime;\r\n              time          = currentTime;\r\n              performance.push({\r\n                'Name'           : message[0],\r\n                'Arguments'      : [].slice.call(message, 1) || '',\r\n                'Element'        : element,\r\n                'Execution Time' : executionTime\r\n              });\r\n            }\r\n            clearTimeout(module.performance.timer);\r\n            module.performance.timer = setTimeout(module.performance.display, 500);\r\n          },\r\n          display: function() {\r\n            var\r\n              title = settings.name + ':',\r\n              totalTime = 0\r\n            ;\r\n            time = false;\r\n            clearTimeout(module.performance.timer);\r\n            $.each(performance, function(index, data) {\r\n              totalTime += data['Execution Time'];\r\n            });\r\n            title += ' ' + totalTime + 'ms';\r\n            if(moduleSelector) {\r\n              title += ' \\'' + moduleSelector + '\\'';\r\n            }\r\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\r\n              console.groupCollapsed(title);\r\n              if(console.table) {\r\n                console.table(performance);\r\n              }\r\n              else {\r\n                $.each(performance, function(index, data) {\r\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\r\n                });\r\n              }\r\n              console.groupEnd();\r\n            }\r\n            performance = [];\r\n          }\r\n        },\r\n        invoke: function(query, passedArguments, context) {\r\n          var\r\n            object = instance,\r\n            maxDepth,\r\n            found,\r\n            response\r\n          ;\r\n          passedArguments = passedArguments || queryArguments;\r\n          context         = element         || context;\r\n          if(typeof query == 'string' && object !== undefined) {\r\n            query    = query.split(/[\\. ]/);\r\n            maxDepth = query.length - 1;\r\n            $.each(query, function(depth, value) {\r\n              var camelCaseValue = (depth != maxDepth)\r\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\r\n                : query\r\n              ;\r\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\r\n                object = object[camelCaseValue];\r\n              }\r\n              else if( object[camelCaseValue] !== undefined ) {\r\n                found = object[camelCaseValue];\r\n                return false;\r\n              }\r\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\r\n                object = object[value];\r\n              }\r\n              else if( object[value] !== undefined ) {\r\n                found = object[value];\r\n                return false;\r\n              }\r\n              else {\r\n                module.error(error.method, query);\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n          if ( $.isFunction( found ) ) {\r\n            response = found.apply(context, passedArguments);\r\n          }\r\n          else if(found !== undefined) {\r\n            response = found;\r\n          }\r\n          if($.isArray(returnedValue)) {\r\n            returnedValue.push(response);\r\n          }\r\n          else if(returnedValue !== undefined) {\r\n            returnedValue = [returnedValue, response];\r\n          }\r\n          else if(response !== undefined) {\r\n            returnedValue = response;\r\n          }\r\n          return found;\r\n        }\r\n      };\r\n\r\n      if(methodInvoked) {\r\n        if(instance === undefined) {\r\n          module.initialize();\r\n        }\r\n        instance.save.scroll();\r\n        instance.save.calculations();\r\n        module.invoke(query);\r\n      }\r\n      else {\r\n        if(instance !== undefined) {\r\n          instance.invoke('destroy');\r\n        }\r\n        module.initialize();\r\n      }\r\n    })\r\n  ;\r\n\r\n  return (returnedValue !== undefined)\r\n    ? returnedValue\r\n    : this\r\n  ;\r\n};\r\n\r\n$.fn.visibility.settings = {\r\n\r\n  name                   : 'Visibility',\r\n  namespace              : 'visibility',\r\n\r\n  debug                  : false,\r\n  verbose                : false,\r\n  performance            : true,\r\n\r\n  // whether to use mutation observers to follow changes\r\n  observeChanges         : true,\r\n\r\n  // check position immediately on init\r\n  initialCheck           : true,\r\n\r\n  // whether to refresh calculations after all page images load\r\n  refreshOnLoad          : true,\r\n\r\n  // whether to refresh calculations after page resize event\r\n  refreshOnResize        : true,\r\n\r\n  // should call callbacks on refresh event (resize, etc)\r\n  checkOnRefresh         : true,\r\n\r\n  // callback should only occur one time\r\n  once                   : true,\r\n\r\n  // callback should fire continuously whe evaluates to true\r\n  continuous             : false,\r\n\r\n  // offset to use with scroll top\r\n  offset                 : 0,\r\n\r\n  // whether to include margin in elements position\r\n  includeMargin          : false,\r\n\r\n  // scroll context for visibility checks\r\n  context                : window,\r\n\r\n  // visibility check delay in ms (defaults to animationFrame)\r\n  throttle               : false,\r\n\r\n  // special visibility type (image, fixed)\r\n  type                   : false,\r\n\r\n  // z-index to use with visibility 'fixed'\r\n  zIndex                 : '10',\r\n\r\n  // image only animation settings\r\n  transition             : 'fade in',\r\n  duration               : 1000,\r\n\r\n  // array of callbacks for percentage\r\n  onPassed               : {},\r\n\r\n  // standard callbacks\r\n  onOnScreen             : false,\r\n  onOffScreen            : false,\r\n  onPassing              : false,\r\n  onTopVisible           : false,\r\n  onBottomVisible        : false,\r\n  onTopPassed            : false,\r\n  onBottomPassed         : false,\r\n\r\n  // reverse callbacks\r\n  onPassingReverse       : false,\r\n  onTopVisibleReverse    : false,\r\n  onBottomVisibleReverse : false,\r\n  onTopPassedReverse     : false,\r\n  onBottomPassedReverse  : false,\r\n\r\n  // special callbacks for image\r\n  onLoad                 : function() {},\r\n  onAllLoaded            : function() {},\r\n\r\n  // special callbacks for fixed position\r\n  onFixed                : function() {},\r\n  onUnfixed              : function() {},\r\n\r\n  // utility callbacks\r\n  onUpdate               : false, // disabled by default for performance\r\n  onRefresh              : function(){},\r\n\r\n  metadata : {\r\n    src: 'src'\r\n  },\r\n\r\n  className: {\r\n    fixed       : 'fixed',\r\n    placeholder : 'placeholder',\r\n    visible     : 'visible'\r\n  },\r\n\r\n  error : {\r\n    method  : 'The method you called is not defined.',\r\n    visible : 'Element is hidden, you must call refresh after element becomes visible'\r\n  }\r\n\r\n};\r\n\r\n})( jQuery, window, document );\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./semantic/dist/semantic.js\n// module id = 8\n// module chunks = 0","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport '../semantic/dist/semantic.css'\r\nimport semantic from 'semantic-ui'\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  template: '<App/>',\r\n  components: { App }\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\r\n  <div id=\"app\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// App.vue?256e5707","<template>\r\n  <div class=\"ui container\">\r\n    <h2>Yammerer</h2>\r\n    <div class=\"ui centered grid\">\r\n      <div class=\"ten wide column\">\r\n        <div class=\"ui threaded comments\">\r\n  \r\n          <div class=\"ui text menu\">\r\n            <div class=\"ui item\">\r\n            <a class=\"circular ui tiny image\">\r\n              <img v-bind:src=\"autoSelectedAvatar\">\r\n            </a>\r\n\r\n            <div class=\"middle aligned content\">\r\n              <div class=\"header\">\r\n                {{autoGeneratedUserName}}\r\n              </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"right menu\">\r\n              <div class=\"item\">\r\n                <div class=\"circular ui icon button\" v-on:click.stop=\"toggleMessageForm()\">\r\n                   <i v-if=\"!showMessageForm\" class=\"plus icon\"></i>\r\n                   <i v-else class=\"remove icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"ui divider\"></div>\r\n\r\n          <transition name=\"fade\">\r\n            <form v-if=\"showMessageForm\" class=\"ui reply form\" id=\"messageForm\">\r\n              <div class=\"field\">\r\n                <textarea v-model=\"newMessageContent\" name=\"newMessageContent\"></textarea>\r\n              </div>\r\n              <div class=\"ui primary labeled icon button\" v-on:click.stop=\"addMessage()\">\r\n                <i class=\"icon edit\"></i> Add Message \r\n              </div>\r\n              <div class=\"ui button\" v-on:click.stop=\"toggleMessageForm()\">\r\n                Cancel \r\n              </div>\r\n              <div class=\"ui divider hidden\"></div>\r\n            </form>\r\n          </transition>\r\n  \r\n          <message v-for=\"(message, index) in messages\"\r\n                   :model=\"message\"\r\n                   :reply-as=\"autoGeneratedUserName\"\r\n                   :reply-as-avatar=\"autoSelectedAvatar\"\r\n                   :key=\"message.id\"\r\n                   v-on:remove=\"removeChild(index)\"></message>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport helpers from '../helpers'\r\nimport Message from './Message'\r\nimport messageStore from '../data'\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: 'channel',\r\n  data () {\r\n    return {\r\n      messages: messageStore.reactive.messages,\r\n      showMessageForm: false,\r\n      newMessageContent: ''\r\n    }\r\n  },\r\n  // computed props are methods which are evaluated ONCE, then cached for later.\r\n  computed: {\r\n    autoGeneratedUserName: function () {\r\n      return helpers.getRandomUserName();\r\n    },\r\n    autoSelectedAvatar: function () {\r\n      return helpers.getRandomAvatarUrl();\r\n    }\r\n  },\r\n  beforeCreate: function () {\r\n    if (!messageStore.hasMessages()) {\r\n      // If empty, prime the message store\r\n      messageStore.setMessages([{\r\n            author: 'Mike Nolan',\r\n            avatar: 'https://semantic-ui.com/images/avatar/small/matt.jpg',\r\n            content: 'Gidday maaate!!',\r\n            likes: 2,\r\n            time: '2017-5-28 17:49:24',\r\n            replies: []\r\n        }]);\r\n    }\r\n    // Load messages into reactive memory\r\n    messageStore.loadMessages();\r\n  },\r\n  // methods are evaluated every time they're invoked\r\n  methods: {\r\n    addMessage: function () {\r\n      // Form validation with semantic UI\r\n      let messageForm = $('#messageForm');\r\n      messageForm.form({\r\n        inline: true,\r\n        fields: {\r\n          newMessageContent: {\r\n            identifier: 'newMessageContent', // <-- binds to id, name or data-validate\r\n            rules: [{\r\n              type: 'empty',\r\n              prompt: 'Please enter your message'\r\n            }]\r\n          }\r\n        }\r\n      });\r\n      messageForm.form('validate form');\r\n\r\n      if (messageForm.form('is valid')) {\r\n        // Add a message to the beginning of array, pass in the authoring details.\r\n        this.messages.unshift(helpers.getNewMessage(this.autoGeneratedUserName, this.autoSelectedAvatar, this.newMessageContent));\r\n        this.toggleMessageForm();\r\n        messageStore.saveState();\r\n      }\r\n    },\r\n    toggleMessageForm: function () {\r\n      this.showMessageForm = !this.showMessageForm;\r\n      this.newMessageContent = '';\r\n    },\r\n    removeChild: function (index) {\r\n      this.messages.splice(index, 1);\r\n      messageStore.saveState();\r\n    }\r\n  },\r\n  components: {\r\n    'message': Message\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\n.fade-enter-active/*, .fade-leave-active*/ {\r\n  transition: opacity .5s\r\n}\r\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\r\n  opacity: 0\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Channel.vue?6364850a","<template>\r\n  <div class=\"comment\">\r\n    <a class=\"avatar\">\r\n      <!-- bind a html property to a computed value -->\r\n      <img v-bind:src=\"model.avatar\">\r\n    </a>\r\n    <div class=\"content\">\r\n      <a class=\"author\">{{model.author}}</a>\r\n      <div class=\"metadata\">\r\n        <span class=\"date\">{{model.time}}</span>\r\n        <div class=\"rating\">\r\n          <i class=\"thumbs up icon\"></i>\r\n          {{model.likes}} likes \r\n        </div>\r\n      </div>\r\n      <div class=\"text\">\r\n        {{model.content}}\r\n      </div>\r\n      <div class=\"actions\">\r\n        <a v-if=\"!showReplyForm\" v-on:click.stop=\"toggleReplyForm()\" class=\"reply\">Reply</a>\r\n        <a v-else                v-on:click.stop=\"toggleReplyForm()\" class=\"reply\">Cancel</a>\r\n        <a v-if=\"!liked\" v-on:click.stop=\"addLike()\" class=\"like\">Like</a>\r\n        <a v-else        v-on:click.stop=\"removeLike()\" class=\"like active\">You like this</a>\r\n        <a v-if=\"currentUserOwnsComment\" v-on:click.stop=\"remove()\" class=\"like\">Delete</a>\r\n      </div>\r\n    </div>\r\n    <!-- conditional rendering with v-if -->\r\n    <div v-if=\"hasReplies()\" class=\"comments\">\r\n      <message v-for=\"(message, index) in model.replies\" \r\n                :model=\"message\" \r\n                :reply-as=\"replyAs\" \r\n                :reply-as-avatar=\"replyAsAvatar\" \r\n                :key=\"message.id\"\r\n                v-on:remove=\"removeChild(index)\"></message>\r\n    </div>\r\n    <transition name=\"fade\">\r\n      <form v-if=\"showReplyForm\" class=\"ui reply form\" v-bind:id=\"replyFormIdentifier\">\r\n        <div class=\"field\">\r\n          <textarea v-model=\"replyContent\" class=\"ui focus\" name=\"replyContent\"></textarea>\r\n        </div>\r\n        <div class=\"ui primary labeled icon button\" v-on:click.stop=\"addReply()\">\r\n          <i class=\"icon edit\"></i> Add Reply\r\n        </div>\r\n        <div class=\"ui button\" v-on:click.stop=\"toggleReplyForm()\">\r\n          Cancel \r\n        </div>\r\n      </form>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport helpers from '../helpers'\r\nimport messageStore from '../data'\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: 'message',\r\n  props: {\r\n    replyAs: String,\r\n    replyAsAvatar: String,\r\n    model: Object\r\n    // custom validator here? (to ensure object props exist)\r\n  },\r\n  data () {\r\n    return {\r\n      liked: false,\r\n      showReplyForm: false,\r\n      replyContent: ''\r\n    }\r\n  },\r\n  computed: {\r\n    replyFormIdentifier: function () {\r\n      return helpers.guid();\r\n    },\r\n    currentUserOwnsComment: function () {\r\n      // ensure the current user is the owner of the message\r\n      // (obviously buggy, fix this with proper user management)\r\n      if (this.replyAs === this.model.author) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    remove: function () {\r\n      if (!this.currentUserOwnsComment) { return; }\r\n      /* eslint-disable no-undef */\r\n      this.$emit('remove');  // emit an event which the parent will recieve.\r\n      messageStore.saveState();\r\n    },\r\n    hasReplies: function () {\r\n      // short cicuit evaluation\r\n      return this.model.hasOwnProperty('replies') && this.model.replies.length > 0;\r\n    },\r\n    addLike: function () {\r\n      this.liked = true;\r\n      this.model.likes++;\r\n      messageStore.saveState();\r\n    },\r\n    removeLike: function () {\r\n      this.liked = false;\r\n      this.model.likes--;\r\n      messageStore.saveState();\r\n    },\r\n    toggleReplyForm: function () {\r\n      this.showReplyForm = !this.showReplyForm;\r\n      this.replyContent = '';\r\n    },\r\n    addReply: function () {\r\n      // Form validation with semantic UI\r\n      let replyForm = $('#' + this.replyFormIdentifier);\r\n      replyForm.form({\r\n        inline: true,\r\n        fields: {\r\n          replyContent: {\r\n            identifier: 'replyContent', // <-- binds to id, name or data-validate\r\n            rules: [{\r\n              type: 'empty',\r\n              prompt: 'Please enter your reply'\r\n            }]\r\n          }\r\n        }\r\n      });\r\n      replyForm.form('validate form');\r\n\r\n      if (replyForm.form('is valid')) {\r\n        // Add a reply, pass in the authoring details.\r\n        this.model.replies.push(helpers.getNewMessage(this.replyAs, this.replyAsAvatar, this.replyContent));\r\n        this.toggleReplyForm();\r\n        messageStore.saveState();\r\n      }\r\n    },\r\n    removeChild: function (index) {\r\n      this.model.replies.splice(index, 1);\r\n      messageStore.saveState();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Message.vue?65091d7c","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-a1be6ac4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Channel.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Channel.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a1be6ac4\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Channel.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Channel.vue\n// module id = 19\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6abf2ba2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Message.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Message.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6abf2ba2\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Message.vue\"),\n  /* scopeId */\n  \"data-v-6abf2ba2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Message.vue\n// module id = 20\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"comment\"\n  }, [_c('a', {\n    staticClass: \"avatar\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.model.avatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('a', {\n    staticClass: \"author\"\n  }, [_vm._v(_vm._s(_vm.model.author))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"metadata\"\n  }, [_c('span', {\n    staticClass: \"date\"\n  }, [_vm._v(_vm._s(_vm.model.time))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"rating\"\n  }, [_c('i', {\n    staticClass: \"thumbs up icon\"\n  }), _vm._v(\"\\n        \" + _vm._s(_vm.model.likes) + \" likes \\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text\"\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm.model.content) + \"\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.showReplyForm) ? _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Reply\")]) : _c('a', {\n    staticClass: \"reply\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"Cancel\")]), _vm._v(\" \"), (!_vm.liked) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addLike()\n      }\n    }\n  }, [_vm._v(\"Like\")]) : _c('a', {\n    staticClass: \"like active\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.removeLike()\n      }\n    }\n  }, [_vm._v(\"You like this\")]), _vm._v(\" \"), (_vm.currentUserOwnsComment) ? _c('a', {\n    staticClass: \"like\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.remove()\n      }\n    }\n  }, [_vm._v(\"Delete\")]) : _vm._e()])]), _vm._v(\" \"), (_vm.hasReplies()) ? _c('div', {\n    staticClass: \"comments\"\n  }, _vm._l((_vm.model.replies), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.replyAs,\n        \"reply-as-avatar\": _vm.replyAsAvatar\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })) : _vm._e(), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showReplyForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": _vm.replyFormIdentifier\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.replyContent),\n      expression: \"replyContent\"\n    }],\n    staticClass: \"ui focus\",\n    attrs: {\n      \"name\": \"replyContent\"\n    },\n    domProps: {\n      \"value\": (_vm.replyContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.replyContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addReply()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Reply\\n      \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleReplyForm()\n      }\n    }\n  }, [_vm._v(\"\\n        Cancel \\n      \")])]) : _vm._e()])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6abf2ba2\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Message.vue\n// module id = 21\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ui container\"\n  }, [_c('h2', [_vm._v(\"Yammerer\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui centered grid\"\n  }, [_c('div', {\n    staticClass: \"ten wide column\"\n  }, [_c('div', {\n    staticClass: \"ui threaded comments\"\n  }, [_c('div', {\n    staticClass: \"ui text menu\"\n  }, [_c('div', {\n    staticClass: \"ui item\"\n  }, [_c('a', {\n    staticClass: \"circular ui tiny image\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.autoSelectedAvatar\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"middle aligned content\"\n  }, [_c('div', {\n    staticClass: \"header\"\n  }, [_vm._v(\"\\n              \" + _vm._s(_vm.autoGeneratedUserName) + \"\\n            \")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"right menu\"\n  }, [_c('div', {\n    staticClass: \"item\"\n  }, [_c('div', {\n    staticClass: \"circular ui icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [(!_vm.showMessageForm) ? _c('i', {\n    staticClass: \"plus icon\"\n  }) : _c('i', {\n    staticClass: \"remove icon\"\n  })])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider\"\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(_vm.showMessageForm) ? _c('form', {\n    staticClass: \"ui reply form\",\n    attrs: {\n      \"id\": \"messageForm\"\n    }\n  }, [_c('div', {\n    staticClass: \"field\"\n  }, [_c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.newMessageContent),\n      expression: \"newMessageContent\"\n    }],\n    attrs: {\n      \"name\": \"newMessageContent\"\n    },\n    domProps: {\n      \"value\": (_vm.newMessageContent)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.newMessageContent = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui primary labeled icon button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.addMessage()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"icon edit\"\n  }), _vm._v(\" Add Message \\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui button\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.toggleMessageForm()\n      }\n    }\n  }, [_vm._v(\"\\n              Cancel \\n            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ui divider hidden\"\n  })]) : _vm._e()]), _vm._v(\" \"), _vm._l((_vm.messages), function(message, index) {\n    return _c('message', {\n      key: message.id,\n      attrs: {\n        \"model\": message,\n        \"reply-as\": _vm.autoGeneratedUserName,\n        \"reply-as-avatar\": _vm.autoSelectedAvatar\n      },\n      on: {\n        \"remove\": function($event) {\n          _vm.removeChild(index)\n        }\n      }\n    })\n  })], 2)])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-a1be6ac4\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Channel.vue\n// module id = 22\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('router-view')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-ba1acd06\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 23\n// module chunks = 0"],"sourceRoot":""}